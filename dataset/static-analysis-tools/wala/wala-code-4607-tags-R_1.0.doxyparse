file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/classConstant/ClassConstant.java
module classConstant::ClassConstant
   function main(String) in line 5
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/cornerCases/Abstract1.java
module cornerCases::Abstract1
   abstract class
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/cornerCases/Abstract2.java
module cornerCases::Abstract2
   abstract class
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/cornerCases/Concrete2.java
module cornerCases::Concrete2
   inherits from cornerCases::Abstract2
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/cornerCases/Locals.java
module cornerCases::Locals
   function foo(String[]) in line 17
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/cornerCases/Main.java
module cornerCases::Main
   function foo() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getFontSupport() defined in cornerCases::Main
   function getFontSupport() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function testCastToString() defined in cornerCases::Main
   function testCastToString() in line 31
      5 lines of code
      0 parameters
      1 conditional paths
module cornerCases::Main::YuckyField
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/cornerCases/YuckyInterface.java
module cornerCases::YuckyInterface
   inherits from sun::java2d::FontSupport
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/hello/Hello.java
module hello::Hello
   function main(String[]) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/messageFormatTest/MessageFormatBench.java
module messageFormatTest::MessageFormatBench
   function main(String[]) in line 16
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/multiDim/TestMultiDim.java
module multiDim::TestMultiDim
   function main(String[]) in line 7
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/pi/PiNodeCallGraphTestCase.java
module pi::PiNodeCallGraphTestCase
   function choice() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 61
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
module pi::PiNodeCallGraphTestCase::Whatever
   function binary(Whatever) in line 21
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function unary1() in line 17
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function unary2() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module pi::PiNodeCallGraphTestCase::This
   inherits from pi::PiNodeCallGraphTestCase::Whatever
   function binary(Whatever) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function unary1() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unary2() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module pi::PiNodeCallGraphTestCase::That
   inherits from pi::PiNodeCallGraphTestCase::Whatever
   function binary(Whatever) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function unary1() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unary2() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/recurse/NList.java
module recurse::NList
   inherits from java::util::Collection
   function add(Object) in line 84
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function addAll(Collection) in line 108
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function clear() in line 132
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function contains(Object) in line 59
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsAll(Collection) in line 100
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 67
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function NList(int) defined in recurse::NList
   function remove(Object) in line 92
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeAll(Collection) in line 116
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function retainAll(Collection) in line 124
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function size() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toArray() in line 75
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toArray(Object[]) in line 138
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function NList(int) in line 26
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/reflection/Reflect1.java
module reflection::Reflect1
   function main(String[]) in line 15
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/A.java
module slice::A
   function getF() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setF(Object) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/B.java
module slice::B
   inherits from slice::A
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/Slice1.java
module slice::Slice1
   function main(String[]) in line 17
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/Slice2.java
module slice::Slice2
   function baz(int) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 17
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function baz(int) defined in slice::Slice2
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/Slice3.java
module slice::Slice3
   function main(String[]) in line 20
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/Slice4.java
module slice::Slice4
   function main(String[]) in line 17
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/Slice5.java
module slice::Slice5
   function main(String[]) in line 17
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestArrays.java
module slice::TestArrays
   function main(String[]) in line 21
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestCD1.java
module slice::TestCD1
   function main(String[]) in line 22
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestCD2.java
module slice::TestCD2
   function main(String[]) in line 22
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestCD3.java
module slice::TestCD3
   function main(String[]) in line 22
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestFields.java
module slice::TestFields
   function doNothing(Object) in line 15
      1 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 22
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function doNothing(Object) defined in slice::TestFields
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestGlobal.java
module slice::TestGlobal
   function main(String[]) in line 30
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestId.java
module slice::TestId
   function main(String[]) in line 28
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestMultiTarget.java
module slice::TestMultiTarget
   function main(String[]) in line 24
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestPrimGetterSetter.java
module slice::TestPrimGetterSetter
   function doNothing(int) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 29
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function doNothing(int) defined in slice::TestPrimGetterSetter
module slice::TestPrimGetterSetter::IntWrapper
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestRecursion.java
module slice::TestRecursion
   function main(String[]) in line 31
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.testdata/src/slice/TestThin1.java
module slice::TestThin1
   function doNothing(Object) in line 15
      1 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 21
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function doNothing(Object) defined in slice::TestThin1
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/basic/GraphDataflowTest.java
module com::ibm::wala::core::tests::basic::GraphDataflowTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function buildGraph() in line 102
      15 lines of code
      0 parameters
      2 conditional paths
      uses variable nodeNames defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function addNode(T) defined in com::ibm::wala::util::graph::NodeManager
      uses variable nodes defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
   function expectedStringNodeEdge() in line 86
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function expectedStringNodeOnly() in line 73
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function result2String(DataflowSolver< String >) in line 204
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable nodes defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function getOut(Object) defined in com::ibm::wala::dataflow::graph::DataflowSolver
      uses function toString() defined in com::ibm::wala::fixpoint::BitVectorVariable
   function solveNodeEdge(Graph< String >) in line 154
      49 lines of code
      1 parameters
      3 conditional paths
      uses variable nodes defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function getMappedIndex(T) defined in com::ibm::wala::util::intset::OrdinalSetMapping
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
      uses function result2String(DataflowSolver< String >) defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
   function solveNodeOnly(Graph< String >) in line 121
      32 lines of code
      1 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function getMappedIndex(T) defined in com::ibm::wala::util::intset::OrdinalSetMapping
      uses function result2String(DataflowSolver< String >) defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
   function testSolverNodeEdge() in line 52
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function buildGraph() defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function solveNodeEdge(Graph< String >) defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function expectedStringNodeEdge() defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
   function testSolverNodeOnly() in line 63
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function buildGraph() defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function solveNodeOnly(Graph< String >) defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
      uses function expectedStringNodeOnly() defined in com::ibm::wala::core::tests::basic::GraphDataflowTest
   function GraphDataflowTest() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable nodeNames in line 42
      protection public
   variable nodes in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/basic/PrimitivesTest.java
module com::ibm::wala::core::tests::basic::PrimitivesTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function countEquivalenceClasses(IntegerUnionFind) in line 528
      7 lines of code
      1 parameters
      2 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses function find(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
   function doMutableIntSet(MutableIntSetFactory) in line 69
      178 lines of code
      1 parameters
      1 conditional paths
      uses function parse(String) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::IntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::IntSet
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::IntSet
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function intersection(IntSet) defined in com::ibm::wala::util::intset::IntSet
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableIntSet
   function makeBFSTestGraph() in line 384
      23 lines of code
      0 parameters
      6 conditional paths
      uses function addNode(T) defined in com::ibm::wala::util::graph::NodeManager
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
   function testBFSPathFinder() in line 338
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function makeBFSTestGraph() defined in com::ibm::wala::core::tests::basic::PrimitivesTest
      uses function find() defined in com::ibm::wala::util::graph::traverse::BFSPathFinder
   function testBimodalMap() in line 298
      protection public
      39 lines of code
      0 parameters
      1 conditional paths
   function testBimodalMutableSparseIntSet() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function doMutableIntSet(MutableIntSetFactory) defined in com::ibm::wala::core::tests::basic::PrimitivesTest
   function testBinaryIntegerRelation() in line 449
      protection public
      46 lines of code
      0 parameters
      3 conditional paths
      uses variable SIMPLE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable TWO_LEVEL defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function remove(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function removeAll(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function testBitVectorIntSet() in line 272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function doMutableIntSet(MutableIntSetFactory) defined in com::ibm::wala::core::tests::basic::PrimitivesTest
   function testBitVectors() in line 536
      protection public
      49 lines of code
      0 parameters
      4 conditional paths
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
      uses function max() defined in com::ibm::wala::util::intset::BitVector
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
      uses function nextSetBit(int) defined in com::ibm::wala::util::intset::BitVector
   function testBoundedBFS() in line 352
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
      uses function makeBFSTestGraph() defined in com::ibm::wala::core::tests::basic::PrimitivesTest
   function testDominatorsA() in line 408
      protection public
      40 lines of code
      0 parameters
      4 conditional paths
      uses function addNode(T) defined in com::ibm::wala::util::graph::NodeManager
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function dominators(final T) defined in com::ibm::wala::util::graph::Dominators
      uses function dominatorTree() defined in com::ibm::wala::util::graph::Dominators
   function testMutableSharedBitVectorIntSet() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function doMutableIntSet(MutableIntSetFactory) defined in com::ibm::wala::core::tests::basic::PrimitivesTest
   function testMutableSparseIntSet() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function doMutableIntSet(MutableIntSetFactory) defined in com::ibm::wala::core::tests::basic::PrimitivesTest
   function testSmallMap() in line 276
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function put(Object,Object) defined in com::ibm::wala::util::collections::SmallMap
      uses function get(Object) defined in com::ibm::wala::util::collections::SmallMap
   function testUnionFind() in line 496
      protection public
      31 lines of code
      0 parameters
      4 conditional paths
      uses function countEquivalenceClasses(IntegerUnionFind) defined in com::ibm::wala::core::tests::basic::PrimitivesTest
      uses function union(int,int) defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses function find(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
   function PrimitivesTest() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PrimitivesTest(String) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/CallGraphTest.java
module com::ibm::wala::core::tests::callGraph::CallGraphTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function checkAgainstDCG(CallGraph,String) in line 383
      13 lines of code
      2 parameters
      1 conditional paths
      uses function getSyntheticLeaves(CallGraph) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
      uses function prune(ECallGraphWrapper,Set< CGNode >) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
      uses function checkGraphSubset(ECallGraphWrapper,ECallGraphWrapper) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function checkCallGraph(WarningSet,CallGraph,Graph< MethodReference >,Set< MethodReference >,String) in line 536
      30 lines of code
      5 parameters
      4 conditional paths
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
   function checkGraphSubset(ECallGraphWrapper,ECallGraphWrapper) in line 401
      protection public
      35 lines of code
      2 parameters
      8 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses variable IGNORE_STRINGS defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
      uses function toString() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function checkICFG(CallGraph,CFGCache) in line 356
      19 lines of code
      2 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function hasCall(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) in line 265
      protection public
      85 lines of code
      6 parameters
      5 conditional paths
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function checkCallGraph(WarningSet,CallGraph,Graph< MethodReference >,Set< MethodReference >,String) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
      uses function checkAgainstDCG(CallGraph,String) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
      uses function checkICFG(CallGraph,CFGCache) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
      uses function getCFGCache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getSyntheticLeaves(CallGraph) in line 509
      14 lines of code
      1 parameters
      5 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function iterateSites() defined in com::ibm::wala::ipa::callgraph::CGNode
   function main(String[]) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function prune(ECallGraphWrapper,Set< CGNode >) in line 449
      41 lines of code
      2 parameters
      8 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function removeNodes(ECallGraphWrapper,Set< EObject >) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getSuccNodeCount(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function removeNodes(ECallGraphWrapper,Set< EObject >) in line 495
      9 lines of code
      2 parameters
      3 conditional paths
      uses function containsNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function removeNodeAndEdges(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function testBcelVerifier() in line 125
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable BCEL defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable BCEL_VERIFIER_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function testCornerCases() in line 165
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function testHello() in line 209
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable HELLO defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable HELLO_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function testHelloAllEntrypoints() in line 235
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable HELLO defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function testJava_cup() in line 139
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable JAVA_CUP defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable JAVA_CUP_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function testJLex() in line 152
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable JLEX defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable JLEX_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function testRecursion() in line 222
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable RECURSE_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function doCallGraphs(AnalysisOptions,ClassHierarchy,AnalysisScope,String,boolean,boolean) defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function CallGraphTest(String) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable IGNORE_STRINGS in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/CallGraphTestUtil.java
module com::ibm::wala::core::tests::callGraph::CallGraphTestUtil
   function buildOneCFA(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 129
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function start() defined in com::ibm::wala::util::Stopwatch
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::callGraph::CallGraphTestUtil
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function stop() defined in com::ibm::wala::util::Stopwatch
      uses function report() defined in com::ibm::wala::util::Stopwatch
   function buildRTA(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 55
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function start() defined in com::ibm::wala::util::Stopwatch
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function stop() defined in com::ibm::wala::util::Stopwatch
      uses function report() defined in com::ibm::wala::util::Stopwatch
   function buildVanillaZeroOneCFA(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 79
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function start() defined in com::ibm::wala::util::Stopwatch
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function stop() defined in com::ibm::wala::util::Stopwatch
      uses function report() defined in com::ibm::wala::util::Stopwatch
   function buildZeroCFA(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 67
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function start() defined in com::ibm::wala::util::Stopwatch
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function stop() defined in com::ibm::wala::util::Stopwatch
      uses function report() defined in com::ibm::wala::util::Stopwatch
   function buildZeroContainerCFA(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 103
      protection public
      12 lines of code
      4 parameters
      1 conditional paths
      uses function start() defined in com::ibm::wala::util::Stopwatch
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function stop() defined in com::ibm::wala::util::Stopwatch
      uses function report() defined in com::ibm::wala::util::Stopwatch
   function buildZeroOneCFA(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 91
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function start() defined in com::ibm::wala::util::Stopwatch
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function stop() defined in com::ibm::wala::util::Stopwatch
      uses function report() defined in com::ibm::wala::util::Stopwatch
   function buildZeroOneContainerCFA(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 116
      protection public
      12 lines of code
      4 parameters
      1 conditional paths
      uses function start() defined in com::ibm::wala::util::Stopwatch
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function stop() defined in com::ibm::wala::util::Stopwatch
      uses function report() defined in com::ibm::wala::util::Stopwatch
   function makeAnalysisOptions(AnalysisScope,Entrypoints) in line 37
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function makeJ2SEAnalysisScope(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::callGraph::CallGraphTestUtil
   function makeJ2SEAnalysisScope(String,String) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::callGraph::CallGraphTestUtil
   variable MY_CLASSLOADER in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/ClassConstantTest.java
module com::ibm::wala::core::tests::callGraph::ClassConstantTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function testClassConstants() in line 40
      protection public
      36 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
      uses variable CLASSCONSTANT_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getNodes(MethodReference) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/CloneTest.java
module com::ibm::wala::core::tests::callGraph::CloneTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function testClone() in line 39
      protection public
      33 lines of code
      0 parameters
      6 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses function getNodes(MethodReference) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function iterateSites() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function isSpecial() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/CompareCDGTest.java
module com::ibm::wala::core::tests::callGraph::CompareCDGTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function buildCallGraphCommandLine(String) in line 380
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function checkCFG(SSACFG,MethodReference) in line 339
      17 lines of code
      2 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function getPredNodeCount(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
   function compareCDGs(CallGraph) in line 84
      59 lines of code
      1 parameters
      7 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function toString() defined in com::ibm::wala::types::MethodReference
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function compatible(SSACFG,ControlDependenceGraph,BVControlDependenceGraph) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
      uses function checkCFG(SSACFG,MethodReference) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
      uses function dumpCDGInfo(SSACFG,ControlDependenceGraph) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
      uses function getName() defined in com::ibm::wala::types::MemberReference
   function compatible(SSACFG,ControlDependenceGraph,BVControlDependenceGraph) in line 144
      57 lines of code
      3 parameters
      12 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getEdgeLabels(Object,Object) defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
      uses function getEdgeLabels(Object,Object) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function dumpCDGInfo(SSACFG,ControlDependenceGraph) in line 202
      57 lines of code
      2 parameters
      9 conditional paths
      uses function entry() defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getEdgeLabels(Object,Object) defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function getPredNodes(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAInstruction
   function dumpCDGInfo(SSACFG,BVControlDependenceGraph) in line 260
      57 lines of code
      2 parameters
      9 conditional paths
      uses function entry() defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getEdgeLabels(Object,Object) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function getPredNodes(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAInstruction
   function main(String[]) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
   function run(String[]) in line 71
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function buildCallGraphCommandLine(String) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
   function run(CallGraph) in line 79
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function compareCDGs(CallGraph) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
   function testBcelVerifier() in line 413
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable BCEL defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable BCEL_VERIFIER_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function run(String[]) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
   function testJavaCup() in line 403
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable JAVA_CUP defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable JAVA_CUP_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function run(String[]) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
   function testJLex() in line 424
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable JLEX defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable JLEX_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function run(String[]) defined in com::ibm::wala::core::tests::callGraph::CompareCDGTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/DebuggingBitsetCallGraphTest.java
module com::ibm::wala::core::tests::callGraph::DebuggingBitsetCallGraphTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function main(String[]) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function runBitsetTest(MutableIntSetFactory,MutableIntSetFactory) in line 42
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable graphTest defined in com::ibm::wala::core::tests::callGraph::DebuggingBitsetCallGraphTest
      uses function testJLex() defined in com::ibm::wala::core::tests::callGraph::CallGraphTest
   function testBimodalSparse() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function runBitsetTest(MutableIntSetFactory,MutableIntSetFactory) defined in com::ibm::wala::core::tests::callGraph::DebuggingBitsetCallGraphTest
   function testSharedBimodal() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function runBitsetTest(MutableIntSetFactory,MutableIntSetFactory) defined in com::ibm::wala::core::tests::callGraph::DebuggingBitsetCallGraphTest
   function testSharedBitVector() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function runBitsetTest(MutableIntSetFactory,MutableIntSetFactory) defined in com::ibm::wala::core::tests::callGraph::DebuggingBitsetCallGraphTest
   function testSharedSparse() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function runBitsetTest(MutableIntSetFactory,MutableIntSetFactory) defined in com::ibm::wala::core::tests::callGraph::DebuggingBitsetCallGraphTest
   function DebuggingBitsetCallGraphTest(String) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable graphTest defined in com::ibm::wala::core::tests::callGraph::DebuggingBitsetCallGraphTest
   variable graphTest in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/EclipseCallGraphTest.java
module com::ibm::wala::core::tests::callGraph::EclipseCallGraphTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function main(String[]) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testOrgEclipseCoreResources() in line 35
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/PiNodeCallGraphTest.java
module com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function checkCallAssertions(CallGraph,int,int) in line 86
      20 lines of code
      3 parameters
      4 conditional paths
      uses function getNodes(MethodReference) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses variable thisBinaryRef defined in com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
      uses variable thatBinaryRef defined in com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
      uses function iterateSites() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable unary2Ref defined in com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
      uses function getNumberOfTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
   function doGraph(boolean) in line 74
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable PI_TEST_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function setUsePiNodes(boolean) defined in com::ibm::wala::ssa::SSAOptions
   function main(String[]) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testNoPiNodes() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkCallAssertions(CallGraph,int,int) defined in com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
      uses function doGraph(boolean) defined in com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
   function testPiNodes() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkCallAssertions(CallGraph,int,int) defined in com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
      uses function doGraph(boolean) defined in com::ibm::wala::core::tests::callGraph::PiNodeCallGraphTest
   variable loader in line 57
   variable thatBinaryRef in line 68
   variable thatName in line 55
   variable thatRef in line 63
   variable thisBinaryRef in line 65
   variable thisName in line 53
   variable thisRef in line 61
   variable unary2Ref in line 71
   variable whateverName in line 51
   variable whateverRef in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/callGraph/ReflectionTest.java
module com::ibm::wala::core::tests::callGraph::ReflectionTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function main(String[]) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testReflect1() in line 44
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable REFLECT1_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function toString() defined in com::ibm::wala::util::warnings::Warning
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/cha/CHATest.java
module com::ibm::wala::core::tests::cha::CHATest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function checkInterfaces(ClassHierarchy,ETypeHierarchyWrapper) in line 115
      20 lines of code
      2 parameters
      5 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getDirectInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses function getImplements(EJavaClass) defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function checkSetsEqual(Collection< EJavaClass >,Collection< EJavaClass >) defined in com::ibm::wala::core::tests::cha::CHATest
   function checkSetsEqual(Collection< EJavaClass >,Collection< EJavaClass >) in line 136
      14 lines of code
      2 parameters
      3 conditional paths
   function main(String[]) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testPrimordial() in line 65
      protection public
      42 lines of code
      0 parameters
      3 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::cha::CHATest
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses function getClasses() defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses function getNodes() defined in com::ibm::wala::ecore::graph::EGraph
      uses function getInterfaces() defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses function getClasses() defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getInterfaces() defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function checkInterfaces(ClassHierarchy,ETypeHierarchyWrapper) defined in com::ibm::wala::core::tests::cha::CHATest
   function CHATest(String) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable MY_CLASSLOADER in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/cha/LibraryVersionTest.java
module com::ibm::wala::core::tests::cha::LibraryVersionTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function testLibraryVersion() in line 31
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::cha::LibraryVersionTest
      uses function getJavaLibraryVersion() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function isJava15Libraries() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function isJava14Libraries() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   variable MY_CLASSLOADER in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/cha/SourceMapTest.java
module com::ibm::wala::core::tests::cha::SourceMapTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function testFromJar() in line 47
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable HELLO defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::cha::SourceMapTest
      uses function getPrimordialLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable CLASS_IN_PRIMORDIAL_JAR defined in com::ibm::wala::core::tests::cha::SourceMapTest
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSourceFileName() defined in com::ibm::wala::classLoader::IClass
   function testHello() in line 33
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable HELLO defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::cha::SourceMapTest
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable HELLO_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSourceFileName() defined in com::ibm::wala::classLoader::IClass
   variable CLASS_IN_PRIMORDIAL_JAR in line 31
   variable MY_CLASSLOADER in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/ir/CFGTest.java
module com::ibm::wala::core::tests::ir::CFGTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function doMethod(String) in line 44
      44 lines of code
      1 parameters
      5 conditional paths
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function setUsePiNodes(boolean) defined in com::ibm::wala::ssa::SSAOptions
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function findOrCreateIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
   function main(String[]) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testResolveProxyClass() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function doMethod(String) defined in com::ibm::wala::core::tests::ir::CFGTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/ir/CornerCasesTest.java
module com::ibm::wala::core::tests::ir::CornerCasesTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function testBug38484() in line 47
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::ir::CornerCasesTest
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
   function testBug38540() in line 65
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::ir::CornerCasesTest
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
      uses function getIRFactory() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function makeIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::IRFactory
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
   variable MY_CLASSLOADER in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/ir/DeterministicIRTest.java
module com::ibm::wala::core::tests::ir::DeterministicIRTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function checkNoneNull(Iterator<?>) in line 130
      6 lines of code
      1 parameters
      2 conditional paths
   function checkNotAllNull(SSAInstruction[]) in line 140
      8 lines of code
      1 parameters
      3 conditional paths
   function doMethod(MethodReference) in line 93
      31 lines of code
      1 parameters
      3 conditional paths
      uses variable cha defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable options defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function getIRFactory() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function makeIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::IRFactory
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable warnings defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function wipe() defined in com::ibm::wala::ssa::SSACache
      uses function checkNotAllNull(SSAInstruction[]) defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function checkNoneNull(Iterator<?>) defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::IR
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function toString() defined in com::ibm::wala::ssa::IR
   function main(String[]) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUp() in line 61
      16 lines of code
      0 parameters
      2 conditional paths
      uses variable warnings defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable scope defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MY_CLASSLOADER defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable options defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function getExclusions() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable cha defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
   function tearDown() in line 83
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable scope defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable cha defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
   function testIR1() in line 149
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function doMethod(MethodReference) defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable scope defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function findMethod(Atom,String,Atom,ImmutableByteArray) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable APPLICATION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function testIR2() in line 155
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function doMethod(MethodReference) defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable scope defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function findMethod(Atom,String,Atom,ImmutableByteArray) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable APPLICATION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function testIR3() in line 161
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function doMethod(MethodReference) defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable scope defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function findMethod(Atom,String,Atom,ImmutableByteArray) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable APPLICATION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function testLocalNamesWithoutPiNodes() in line 168
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getUsePiNodes() defined in com::ibm::wala::ssa::SSAOptions
      uses function setUsePiNodes(boolean) defined in com::ibm::wala::ssa::SSAOptions
      uses function doMethod(MethodReference) defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable scope defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function findMethod(Atom,String,Atom,ImmutableByteArray) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable APPLICATION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getLocalNames(int,int) defined in com::ibm::wala::ssa::IR
   function testLocalNamesWithPiNodes() in line 193
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getUsePiNodes() defined in com::ibm::wala::ssa::SSAOptions
      uses function setUsePiNodes(boolean) defined in com::ibm::wala::ssa::SSAOptions
      uses function doMethod(MethodReference) defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses variable scope defined in com::ibm::wala::core::tests::ir::DeterministicIRTest
      uses function findMethod(Atom,String,Atom,ImmutableByteArray) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable APPLICATION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getLocalNames(int,int) defined in com::ibm::wala::ssa::IR
   variable cha in line 49
   variable MY_CLASSLOADER in line 45
   variable options in line 50
   variable scope in line 48
   variable warnings in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/ptrs/MultiDimArrayTest.java
module com::ibm::wala::core::tests::ptrs::MultiDimArrayTest
   inherits from com::ibm::wala::core::tests::util::WalaTestCase
   function findDoNothingNode(CallGraph) in line 78
      10 lines of code
      1 parameters
      3 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function toString() defined in com::ibm::wala::util::Atom
   function main(String[]) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testMultiDim() in line 58
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable MULTI_DIM_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findDoNothingNode(CallGraph) defined in com::ibm::wala::core::tests::ptrs::MultiDimArrayTest
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function size() defined in com::ibm::wala::util::intset::OrdinalSet
   function MultiDimArrayTest(String) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/slicer/SlicerTest.java
module com::ibm::wala::core::tests::slicer::SlicerTest
   inherits from junit::framework::TestCase
   function countAllocations(Collection< Statement >) in line 388
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
   function countAloads(Collection< Statement >) in line 401
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
   function countConditionals(Collection< Statement >) in line 414
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
   function countGetstatics(Collection< Statement >) in line 459
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function countPutfields(Collection< Statement >) in line 427
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function countPutstatics(Collection< Statement >) in line 443
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function dumpSlice(Collection< Statement >) in line 475
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function dumpSlice(Collection< Statement >,PrintWriter) in line 479
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
   function dumpSliceToFile(Collection< Statement >,String) in line 489
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function findCallTo(CGNode,String) in line 523
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::IR
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAInstruction
      uses function getCallInstructionIndices(CallSiteReference) defined in com::ibm::wala::ssa::IR
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
   function findCallToDoNothing(CGNode) in line 539
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findCallTo(CGNode,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function findMainMethod(CallGraph) in line 496
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses function getDescriptor() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::Descriptor
   function findMethod(CallGraph,String) in line 510
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function equals(Object) defined in com::ibm::wala::util::Atom
   function testSlice1() in line 55
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE1_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallTo(CGNode,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testSlice2() in line 76
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE2_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMethod(CallGraph,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallTo(CGNode,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testSlice3() in line 97
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE3_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMethod(CallGraph,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallTo(CGNode,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testSlice4() in line 118
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE4_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallTo(CGNode,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testSlice5() in line 139
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE5_MAIN defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMethod(CallGraph,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallTo(CGNode,String) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestArrays() in line 244
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTARRAYS defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAloads(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestCD1() in line 160
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTCD1 defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countConditionals(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestCD2() in line 181
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTCD2 defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countConditionals(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestCD3() in line 202
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTCD3 defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countConditionals(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestFields() in line 266
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTFIELDS defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countPutfields(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestGlobal() in line 319
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTGLOBAL defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countPutstatics(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countGetstatics(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestId() in line 223
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTID defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestMultiTarget() in line 342
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTMULTITARGET defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testTestRecursion() in line 364
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTRECURSION defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countPutfields(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
   function testThin1() in line 288
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses variable WALA_TESTDATA defined in com::ibm::wala::core::tests::util::TestConstants
      uses variable SLICE_TESTTHIN1 defined in com::ibm::wala::core::tests::util::TestConstants
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function findMainMethod(CallGraph) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function findCallToDoNothing(CGNode) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function dumpSlice(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countAllocations(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses function countPutfields(Collection< Statement >) defined in com::ibm::wala::core::tests::slicer::SlicerTest
      uses variable NO_BASE_PTRS defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/util/TestConstants.java
module com::ibm::wala::core::tests::util::TestConstants
   variable BCEL in line 24
      protection public
   variable BCEL_VERIFIER_MAIN in line 25
      protection public
   variable CLASSCONSTANT_MAIN in line 17
      protection public
   variable HELLO in line 21
      protection public
   variable HELLO_MAIN in line 22
      protection public
   variable JAVA_CUP in line 30
      protection public
   variable JAVA_CUP_MAIN in line 31
      protection public
   variable JLEX in line 27
      protection public
   variable JLEX_MAIN in line 28
      protection public
   variable MULTI_DIM_MAIN in line 33
      protection public
   variable PI_TEST_MAIN in line 18
      protection public
   variable RECURSE_MAIN in line 19
      protection public
   variable REFLECT1_MAIN in line 35
      protection public
   variable SLICE1_MAIN in line 37
      protection public
   variable SLICE2_MAIN in line 38
      protection public
   variable SLICE3_MAIN in line 39
      protection public
   variable SLICE4_MAIN in line 40
      protection public
   variable SLICE5_MAIN in line 41
      protection public
   variable SLICE_TESTARRAYS in line 46
      protection public
   variable SLICE_TESTCD1 in line 42
      protection public
   variable SLICE_TESTCD2 in line 43
      protection public
   variable SLICE_TESTCD3 in line 44
      protection public
   variable SLICE_TESTFIELDS in line 47
      protection public
   variable SLICE_TESTGLOBAL in line 48
      protection public
   variable SLICE_TESTID in line 45
      protection public
   variable SLICE_TESTMULTITARGET in line 49
      protection public
   variable SLICE_TESTRECURSION in line 50
      protection public
   variable SLICE_TESTTHIN1 in line 51
      protection public
   variable WALA_TESTDATA in line 15
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/core/tests/util/WalaTestCase.java
module com::ibm::wala::core::tests::util::WalaTestCase
   inherits from junit::framework::TestCase
   abstract class
   function assertBound(String,double,double) in line 88
      5 lines of code
      3 parameters
      1 conditional paths
   function assertBound(String,int,int) in line 94
      5 lines of code
      3 parameters
      1 conditional paths
   function justThisTest(Class<?>) in line 75
      5 lines of code
      1 parameters
      1 conditional paths
   function setUp() in line 45
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable baseTraceFile defined in com::ibm::wala::core::tests::util::WalaTestCase
   function tearDown() in line 57
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable baseTraceFile defined in com::ibm::wala::core::tests::util::WalaTestCase
      uses variable ANALYZE_LEAKS defined in com::ibm::wala::core::tests::util::WalaTestCase
   function useShortProfile() in line 29
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function WalaTestCase() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WalaTestCase(String) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ANALYZE_LEAKS in line 27
   variable baseTraceFile in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/analysis/SimpleThreadEscapeAnalysis.java
module com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
   inherits from com::ibm::wala::client::impl::AbstractAnalysisEngine
   function collectJars(File,Set< JarFile >) in line 76
      10 lines of code
      2 parameters
      4 conditional paths
   function gatherThreadEscapingClasses() in line 121
      protection public
      163 lines of code
      0 parameters
      22 conditional paths
      uses function setModuleFiles(Collection) defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getModuleFiles() defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
      uses function setJ2SELibraries(JarFile[]) defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getSystemJars() defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
      uses function buildAnalysisScope() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable cha defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function buildClassHierarchy() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function setClassHierarchy(ClassHierarchy) defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function setCallGraphBuilderFactory(CallGraphBuilderFactory) defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getScope() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable applicationMainClass defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
      uses function getDefaultOptions(Entrypoints) defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function buildCallGraph(ClassHierarchy,AnalysisOptions,boolean) defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable cg defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getCallGraph() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getPointerAnalysis() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredStaticFields() defined in com::ibm::wala::classLoader::IClass
      uses function getFieldTypeReference() defined in com::ibm::wala::classLoader::IField
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangThread defined in com::ibm::wala::types::TypeReference
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
      uses function isInit() defined in com::ibm::wala::classLoader::IMethod
      uses function getNodes(MethodReference) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function iterator() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function isReferenceType() defined in com::ibm::wala::classLoader::IClass
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getAllInstanceFields() defined in com::ibm::wala::classLoader::IClass
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getModuleFiles() in line 109
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable applicationJarFiles defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
   function getSystemJars() in line 91
      13 lines of code
      0 parameters
      2 conditional paths
      uses function collectJars(File,Set< JarFile >) defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
   function main(String[]) in line 285
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function SimpleThreadEscapeAnalysis(Set< JarFile >,String) defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
      uses function gatherThreadEscapingClasses() defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
   function SimpleThreadEscapeAnalysis(Set< JarFile >,String) in line 67
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable applicationJarFiles defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
      uses variable applicationMainClass defined in com::ibm::wala::examples::analysis::SimpleThreadEscapeAnalysis
   variable applicationJarFiles in line 59
   variable applicationMainClass in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/ExportCallGraphToXML.java
module com::ibm::wala::examples::drivers::ExportCallGraphToXML
   function main(String[]) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in com::ibm::wala::examples::drivers::ExportCallGraphToXML
   function run(String[]) in line 68
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function run(String) in line 77
      protection public
      55 lines of code
      1 parameters
      3 conditional paths
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses function write(ECallGraph,String) defined in com::ibm::wala::examples::drivers::ExportCallGraphToXML
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
   function write(ECallGraph,String) in line 134
      70 lines of code
      2 parameters
      12 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::ecore::java::ECallSite
      uses function getJavaMethod() defined in com::ibm::wala::ecore::java::ECallSite
      uses function findOrAdd(EObject) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function setDeclaredTarget(EJavaMethod) defined in com::ibm::wala::ecore::java::ECallSite
      uses function getJavaClass() defined in com::ibm::wala::ecore::java::EJavaMethod
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::EJavaMethod
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::ECallSite
      uses function export(boolean) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/ExportTypeHierarchyToXML.java
module com::ibm::wala::examples::drivers::ExportTypeHierarchyToXML
   function buildTypeHierarchy(String,WarningSet) in line 127
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
   function main(String[]) in line 59
      protection public
      36 lines of code
      1 parameters
      4 conditional paths
      uses function buildTypeHierarchy(String,WarningSet) defined in com::ibm::wala::examples::drivers::ExportTypeHierarchyToXML
      uses function getClasses() defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses function getNodes() defined in com::ibm::wala::ecore::graph::EGraph
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function toString() defined in com::ibm::wala::util::warnings::WarningSet
      uses function write(ETypeHierarchy,String) defined in com::ibm::wala::examples::drivers::ExportTypeHierarchyToXML
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
   function write(ETypeHierarchy,String) in line 96
      18 lines of code
      2 parameters
      3 conditional paths
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable FILENAME defined in com::ibm::wala::examples::drivers::ExportTypeHierarchyToXML
   variable FILENAME in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/GetEnv.java
module com::ibm::wala::examples::drivers::GetEnv
   function main(String[]) in line 27
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/GVCallGraph.java
module com::ibm::wala::examples::drivers::GVCallGraph
   function buildPrunedCallGraph(String) in line 109
      protection public
      24 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in com::ibm::wala::examples::drivers::GVCallGraph
   function run(String[]) in line 65
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function run(String) in line 75
      protection public
      27 lines of code
      1 parameters
      3 conditional paths
      uses function buildPrunedCallGraph(String) defined in com::ibm::wala::examples::drivers::GVCallGraph
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable PS_FILE defined in com::ibm::wala::examples::drivers::GVCallGraph
      uses variable DOT_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses variable DOT_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable GHOSTVIEW_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
   variable PS_FILE in line 47
module com::ibm::wala::examples::drivers::GVCallGraph::ApplicationLoaderFilter
   inherits from com::ibm::wala::util::collections::Filter
   function accepts(Object) in line 173
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/GVControlDependenceGraph.java
module com::ibm::wala::examples::drivers::GVControlDependenceGraph
   function main(String[]) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in com::ibm::wala::examples::drivers::GVControlDependenceGraph
   function run(String[]) in line 67
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function run(String,String) in line 78
      protection public
      55 lines of code
      2 parameters
      9 conditional paths
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function setUsePiNodes(boolean) defined in com::ibm::wala::ssa::SSAOptions
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function findOrCreateIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function toString() defined in com::ibm::wala::ssa::IR
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable PS_FILE defined in com::ibm::wala::examples::drivers::GVControlDependenceGraph
      uses variable DOT_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable DOT_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses variable GHOSTVIEW_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
   variable PS_FILE in line 47
      protection public
   variable SANITIZE_CFG in line 45
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/GVSDG.java
module com::ibm::wala::examples::drivers::GVSDG
   function getControlDependenceOptions(Properties) in line 89
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function getDataDependenceOptions(Properties) in line 78
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function main(String[]) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in com::ibm::wala::examples::drivers::GVSDG
   function makeNodeDecorator() in line 164
      26 lines of code
      0 parameters
      15 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function toString() defined in com::ibm::wala::ipa::slicer::Statement
   function pruneSDG(SDG) in line 150
      13 lines of code
      1 parameters
      2 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::CallGraph
   function run(String[]) in line 72
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getDataDependenceOptions(Properties) defined in com::ibm::wala::examples::drivers::GVSDG
      uses function getControlDependenceOptions(Properties) defined in com::ibm::wala::examples::drivers::GVSDG
   function run(String,String,DataDependenceOptions,ControlDependenceOptions) in line 104
      protection public
      45 lines of code
      4 parameters
      4 conditional paths
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable PS_FILE defined in com::ibm::wala::examples::drivers::GVSDG
      uses variable DOT_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses function pruneSDG(SDG) defined in com::ibm::wala::examples::drivers::GVSDG
      uses function makeNodeDecorator() defined in com::ibm::wala::examples::drivers::GVSDG
      uses variable DOT_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable GHOSTVIEW_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
   variable PS_FILE in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/GVSlice.java
module com::ibm::wala::examples::drivers::GVSlice
   function getReturnStatementForCall(Statement) in line 161
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function goBackward(Properties) in line 90
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in com::ibm::wala::examples::drivers::GVSlice
   function makeNodeDecorator() in line 183
      protection public
      44 lines of code
      0 parameters
      20 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function getCall() defined in com::ibm::wala::ipa::slicer::ParamStatement::CallStatementCarrier
      uses function getValueNumber() defined in com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
      uses function toString() defined in com::ibm::wala::ipa::slicer::Statement
   function pruneSDG(SDG,final Collection< Statement >) in line 174
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function run(String[]) in line 83
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function goBackward(Properties) defined in com::ibm::wala::examples::drivers::GVSlice
   function run(String,String,String,String,boolean,DataDependenceOptions,ControlDependenceOptions) in line 96
      protection public
      61 lines of code
      7 parameters
      5 conditional paths
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses function main(String[]) defined in com::ibm::wala::examples::drivers::GVSlice
      uses function goBackward(Properties) defined in com::ibm::wala::examples::drivers::GVSlice
      uses function getReturnStatementForCall(Statement) defined in com::ibm::wala::examples::drivers::GVSlice
      uses function pruneSDG(SDG,final Collection< Statement >) defined in com::ibm::wala::examples::drivers::GVSlice
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable PS_FILE defined in com::ibm::wala::examples::drivers::GVSlice
      uses variable DOT_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses function makeNodeDecorator() defined in com::ibm::wala::examples::drivers::GVSlice
      uses variable DOT_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable GHOSTVIEW_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
   variable PS_FILE in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/GVTypeHierarchy.java
module com::ibm::wala::examples::drivers::GVTypeHierarchy
   function main(String[]) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[],boolean) defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
   function pruneGraph(Graph< T >,Filter) in line 145
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function run(String[],boolean) in line 69
      protection public
      27 lines of code
      2 parameters
      3 conditional paths
      uses function typeHierarchy2Graph(ETypeHierarchy) defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable p defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable DOT_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable PS_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable DOT_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses variable GHOSTVIEW_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
   function typeHierarchy2Graph(ETypeHierarchy) in line 102
      protection public
      27 lines of code
      1 parameters
      9 conditional paths
      uses function getClasses() defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getInterfaces() defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getSuccNodes(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getImplements(EJavaClass) defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getLoader() defined in com::ibm::wala::ecore::java::EJavaClass
      uses variable APPLICATION_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses function pruneGraph(Graph< T >,Filter) defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
   variable DOT_FILE in line 48
      protection public
   variable p in line 52
      protection public
   variable PS_FILE in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/GVWalaIR.java
module com::ibm::wala::examples::drivers::GVWalaIR
   function main(String[]) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in com::ibm::wala::examples::drivers::GVWalaIR
   function run(String[]) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function run(String,String) in line 74
      protection public
      52 lines of code
      2 parameters
      9 conditional paths
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function setUsePiNodes(boolean) defined in com::ibm::wala::ssa::SSAOptions
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function findOrCreateIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function toString() defined in com::ibm::wala::ssa::IR
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable PS_FILE defined in com::ibm::wala::examples::drivers::GVWalaIR
      uses variable DOT_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable DOT_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses variable GHOSTVIEW_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses variable SANITIZE_CFG defined in com::ibm::wala::examples::drivers::GVWalaIR
   variable PS_FILE in line 44
      protection public
   variable SANITIZE_CFG in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/SWTCallGraph.java
module com::ibm::wala::examples::drivers::SWTCallGraph
   function composeString(Collection< String >) in line 186
      12 lines of code
      1 parameters
      3 conditional paths
   function main(String[]) in line 66
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function run(Properties) defined in com::ibm::wala::examples::drivers::SWTCallGraph
   function run(Properties) in line 87
      protection public
      65 lines of code
      1 parameters
      8 conditional paths
      uses function setExclusionFileName(String) defined in com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
      uses variable CHECK_GRAPH defined in com::ibm::wala::examples::drivers::SWTCallGraph
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable PS_FILE defined in com::ibm::wala::examples::drivers::GVWalaIR
      uses variable DOT_FILE defined in com::ibm::wala::examples::drivers::GVTypeHierarchy
      uses variable DOT_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses variable GHOSTVIEW_EXE defined in com::ibm::wala::examples::properties::WalaExamplesProperties
      uses function setGraphInput(Graph) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function setRootsInput(Collection<?extends Object >) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getPopUpActions() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function run() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getApplicationWindow() defined in com::ibm::wala::viz::EJfaceApplicationRunner
      uses function composeString(Collection< String >) defined in com::ibm::wala::examples::drivers::SWTCallGraph
   variable CHECK_GRAPH in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/SWTPointsTo.java
module com::ibm::wala::examples::drivers::SWTPointsTo
   function buildPointsTo(String) in line 77
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 49
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function run(String) defined in com::ibm::wala::examples::drivers::SWTPointsTo
   function run(String) in line 59
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function buildPointsTo(String) defined in com::ibm::wala::examples::drivers::SWTPointsTo
      uses function setGraphInput(Graph) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function setRootsInput(Collection<?extends Object >) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function run() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getApplicationWindow() defined in com::ibm::wala::viz::EJfaceApplicationRunner
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/drivers/SWTTypeHierarchy.java
module com::ibm::wala::examples::drivers::SWTTypeHierarchy
   function main(String[]) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run() defined in com::ibm::wala::examples::drivers::SWTTypeHierarchy
   function run() in line 41
      protection public
      34 lines of code
      0 parameters
      5 conditional paths
      uses function getClasses() defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses function getNodes() defined in com::ibm::wala::ecore::graph::EGraph
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function setGraphInput(Graph) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function setRootsInput(Collection<?extends Object >) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function run() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getApplicationWindow() defined in com::ibm::wala::viz::EJfaceApplicationRunner
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core.tests/src/com/ibm/wala/examples/properties/WalaExamplesProperties.java
module com::ibm::wala::examples::properties::WalaExamplesProperties
   function getWalaCoreTestsHomeDirectory() in line 41
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable PROPERTY_FILENAME defined in com::ibm::wala::examples::properties::WalaExamplesProperties
   function loadProperties() in line 29
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable PROPERTY_FILENAME defined in com::ibm::wala::examples::properties::WalaExamplesProperties
   variable DOT_EXE in line 25
      protection public
   variable GHOSTVIEW_EXE in line 23
      protection public
   variable PROPERTY_FILENAME in line 27
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/pointers/BasicHeapGraph.java
module com::ibm::wala::analysis::pointers::BasicHeapGraph
   inherits from com::ibm::wala::analysis::pointers::HeapGraph
   function addEdge(Object,Object) in line 473
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addNode(Object) in line 455
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function computePredecessors(NumberedNodeManager< Object >) in line 284
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable SIMPLE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function computePredecessorsForNonLocals(NumberedNodeManager< Object >,BasicNonNegativeIntRelation) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function computePredecessorsForLocals(NumberedNodeManager< Object >,BasicNonNegativeIntRelation) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function computePredecessorsForLocals(NumberedNodeManager< Object >,BasicNonNegativeIntRelation) in line 324
      29 lines of code
      2 parameters
      8 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable VERBOSE defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses variable VERBOSE_INTERVAL defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNumber(T) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function computeSuccNodeNumbers(Object,NumberedNodeManager< Object >) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function add(int,int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function computePredecessorsForNonLocals(NumberedNodeManager< Object >,BasicNonNegativeIntRelation) in line 296
      23 lines of code
      2 parameters
      7 conditional paths
      uses function getMaxNumber() defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable VERBOSE defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses variable VERBOSE_INTERVAL defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNode(int) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function computeSuccNodeNumbers(Object,NumberedNodeManager< Object >) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function add(int,int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function computeSuccNodeNumbers(Object,NumberedNodeManager< Object >) in line 222
      58 lines of code
      2 parameters
      15 conditional paths
      uses variable pointerAnalysis defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function size() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function iterator() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function getNumber(T) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getHeapModel() defined in com::ibm::wala::analysis::pointers::HeapGraph
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function containsNode(T) defined in com::ibm::wala::util::graph::NodeManager
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getAllInstanceFields() defined in com::ibm::wala::classLoader::IClass
      uses function getFieldReference() defined in com::ibm::wala::classLoader::IField
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function toIntArray() defined in com::ibm::wala::util::intset::SparseIntSet
   function containsNode(Object) in line 499
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getMaxNumber() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getNode(int) in line 383
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getNumber(Object) in line 374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getNumberOfNodes() in line 410
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getPointerKeys(PointerAnalysis) in line 211
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable pointerAnalysis defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getPointerKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function add(T) defined in com::ibm::wala::util::intset::MutableMapping
   function getPredNodeCount(Object) in line 428
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getPredNodeNumbers(Object) in line 556
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(Object) in line 419
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getSuccNodeCount(Object) in line 446
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function getSuccNodeNumbers(Object) in line 550
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(Object) in line 437
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function hasEdge(Object,Object) in line 485
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function iterateNodes() in line 401
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function removeAllIncidentEdges(Object) in line 490
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(Object,Object) in line 477
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(Object) in line 537
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNode(Object) in line 465
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(Object) in line 545
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 508
      protection public
      24 lines of code
      0 parameters
      6 conditional paths
      uses function getMaxNumber() defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNode(int) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getSuccNodes(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNumber(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   function BasicHeapGraph(final PointerAnalysis,final CallGraph) in line 76
      protection public
      131 lines of code
      2 parameters
      7 conditional paths
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses variable callGraph defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getPointerKeys(PointerAnalysis) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function iterateNodes() defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getInstanceKeyMapping() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getNumberOfNodes() defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getMappingSize() defined in com::ibm::wala::util::intset::OrdinalSetMapping
      uses function addNode(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function removeNode(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNumber(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getMappedIndex(T) defined in com::ibm::wala::util::intset::OrdinalSetMapping
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getNode(int) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getMappedObject(int) defined in com::ibm::wala::util::intset::OrdinalSetMapping
      uses function getMaxNumber() defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function containsNode(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function computePredecessors(NumberedNodeManager< Object >) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNode(int) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getPredNodes(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNumber(T) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function getPredNodeCount(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getRelatedCount(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function getSuccNodes(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function computeSuccNodeNumbers(Object,NumberedNodeManager< Object >) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function intIterator() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function getSuccNodeCount(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function addEdge(Object,Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function removeEdge(Object,Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function removeAllIncidentEdges(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function removeIncomingEdges(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function removeOutgoingEdges(Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function hasEdge(Object,Object) defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
   variable callGraph in line 70
   variable G in line 65
   variable pointerAnalysis in line 60
   variable VERBOSE in line 53
   variable VERBOSE_INTERVAL in line 55
module com::ibm::wala::analysis::pointers::BasicHeapGraph::LocalPointerComparator
   inherits from java::util::Comparator
   function compare(Object,Object) in line 358
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function getValueNumber() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable callGraph defined in com::ibm::wala::analysis::pointers::BasicHeapGraph
      uses function getNumber(T) defined in com::ibm::wala::util::graph::NumberedNodeManager
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/pointers/HeapGraph.java
module com::ibm::wala::analysis::pointers::HeapGraph
   inherits from com::ibm::wala::util::graph::NumberedGraph
   abstract class
   function getHeapModel() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hm defined in com::ibm::wala::analysis::pointers::HeapGraph
   function getReachableInstances(Set< Object >) in line 56
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function iterateNodes(IntSet) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(Object) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function HeapGraph(HeapModel) in line 45
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hm defined in com::ibm::wala::analysis::pointers::HeapGraph
   variable hm in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/CallerSiteContext.java
module com::ibm::wala::analysis::reflection::CallerSiteContext
   inherits from com::ibm::wala::ipa::callgraph::Context
   function equals(Object) in line 64
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function CallerSiteContext(CGNode,CallSiteReference) defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses variable caller defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses variable site defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
   function get(ContextKey) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCaller() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::analysis::reflection::CallerSiteContext
   function getSite() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::analysis::reflection::CallerSiteContext
   function hashCode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable caller defined in com::ibm::wala::analysis::reflection::CallerSiteContext
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses variable site defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function CallerSiteContext(CGNode,CallSiteReference) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses variable site defined in com::ibm::wala::analysis::reflection::CallerSiteContext
   variable caller in line 27
   variable site in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/CallerSiteContext.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContext
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   function equals(Object) in line 39
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function get(ContextKey) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getCallSite() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable callSite in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/CallSiteMap.java
module com::ibm::wala::analysis::reflection::CallSiteMap
   function getInstructionForSite(CallSiteReference) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::analysis::reflection::CallSiteMap
   function CallSiteMap(final IR) in line 38
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable map defined in com::ibm::wala::analysis::reflection::CallSiteMap
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   variable map in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/CloneInterpreter.java
module com::ibm::wala::analysis::reflection::CloneInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function getCaughtExceptions(CGNode,WarningSet) in line 306
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function getCFG(CGNode,WarningSet) in line 349
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
   function getDU(CGNode,WarningSet) in line 359
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
   function getIR(CGNode,WarningSet) in line 110
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function understands(CGNode) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable IRCache defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function makeIR(IMethod,Context,IClass,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getNumberOfStatements(CGNode,WarningSet) in line 130
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function understands(CGNode) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function hasObjectArrayLoad(CGNode,WarningSet) in line 317
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function hasObjectArrayStore(CGNode,WarningSet) in line 328
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function iterateCallSites(CGNode,WarningSet) in line 169
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function understands(CGNode) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses variable ARRAYCOPY_SITE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
   function iterateCastTypes(CGNode,WarningSet) in line 339
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function iterateFieldsRead(CGNode,WarningSet) in line 284
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function iterateFieldsWritten(CGNode,WarningSet) in line 295
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function iterateNewSites(CGNode,WarningSet) in line 154
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function understands(CGNode) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable NEW_PC defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function makeIR(IMethod,Context,IClass,WarningSet) in line 250
      8 lines of code
      4 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function makeStatements(IClass) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
   function makeStatements(IClass) in line 180
      65 lines of code
      1 parameters
      8 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable NEW_PC defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getDimensionality() defined in com::ibm::wala::types::TypeReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses variable ARRAYCOPY_SITE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getDeclaredInstanceFields() defined in com::ibm::wala::classLoader::IClass
      uses function getFieldReference() defined in com::ibm::wala::classLoader::IField
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function recordFactoryType(CGNode,IClass) in line 265
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function understands(CGNode) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable CLONE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
   variable ARRAYCOPY_PC in line 91
   variable ARRAYCOPY_SITE in line 93
   variable arraycopyAtom in line 80
   variable arraycopyDesc in line 82
   variable CLONE in line 75
      protection public
   variable cloneAtom in line 68
      protection public
   variable cloneDesc in line 70
   variable IRCache in line 101
   variable NEW_PC in line 96
   variable SYNTHETIC_ARRAYCOPY in line 84
   variable SYNTHETIC_SYSTEM in line 77
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/FactoryBypassInterpreter.java
module com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function findOrCreateSpecializedFactoryMethod(CGNode) in line 668
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable syntheticMethodCache defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable types defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getTypesForContext(Context) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function SpecializedFactoryMethod(final SummarizedMethod,Context,final Set) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getCallSiteForType(TypeReference) in line 140
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLocalForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function getCaughtExceptions(CGNode,WarningSet) in line 678
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function getCFG(CGNode,WarningSet) in line 727
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
   function getDU(CGNode,WarningSet) in line 805
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable options defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function findOrCreateDU(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable cha defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function getExceptionsForType(TypeReference) in line 136
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLocalForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function getInvokeStatements(CGNode) in line 218
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getInvokeStatements() defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function getIR(CGNode,WarningSet) in line 155
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable options defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function findOrCreateIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable cha defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function getLocalForType(TypeReference) in line 128
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable typeIndexMap defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable indexLocal defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function getNewSiteForType(TypeReference) in line 144
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLocalForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function getNumberOfStatements(CGNode,WarningSet) in line 186
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable allInstructions defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function getTypesForContext(Context) in line 160
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable userSpec defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getCaller() defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function getSummary(MethodReference) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses function getTypesForProgramLocation(int) defined in com::ibm::wala::ipa::summaries::ReflectionSummary
      uses function getSite() defined in com::ibm::wala::analysis::reflection::CallerSiteContext
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable map defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function hasObjectArrayLoad(CGNode,WarningSet) in line 689
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function hasObjectArrayStore(CGNode,WarningSet) in line 700
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function iterateCallSites(CGNode,WarningSet) in line 230
      protection public
      17 lines of code
      2 parameters
      1 conditional paths
      uses function getInvokeStatements(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function iterateCastTypes(CGNode,WarningSet) in line 711
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function iterateFieldsRead(CGNode,WarningSet) in line 640
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function iterateFieldsWritten(CGNode,WarningSet) in line 657
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function iterateNewSites(CGNode,WarningSet) in line 208
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSpecializedFactoryMethod(CGNode) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getAllocationStatements() defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getNewSite() defined in com::ibm::wala::ssa::SSANewInstruction
   function recordFactoryType(CGNode,IClass) in line 621
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function recordType(Context,TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function recordType(Context,TypeReference) in line 574
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable types defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable map defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable context defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable syntheticMethodCache defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function typeRef2TypeAbstraction(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function addStatementsForTypeAbstraction(TypeAbstraction) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable options defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function invalidate(IMethod,Context) defined in com::ibm::wala::ssa::SSACache
   function setWarnings(WarningSet) in line 630
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function typeRef2TypeAbstraction(TypeReference) in line 601
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function toString() defined in com::ibm::wala::types::TypeReference
   function understands(CGNode) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTypesForContext(Context) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
   function FactoryBypassInterpreter(AnalysisOptions,ClassHierarchy,ReflectionSpecification,WarningSet) in line 121
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable cha defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable userSpec defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   variable cha in line 99
   variable CONE_BOUND in line 74
   variable DEBUG in line 72
   variable indexLocal in line 76
   variable map in line 84
   variable options in line 94
   variable syntheticMethodCache in line 89
   variable typeIndexMap in line 78
   variable userSpec in line 109
   variable warnings in line 104
module com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   inherits from com::ibm::wala::classLoader::SyntheticMethod
   function addOriginalStatements(SummarizedMethod) in line 434
      28 lines of code
      1 parameters
      8 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses variable options defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable nextLocal defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable allInstructions defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable calls defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable allocations defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getNumberOfDefs() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getDef() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
   function addStatementsForConcreteType(final TypeReference) in line 404
      29 lines of code
      1 parameters
      5 conditional paths
      uses variable types defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable DEBUG defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getNewSiteForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getLocalForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable allocations defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable allInstructions defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses variable initAtom defined in com::ibm::wala::types::MethodReference
      uses variable defaultInitDesc defined in com::ibm::wala::types::MethodReference
      uses function getCallSiteForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getExceptionsForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable calls defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function addStatementsForSetOfTypes(Iterator) in line 463
      39 lines of code
      1 parameters
      5 conditional paths
      uses variable nextLocal defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable allInstructions defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses variable types defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getLocalForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getNewSiteForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getDimensionality() defined in com::ibm::wala::types::TypeReference
      uses function initValueNumberForConstantOne() defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable valueNumberForConstantOne defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable allocations defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable initAtom defined in com::ibm::wala::types::MethodReference
      uses variable defaultInitDesc defined in com::ibm::wala::types::MethodReference
      uses function getCallSiteForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getExceptionsForType(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable calls defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function addStatementsForTypeAbstraction(TypeAbstraction) in line 323
      64 lines of code
      1 parameters
      18 conditional paths
      uses variable DEBUG defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable method defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function interceptType(TypeAbstraction) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable options defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses function addStatementsForConcreteType(final TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable cha defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function getImplementors(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeAbstraction) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::NoSubtypesWarning
      uses variable CONE_BOUND defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function create(TypeAbstraction,int) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::ManySubtypesWarning
      uses function addStatementsForSetOfTypes(Iterator) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function equals(Object) in line 519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAllocationStatements() in line 503
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allocations defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function getDeclaringClass() in line 540
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable method defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
   function getInvokeStatements() in line 507
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable calls defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function getNumberOfParameters() in line 549
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
   function getParameterType(int) in line 553
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
   function getStatements(WarningSet) in line 531
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable allInstructions defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function hashCode() in line 523
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initValueNumberForConstantOne() in line 291
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable valueNumberForConstantOne defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable nextLocal defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   function interceptType(TypeAbstraction) in line 388
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaIoSerializable defined in com::ibm::wala::types::TypeReference
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create() defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::IgnoreSerializableWarning
   function makeIR(SSAOptions,WarningSet) in line 562
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getStatements(WarningSet) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable warnings defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable valueNumberForConstantOne defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable context defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable options defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
   function toString() in line 527
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SpecializedFactoryMethod(final SummarizedMethod,Context,final Set) in line 299
      23 lines of code
      3 parameters
      4 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function isStatic() defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses variable context defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses variable DEBUG defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable nextLocal defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function addOriginalStatements(SummarizedMethod) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
      uses function typeRef2TypeAbstraction(TypeReference) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter
      uses function addStatementsForTypeAbstraction(TypeAbstraction) defined in com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::SpecializedFactoryMethod
   variable allInstructions in line 269
   variable allocations in line 258
   variable calls in line 264
   variable context in line 279
   variable method in line 274
   variable nextLocal in line 284
   variable types in line 297
   variable valueNumberForConstantOne in line 289
module com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::ManySubtypesWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeAbstraction,int) in line 752
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getMsg() in line 748
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::NoSubtypesWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeAbstraction) in line 775
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 771
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::analysis::reflection::FactoryBypassInterpreter::IgnoreSerializableWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create() in line 794
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMsg() in line 790
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 788
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/FactoryContextSelector.java
module com::ibm::wala::analysis::reflection::FactoryContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 117
      protection public
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable methodTargetSelector defined in com::ibm::wala::analysis::reflection::FactoryContextSelector
      uses function mightReturnSyntheticMethod(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses variable cha defined in com::ibm::wala::analysis::reflection::FactoryContextSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 95
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable methodTargetSelector defined in com::ibm::wala::analysis::reflection::FactoryContextSelector
      uses function mightReturnSyntheticMethod(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 75
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 48
      protection public
      9 lines of code
      4 parameters
      3 conditional paths
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 61
      protection public
      9 lines of code
      4 parameters
      3 conditional paths
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
   function setWarnings(WarningSet) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FactoryContextSelector(ClassHierarchy,MethodTargetSelector) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::analysis::reflection::FactoryContextSelector
      uses variable methodTargetSelector defined in com::ibm::wala::analysis::reflection::FactoryContextSelector
   variable cha in line 35
   variable methodTargetSelector in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/InstanceKeyWithNode.java
module com::ibm::wala::analysis::reflection::InstanceKeyWithNode
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   function getNode() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/JavaTypeContext.java
module com::ibm::wala::analysis::reflection::JavaTypeContext
   inherits from com::ibm::wala::ipa::callgraph::Context
   function equals(Object) in line 58
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function JavaTypeContext(TypeAbstraction) defined in com::ibm::wala::analysis::reflection::JavaTypeContext
      uses variable type defined in com::ibm::wala::analysis::reflection::JavaTypeContext
      uses function equals(Object) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function get(ContextKey) in line 38
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable RECEIVER defined in com::ibm::wala::ipa::callgraph::ContextKey
      uses variable type defined in com::ibm::wala::analysis::reflection::JavaTypeContext
   function hashCode() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::reflection::JavaTypeContext
      uses function hashCode() defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::reflection::JavaTypeContext
   function JavaTypeContext(TypeAbstraction) in line 30
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable type defined in com::ibm::wala::analysis::reflection::JavaTypeContext
   variable type in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/reflection/Malleable.java
module com::ibm::wala::analysis::reflection::Malleable
   function isMalleable(TypeReference) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable ExtMalleable defined in com::ibm::wala::analysis::reflection::Malleable
   variable ExtMalleable in line 26
      protection public
   variable Malleable in line 25
      protection public
   variable MalleableCollection in line 28
      protection public
   variable MalleableName in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/stackMachine/AbstractIntStackMachine.java
module com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   abstract class
   function allocateNewLocalsArray() in line 836
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable maxLocals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable OPTIMISTIC defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable BOTTOM defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function computeMeetNLocals(IVariable[]) in line 549
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable locals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function computeMeetStackHeight(IVariable[]) in line 572
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable stack defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable stackHeight defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function getEntryState() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable solver defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getIn(Object) defined in com::ibm::wala::dataflow::graph::DataflowSolver
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function entry() defined in com::ibm::wala::cfg::AbstractCFG
   function getIn(ShrikeCFG.BasicBlock) in line 264
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable solver defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getIn(Object) defined in com::ibm::wala::dataflow::graph::DataflowSolver
   function init(Meeter,final FlowProvider) in line 122
      124 lines of code
      2 parameters
      7 conditional paths
      uses function meet(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function needsNodeFlow() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::FlowProvider
      uses function needsEdgeFlow() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::FlowProvider
      uses function flow(MachineState,BasicBlock) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::FlowProvider
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::IVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable solver defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function entry() defined in com::ibm::wala::cfg::AbstractCFG
      uses function initializeVariables() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function initializeVariables() in line 254
      2 lines of code
      0 parameters
      1 conditional paths
   function meet(IVariable,IVariable[],BasicBlock,Meeter) in line 391
      7 lines of code
      4 parameters
      1 conditional paths
      uses function meetStacks(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
      uses function meetLocals(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function meetForCatchBlock(IVariable,IVariable[],BasicBlock,Meeter) in line 408
      6 lines of code
      4 parameters
      1 conditional paths
      uses function meetStacksAtCatchBlock(IVariable,BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
      uses function meetLocals(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function meetLocals(IVariable,IVariable[],BasicBlock,Meeter) in line 513
      29 lines of code
      4 parameters
      7 conditional paths
      uses function computeMeetNLocals(IVariable[]) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable locals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function allocateLocals() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function meet(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
      uses function meetLocal(int,int[],BasicBlock) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::Meeter
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function meetStacks(IVariable,IVariable[],BasicBlock,Meeter) in line 462
      41 lines of code
      4 parameters
      8 conditional paths
      uses function computeMeetStackHeight(IVariable[]) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable stack defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function allocateStack() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable stackHeight defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function meet(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
      uses function meetStack(int,int[],BasicBlock) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::Meeter
   function meetStacksAtCatchBlock(IVariable,BasicBlock,Meeter) in line 425
      26 lines of code
      3 parameters
      5 conditional paths
      uses variable stack defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function allocateStack() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable stackHeight defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function meet(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
      uses function meetStackAtCatchBlock(BasicBlock) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::Meeter
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function solve() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable solver defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function solve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function AbstractIntStackMachine(final ShrikeCFG) in line 112
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable maxStackHeight defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getMaxStackHeight() defined in com::ibm::wala::cfg::ShrikeCFG
      uses variable maxLocals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getMaxLocals() defined in com::ibm::wala::cfg::ShrikeCFG
   variable BOTTOM in line 80
      protection public
   variable cfg in line 94
   variable DEBUG in line 76
   variable IGNORE in line 84
      protection public
   variable maxLocals in line 104
   variable maxStackHeight in line 99
   variable OPTIMISTIC in line 110
      protection public
   variable solver in line 89
   variable TOP in line 78
      protection public
   variable UNANALYZED in line 82
      protection public
module com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
   inherits from com::ibm::wala::dataflow::graph::AbstractMeetOperator
   function equals(Object) in line 318
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
   function evaluate(IVariable,IVariable[]) in line 294
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getBasicBlock() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function isCatchBlock() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function meet(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function meetForCatchBlock(IVariable,IVariable[],BasicBlock,Meeter) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function hashCode() in line 309
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable meeter defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
   function isUnaryNoOp() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 332
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable meeter in line 274
module com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::Meeter
   function meetLocal(int,int[],BasicBlock) in line 379
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function meetStack(int,int[],BasicBlock) in line 355
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function meetStackAtCatchBlock(BasicBlock) in line 365
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   inherits from com::ibm::wala::fixedpoint::impl::AbstractVariable
   function allocateLocals() in line 663
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allocateNewLocalsArray() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function allocateStack() in line 658
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable maxStackHeight defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function array2StringBuffer(int[],int) in line 748
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable OPTIMISTIC defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function clearStack() in line 667
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function copyState(IVariable) in line 762
      protection public
      16 lines of code
      1 parameters
      15 conditional paths
      uses variable stack defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable locals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable stackHeight defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function duplicate() in line 608
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function copyState(IVariable) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function getBasicBlock() in line 620
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLocal(int) in line 692
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable OPTIMISTIC defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable BOTTOM defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function getLocals() in line 830
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStackHeight() in line 814
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 823
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasValue(int) in line 716
      protection public
      13 lines of code
      1 parameters
      7 conditional paths
      uses variable maxLocals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function peek() in line 648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function pop() in line 638
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function push(int) in line 632
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function replaceValue(int,int) in line 704
      protection public
      11 lines of code
      2 parameters
      7 conditional paths
      uses variable maxLocals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function setLocal(int,int) in line 677
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable OPTIMISTIC defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function swap() in line 652
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 730
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable maxLocals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function MachineState(int,BasicBlock) in line 614
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MeetOperator
   variable bb in line 602
   variable hash in line 600
   variable locals in line 595
   variable stack in line 593
   variable stackHeight in line 598
module com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::FlowProvider
   function flow(MachineState,BasicBlock) in line 857
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function flow(MachineState,BasicBlock,BasicBlock) in line 863
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function needsEdgeFlow() in line 851
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function needsNodeFlow() in line 849
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::BasicStackFlowProvider
   inherits from com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::FlowProvider
   inherits from com::ibm::wala::shrikeBT::Constants
   abstract class
   function flow(MachineState,BasicBlock) in line 908
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function duplicate() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable DEBUG defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
   function flow(MachineState,BasicBlock,BasicBlock) in line 926
      protection public
      17 lines of code
      3 parameters
      4 conditional paths
      uses function duplicate() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable DEBUG defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
   function getCurrentBlock() in line 952
      3 lines of code
      0 parameters
      1 conditional paths
   function getCurrentInstructionIndex() in line 944
      3 lines of code
      0 parameters
      1 conditional paths
   function getCurrentProgramCounter() in line 948
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getProgramCounter(int) defined in com::ibm::wala::cfg::ShrikeCFG
   function getCurrentSuccessor() in line 956
      3 lines of code
      0 parameters
      1 conditional paths
   function getInstructions() in line 965
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function init(BasicStackMachineVisitor,com.ibm.wala.shrikeBT.Instruction.Visitor) in line 895
      4 lines of code
      2 parameters
      1 conditional paths
   function needsEdgeFlow() in line 904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function needsNodeFlow() in line 900
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BasicStackFlowProvider(ShrikeCFG) in line 888
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   variable cfg in line 871
   variable currentBlock in line 881
   variable currentInstructionIndex in line 879
   variable currentSuccessorBlock in line 883
   variable edgeVisitor in line 877
   variable visitor in line 875
   variable workingState in line 873
module com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::BasicStackFlowProvider::BasicStackMachineVisitor
   inherits from com::ibm::wala::shrikeBT::Instruction::Visitor
   function popN(Instruction) in line 1080
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitArrayLength(ArrayLengthInstruction) in line 975
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitArrayLoad(ArrayLoadInstruction) in line 984
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitArrayStore(ArrayStoreInstruction) in line 993
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitBinaryOp(BinaryOpInstruction) in line 1002
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitComparison(ComparisonInstruction) in line 1009
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitConditionalBranch(ConditionalBranchInstruction) in line 1018
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitConstant(ConstantInstruction) in line 1026
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitConversion(ConversionInstruction) in line 1033
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitDup(DupInstruction) in line 1041
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function getSize() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getDelta() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable IGNORE defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitGet(GetInstruction) in line 1075
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitInstanceof(InstanceofInstruction) in line 1089
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitInvoke(com.ibm.wala.shrikeBT.InvokeInstruction) in line 1097
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitLocalLoad(LoadInstruction) in line 1116
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getLocal(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitLocalStore(StoreInstruction) in line 1124
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function setLocal(int,int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitMonitor(MonitorInstruction) in line 1109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitNew(NewInstruction) in line 1132
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses variable UNANALYZED defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function visitPop(PopInstruction) in line 1140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitPut(PutInstruction) in line 1147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitShift(ShiftInstruction) in line 1154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitSwap(SwapInstruction) in line 1161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function swap() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitSwitch(SwitchInstruction) in line 1168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitThrow(ThrowInstruction) in line 1175
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function clearStack() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function visitUnaryOp(UnaryOpInstruction) in line 1184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/ConeType.java
module com::ibm::wala::analysis::typeInference::ConeType
   inherits from com::ibm::wala::analysis::typeInference::TypeAbstraction
   function equals(Object) in line 83
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses function ConeType(IClass,ClassHierarchy) defined in com::ibm::wala::analysis::typeInference::ConeType
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable cha defined in com::ibm::wala::analysis::typeInference::ConeType
      uses variable type defined in com::ibm::wala::analysis::typeInference::ConeType
   function getClassHierarchy() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::analysis::typeInference::ConeType
   function getType() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::ConeType
   function hashCode() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::ConeType
   function isArrayType() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
   function isInterface() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
   function iterateImplementors() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function getImplementors(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getType() defined in com::ibm::wala::analysis::typeInference::ConeType
   function meet(TypeAbstraction) in line 42
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function ConeType(IClass,ClassHierarchy) defined in com::ibm::wala::analysis::typeInference::ConeType
      uses variable type defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses variable cha defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function getRootClass() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getLeastCommonSuperclass(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function meet(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function toString() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::ConeType
   function ConeType(IClass,ClassHierarchy) in line 33
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable type defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses variable cha defined in com::ibm::wala::analysis::typeInference::ConeType
   variable cha in line 28
   variable type in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/PointType.java
module com::ibm::wala::analysis::typeInference::PointType
   inherits from com::ibm::wala::analysis::typeInference::TypeAbstraction
   function equals(Object) in line 98
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function PointType(IClass,ClassHierarchy) defined in com::ibm::wala::analysis::typeInference::PointType
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable cha defined in com::ibm::wala::analysis::typeInference::PointType
      uses variable type defined in com::ibm::wala::analysis::typeInference::PointType
   function getIClass() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::PointType
   function getType() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::PointType
   function hashCode() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::PointType
   function isArrayType() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::analysis::typeInference::PointType
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
   function meet(TypeAbstraction) in line 40
      protection public
      38 lines of code
      1 parameters
      10 conditional paths
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function PointType(IClass,ClassHierarchy) defined in com::ibm::wala::analysis::typeInference::PointType
      uses variable type defined in com::ibm::wala::analysis::typeInference::PointType
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses variable cha defined in com::ibm::wala::analysis::typeInference::PointType
      uses function getRootClass() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getLeastCommonSuperclass(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getType() defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function isSubclassOf(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::analysis::typeInference::ConeType
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function meet(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::ConeType
   function toString() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::PointType
   function PointType(IClass,ClassHierarchy) in line 31
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::PointType
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses variable cha defined in com::ibm::wala::analysis::typeInference::PointType
   variable cha in line 26
   variable type in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/PrimitiveType.java
module com::ibm::wala::analysis::typeInference::PrimitiveType
   inherits from com::ibm::wala::analysis::typeInference::TypeAbstraction
   function equals(Object) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPrimitive(TypeReference) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable refernceToType defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses variable reference defined in com::ibm::wala::analysis::typeInference::PrimitiveType
   function getType() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
   function makePrimitive(TypeReference) in line 89
      5 lines of code
      1 parameters
      1 conditional paths
      uses function PrimitiveType(TypeReference) defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses variable reference defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses variable refernceToType defined in com::ibm::wala::analysis::typeInference::PrimitiveType
   function meet(TypeAbstraction) in line 60
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable BOOLEAN defined in com::ibm::wala::analysis::typeInference::PrimitiveType
   function toString() in line 95
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable primitiveNameMap defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses variable reference defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
   function PrimitiveType(TypeReference) in line 56
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reference defined in com::ibm::wala::analysis::typeInference::PrimitiveType
   variable BOOLEAN in line 24
      protection public
   variable BYTE in line 28
      protection public
   variable CHAR in line 26
      protection public
   variable DOUBLE in line 38
      protection public
   variable FLOAT in line 36
      protection public
   variable INT in line 32
      protection public
   variable LONG in line 34
      protection public
   variable primitiveNameMap in line 40
   variable reference in line 54
   variable refernceToType in line 22
   variable SHORT in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/ReceiverTypeInference.java
module com::ibm::wala::analysis::typeInference::ReceiverTypeInference
   function getInvokeInstruction(CallSiteReference) in line 110
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable invokeMap defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
   function getReceiverType(CallSiteReference) in line 91
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getInvokeInstruction(CallSiteReference) defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses function getReceiver() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable ti defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses function getType(int) defined in com::ibm::wala::analysis::typeInference::TypeInference
   function setupInvokeMap() in line 66
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable invokeMap defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses variable ti defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses function getIR() defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getMethod() defined in com::ibm::wala::ssa::IR
      uses variable warnings defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getProgramCounter() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function ReceiverTypeInference(TypeInference,WarningSet) in line 48
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable ti defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses variable warnings defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses function setupInvokeMap() defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
   variable invokeMap in line 41
   variable ti in line 35
   variable warnings in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/ReceiverTypeInferenceCache.java
module com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
   function findOrCreate(CGNode) in line 56
      protection public
      21 lines of code
      1 parameters
      3 conditional paths
      uses variable typeInferenceMap defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses variable options defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable cha defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses variable warnings defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses function solve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function ReceiverTypeInferenceCache(ClassHierarchy,AnalysisOptions,WarningSet) in line 38
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses variable options defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses variable cha defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
   variable cha in line 34
   variable options in line 36
   variable typeInferenceMap in line 49
   variable warnings in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/SetType.java
module com::ibm::wala::analysis::typeInference::SetType
   inherits from com::ibm::wala::analysis::typeInference::TypeAbstraction
   function equals(Object) in line 62
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function hashCode() defined in com::ibm::wala::analysis::typeInference::SetType
      uses function SetType(PointType[]) defined in com::ibm::wala::analysis::typeInference::SetType
      uses variable types defined in com::ibm::wala::analysis::typeInference::SetType
   function hashCode() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iteratePoints() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable types defined in com::ibm::wala::analysis::typeInference::SetType
   function meet(TypeAbstraction) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function SetType(PointType[]) in line 34
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable types defined in com::ibm::wala::analysis::typeInference::SetType
      uses function getType() defined in com::ibm::wala::analysis::typeInference::PointType
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
      uses function hashCode() defined in com::ibm::wala::analysis::typeInference::SetType
   variable hashCode in line 32
   variable types in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/TypeAbstraction.java
module com::ibm::wala::analysis::typeInference::TypeAbstraction
   inherits from com::ibm::wala::ipa::callgraph::ContextItem
   abstract class
   function equals(Object) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function meet(TypeAbstraction) in line 47
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable TOP in line 29
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/analysis/typeInference/TypeInference.java
module com::ibm::wala::analysis::typeInference::TypeInference
   inherits from com::ibm::wala::dataflow::ssa::SSAInference
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   function getConstantPrimitiveType(int) in line 741
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function isConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function isIntegerConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable INT defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses function isFloatConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable FLOAT defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses function isDoubleConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable DOUBLE defined in com::ibm::wala::analysis::typeInference::PrimitiveType
   function getConstantType(int) in line 733
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function isStringConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangString defined in com::ibm::wala::types::TypeReference
      uses function getConstantPrimitiveType(int) defined in com::ibm::wala::analysis::typeInference::TypeInference
   function getIR() in line 714
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
   function getType(int) in line 724
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getVariable(int) defined in com::ibm::wala::dataflow::ssa::SSAInference
   function initialize() in line 97
      3 lines of code
      0 parameters
      1 conditional paths
      uses function init(IR,VariableFactory,OperatorFactory) defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
   function initializeVariables() in line 101
      62 lines of code
      0 parameters
      16 conditional paths
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getParameterValueNumbers() defined in com::ibm::wala::ssa::IR
      uses function getVariable(int) defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function getParameterType(int) defined in com::ibm::wala::ssa::IR
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function setType(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function getMaxValueNumber() defined in com::ibm::wala::ssa::SymbolTable
      uses function isConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getConstantType(int) defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function iterateNormalInstructions() defined in com::ibm::wala::ssa::IR
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getExceptionTypes() defined in com::ibm::wala::ssa::SSAInstruction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredTarget() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDeclaredExceptions() defined in com::ibm::wala::classLoader::IMethod
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses function meet(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function initializeWorkList() in line 164
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAllStatementsToWorkList() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function isUndefined(int) in line 756
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getVariable(int) defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function getType(int) defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses variable BOTTOM defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function TypeInference(IR,ClassHierarchy,boolean) in line 85
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getRootClass() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function initialize() defined in com::ibm::wala::analysis::typeInference::TypeInference
   function TypeInference(IR,ClassHierarchy) in line 93
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
   variable BOTTOM in line 73
   variable cha in line 61
   variable doPrimitives in line 83
   variable ir in line 56
   variable phiOp in line 66
   variable piOp in line 78
   variable primitivePropagateOp in line 68
module com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   inherits from com::ibm::wala::fixedpoint::impl::NullaryOperator
   function equals(Object) in line 219
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function equals(Object) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function evaluate(IVariable) in line 184
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses function equals(Object) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable NOT_CHANGED_AND_FIXED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function setType(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable CHANGED_AND_FIXED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function hashCode() defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function isNullary() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   function DeclaredTypeOperator(TypeAbstraction) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   variable type in line 175
module com::ibm::wala::analysis::typeInference::TypeInference::PhiOperator
   inherits from com::ibm::wala::fixedpoint::impl::AbstractOperator
   function equals(Object) in line 280
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable[]) in line 241
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function meet(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function equals(Object) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function setType(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 262
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PhiOperator() in line 235
      2 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::analysis::typeInference::TypeInference::PiOperator
   inherits from com::ibm::wala::fixedpoint::impl::AbstractOperator
   function equals(Object) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable[]) in line 297
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses function equals(Object) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function setType(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PiOperator() in line 291
      2 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::analysis::typeInference::TypeInference::PrimitivePropagateOperator
   inherits from com::ibm::wala::fixedpoint::impl::AbstractOperator
   function equals(Object) in line 386
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable[]) in line 347
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function meet(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function equals(Object) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function setType(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PrimitivePropagateOperator() in line 344
      2 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::analysis::typeInference::TypeInference::GetElementType
   inherits from com::ibm::wala::fixedpoint::impl::AbstractOperator
   function equals(Object) in line 482
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable load defined in com::ibm::wala::analysis::typeInference::TypeInference::GetElementType
   function evaluate(IVariable,IVariable[]) in line 404
      protection public
      56 lines of code
      2 parameters
      12 conditional paths
      uses function getType(int) defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function equals(Object) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses function setType(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function hashCode() in line 473
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
   function toString() in line 464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable load in line 398
module com::ibm::wala::analysis::typeInference::TypeInference::TypeOperatorFactory
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   inherits from OperatorFactory
   function get(SSAInstruction) in line 496
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function meetDeclaredExceptionTypes(SSAGetCaughtExceptionInstruction,ClassHierarchy) in line 606
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function getBasicBlockNumber() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses function getCaughtExceptionTypes() defined in com::ibm::wala::ssa::SSACFG::ExceptionHandlerBasicBlock
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable BOTTOM defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function meet(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
   function visitArrayLength(SSAArrayLengthInstruction) in line 507
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable INT defined in com::ibm::wala::analysis::typeInference::PrimitiveType
   function visitArrayLoad(SSAArrayLoadInstruction) in line 503
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBinaryOp(SSABinaryOpInstruction) in line 580
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses variable primitivePropagateOp defined in com::ibm::wala::analysis::typeInference::TypeInference
   function visitCheckCast(SSACheckCastInstruction) in line 562
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable BOTTOM defined in com::ibm::wala::analysis::typeInference::TypeInference
   function visitConversion(SSAConversionInstruction) in line 574
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function getToType() defined in com::ibm::wala::ssa::SSAConversionInstruction
   function visitGet(SSAGetInstruction) in line 515
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function getDeclaredFieldType() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable BOTTOM defined in com::ibm::wala::analysis::typeInference::TypeInference
   function visitGetCaughtException(SSAGetCaughtExceptionInstruction) in line 593
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   function visitInvoke(SSAInvokeInstruction) in line 532
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable BOTTOM defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
   function visitNew(SSANewInstruction) in line 550
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function getConcreteType() defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable cha defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function DeclaredTypeOperator(TypeAbstraction) defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses variable BOTTOM defined in com::ibm::wala::analysis::typeInference::TypeInference
   function visitPhi(SSAPhiInstruction) in line 598
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable phiOp defined in com::ibm::wala::analysis::typeInference::TypeInference
   function visitPi(SSAPiInstruction) in line 602
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable piOp defined in com::ibm::wala::analysis::typeInference::TypeInference
   function visitUnaryOp(SSAUnaryOpInstruction) in line 586
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses variable primitivePropagateOp defined in com::ibm::wala::analysis::typeInference::TypeInference
   variable result in line 494
module com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
   inherits from com::ibm::wala::fixedpoint::impl::AbstractVariable
   function copyState(IVariable) in line 646
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::TypeVariable
   function getType() in line 656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   function hashCode() in line 682
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setType(TypeAbstraction) in line 666
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   function toString() in line 673
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   function TypeVariable(TypeAbstraction,int) in line 641
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
      uses function hashCode() defined in com::ibm::wala::analysis::typeInference::TypeInference::DeclaredTypeOperator
   variable hash in line 639
   variable type in line 637
module com::ibm::wala::analysis::typeInference::TypeInference::TypeVarFactory
   inherits from com::ibm::wala::dataflow::ssa::SSAInference::VariableFactory
   function makeVariable(int) in line 690
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable ir defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses variable doPrimitives defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function isConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function isBooleanConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable BOOLEAN defined in com::ibm::wala::analysis::typeInference::PrimitiveType
      uses variable TOP defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/AbstractCFG.java
module com::ibm::wala::cfg::AbstractCFG
   inherits from com::ibm::wala::cfg::ControlFlowGraph
   inherits from com::ibm::wala::shrikeBT::Constants
   abstract class
   function addEdge(IBasicBlock,IBasicBlock) in line 406
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addExceptionalEdge(IBasicBlock,IBasicBlock) in line 464
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function set(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function addNode(IBasicBlock) in line 378
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::cfg::AbstractCFG
   function addNormalEdge(IBasicBlock,IBasicBlock) in line 450
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function set(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function containsNode(IBasicBlock) in line 495
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::cfg::AbstractCFG
   function entry() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
   function equals(Object) in line 111
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function exit() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCatchBlocks() in line 538
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable catchBlocks defined in com::ibm::wala::cfg::AbstractCFG
   function getExceptionalPredecessors(IBasicBlock) in line 613
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExceptionalSuccessors(IBasicBlock) in line 560
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function iterateExceptionalSuccessors(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
   function getExceptionalToExit() in line 600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
   function getMaxNumber() in line 382
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::cfg::AbstractCFG
   function getMethod() in line 542
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::cfg::AbstractCFG
   function getNode(int) in line 386
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::cfg::AbstractCFG
   function getNormalPredecessors(IBasicBlock) in line 622
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNormalSuccessors(IBasicBlock) in line 569
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function iterateNormalSuccessors(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
   function getNormalToExit() in line 604
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
   function getNumber(IBasicBlock) in line 390
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::cfg::AbstractCFG
   function getNumberOfExceptionalIn(IBasicBlock) in line 171
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
   function getNumberOfExceptionalOut(int) in line 205
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function getNumberOfExceptionalOut(IBasicBlock) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNumberOfExceptionalOut(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getNumberOfNodes() in line 394
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::cfg::AbstractCFG
   function getNumberOfNormalIn(IBasicBlock) in line 157
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function getNumberOfNormalOut(int) in line 190
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function getNumberOfNormalOut(IBasicBlock) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNumberOfNormalOut(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getPredNodeCount(IBasicBlock) in line 137
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function or(FixedSizeBitVector) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function populationCount() defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function getNumberOfNormalIn(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumberOfExceptionalIn(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getPredNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getPredNodeNumbers(IBasicBlock) in line 630
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(IBasicBlock) in line 221
      protection public
      38 lines of code
      1 parameters
      7 conditional paths
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumberOfNormalIn(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumberOfExceptionalIn(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
   function getSuccNodeCount(IBasicBlock) in line 260
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumberOfNormalOut(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumberOfExceptionalOut(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function slowCountSuccNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getSuccNodeNumbers(IBasicBlock) in line 640
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
   function getSuccNodes(IBasicBlock) in line 295
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function iterateNormalSuccessorsWithoutExit(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function iterateExceptionalSuccessors(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function iterateNormalSuccessors(int) defined in com::ibm::wala::cfg::AbstractCFG
   function hasEdge(IBasicBlock,IBasicBlock) in line 418
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function hasExceptionalEdge(IBasicBlock,IBasicBlock) in line 428
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function hashCode() in line 113
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasNormalEdge(IBasicBlock,IBasicBlock) in line 436
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
   function init() in line 104
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function getMaxNumber() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function equals(Object) defined in com::ibm::wala::cfg::AbstractCFG
      uses function hashCode() defined in com::ibm::wala::cfg::AbstractCFG
   function isCatchBlock(int) in line 529
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable catchBlocks defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
   function iterateExceptionalSuccessors(int) in line 304
      15 lines of code
      1 parameters
      7 conditional paths
      uses variable exceptionalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exceptionalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
   function iterateNodes() in line 398
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::cfg::AbstractCFG
   function iterateNodes(IntSet) in line 578
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterateNormalSuccessors(int) in line 351
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable normalToExit defined in com::ibm::wala::cfg::AbstractCFG
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function iterateNormalSuccessorsWithoutExit(int) in line 367
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable fallThru defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable normalEdgeManager defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
   function removeAllIncidentEdges(IBasicBlock) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(IBasicBlock,IBasicBlock) in line 410
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(IBasicBlock) in line 586
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNode(IBasicBlock) in line 486
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(IBasicBlock) in line 477
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(IBasicBlock) in line 595
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setCatchBlock(int) in line 521
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable catchBlocks defined in com::ibm::wala::cfg::AbstractCFG
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
   function slowCountSuccNodes(IBasicBlock) in line 291
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function toString() in line 502
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function AbstractCFG(IMethod) in line 95
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::cfg::AbstractCFG
   variable catchBlocks in line 85
   variable exceptionalEdgeManager in line 64
   variable exceptionalToExit in line 75
   variable exit in line 90
   variable fallThru in line 80
   variable method in line 48
   variable nodeManager in line 53
   variable normalEdgeManager in line 58
   variable normalToExit in line 70
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/cdg/BVControlDependenceGraph.java
module com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function buildCDG() in line 173
      76 lines of code
      0 parameters
      17 conditional paths
      uses variable count defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable exitnode defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable entryBlocks defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable seen defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable ignoreUnreachableCode defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable cfgCount defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable BitvectorSize defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable isz defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable bitvectors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable index defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function ClearVector(int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function SetBitInVector(int,int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function SetVector(int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function getSuccessors() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function intersect(int,int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function GetBit(int,int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable BitMasks defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function cdEdge(BasicBlock,BasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable item defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function postdominates(int,int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function buildParallelGraph() in line 131
      37 lines of code
      0 parameters
      6 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable bbMap defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable cfgCount defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function entry() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable entry defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable exitnode defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable entryBlocks defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable ignoreUnreachableCode defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function cfgEdge(BasicBlock,BasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function cdEdge(BasicBlock,BasicBlock,IBasicBlock) in line 353
      6 lines of code
      3 parameters
      2 conditional paths
      uses variable entry defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function linkCDpredecessor(BasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function linkCDsuccessor(BasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function cfgEdge(BasicBlock,BasicBlock) in line 348
      4 lines of code
      2 parameters
      1 conditional paths
      uses function linkPredecessor(BasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function linkSuccessor(BasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function ClearAllBits() in line 411
      3 lines of code
      0 parameters
      1 conditional paths
   function ClearVector(int) in line 360
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable BitvectorSize defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable bitvectors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function ClearAllBits() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function constructGraphEdges() in line 253
      63 lines of code
      0 parameters
      7 conditional paths
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable bbMap defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function getPredNodes() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getPredNodeCount() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodes() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodeCount() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function hasCDSuccessor(BasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeAllIncidentEdges(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeIncomingEdges(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeOutgoingEdges(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function count(BasicBlock) in line 334
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable mark defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses function getSuccessors() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses variable count defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable seen defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function GetBit(int,int) in line 407
      3 lines of code
      2 parameters
      1 conditional paths
   function getEdgeLabels(Object,Object) in line 105
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable bbMap defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function getLabels(BasicBlock) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function getEdgeManager() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function getNodeManager() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function getUnderlyingCFG() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function intersect(int,int) in line 378
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable isz defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable BitvectorSize defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable bitvectors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function SetBit(int,int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable BitMasks defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function postdominates(int,int) in line 393
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable isz defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function GetBit(int,int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable bitvectors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable BitMasks defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function SetAllBits() in line 415
      3 lines of code
      0 parameters
      1 conditional paths
   function SetBit(int,int) in line 399
      3 lines of code
      2 parameters
      1 conditional paths
   function SetBitInVector(int,int) in line 372
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable isz defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable bitvectors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function SetBit(int,int) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable BitMasks defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function SetVector(int) in line 366
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable BitvectorSize defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable bitvectors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function SetAllBits() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function toString() in line 317
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getEdgeLabels(Object,Object) defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function BVControlDependenceGraph(ControlFlowGraph) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   function BVControlDependenceGraph(ControlFlowGraph,boolean) in line 89
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses variable ignoreUnreachableCode defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function buildParallelGraph() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function buildCDG() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
      uses function constructGraphEdges() defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph
   variable bbMap in line 52
   variable BitMasks in line 68
   variable bitvectors in line 75
   variable BitvectorSize in line 73
   variable cfg in line 42
   variable cfgCount in line 64
   variable count in line 62
   variable edgeManager in line 48
   variable entry in line 56
   variable entryBlocks in line 58
   variable exitnode in line 60
   variable ignoreUnreachableCode in line 50
   variable isz in line 66
   variable seen in line 54
module com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function getLabels(BasicBlock) in line 517
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable labelMap defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses variable item defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function getPredNodeCount() in line 486
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cdPred defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function getPredNodes() in line 490
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cdPred defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function getSuccessors() in line 475
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable successors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function getSuccNodeCount() in line 509
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cdSucc defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function getSuccNodes() in line 513
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cdSucc defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function hasCDSuccessor(BasicBlock) in line 525
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable cdSucc defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses variable item defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function linkCDpredecessor(BasicBlock) in line 479
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable cdPred defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses variable item defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function linkCDsuccessor(BasicBlock,IBasicBlock) in line 494
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable cdSucc defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses variable item defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
      uses variable labelMap defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function linkPredecessor(BasicBlock) in line 445
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable predecessors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function linkSuccessor(BasicBlock) in line 461
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable successors defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function toString() in line 441
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable item defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   function BasicBlock(IBasicBlock) in line 437
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable item defined in com::ibm::wala::cfg::cdg::BVControlDependenceGraph::BasicBlock
   variable cdPred in line 431
   variable cdSucc in line 433
   variable index in line 425
   variable item in line 421
   variable labelMap in line 435
   variable mark in line 423
   variable predecessors in line 427
   variable successors in line 429
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/cdg/ControlDependenceGraph.java
module com::ibm::wala::cfg::cdg::ControlDependenceGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function buildControlDependence(boolean) in line 66
      33 lines of code
      1 parameters
      8 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable edgeLabels defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function constructGraphEdges(final Map< IBasicBlock, Set< IBasicBlock >>) in line 105
      70 lines of code
      1 parameters
      8 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeAllIncidentEdges(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeIncomingEdges(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function removeOutgoingEdges(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function controlEquivalent(IBasicBlock,IBasicBlock) in line 240
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
   function getEdgeLabels(Object,Object) in line 222
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable edgeLabels defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
   function getEdgeManager() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
   function getNodeManager() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
   function getUnderlyingCFG() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
   function toString() in line 176
      protection public
      17 lines of code
      0 parameters
      5 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable edgeLabels defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
   function ControlDependenceGraph(ControlFlowGraph,boolean) in line 200
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
      uses function constructGraphEdges(final Map< IBasicBlock, Set< IBasicBlock >>) defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
      uses function buildControlDependence(boolean) defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
   function ControlDependenceGraph(ControlFlowGraph) in line 209
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::cfg::cdg::ControlDependenceGraph
   variable cfg in line 43
   variable edgeLabels in line 57
   variable edgeManager in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/CFGCache.java
module com::ibm::wala::cfg::CFGCache
   function findOrCreate(IMethod,Context,ClassHierarchy,WarningSet) in line 69
      protection public
      20 lines of code
      4 parameters
      3 conditional paths
      uses function isAbstract() defined in com::ibm::wala::classLoader::IMethod
      uses function isNative() defined in com::ibm::wala::classLoader::IMethod
      uses function processResetLogic(IMethod) defined in com::ibm::wala::cfg::CFGCache
      uses variable dictionary defined in com::ibm::wala::cfg::CFGCache
      uses variable factory defined in com::ibm::wala::cfg::CFGCache
      uses function makeCFG(IMethod,Context,ClassHierarchy,WarningSet) defined in com::ibm::wala::ssa::IRFactory
   function invalidate(IMethod,Context) in line 127
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable dictionary defined in com::ibm::wala::cfg::CFGCache
   function processResetLogic(IMethod) in line 90
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable resetCount defined in com::ibm::wala::cfg::CFGCache
      uses variable RESET_INTERVAL defined in com::ibm::wala::cfg::CFGCache
      uses function reset() defined in com::ibm::wala::cfg::CFGCache
   function reset() in line 107
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable resetCount defined in com::ibm::wala::cfg::CFGCache
      uses variable dictionary defined in com::ibm::wala::cfg::CFGCache
   function wipe() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dictionary defined in com::ibm::wala::cfg::CFGCache
   function CFGCache(IRFactory) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in com::ibm::wala::cfg::CFGCache
   variable dictionary in line 45
   variable factory in line 55
   variable RESET_INTERVAL in line 40
   variable resetCount in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/CFGSanitizer.java
module com::ibm::wala::cfg::CFGSanitizer
   function computeExceptions(ClassHierarchy,SSAInstruction) in line 142
      19 lines of code
      2 parameters
      4 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getExceptionTypes() defined in com::ibm::wala::ssa::SSAInstruction
   function sanitize(IR,ClassHierarchy) in line 42
      protection public
      99 lines of code
      2 parameters
      24 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function addNode(T) defined in com::ibm::wala::util::graph::NodeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function isExitBlock() defined in com::ibm::wala::cfg::IBasicBlock
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses function computeExceptions(ClassHierarchy,SSAInstruction) defined in com::ibm::wala::cfg::CFGSanitizer
      uses function isCatchBlock() defined in com::ibm::wala::cfg::IBasicBlock
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/ControlFlowGraph.java
module com::ibm::wala::cfg::ControlFlowGraph
   inherits from com::ibm::wala::util::graph::NumberedGraph
   function entry() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function exit() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBlockForInstruction(int) in line 48
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCatchBlocks() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getExceptionalPredecessors(IBasicBlock) in line 92
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getExceptionalSuccessors(IBasicBlock) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getInstructions() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethod() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNormalPredecessors(IBasicBlock) in line 101
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNormalSuccessors(IBasicBlock) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getProgramCounter(int) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/IBasicBlock.java
module com::ibm::wala::cfg::IBasicBlock
   inherits from com::ibm::wala::util::graph::INodeWithNumber
   function getFirstInstructionIndex() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLastInstructionIndex() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethod() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumber() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isCatchBlock() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isEntryBlock() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isExitBlock() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iterateAllInstructions() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/InducedCFG.java
module com::ibm::wala::cfg::InducedCFG
   inherits from com::ibm::wala::cfg::AbstractCFG
   function computeEdges() in line 108
      8 lines of code
      0 parameters
      3 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function equals(Object) defined in com::ibm::wala::cfg::InducedCFG::BasicBlock
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function computeOutgoingEdges() defined in com::ibm::wala::cfg::InducedCFG::BasicBlock
   function equals(Object) in line 95
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable context defined in com::ibm::wala::cfg::InducedCFG
   function getBlockForInstruction(int) in line 292
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable i2block defined in com::ibm::wala::cfg::InducedCFG
   function getExceptionHandlers() in line 304
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getInstructions() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::cfg::InducedCFG
   function getProgramCounter(int) in line 515
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
   function hashCode() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::ibm::wala::cfg::InducedCFG
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
   function makeBasicBlocks() in line 136
      38 lines of code
      0 parameters
      7 conditional paths
      uses variable instructions defined in com::ibm::wala::cfg::InducedCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
      uses function makeBranchVisitor(boolean[]) defined in com::ibm::wala::cfg::InducedCFG
      uses function makePEIVisitor(boolean[]) defined in com::ibm::wala::cfg::InducedCFG
      uses function addNode(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable DEBUG defined in com::ibm::wala::cfg::InducedCFG
      uses variable i2block defined in com::ibm::wala::cfg::InducedCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function makeBranchVisitor(boolean[]) in line 125
      3 lines of code
      1 parameters
      1 conditional paths
   function makeEmptyBlocks() in line 120
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addNode(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function makePEIVisitor(boolean[]) in line 129
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 492
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::InducedCFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::InducedCFG::BasicBlock
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function InducedCFG(SSAInstruction[],IMethod,Context) in line 65
      protection public
      25 lines of code
      3 parameters
      5 conditional paths
      uses variable method defined in com::ibm::wala::cfg::AbstractCFG
      uses variable context defined in com::ibm::wala::cfg::InducedCFG
      uses variable instructions defined in com::ibm::wala::cfg::InducedCFG
      uses variable DEBUG defined in com::ibm::wala::cfg::InducedCFG
      uses variable i2block defined in com::ibm::wala::cfg::InducedCFG
      uses function makeEmptyBlocks() defined in com::ibm::wala::cfg::InducedCFG
      uses function makeBasicBlocks() defined in com::ibm::wala::cfg::InducedCFG
      uses function init() defined in com::ibm::wala::cfg::AbstractCFG
      uses function computeEdges() defined in com::ibm::wala::cfg::InducedCFG
   variable context in line 56
   variable DEBUG in line 50
   variable i2block in line 54
   variable instructions in line 58
module com::ibm::wala::cfg::InducedCFG::BranchVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function breakBasicBlock() in line 220
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
      uses variable r defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitConditionalBranch(SSAConditionalBranchInstruction) in line 198
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitGoto(SSAGotoInstruction) in line 193
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitReturn(SSAReturnInstruction) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitSwitch(SSASwitchInstruction) in line 203
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
      uses function getTargets() defined in com::ibm::wala::ssa::SSASwitchInstruction
      uses variable r defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitThrow(SSAThrowInstruction) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function BranchVisitor(boolean[]) in line 184
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable r defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   variable r in line 182
module com::ibm::wala::cfg::InducedCFG::PEIVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function breakBasicBlock() in line 240
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
      uses variable r defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitArrayLength(SSAArrayLengthInstruction) in line 246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitArrayLoad(SSAArrayLoadInstruction) in line 250
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitArrayStore(SSAArrayStoreInstruction) in line 254
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitCheckCast(SSACheckCastInstruction) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitGet(SSAGetInstruction) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitInvoke(SSAInvokeInstruction) in line 266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitMonitor(SSAMonitorInstruction) in line 270
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitNew(SSANewInstruction) in line 274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitPut(SSAPutInstruction) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function visitThrow(com.ibm.wala.ssa.SSAThrowInstruction) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function breakBasicBlock() defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   function PEIVisitor(boolean[]) in line 231
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable r defined in com::ibm::wala::cfg::InducedCFG::BranchVisitor
   variable r in line 229
module com::ibm::wala::cfg::InducedCFG::BasicBlock
   inherits from com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::cfg::IBasicBlock
   function addExceptionalEdges(SSAInstruction) in line 339
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isPEI() defined in com::ibm::wala::ssa::SSAInstruction
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function addExceptionalEdgeTo(BasicBlock) in line 357
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addExceptionalEdge(IBasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function addNormalEdgeTo(BasicBlock) in line 350
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addNormalEdge(IBasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function computeOutgoingEdges() in line 364
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable DEBUG defined in com::ibm::wala::cfg::InducedCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function endsInPEI() in line 467
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
      uses function isPEI() defined in com::ibm::wala::shrikeBT::IInstruction
   function endsInReturn() in line 471
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
   function equals(Object) in line 318
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::cfg::InducedCFG
      uses variable start defined in com::ibm::wala::cfg::InducedCFG::BasicBlock
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getMethod() defined in com::ibm::wala::cfg::InducedCFG::BasicBlock
   function getFirstInstructionIndex() in line 395
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLastInstructionIndex() in line 404
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::InducedCFG::BasicBlock
   function getMethod() in line 463
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
   function getNumber() in line 480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function hashCode() in line 429
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
   function isCatchBlock() in line 424
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isEntryBlock() in line 454
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function isExitBlock() in line 445
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateAllInstructions() in line 484
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::InducedCFG
   function toString() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getSignature() defined in com::ibm::wala::classLoader::IMethod
   variable start in line 326
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/ShrikeCFG.java
module com::ibm::wala::cfg::ShrikeCFG
   inherits from com::ibm::wala::cfg::AbstractCFG
   function computeEdges() in line 118
      12 lines of code
      0 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function equals(Object) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function entry() defined in com::ibm::wala::cfg::AbstractCFG
      uses function addNormalEdge(IBasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ShrikeCFG
      uses function computeOutgoingEdges() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function computeI2BMapping() in line 105
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable instruction2Block defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function equals(Object) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
   function getBlockForInstruction(int) in line 215
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable instruction2Block defined in com::ibm::wala::cfg::ShrikeCFG
   function getExceptionHandlers() in line 540
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionHandlers defined in com::ibm::wala::cfg::ShrikeCFG
   function getInstructions() in line 91
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getInstructions() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getMaxLocals() in line 531
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getMaxLocals() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   function getMaxStackHeight() in line 522
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getMaxStackHeight() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   function getProgramCounter(int) in line 549
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getBytecodeIndex(int) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function hashCode() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
   function makeBasicBlocks() in line 134
      76 lines of code
      0 parameters
      15 conditional paths
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getHandlers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getInstructions() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable exceptionHandlers defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getHandler() defined in com::ibm::wala::shrikeBT::ExceptionHandler
      uses function entry() defined in com::ibm::wala::cfg::AbstractCFG
      uses function addNode(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function setCatchBlock(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function toString() in line 500
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function BasicBlock(int) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getInstructions() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function ShrikeCFG(ShrikeCTMethodWrapper,WarningSet,ClassHierarchy) in line 71
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function hashCode() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable warnings defined in com::ibm::wala::cfg::ShrikeCFG
      uses variable cha defined in com::ibm::wala::cfg::ShrikeCFG
      uses function makeBasicBlocks() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function init() defined in com::ibm::wala::cfg::AbstractCFG
      uses function computeI2BMapping() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function computeEdges() defined in com::ibm::wala::cfg::ShrikeCFG
   variable cha in line 54
   variable DEBUG in line 48
   variable exceptionHandlers in line 66
   variable hashBase in line 61
   variable instruction2Block in line 50
   variable method in line 56
   variable warnings in line 52
module com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   inherits from com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::cfg::IBasicBlock
   function addExceptionalEdges(Instruction) in line 267
      102 lines of code
      1 parameters
      19 conditional paths
      uses function getExceptionHandlers() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getOpcode() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable OP_athrow defined in com::ibm::wala::shrikeBT::Constants
      uses function getMethod() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses variable cha defined in com::ibm::wala::cfg::ShrikeCFG
      uses variable warnings defined in com::ibm::wala::cfg::ShrikeCFG
      uses variable DEBUG defined in com::ibm::wala::cfg::ShrikeCFG
      uses function BasicBlock(int) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ShrikeCFG
      uses function addExceptionalEdgeTo(BasicBlock) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeReference) defined in com::ibm::wala::cfg::ShrikeCFG::FailedExceptionResolutionWarning
      uses function isSubclassOf(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function addExceptionalEdgeTo(BasicBlock) in line 404
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addExceptionalEdge(IBasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function addNormalEdgeTo(BasicBlock) in line 397
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addNormalEdge(IBasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function computeOutgoingEdges() in line 237
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable DEBUG defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function BasicBlock(int) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ShrikeCFG
      uses function addNormalEdgeTo(BasicBlock) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function addExceptionalEdges(Instruction) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function equals(Object) in line 478
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function BasicBlock(int) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getMethod() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function getExceptionHandlers() in line 370
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getHandlers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function getFirstInstructionIndex() in line 431
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startIndex defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function getLastInstructionIndex() in line 413
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function entry() defined in com::ibm::wala::cfg::AbstractCFG
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getMaxNumber() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function BasicBlock(int) defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function getMethod() in line 465
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
   function getNumber() in line 488
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::impl::NodeWithNumber
   function hashCode() in line 474
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hashBase defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function isCatchBlock() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isCatchBlock(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function isEntryBlock() in line 456
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function entry() defined in com::ibm::wala::cfg::AbstractCFG
   function isExitBlock() in line 447
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function exit() defined in com::ibm::wala::cfg::AbstractCFG
   function iterateAllInstructions() in line 492
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   function toString() in line 438
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses variable method defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function BasicBlock(int) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable startIndex defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
   variable startIndex in line 224
module com::ibm::wala::cfg::ShrikeCFG::FailedExceptionResolutionWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeReference) in line 577
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 573
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/TwoExitCFG.java
module com::ibm::wala::cfg::TwoExitCFG
   inherits from com::ibm::wala::cfg::ControlFlowGraph
   function addEdge(IBasicBlock,IBasicBlock) in line 350
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addNode(IBasicBlock) in line 247
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function computeEdges(ControlFlowGraph) in line 100
      28 lines of code
      1 parameters
      7 conditional paths
      uses variable normalPred defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getMaxNumber() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable exceptionalPred defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getMaxNumber() defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getInstructions() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses function isPEI() defined in com::ibm::wala::shrikeBT::IInstruction
      uses function set(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
   function containsNode(IBasicBlock) in line 266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function containsNode(T) defined in com::ibm::wala::util::graph::NodeManager
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
   function ensureEdgesReady() in line 90
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable edgesAreComputed defined in com::ibm::wala::cfg::TwoExitCFG
      uses function computeEdges(ControlFlowGraph) defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
   function entry() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function entry() defined in com::ibm::wala::cfg::ControlFlowGraph
   function exit() in line 143
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getBlockForInstruction(int) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ControlFlowGraph
   function getCatchBlocks() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getCatchBlocks() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getDelegate() in line 693
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
   function getExceptionalExit() in line 624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
   function getExceptionalPredecessors(IBasicBlock) in line 668
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getExceptionalSuccessors(IBasicBlock) in line 580
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getSuccNodeCount(IBasicBlock) defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getExceptionalSuccessors(IBasicBlock) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getInstructions() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getMaxNumber() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getMaxNumber() defined in com::ibm::wala::util::graph::NumberedNodeManager
   function getMethod() in line 528
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getMethod() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getNode(int) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMaxNumber() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getNode(int) defined in com::ibm::wala::util::graph::NumberedNodeManager
   function getNormalExit() in line 617
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getNormalPredecessors(IBasicBlock) in line 673
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getNormalSuccessors(IBasicBlock) in line 606
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getNormalSuccessors(IBasicBlock) defined in com::ibm::wala::cfg::ControlFlowGraph
   function getNumber(IBasicBlock) in line 198
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getMaxNumber() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getNumber(T) defined in com::ibm::wala::util::graph::NumberedNodeManager
   function getNumberOfNodes() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
   function getPredNodeCount(IBasicBlock) in line 290
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function ensureEdgesReady() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable normalPred defined in com::ibm::wala::cfg::TwoExitCFG
      uses function populationCount() defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable exceptionalPred defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
   function getPredNodeNumbers(IBasicBlock) in line 684
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(IBasicBlock) in line 275
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getExceptionalPredecessors(IBasicBlock) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getNormalPredecessors(IBasicBlock) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function getProgramCounter(int) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getProgramCounter(int) defined in com::ibm::wala::cfg::ControlFlowGraph
   function getSuccNodeCount(IBasicBlock) in line 330
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses function ensureEdgesReady() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable exceptionalPred defined in com::ibm::wala::cfg::TwoExitCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable normalPred defined in com::ibm::wala::cfg::TwoExitCFG
   function getSuccNodeNumbers(IBasicBlock) in line 678
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(IBasicBlock) in line 306
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function ensureEdgesReady() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable exceptionalPred defined in com::ibm::wala::cfg::TwoExitCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable normalPred defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function hasEdge(IBasicBlock,IBasicBlock) in line 362
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function iterateNodes() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
   function iterateNodes(IntSet) in line 644
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeAllIncidentEdges(IBasicBlock) in line 372
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(IBasicBlock,IBasicBlock) in line 354
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(IBasicBlock) in line 652
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeNode(IBasicBlock) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(IBasicBlock) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(IBasicBlock) in line 662
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 633
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
   function TwoExitCFG(ControlFlowGraph) in line 82
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getNumber(T) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
   variable delegate in line 51
   variable delegateExitNumber in line 71
   variable edgesAreComputed in line 76
   variable exceptionalExit in line 56
   variable exceptionalPred in line 66
   variable normalPred in line 61
module com::ibm::wala::cfg::TwoExitCFG::ExceptionalExitBlock
   inherits from com::ibm::wala::ssa::ISSABasicBlock
   function equals(Object) in line 468
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getDelegate() defined in com::ibm::wala::cfg::TwoExitCFG::ExceptionalExitBlock
   function getDelegate() in line 384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
   function getFirstInstructionIndex() in line 393
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getGraphNodeId() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getLastInstruction() in line 516
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getLastInstructionIndex() in line 403
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethod() in line 440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getMethod() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getNumber() in line 500
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMaxNumber() defined in com::ibm::wala::cfg::TwoExitCFG
   function hashCode() in line 482
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::cfg::TwoExitCFG
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
   function isCatchBlock() in line 412
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isEntryBlock() in line 431
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExitBlock() in line 422
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateAllInstructions() in line 512
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iteratePhis() in line 504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iteratePis() in line 508
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setGraphNodeId(int) in line 459
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 491
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::TwoExitCFG::ExceptionalExitBlock
module com::ibm::wala::cfg::TwoExitCFG::SubstitutionIterator
   inherits from java::util::Iterator
   function hasNext() in line 556
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 565
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable delegateExitNumber defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable exceptionalExit defined in com::ibm::wala::cfg::TwoExitCFG
   function remove() in line 547
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable it in line 536
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/cfg/Util.java
module com::ibm::wala::cfg::Util
   function endsWithConditionalBranch(ControlFlowGraph,IBasicBlock) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getLastInstruction(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
   function endsWithSwitch(ControlFlowGraph,IBasicBlock) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getLastInstruction(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
   function getConditionalBranch(ControlFlowGraph,IBasicBlock) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getLastInstruction(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
   function getFallThruBlock(ControlFlowGraph,IBasicBlock) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
   function getFalseSuccessor(ControlFlowGraph,IBasicBlock) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getFallThruBlock(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
   function getLastInstruction(ControlFlowGraph,IBasicBlock) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
   function getSwitch(ControlFlowGraph,IBasicBlock) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getLastInstruction(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
   function getTrueSuccessor(ControlFlowGraph,IBasicBlock) in line 51
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getFalseSuccessor(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function resolveBranch(ControlFlowGraph,IBasicBlock,int,int) in line 73
      protection public
      38 lines of code
      4 parameters
      13 conditional paths
      uses function getConditionalBranch(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
      uses function getOperator() defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses function getTrueSuccessor(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
      uses function getFalseSuccessor(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
   function resolveSwitch(ControlFlowGraph,IBasicBlock,int) in line 63
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses function getSwitch(ControlFlowGraph,IBasicBlock) defined in com::ibm::wala::cfg::Util
      uses function getCasesAndLabels() defined in com::ibm::wala::ssa::SSASwitchInstruction
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getDefault() defined in com::ibm::wala::ssa::SSASwitchInstruction
   function whichPred(ControlFlowGraph,IBasicBlock,IBasicBlock) in line 118
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/Util.java
module com::ibm::wala::ipa::callgraph::impl::Util
   function addBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,String,ClassHierarchy) in line 138
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getSummaries() defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function getIgnoredPackages() defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function setSelector(MethodTargetSelector) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatableClasses() defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function getLoader(ClassLoaderReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) in line 750
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,String,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses variable benignSpec defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses variable nativeSpec defined in com::ibm::wala::ipa::callgraph::impl::Util
   function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) in line 77
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function setSelector(MethodTargetSelector) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function areEqual(Graph< T >,Graph< T >) in line 85
      protection public
      22 lines of code
      2 parameters
      6 conditional paths
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function setify(Iterator<?extends T >) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function iterateNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function checkGraphSubset(Graph< T >,Graph< T >) in line 450
      protection public
      40 lines of code
      2 parameters
      7 conditional paths
      uses function setify(Iterator<?extends T >) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function iterateNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function computeDarkEntrypointNodes(final CallGraph,final Collection) in line 155
      protection public
      31 lines of code
      2 parameters
      4 conditional paths
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::CallGraph
   function isSubset(Graph< T >,Graph< T >) in line 111
      protection public
      22 lines of code
      2 parameters
      6 conditional paths
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function setify(Iterator<?extends T >) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function iterateNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function makeMainEntrypoints(AnalysisScope,ClassHierarchy) in line 192
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function iterator() defined in com::ibm::wala::ipa::callgraph::Entrypoints
   function makeMainEntrypoints(AnalysisScope,final ClassHierarchy,String) in line 216
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function makeMainEntrypoints(AnalysisScope,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
   function makeMainEntrypoints(final AnalysisScope,final ClassHierarchy,final String[]) in line 220
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function makeMainEntrypoints(AnalysisScope,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function makeMainEntrypoints(final ClassLoaderReference,final ClassHierarchy,final String[]) in line 227
      protection public
      35 lines of code
      3 parameters
      4 conditional paths
   function makeOneCFABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,WarningSet) in line 565
      protection public
      11 lines of code
      5 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function makeRTABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 503
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
   function makeVanillaZeroOneCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,ContextSelector,SSAContextInterpreter) in line 613
      protection public
      9 lines of code
      6 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function makeVanillaZeroOneCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 638
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function makeVanillaZeroOneCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,ContextSelector,SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::impl::Util
   function makeVanillaZeroOneContainerCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 734
      protection public
      15 lines of code
      4 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function makeZeroCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 523
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function makeZeroCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,ContextSelector,SSAContextInterpreter) in line 542
      protection public
      9 lines of code
      6 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable NONE defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function makeZeroContainerCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 684
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function makeZeroOneCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 592
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function makeZeroOneCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,ContextSelector,SSAContextInterpreter) in line 659
      protection public
      10 lines of code
      6 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_MANY defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_PRIMITIVE_HOLDERS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_STRINGS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_THROWABLES defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function makeZeroOneContainerCFABuilder(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet) in line 709
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
      uses function addDefaultSelectors(AnalysisOptions,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function addDefaultBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::impl::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setify(Iterator<?extends T >) in line 438
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function squashCallGraph(final String,final CallGraph) in line 269
      protection public
      168 lines of code
      2 parameters
      8 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getNodes(MethodReference) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   variable benignSpec in line 67
   variable nativeSpec in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/util/Util.java
module com::ibm::wala::j2ee::util::Util
   function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) in line 325
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable benignExtSpec defined in com::ibm::wala::j2ee::util::Util
   function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) in line 284
      protection public
      10 lines of code
      6 parameters
      1 conditional paths
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function setSelector(MethodTargetSelector) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getCMRFields(BeanMetaData,DeploymentMetaData,ClassHierarchy) in line 301
      protection public
      21 lines of code
      3 parameters
      5 conditional paths
      uses function getEJBClass() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getBeanMetaData(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getCMRFields() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function makeOneCFABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,DeploymentMetaData,WarningSet) in line 128
      protection public
      17 lines of code
      6 parameters
      2 conditional paths
      uses function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::j2ee::util::Util
      uses function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) defined in com::ibm::wala::j2ee::util::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function makeRTABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,DeploymentMetaData,WarningSet) in line 63
      protection public
      16 lines of code
      6 parameters
      2 conditional paths
      uses function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::j2ee::util::Util
      uses function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) defined in com::ibm::wala::j2ee::util::Util
   function makeZeroCFABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,DeploymentMetaData,WarningSet) in line 95
      protection public
      17 lines of code
      6 parameters
      2 conditional paths
      uses function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::j2ee::util::Util
      uses function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) defined in com::ibm::wala::j2ee::util::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable NONE defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function makeZeroContainerCFABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,DeploymentMetaData,WarningSet) in line 234
      protection public
      16 lines of code
      6 parameters
      2 conditional paths
      uses function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::j2ee::util::Util
      uses function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) defined in com::ibm::wala::j2ee::util::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function makeZeroOneCFABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,DeploymentMetaData,WarningSet) in line 164
      protection public
      18 lines of code
      6 parameters
      2 conditional paths
      uses function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::j2ee::util::Util
      uses function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) defined in com::ibm::wala::j2ee::util::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_MANY defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_PRIMITIVE_HOLDERS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_STRINGS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_THROWABLES defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function makeZeroOneContainerCFABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,DeploymentMetaData,WarningSet) in line 267
      protection public
      16 lines of code
      6 parameters
      2 conditional paths
      uses function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::j2ee::util::Util
      uses function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) defined in com::ibm::wala::j2ee::util::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function makeZeroOneUnoptCFABuilder(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,DeploymentMetaData,WarningSet) in line 200
      protection public
      17 lines of code
      6 parameters
      2 conditional paths
      uses function addDefaultJ2EEBypassLogic(AnalysisOptions,AnalysisScope,ClassLoader,ClassHierarchy) defined in com::ibm::wala::j2ee::util::Util
      uses function addJ2EEBypassLogic(AnalysisOptions,AnalysisScope,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) defined in com::ibm::wala::j2ee::util::Util
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   variable benignExtSpec in line 323
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/Util.java
module com::ibm::wala::shrikeBT::Util
   function addAlias(String,String) in line 151
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable typeAliases defined in com::ibm::wala::shrikeBT::Util
      uses variable classAliases defined in com::ibm::wala::shrikeBT::Util
   function computeSignature(Class[],Class) in line 324
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function makeType(String) defined in com::ibm::wala::shrikeBT::Util
   function error(String) in line 316
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function findMethod(Class,String) in line 382
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function findMethod(Class,String,Class[]) in line 386
      protection public
      14 lines of code
      3 parameters
      4 conditional paths
      uses function makeName(String,Class[]) defined in com::ibm::wala::shrikeBT::Util
   function getParamsCount(String) in line 187
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getTypeLength(String,int) defined in com::ibm::wala::shrikeBT::Util
   function getParamsTypes(String,String) in line 206
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses function getParamsCount(String) defined in com::ibm::wala::shrikeBT::Util
      uses function getTypeLength(String,int) defined in com::ibm::wala::shrikeBT::Util
   function getParamsTypesInLocals(String,String) in line 230
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getParamsWordSize(String) defined in com::ibm::wala::shrikeBT::Util
      uses function getTypeLength(String,int) defined in com::ibm::wala::shrikeBT::Util
      uses function getStackType(String) defined in com::ibm::wala::shrikeBT::Util
      uses function getWordSize(String) defined in com::ibm::wala::shrikeBT::Util
   function getParamsWordSize(String) in line 80
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getWordSize(String) defined in com::ibm::wala::shrikeBT::Util
      uses function getTypeLength(String,int) defined in com::ibm::wala::shrikeBT::Util
   function getReturnType(String) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStackType(String) in line 254
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
   function getTypeLength(String,int) in line 64
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function getWordSize(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getWordSize(String,int) in line 48
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
   function isArrayType(String) in line 276
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function isPrimitiveType(String) in line 292
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
   function makeArray(String) in line 269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeClass(String) in line 125
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function makeClassAll(String) in line 139
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable classAliases defined in com::ibm::wala::shrikeBT::Util
      uses function makeClass(String) defined in com::ibm::wala::shrikeBT::Util
   function makeGet(Class,String) in line 339
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function makeType(String) defined in com::ibm::wala::shrikeBT::Util
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeBT::Constants
   function makeInvoke(Class,String,Class[]) in line 406
      protection public
      33 lines of code
      3 parameters
      9 conditional paths
      uses function makeName(String,Class[]) defined in com::ibm::wala::shrikeBT::Util
      uses function computeSignature(Class[],Class) defined in com::ibm::wala::shrikeBT::Util
      uses function makeType(String) defined in com::ibm::wala::shrikeBT::Util
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function findMethod(Class,String) defined in com::ibm::wala::shrikeBT::Util
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeBT::Constants
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function makeInvoke(Class,String) in line 445
      protection public
      3 lines of code
      2 parameters
      6 conditional paths
      uses function makeInvoke(Class,String,Class[]) defined in com::ibm::wala::shrikeBT::Util
      uses variable typeIndices defined in com::ibm::wala::shrikeBT::Util
   function makeName(String,Class[]) in line 365
      16 lines of code
      2 parameters
      4 conditional paths
   function makePut(Class,String) in line 354
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function makeType(String) defined in com::ibm::wala::shrikeBT::Util
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeBT::Constants
   function makeType(String) in line 98
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function makeType(Class) in line 173
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable typeAliases defined in com::ibm::wala::shrikeBT::Util
      uses function makeType(String) defined in com::ibm::wala::shrikeBT::Util
   function makeTypeAll(String) in line 113
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable typeAliases defined in com::ibm::wala::shrikeBT::Util
      uses function makeType(String) defined in com::ibm::wala::shrikeBT::Util
   function makeTypeIndices() in line 482
      18 lines of code
      0 parameters
      2 conditional paths
   function readFully(InputStream,byte[]) in line 501
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function readFully(InputStream) in line 512
      protection public
      28 lines of code
      1 parameters
      5 conditional paths
      uses function readFully(InputStream,byte[]) defined in com::ibm::wala::shrikeBT::Util
   function Util() in line 33
      3 lines of code
      0 parameters
      1 conditional paths
   variable classAliases in line 148
   variable typeAliases in line 149
   variable typeIndices in line 480
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/AbstractURLModule.java
module com::ibm::wala::classLoader::AbstractURLModule
   inherits from com::ibm::wala::classLoader::Module
   inherits from com::ibm::wala::classLoader::ModuleEntry
   abstract class
   function asModule() in line 62
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 67
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getEntries() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInputStream() in line 49
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable url defined in com::ibm::wala::classLoader::AbstractURLModule
   function getName() in line 36
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable url defined in com::ibm::wala::classLoader::AbstractURLModule
   function getURL() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in com::ibm::wala::classLoader::AbstractURLModule
   function isModuleFile() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractURLModule(URL) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable url defined in com::ibm::wala::classLoader::AbstractURLModule
   variable url in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ArrayClass.java
module com::ibm::wala::classLoader::ArrayClass
   inherits from com::ibm::wala::classLoader::IClass
   inherits from com::ibm::wala::shrikeBT::Constants
   function equals(Object) in line 312
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ArrayClass
      uses variable type defined in com::ibm::wala::classLoader::ArrayClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
   function getAllAncestorInterfaces() in line 266
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllFields() in line 350
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllImplementedInterfaces() in line 254
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ArrayClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses variable array_interfaces defined in com::ibm::wala::types::TypeReference
   function getAllInstanceFields() in line 326
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllMethods() in line 342
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllStaticFields() in line 334
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getClassInitializer() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassLoader() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ArrayClass
   function getDeclaredInstanceFields() in line 234
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredMethods() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredStaticFields() in line 244
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getDimensionality() in line 280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getDimensionality() defined in com::ibm::wala::types::TypeReference
   function getDirectInterfaces() in line 301
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getElementClass() in line 217
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses variable loader defined in com::ibm::wala::classLoader::ArrayClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getField(Atom) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSuperclass() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getField(Atom) defined in com::ibm::wala::classLoader::IClass
   function getInnermostElementClass() in line 288
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getInnermostElementType() defined in com::ibm::wala::types::TypeReference
      uses variable loader defined in com::ibm::wala::classLoader::ArrayClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getMethod(Selector) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ArrayClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getModifiers() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ACC_PUBLIC defined in com::ibm::wala::shrikeBT::Constants
      uses variable ACC_FINAL defined in com::ibm::wala::shrikeBT::Constants
   function getName() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getNumberOfDeclaredMethods() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getQualifiedNameForReflection() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::classLoader::ArrayClass
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
   function getReference() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::classLoader::ArrayClass
   function getSourceFileName() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSuperclass() in line 116
      protection public
      25 lines of code
      0 parameters
      3 conditional paths
      uses function getElementClass() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getReference() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable loader defined in com::ibm::wala::classLoader::ArrayClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
   function hashCode() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::classLoader::ArrayClass
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
   function isAbstract() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isArrayClass() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInterface() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReferenceType() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ArrayClass
      uses function toString() defined in com::ibm::wala::types::TypeReference
   variable loader in line 60
   variable type in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ArrayClassLoader.java
module com::ibm::wala::classLoader::ArrayClassLoader
   function getRootClassLoader(IClassLoader) in line 69
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getParent() defined in com::ibm::wala::classLoader::IClassLoader
   function lookupClass(TypeName,IClassLoader) in line 41
      protection public
      27 lines of code
      2 parameters
      6 conditional paths
      uses variable DEBUG defined in com::ibm::wala::classLoader::ArrayClassLoader
      uses function toString() defined in com::ibm::wala::types::TypeName
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses variable arrayClasses defined in com::ibm::wala::classLoader::ArrayClassLoader
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function getRootClassLoader(IClassLoader) defined in com::ibm::wala::classLoader::ArrayClassLoader
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
   variable arrayClasses in line 33
   variable DEBUG in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/BinaryDirectoryTreeModule.java
module com::ibm::wala::classLoader::BinaryDirectoryTreeModule
   inherits from com::ibm::wala::classLoader::DirectoryTreeModule
   function includeFile(File) in line 21
      3 lines of code
      1 parameters
      1 conditional paths
   function makeFile(File) in line 25
      3 lines of code
      1 parameters
      1 conditional paths
   function BinaryDirectoryTreeModule(File) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in com::ibm::wala::classLoader::DirectoryTreeModule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/CallSiteReference.java
module com::ibm::wala::classLoader::CallSiteReference
   inherits from com::ibm::wala::classLoader::ProgramCounter
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   inherits from com::ibm::wala::ipa::callgraph::ContextItem
   abstract class
   function getDeclaredTarget() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredTarget defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
   function getInvocationCode() in line 118
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInvocationString(IInvokeInstruction.IDispatch) in line 133
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function getInvocationString() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
   function isDispatch() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isVirtual() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function isInterface() defined in com::ibm::wala::classLoader::CallSiteReference
   function isFixed() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function isSpecial() defined in com::ibm::wala::classLoader::CallSiteReference
   function isInterface() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function isSpecial() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function isStatic() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function isVirtual() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function make(int,MethodReference,IInvokeInstruction.IDispatch) in line 90
      protection public
      15 lines of code
      3 parameters
      5 conditional paths
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable declaredTarget defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function toString() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvocationString() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable declaredTarget defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function CallSiteReference(int,MethodReference) in line 34
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable declaredTarget defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   variable declaredTarget in line 28
module com::ibm::wala::classLoader::CallSiteReference::StaticCall
   inherits from com::ibm::wala::classLoader::CallSiteReference
   function getInvocationCode() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::classLoader::CallSiteReference::SpecialCall
   inherits from com::ibm::wala::classLoader::CallSiteReference
   function getInvocationCode() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::classLoader::CallSiteReference::VirtualCall
   inherits from com::ibm::wala::classLoader::CallSiteReference
   function getInvocationCode() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::classLoader::CallSiteReference::InterfaceCall
   inherits from com::ibm::wala::classLoader::CallSiteReference
   function getInvocationCode() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ClassFileModule.java
module com::ibm::wala::classLoader::ClassFileModule
   inherits from com::ibm::wala::classLoader::FileModule
   inherits from com::ibm::wala::classLoader::Module
   inherits from com::ibm::wala::classLoader::ModuleEntry
   function getClassName() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in com::ibm::wala::classLoader::ClassFileModule
   function isClassFile() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSourceFile() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFile() defined in com::ibm::wala::classLoader::FileModule
   function ClassFileModule(File) in line 31
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable className defined in com::ibm::wala::classLoader::ClassFileModule
      uses function toString() defined in com::ibm::wala::util::ImmutableByteArray
   variable className in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ClassLoaderFactory.java
module com::ibm::wala::classLoader::ClassLoaderFactory
   function getLoader(ClassLoaderReference,ClassHierarchy,AnalysisScope) in line 32
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ClassLoaderFactoryImpl.java
module com::ibm::wala::classLoader::ClassLoaderFactoryImpl
   inherits from com::ibm::wala::classLoader::ClassLoaderFactory
   function getExclusions() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exclusions defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
   function getLoader(ClassLoaderReference,ClassHierarchy,AnalysisScope) in line 63
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
      uses variable map defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
      uses function getParent() defined in com::ibm::wala::types::ClassLoaderReference
      uses function makeNewClassLoader(ClassLoaderReference,ClassHierarchy,IClassLoader,AnalysisScope) defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
   function getWarnings() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
   function makeNewClassLoader(ClassLoaderReference,ClassHierarchy,IClassLoader,AnalysisScope) in line 91
      19 lines of code
      4 parameters
      3 conditional paths
      uses variable exclusions defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
      uses variable warnings defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(String) defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl::InvalidClassLoaderImplementation
      uses function init(Set) defined in com::ibm::wala::classLoader::IClassLoader
   function ClassLoaderFactoryImpl(SetOfClasses,WarningSet) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable exclusions defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
      uses variable warnings defined in com::ibm::wala::classLoader::ClassLoaderFactoryImpl
   variable exclusions in line 34
   variable map in line 44
   variable warnings in line 39
module com::ibm::wala::classLoader::ClassLoaderFactoryImpl::InvalidClassLoaderImplementation
   inherits from com::ibm::wala::util::warnings::Warning
   function create(String) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ClassLoaderImpl.java
module com::ibm::wala::classLoader::ClassLoaderImpl
   inherits from com::ibm::wala::classLoader::IClassLoader
   function getAllClasses() in line 211
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable loadedClasses defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function getClassFiles(Module) in line 154
      30 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function isClassFile() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function isModuleFile() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function asModule() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function removeClassFiles(Set< ModuleEntry >,Set< ModuleEntry >) defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function getName() in line 432
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getName() defined in com::ibm::wala::types::ClassLoaderReference
   function getNumberOfClasses() in line 448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAllClasses() defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function getNumberOfMethods() in line 457
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
   function getParent() in line 428
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function getReference() in line 372
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function getSourceFileName(IClass) in line 474
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceMap defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getName() defined in com::ibm::wala::classLoader::IClass
   function getSourceFiles(Module) in line 121
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function isSourceFile() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function isModuleFile() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function asModule() defined in com::ibm::wala::classLoader::ModuleEntry
   function init(Set) in line 341
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getClassFiles(Module) defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function removeClassFiles(Set< ModuleEntry >,Set< ModuleEntry >) defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getSourceFiles(Module) defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function loadAllClasses(Collection< ModuleEntry >) defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function loadAllSources(Set< ModuleEntry >) defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function iterateAllClasses() in line 376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAllClasses() defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function loadAllClasses(Collection< ModuleEntry >) in line 222
      49 lines of code
      1 parameters
      12 conditional paths
      uses function isClassFile() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function getClassName() defined in com::ibm::wala::classLoader::ModuleEntry
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable exclusions defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function contains(String) defined in com::ibm::wala::ipa::callgraph::impl::SetOfClasses
      uses variable loadedClasses defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable warnings defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(String) defined in com::ibm::wala::classLoader::ClassLoaderImpl::MultipleImplementationsWarning
      uses variable cha defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeName
      uses function create(String) defined in com::ibm::wala::classLoader::ClassLoaderImpl::InvalidClassFile
   function loadAllSources(Set< ModuleEntry >) in line 321
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getClassName() defined in com::ibm::wala::classLoader::ModuleEntry
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getName() defined in com::ibm::wala::classLoader::ModuleEntry
      uses variable sourceMap defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function lookupClass(TypeName) in line 399
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function isArrayType() defined in com::ibm::wala::types::TypeName
      uses variable arrayClassLoader defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function lookupClass(TypeName,IClassLoader) defined in com::ibm::wala::classLoader::ArrayClassLoader
      uses variable parent defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function ClassLoaderImpl(ClassLoaderReference,ArrayClassLoader,IClassLoader,SetOfClasses,Set,ClassHierarchy,WarningSet) defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getParent() defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable loadedClasses defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function lookupClassInternal(TypeName) in line 383
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable parent defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function ClassLoaderImpl(ClassLoaderReference,ArrayClassLoader,IClassLoader,SetOfClasses,Set,ClassHierarchy,WarningSet) defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getParent() defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable loadedClasses defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function removeAll(Collection< IClass >) in line 483
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable loadedClasses defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function getName() defined in com::ibm::wala::classLoader::IClass
      uses variable sourceMap defined in com::ibm::wala::classLoader::ClassLoaderImpl
   function removeClassFiles(Set< ModuleEntry >,Set< ModuleEntry >) in line 191
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getClassName() defined in com::ibm::wala::classLoader::ModuleEntry
   function toString() in line 439
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses function toString() defined in com::ibm::wala::util::Atom
   function ClassLoaderImpl(ClassLoaderReference,ArrayClassLoader,IClassLoader,SetOfClasses,Set,ClassHierarchy,WarningSet) in line 98
      protection public
      14 lines of code
      7 parameters
      2 conditional paths
      uses variable arrayClassLoader defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable parent defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable loader defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable exclusions defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable cha defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable warnings defined in com::ibm::wala::classLoader::ClassLoaderImpl
      uses variable DEBUG_LEVEL defined in com::ibm::wala::classLoader::ClassLoaderImpl
   variable arrayClassLoader in line 86
   variable cha in line 81
   variable DEBUG_LEVEL in line 46
   variable exclusions in line 51
   variable loadedClasses in line 61
   variable loader in line 56
   variable parent in line 76
   variable sourceMap in line 66
   variable warnings in line 71
module com::ibm::wala::classLoader::ClassLoaderImpl::MultipleImplementationsWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(String) in line 290
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::classLoader::ClassLoaderImpl::InvalidClassFile
   inherits from com::ibm::wala::util::warnings::Warning
   function create(String) in line 313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 309
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/CodeScanner.java
module com::ibm::wala::classLoader::CodeScanner
   function getCallSites(SSAInstruction[]) in line 239
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function getCallSitesFromShrikeBT(ShrikeCTMethodWrapper) in line 158
      3 lines of code
      1 parameters
      1 conditional paths
   function getCaughtExceptions(IMethod,WarningSet) in line 116
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function getShrikeBTCaughtExceptions(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function getCaughtExceptions(SSAInstruction[]) in line 202
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getExceptionTypes() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function getFieldsRead(SSAInstruction[]) in line 281
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function getFieldsReadFromShrikeBT(ShrikeCTMethodWrapper) in line 171
      8 lines of code
      1 parameters
      2 conditional paths
   function getFieldsWritten(SSAInstruction[]) in line 302
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function getFieldsWrittenFromShrikeBT(ShrikeCTMethodWrapper) in line 180
      8 lines of code
      1 parameters
      2 conditional paths
   function getNewSites(SSAInstruction[]) in line 260
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getNewSite() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function getNewSitesFromShrikeBT(ShrikeCTMethodWrapper) in line 167
      3 lines of code
      1 parameters
      1 conditional paths
   function getShrikeBTCaughtExceptions(ShrikeCTMethodWrapper) in line 144
      3 lines of code
      1 parameters
      1 conditional paths
   function hasObjectArrayLoad(IMethod,WarningSet) in line 98
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function hasShrikeBTObjectArrayLoad(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function hasObjectArrayLoad(SSAInstruction[]) in line 318
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function hasObjectArrayStore(IMethod,WarningSet) in line 107
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function hasShrikeBTObjectArrayStore(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function hasObjectArrayStore(SSAInstruction[]) in line 342
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function hasShrikeBTObjectArrayLoad(ShrikeCTMethodWrapper) in line 189
      9 lines of code
      1 parameters
      3 conditional paths
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
   function hasShrikeBTObjectArrayStore(ShrikeCTMethodWrapper) in line 148
      9 lines of code
      1 parameters
      3 conditional paths
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
   function iterateCallSites(IMethod,WarningSet) in line 50
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getCallSites(SSAInstruction[]) defined in com::ibm::wala::classLoader::CodeScanner
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function getCallSitesFromShrikeBT(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function iterateCastTypes(IMethod,WarningSet) in line 131
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function iterateShrikeBTCastTypes(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function iterateCastTypes(SSAInstruction[]) in line 221
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function iterateFieldsRead(IMethod,WarningSet) in line 63
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getFieldsRead(SSAInstruction[]) defined in com::ibm::wala::classLoader::CodeScanner
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function getFieldsReadFromShrikeBT(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function iterateFieldsWritten(IMethod,WarningSet) in line 76
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getFieldsWritten(SSAInstruction[]) defined in com::ibm::wala::classLoader::CodeScanner
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function getFieldsWrittenFromShrikeBT(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function iterateNewSites(IMethod,WarningSet) in line 89
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getNewSites(SSAInstruction[]) defined in com::ibm::wala::classLoader::CodeScanner
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
      uses function getNewSitesFromShrikeBT(ShrikeCTMethodWrapper) defined in com::ibm::wala::classLoader::CodeScanner
   function iterateShrikeBTCastTypes(ShrikeCTMethodWrapper) in line 140
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/DirectoryTreeModule.java
module com::ibm::wala::classLoader::DirectoryTreeModule
   inherits from com::ibm::wala::classLoader::Module
   abstract class
   function getEntries() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getEntriesRecursive(File) defined in com::ibm::wala::classLoader::DirectoryTreeModule
      uses variable root defined in com::ibm::wala::classLoader::DirectoryTreeModule
   function getEntriesRecursive(File) in line 30
      12 lines of code
      1 parameters
      4 conditional paths
      uses function includeFile(File) defined in com::ibm::wala::classLoader::DirectoryTreeModule
      uses function makeFile(File) defined in com::ibm::wala::classLoader::DirectoryTreeModule
   function getPath() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in com::ibm::wala::classLoader::DirectoryTreeModule
   function includeFile(File) in line 28
      1 lines of code
      1 parameters
      1 conditional paths
   function makeFile(File) in line 26
      1 lines of code
      1 parameters
      1 conditional paths
   variable root in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/FieldImpl.java
module com::ibm::wala::classLoader::FieldImpl
   inherits from com::ibm::wala::classLoader::IField
   function equals(Object) in line 59
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function FieldImpl(IClass,FieldReference,int) defined in com::ibm::wala::classLoader::FieldImpl
      uses variable fieldRef defined in com::ibm::wala::classLoader::FieldImpl
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable declaringClass defined in com::ibm::wala::classLoader::FieldImpl
   function getDeclaringClass() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaringClass defined in com::ibm::wala::classLoader::FieldImpl
   function getFieldReference() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::FieldImpl
      uses function getName() defined in com::ibm::wala::classLoader::FieldImpl
      uses function getFieldTypeReference() defined in com::ibm::wala::classLoader::FieldImpl
   function getFieldTypeReference() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldRef defined in com::ibm::wala::classLoader::FieldImpl
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
   function getName() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldRef defined in com::ibm::wala::classLoader::FieldImpl
      uses function getName() defined in com::ibm::wala::types::MemberReference
   function hashCode() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaringClass defined in com::ibm::wala::classLoader::FieldImpl
      uses variable fieldRef defined in com::ibm::wala::classLoader::FieldImpl
      uses function hashCode() defined in com::ibm::wala::types::MemberReference
   function isFinal() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in com::ibm::wala::classLoader::FieldImpl
      uses variable ACC_FINAL defined in com::ibm::wala::shrikeCT::ClassConstants
   function isPrivate() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in com::ibm::wala::classLoader::FieldImpl
      uses variable ACC_PRIVATE defined in com::ibm::wala::shrikeCT::ClassConstants
   function isProtected() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in com::ibm::wala::classLoader::FieldImpl
      uses variable ACC_PROTECTED defined in com::ibm::wala::shrikeCT::ClassConstants
   function isPublic() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in com::ibm::wala::classLoader::FieldImpl
      uses variable ACC_PUBLIC defined in com::ibm::wala::shrikeCT::ClassConstants
   function isStatic() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in com::ibm::wala::classLoader::FieldImpl
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeCT::ClassConstants
   function toString() in line 83
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldReference() defined in com::ibm::wala::classLoader::FieldImpl
      uses function toString() defined in com::ibm::wala::types::FieldReference
   function FieldImpl(IClass,FieldReference,int) in line 35
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable declaringClass defined in com::ibm::wala::classLoader::FieldImpl
      uses variable accessFlags defined in com::ibm::wala::classLoader::FieldImpl
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable fieldRef defined in com::ibm::wala::classLoader::FieldImpl
   variable accessFlags in line 30
   variable declaringClass in line 28
   variable fieldRef in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/FieldImpl.java
module com::ibm::wala::j2ee::client::impl::FieldImpl
   inherits from com::ibm::wala::j2ee::client::impl::MemberImpl
   inherits from com::ibm::wala::j2ee::client::IField
   function equals(Object) in line 39
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function FieldImpl(FieldReference) defined in com::ibm::wala::j2ee::client::impl::FieldImpl
      uses function getName() defined in com::ibm::wala::j2ee::client::IField
      uses function getName() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::IField
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
   function toString() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::j2ee::client::IField
      uses function getName() defined in com::ibm::wala::j2ee::client::IField
   function FieldImpl(FieldReference) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/FileModule.java
module com::ibm::wala::classLoader::FileModule
   inherits from com::ibm::wala::classLoader::Module
   inherits from com::ibm::wala::classLoader::ModuleEntry
   abstract class
   function asModule() in line 97
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 58
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function FileModule(File) defined in com::ibm::wala::classLoader::FileModule
      uses function getName() defined in com::ibm::wala::classLoader::FileModule
   function getAbsolutePath() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::FileModule
   function getEntries() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFile() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::FileModule
   function getInputStream() in line 77
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::FileModule
   function getName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::FileModule
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::FileModule
   function isModuleFile() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FileModule(File) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable file in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/IClass.java
module com::ibm::wala::classLoader::IClass
   function getAllAncestorInterfaces() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllFields() in line 147
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllImplementedInterfaces() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllInstanceFields() in line 129
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllMethods() in line 156
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllStaticFields() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassInitializer() in line 110
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassLoader() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredInstanceFields() in line 163
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredMethods() in line 120
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredStaticFields() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDirectInterfaces() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getField(Atom) in line 94
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMethod(Selector) in line 89
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getModifiers() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 173
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReference() in line 99
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceFileName() in line 105
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSuperclass() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isArrayClass() in line 115
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isInterface() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isReferenceType() in line 179
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/IClass.java
module com::ibm::wala::j2ee::client::IClass
   function getClassLoaderName() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/IClassLoader.java
module com::ibm::wala::classLoader::IClassLoader
   function getName() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfClasses() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfMethods() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParent() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReference() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceFileName(IClass) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function init(Set) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function iterateAllClasses() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupClass(TypeName) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeAll(Collection< IClass >) in line 81
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/IField.java
module com::ibm::wala::classLoader::IField
   inherits from com::ibm::wala::classLoader::IMember
   function getFieldReference() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFieldTypeReference() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFinal() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPrivate() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isProtected() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPublic() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/IField.java
module com::ibm::wala::j2ee::client::IField
   function getClassLoaderName() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclaringClass() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/IMember.java
module com::ibm::wala::classLoader::IMember
   function getDeclaringClass() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/IMethod.java
module com::ibm::wala::classLoader::IMethod
   inherits from com::ibm::wala::classLoader::IMember
   inherits from com::ibm::wala::ipa::callgraph::ContextItem
   function getDeclaredExceptions() in line 140
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDescriptor() in line 177
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLineNumber(int) in line 146
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getLocalVariableName(int,int) in line 153
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getMaxLocals() in line 107
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMaxStackHeight() in line 112
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfParameters() in line 134
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParameterType(int) in line 123
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getReference() in line 102
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReturnType() in line 128
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSelector() in line 169
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 161
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasExceptionHandler() in line 117
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasLocalVariableTable() in line 183
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isClinit() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFinal() in line 97
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isInit() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPrivate() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isProtected() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPublic() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/IMethod.java
module com::ibm::wala::j2ee::client::IMethod
   function getClassLoaderName() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclaringClass() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDescriptor() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSelector() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/IProgramCounter.java
module com::ibm::wala::classLoader::IProgramCounter
   function getProgramCounter() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable NO_SOURCE_LINE_NUMBER in line 24
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/JarFileEntry.java
module com::ibm::wala::classLoader::JarFileEntry
   inherits from com::ibm::wala::classLoader::ModuleEntry
   function asModule() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jarFileModule defined in com::ibm::wala::classLoader::JarFileEntry
      uses variable jarFile defined in com::ibm::wala::classLoader::JarFileEntry
      uses variable entryName defined in com::ibm::wala::classLoader::JarFileEntry
   function equals(Object) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassName() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::JarFileEntry
   function getInputStream() in line 54
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable jarFile defined in com::ibm::wala::classLoader::JarFileEntry
      uses variable entryName defined in com::ibm::wala::classLoader::JarFileEntry
   function getJarFile() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jarFile defined in com::ibm::wala::classLoader::JarFileEntry
   function getName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryName defined in com::ibm::wala::classLoader::JarFileEntry
   function getSize() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable jarFile defined in com::ibm::wala::classLoader::JarFileEntry
      uses variable entryName defined in com::ibm::wala::classLoader::JarFileEntry
   function hashCode() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryName defined in com::ibm::wala::classLoader::JarFileEntry
      uses variable jarFile defined in com::ibm::wala::classLoader::JarFileEntry
   function isClassFile() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::JarFileEntry
   function isModuleFile() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::JarFileEntry
   function isSourceFile() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::JarFileEntry
   function toString() in line 76
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable jarFile defined in com::ibm::wala::classLoader::JarFileEntry
      uses function getName() defined in com::ibm::wala::classLoader::JarFileEntry
   variable entryName in line 28
   variable jarFile in line 30
   variable jarFileModule in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/JarFileModule.java
module com::ibm::wala::classLoader::JarFileModule
   inherits from com::ibm::wala::classLoader::Module
   function equals(Object) in line 89
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function JarFileModule(JarFile) defined in com::ibm::wala::classLoader::JarFileModule
      uses variable file defined in com::ibm::wala::classLoader::JarFileModule
   function getAbsolutePath() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::JarFileModule
   function getContents(ZipEntry) in line 98
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable cache defined in com::ibm::wala::classLoader::JarFileModule
      uses variable file defined in com::ibm::wala::classLoader::JarFileModule
   function getEntries() in line 66
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::JarFileModule
   function getJarFile() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::JarFileModule
   function hashCode() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::JarFileModule
   function toString() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in com::ibm::wala::classLoader::JarFileModule
   function JarFileModule(JarFile) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable cache in line 42
   variable file in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/Module.java
module com::ibm::wala::classLoader::Module
   function getEntries() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ModuleEntry.java
module com::ibm::wala::classLoader::ModuleEntry
   function asModule() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInputStream() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isClassFile() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isModuleFile() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSourceFile() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/NestedJarFileModule.java
module com::ibm::wala::classLoader::NestedJarFileModule
   inherits from com::ibm::wala::classLoader::Module
   function getEntries() in line 115
      protection public
      32 lines of code
      0 parameters
      2 conditional paths
      uses function populateCache() defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable cache defined in com::ibm::wala::classLoader::NestedJarFileModule
   function getEntrySize(String) in line 104
      5 lines of code
      1 parameters
      1 conditional paths
      uses function populateCache() defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable cache defined in com::ibm::wala::classLoader::NestedJarFileModule
   function getInputStream(String) in line 57
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function populateCache() defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable cache defined in com::ibm::wala::classLoader::NestedJarFileModule
   function populateCache() in line 63
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable cache defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable parent defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses function getContents(ZipEntry) defined in com::ibm::wala::classLoader::JarFileModule
      uses variable entry defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable DEBUG defined in com::ibm::wala::classLoader::NestedJarFileModule
   function toString() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entry defined in com::ibm::wala::classLoader::NestedJarFileModule
   function NestedJarFileModule(JarFileModule,ZipEntry) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable entry defined in com::ibm::wala::classLoader::NestedJarFileModule
   variable cache in line 47
   variable DEBUG in line 38
   variable entry in line 41
   variable parent in line 40
module com::ibm::wala::classLoader::NestedJarFileModule::Entry
   inherits from com::ibm::wala::classLoader::ModuleEntry
   function asModule() in line 199
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::NestedJarFileModule::Entry
   function getInputStream() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInputStream(String) defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable name defined in com::ibm::wala::classLoader::NestedJarFileModule::Entry
   function getName() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::classLoader::NestedJarFileModule::Entry
   function getSize() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getEntrySize(String) defined in com::ibm::wala::classLoader::NestedJarFileModule
      uses variable name defined in com::ibm::wala::classLoader::NestedJarFileModule::Entry
   function isClassFile() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::NestedJarFileModule::Entry
   function isModuleFile() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSourceFile() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::NestedJarFileModule::Entry
   function toString() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::classLoader::NestedJarFileModule::Entry
   variable name in line 154
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/NewSiteReference.java
module com::ibm::wala::classLoader::NewSiteReference
   inherits from com::ibm::wala::classLoader::ProgramCounter
   function getDeclaredType() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredType defined in com::ibm::wala::classLoader::NewSiteReference
   function make(int,TypeReference) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function NewSiteReference(int,TypeReference) defined in com::ibm::wala::classLoader::NewSiteReference
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable declaredType defined in com::ibm::wala::classLoader::NewSiteReference
   function toString() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredType defined in com::ibm::wala::classLoader::NewSiteReference
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function NewSiteReference(int,TypeReference) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable declaredType defined in com::ibm::wala::classLoader::NewSiteReference
   variable declaredType in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ProgramCounter.java
module com::ibm::wala::classLoader::ProgramCounter
   inherits from com::ibm::wala::classLoader::IProgramCounter
   function equals(Object) in line 61
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function ProgramCounter(final int) defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
   function getProgramCounter() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
   function hashCode() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
   function toString() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
   function ProgramCounter(final int) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable programCounter defined in com::ibm::wala::classLoader::ProgramCounter
   variable programCounter in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ShrikeBTMethodWrapper.java
module com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   inherits from com::ibm::wala::classLoader::IMethod
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   abstract class
   function clearCaches() in line 922
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function computeDeclaredExceptions() in line 824
      17 lines of code
      0 parameters
      4 conditional paths
      uses function getDeclaredExceptionTypeNames() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
   function computeMethodReference() in line 367
      12 lines of code
      0 parameters
      2 conditional paths
      uses function getMethodName() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getMethodSignature() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable declaringClass defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function copyVisitorSetsToArrays(SimpleVisitor) in line 483
      57 lines of code
      1 parameters
      10 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function equals(Object) in line 551
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function ShrikeBTMethodWrapper(IClass) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
   function getArraysRead() in line 297
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getArraysWritten() in line 315
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getBytecodeIndex(int) in line 140
      protection public
      9 lines of code
      1 parameters
      9 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pcMap defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getBytecodes() in line 347
      1 lines of code
      0 parameters
      1 conditional paths
   function getBytecodeStream() in line 354
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getMethodName() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getMethodSignature() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getCastTypes() in line 333
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getCaughtExceptionTypes() in line 866
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses function getHandlers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangThrowable defined in com::ibm::wala::types::TypeReference
   function getDeclaredExceptions() in line 802
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable exceptionTypes defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
      uses function getDeclaredExceptionTypeNames() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getDeclaredExceptionTypeNames() in line 818
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclaringClass() in line 433
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaringClass defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function makeDecoder() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processDebugInfo(BytecodeInfo) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getDescriptor() in line 583
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
   function getFieldsRead() in line 275
      protection public
      17 lines of code
      0 parameters
      5 conditional paths
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getFieldsWritten() in line 253
      protection public
      17 lines of code
      0 parameters
      5 conditional paths
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getHandlers() in line 743
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::Decoder
   function getImplicitExceptionTypes() in line 191
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getInstructions() in line 723
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::Decoder
   function getLineNumber(int) in line 847
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable lineNumberMap defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
   function getLocalVariableName(int,int) in line 910
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getMaxLocals() in line 574
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMaxStackHeight() in line 577
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodName() in line 363
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodSignature() in line 365
      1 lines of code
      0 parameters
      1 conditional paths
   function getModifiers() in line 395
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 579
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getName() defined in com::ibm::wala::types::MemberReference
   function getNumberOfParameters() in line 781
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function isStatic() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function isClinit() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
      uses function hasExceptionHandler() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getParameterType(int) in line 764
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function isStatic() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable declaringClass defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getParameterType(int) defined in com::ibm::wala::types::MethodReference
   function getReference() in line 380
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable methodReference defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function computeMethodReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getSelector() in line 900
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function getLocalVariableName(int,int) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function hasLocalVariableTable() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getSignature() in line 891
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getSignature() defined in com::ibm::wala::types::MethodReference
   function hasExceptionHandler() in line 794
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 565
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function hashCode() defined in com::ibm::wala::types::MemberReference
      uses function getMaxLocals() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getMaxStackHeight() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function hasLocalVariableTable() in line 917
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasMonitorOp() in line 236
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function isAbstract() in line 401
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_ABSTRACT defined in com::ibm::wala::shrikeBT::Constants
   function isClinit() in line 387
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::Selector
      uses variable clinitSelector defined in com::ibm::wala::types::MethodReference
   function isFinal() in line 417
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_FINAL defined in com::ibm::wala::shrikeBT::Constants
   function isInit() in line 391
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable initAtom defined in com::ibm::wala::types::MethodReference
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function isNative() in line 397
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_NATIVE defined in com::ibm::wala::shrikeBT::Constants
   function isPrivate() in line 405
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_PRIVATE defined in com::ibm::wala::shrikeBT::Constants
   function isProtected() in line 409
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_PROTECTED defined in com::ibm::wala::shrikeBT::Constants
   function isPublic() in line 413
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_PUBLIC defined in com::ibm::wala::shrikeBT::Constants
   function isStatic() in line 425
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeBT::Constants
   function isSynchronized() in line 421
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getModifiers() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable ACC_SYNCHRONIZED defined in com::ibm::wala::shrikeBT::Constants
   function isSynthetic() in line 429
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeDecoder() in line 442
      1 lines of code
      0 parameters
      1 conditional paths
   function processBytecodes() in line 211
      protection public
      20 lines of code
      0 parameters
      5 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable exceptionTypes defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
      uses function computeDeclaredExceptions() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function isNative() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verbose defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable methodsParsed defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodesWithShrikeBT() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function processBytecodesWithShrikeBT() in line 452
      30 lines of code
      0 parameters
      6 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function makeDecoder() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isAbstract() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable pcMap defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
      uses function getInstructionsToBytecodes() defined in com::ibm::wala::shrikeBT::Decoder
      uses function processDebugInfo(BytecodeInfo) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::Decoder
      uses function setInstructionIndex(int) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::SimpleVisitor
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
      uses function copyVisitorSetsToArrays(SimpleVisitor) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function processDebugInfo(BytecodeInfo) in line 449
      1 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function toString() defined in com::ibm::wala::types::MethodReference
   function ShrikeBTMethodWrapper(IClass) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bcInfo in line 128
   variable declaringClass in line 70
   variable methodReference in line 75
   variable methodsParsed in line 65
   variable verbose in line 63
module com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
   variable exceptionTypes in line 122
   variable lineNumberMap in line 108
   variable localVariableMap in line 117
   variable pcMap in line 102
module com::ibm::wala::classLoader::ShrikeBTMethodWrapper::SimpleVisitor
   inherits from com::ibm::wala::shrikeBT::Instruction::Visitor
   function getProgramCounter() in line 614
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pcMap defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
   function setInstructionIndex(int) in line 610
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitArrayLoad(ArrayLoadInstruction) in line 698
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getType() defined in com::ibm::wala::shrikeBT::ArrayLoadInstruction
   function visitArrayStore(ArrayStoreInstruction) in line 707
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getType() defined in com::ibm::wala::shrikeBT::ArrayStoreInstruction
   function visitCheckCast(CheckCastInstruction) in line 711
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getType() defined in com::ibm::wala::shrikeBT::CheckCastInstruction
   function visitGet(GetInstruction) in line 644
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function getClassType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::GetInstruction
   function visitInvoke(InvokeInstruction) in line 658
      protection public
      34 lines of code
      1 parameters
      6 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
      uses function getInvocationMode() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function visitMonitor(MonitorInstruction) in line 629
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNew(NewInstruction) in line 633
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function getType() defined in com::ibm::wala::shrikeBT::NewInstruction
   function visitPut(PutInstruction) in line 651
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function getClassType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::PutInstruction
   variable instructionIndex in line 608
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ShrikeCTClassWrapper.java
module com::ibm::wala::classLoader::ShrikeCTClassWrapper
   inherits from com::ibm::wala::classLoader::IClass
   function addFieldToList(List< FieldImpl >,Atom,ImmutableByteArray,int) in line 211
      12 lines of code
      4 parameters
      2 conditional paths
      uses function get(int) defined in com::ibm::wala::util::ImmutableByteArray
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
      uses function getClassLoader() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function array2IClassSet(ImmutableByteArray[]) in line 377
      14 lines of code
      1 parameters
      3 conditional paths
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
      uses variable loader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses variable warnings defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(ImmutableByteArray) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper::ClassNotFoundWarning
   function clearSoftCaches() in line 755
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable methodMap defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function clearCaches() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable inheritCache defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable allInterfaces defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function clear() defined in com::ibm::wala::util::ShrikeClassReaderHandle
   function computeAllInterfacesAsCollection() in line 326
      32 lines of code
      0 parameters
      7 conditional paths
      uses function getDirectInterfaces() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses variable warnings defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function ShrikeCTClassWrapper(ShrikeClassReaderHandle,IClassLoader,ClassHierarchy,WarningSet) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function isInterface() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeAllInterfacesAsCollection() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getSuperclass() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function computeDeclaredMethods() in line 439
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getMethodCount() defined in com::ibm::wala::shrikeCT::ClassReader
   function computeFields() in line 176
      27 lines of code
      0 parameters
      4 conditional paths
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getFieldCount() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldName(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldType(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function addFieldToList(List< FieldImpl >,Atom,ImmutableByteArray,int) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable instanceFields defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function populateFieldArrayFromList(List< FieldImpl >,IField[]) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable staticFields defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function computeInterfaceNames() in line 308
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getInterfaceNames() defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable interfaceNames defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   function computeMethodMap() in line 418
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable methodMap defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeDeclaredMethods() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function computeModifiers() in line 247
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable modifiers defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getAccessFlags() defined in com::ibm::wala::shrikeCT::ClassReader
   function computeSuperclass() in line 272
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable superclassComputed defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable superName defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function equals(Object) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable superClass defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable loader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function computeSuperName() in line 261
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getSuperName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable superName defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function computeTypeReference() in line 572
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable typeReference defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getClassLoader() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function equals(Object) in line 637
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
   function findDeclaredField(Atom) in line 550
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable instanceFields defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getName() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable staticFields defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getAllAncestorInterfaces() in line 612
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isInterface() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable allInterfaces defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeAllInterfacesAsCollection() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getAllFields() in line 830
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getAllInstanceFields() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getAllStaticFields() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getAllImplementedInterfaces() in line 597
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isInterface() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable allInterfaces defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeAllInterfacesAsCollection() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getAllInstanceFields() in line 778
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getDeclaredInstanceFields() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getSuperclass() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getAllMethods() in line 808
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getSuperclass() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function getAllStaticFields() in line 793
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getDeclaredStaticFields() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getSuperclass() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getClassHierarchy() in line 708
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getClassInitializer() in line 670
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable methodMap defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeMethodMap() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable clinitSelector defined in com::ibm::wala::types::MethodReference
   function getClassLoader() in line 224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getDeclaredInstanceFields() in line 721
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceFields defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getDeclaredMethods() in line 687
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable methodMap defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeMethodMap() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getDeclaredStaticFields() in line 730
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable staticFields defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getDirectInterfaces() in line 364
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function array2IClassSet(ImmutableByteArray[]) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable interfaceNames defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getField(Atom) in line 530
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable fieldMap defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function findDeclaredField(Atom) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable superClass defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getField(Atom) defined in com::ibm::wala::classLoader::IClass
   function getMethod(Selector) in line 457
      protection public
      65 lines of code
      1 parameters
      16 conditional paths
      uses variable methodMap defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeMethodMap() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable inheritCache defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function equals(Object) defined in com::ibm::wala::types::Selector
      uses variable clinitSelector defined in com::ibm::wala::types::MethodReference
      uses variable initSelector defined in com::ibm::wala::types::MethodReference
      uses function ShrikeCTClassWrapper(ShrikeClassReaderHandle,IClassLoader,ClassHierarchy,WarningSet) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getSuperclass() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function isInterface() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getAllAncestorInterfaces() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
   function getModifiers() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable modifiers defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getName() in line 739
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getReader() in line 657
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
   function getReference() in line 584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeReference defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function getSourceFileName() in line 593
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getSourceFileName(IClass) defined in com::ibm::wala::classLoader::IClassLoader
   function getSuperclass() in line 288
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable superclassComputed defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeSuperclass() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable superClass defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function equals(Object) defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function get() defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getSuperName() defined in com::ibm::wala::shrikeCT::ClassReader
   function getWarnings() in line 712
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   function hashCode() in line 650
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::util::warnings::Warning
   function isAbstract() in line 239
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable modifiers defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable ACC_ABSTRACT defined in com::ibm::wala::shrikeBT::Constants
   function isArrayClass() in line 704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInterface() in line 228
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable modifiers defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable ACC_INTERFACE defined in com::ibm::wala::shrikeBT::Constants
   function isReferenceType() in line 748
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
   function populateFieldArrayFromList(List< FieldImpl >,IField[]) in line 204
      6 lines of code
      2 parameters
      2 conditional paths
   function toString() in line 630
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function toString() defined in com::ibm::wala::types::TypeReference
   function ShrikeCTClassWrapper(ShrikeClassReaderHandle,IClassLoader,ClassHierarchy,WarningSet) in line 152
      protection public
      17 lines of code
      4 parameters
      2 conditional paths
      uses variable reader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable loader defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable cha defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses variable warnings defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeTypeReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
      uses function computeSuperName() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeModifiers() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeInterfaceNames() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function computeFields() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
   variable allInterfaces in line 123
   variable cha in line 71
   variable fieldMap in line 523
   variable hashCode in line 143
   variable inheritCache in line 85
   variable instanceFields in line 128
   variable interfaceNames in line 117
   variable loader in line 66
   variable methodMap in line 79
   variable modifiers in line 138
   variable reader in line 61
   variable staticFields in line 133
   variable superClass in line 100
   variable superclassComputed in line 105
   variable superName in line 111
   variable typeReference in line 90
   variable warnings in line 95
module com::ibm::wala::classLoader::ShrikeCTClassWrapper::ClassNotFoundWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(ImmutableByteArray) in line 410
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 406
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ShrikeCTMethodWrapper.java
module com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   inherits from com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getBytecodes() in line 49
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getCodeReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getBytecode() defined in com::ibm::wala::shrikeCT::CodeReader
   function getClassReader() in line 196
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   function getCodeReader() in line 200
      18 lines of code
      0 parameters
      4 conditional paths
      uses function getClassReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function initMethodAttributeIterator(int,AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable shrikeMethodIndex defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   function getDeclaredExceptionTypeNames() in line 115
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getExceptionReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getClasses() defined in com::ibm::wala::shrikeCT::ExceptionsReader
   function getExceptionReader() in line 219
      18 lines of code
      0 parameters
      4 conditional paths
      uses function getClassReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function initMethodAttributeIterator(int,AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable shrikeMethodIndex defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   function getLocalVariableName(int,int) in line 131
      protection public
      42 lines of code
      2 parameters
      9 conditional paths
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function processBytecodes() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable localVariableMap defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
      uses function getMaxLocals() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getName() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getClassReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getCP() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getCPUtf8(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getMaxLocals() in line 89
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getMaxLocals() defined in com::ibm::wala::shrikeCT::CodeReader
   function getMaxStackHeight() in line 94
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getMaxStack() defined in com::ibm::wala::shrikeCT::CodeReader
   function getMethodName() in line 58
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getClassReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getMethodName(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable shrikeMethodIndex defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   function getMethodSignature() in line 63
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getClassReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getMethodType(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable shrikeMethodIndex defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   function getModifiers() in line 68
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable modifiers defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getClassReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getMethodAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable shrikeMethodIndex defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
   function getReturnType() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
   function hasExceptionHandler() in line 107
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getCodeReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getRawHandlers() defined in com::ibm::wala::shrikeCT::CodeReader
   function hasLocalVariableTable() in line 179
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function getCodeReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function initAttributeIterator(ClassReader.AttrIterator) defined in com::ibm::wala::shrikeCT::CodeReader
   function makeDecoder() in line 75
      13 lines of code
      0 parameters
      3 conditional paths
      uses function getCodeReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function decode() defined in com::ibm::wala::shrikeBT::Decoder
   function processDebugInfo(BytecodeInfo) in line 124
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getCodeReader() defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses variable bcInfo defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses variable lineNumberMap defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
      uses variable localVariableMap defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper::BytecodeInfo
   function ShrikeCTMethodWrapper(IClass,int) in line 44
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable modifiers in line 42
   variable shrikeMethodIndex in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/ShrikeIRFactory.java
module com::ibm::wala::classLoader::ShrikeIRFactory
   inherits from com::ibm::wala::ssa::IRFactory
   function makeCFG(final IMethod,Context,final ClassHierarchy,final WarningSet) in line 44
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function makeIR(final IMethod,Context,final ClassHierarchy,final SSAOptions,final WarningSet) in line 55
      protection public
      58 lines of code
      5 parameters
      4 conditional paths
      uses function makeCFG(final IMethod,Context,final ClassHierarchy,final WarningSet) defined in com::ibm::wala::classLoader::ShrikeIRFactory
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
      uses variable buildLocalMap defined in com::ibm::wala::classLoader::ShrikeIRFactory
      uses function getUsePiNodes() defined in com::ibm::wala::ssa::SSAOptions
      uses function build() defined in com::ibm::wala::ssa::SSABuilder
      uses function getLocalMap() defined in com::ibm::wala::ssa::SSABuilder
   variable buildLocalMap in line 35
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/SourceDirectoryTreeModule.java
module com::ibm::wala::classLoader::SourceDirectoryTreeModule
   inherits from com::ibm::wala::classLoader::DirectoryTreeModule
   function includeFile(File) in line 21
      3 lines of code
      1 parameters
      1 conditional paths
   function makeFile(File) in line 25
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in com::ibm::wala::classLoader::DirectoryTreeModule
   function SourceDirectoryTreeModule(File) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in com::ibm::wala::classLoader::DirectoryTreeModule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/SourceFileModule.java
module com::ibm::wala::classLoader::SourceFileModule
   inherits from com::ibm::wala::classLoader::FileModule
   inherits from com::ibm::wala::classLoader::Module
   inherits from com::ibm::wala::classLoader::ModuleEntry
   function getClassName() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in com::ibm::wala::classLoader::SourceFileModule
   function isClassFile() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSourceFile() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFile() defined in com::ibm::wala::classLoader::FileModule
   function SourceFileModule(File,String) in line 26
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fileName defined in com::ibm::wala::classLoader::SourceFileModule
   function SourceFileModule(File,SourceFileModule) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fileName defined in com::ibm::wala::classLoader::SourceFileModule
   variable fileName in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/SourceURLModule.java
module com::ibm::wala::classLoader::SourceURLModule
   inherits from com::ibm::wala::classLoader::AbstractURLModule
   function isClassFile() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSourceFile() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SourceURLModule(URL) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable url defined in com::ibm::wala::classLoader::AbstractURLModule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/SyntheticClass.java
module com::ibm::wala::classLoader::SyntheticClass
   inherits from com::ibm::wala::classLoader::IClass
   abstract class
   function getClassLoader() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::classLoader::SyntheticClass
      uses function getLoader(ClassLoaderReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
   function getReference() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T defined in com::ibm::wala::classLoader::SyntheticClass
   function getSourceFileName() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isArrayClass() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInterface() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SyntheticClass(TypeReference,ClassHierarchy) in line 32
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable T defined in com::ibm::wala::classLoader::SyntheticClass
      uses variable cha defined in com::ibm::wala::classLoader::SyntheticClass
   variable cha in line 28
   variable T in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/classLoader/SyntheticMethod.java
module com::ibm::wala::classLoader::SyntheticMethod
   inherits from com::ibm::wala::classLoader::IMethod
   function equals(Object) in line 178
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function SyntheticMethod(MethodReference,IClass,boolean,boolean) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
   function getBytecodeStream() in line 147
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredExceptions() in line 277
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable resolvedMethod defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getDeclaredExceptions() defined in com::ibm::wala::classLoader::IMethod
   function getDeclaringClass() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaringClass defined in com::ibm::wala::classLoader::SyntheticMethod
   function getDescriptor() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function getDescriptor() defined in com::ibm::wala::types::Selector
   function getLineNumber(int) in line 298
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getLocalVariableName(int,int) in line 329
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getMaxLocals() in line 155
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getMaxStackHeight() in line 163
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function getName() defined in com::ibm::wala::types::Selector
   function getNumberOfParameters() in line 267
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
      uses function isStatic() defined in com::ibm::wala::classLoader::SyntheticMethod
   function getParameterType(int) in line 251
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function isStatic() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getParameterType(int) defined in com::ibm::wala::types::MethodReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
   function getPoison() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPoisonLevel() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReference() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
   function getReturnType() in line 356
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
   function getSelector() in line 320
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function getSignature() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getSignature() defined in com::ibm::wala::types::MethodReference
   function getStatements(SSAOptions,WarningSet) in line 232
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable NO_STATEMENTS defined in com::ibm::wala::classLoader::SyntheticMethod
   function getStatements(WarningSet) in line 348
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
   function hasExceptionHandler() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function hashCode() defined in com::ibm::wala::types::MemberReference
   function hasLocalVariableTable() in line 339
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasPoison() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isClinit() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::Selector
      uses variable clinitSelector defined in com::ibm::wala::types::MethodReference
   function isFactoryMethod() in line 302
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isFactory defined in com::ibm::wala::classLoader::SyntheticMethod
   function isFinal() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInit() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::Selector
      uses variable initSelector defined in com::ibm::wala::types::MethodReference
   function isNative() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPrivate() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isProtected() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPublic() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeControlFlowGraph() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function makeIR(SSAOptions,WarningSet) in line 241
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 197
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function toString() defined in com::ibm::wala::types::MethodReference
   function SyntheticMethod(MethodReference,IClass,boolean,boolean) in line 46
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable declaringClass defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function isStatic() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable isFactory defined in com::ibm::wala::classLoader::SyntheticMethod
   function SyntheticMethod(IMethod,IClass,boolean,boolean) in line 56
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable resolvedMethod defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable declaringClass defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function isStatic() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable isFactory defined in com::ibm::wala::classLoader::SyntheticMethod
   variable declaringClass in line 39
   variable isFactory in line 43
   variable isStatic in line 41
   variable method in line 35
   variable NO_STATEMENTS in line 33
      protection public
   variable resolvedMethod in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/AbstractEngineStopwatch.java
module com::ibm::wala::client::AbstractEngineStopwatch
   inherits from com::ibm::wala::client::EngineStopwatch
   abstract class
   function getCategoryNames() in line 31
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfCategories() in line 26
      1 lines of code
      0 parameters
      1 conditional paths
   function getTimer(byte) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stopwatch defined in com::ibm::wala::client::AbstractEngineStopwatch
   function report() in line 42
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getNumberOfCategories() defined in com::ibm::wala::client::AbstractEngineStopwatch
      uses variable stopwatch defined in com::ibm::wala::client::AbstractEngineStopwatch
      uses function getElapsedMillis() defined in com::ibm::wala::util::perf::Stopwatch
      uses function getCategoryNames() defined in com::ibm::wala::client::AbstractEngineStopwatch
   function start(byte) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stopwatch defined in com::ibm::wala::client::AbstractEngineStopwatch
      uses function start() defined in com::ibm::wala::util::Stopwatch
   function stop(byte) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stopwatch defined in com::ibm::wala::client::AbstractEngineStopwatch
      uses function stop() defined in com::ibm::wala::util::Stopwatch
   function AbstractEngineStopwatch() in line 35
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable stopwatch defined in com::ibm::wala::client::AbstractEngineStopwatch
      uses function getNumberOfCategories() defined in com::ibm::wala::client::AbstractEngineStopwatch
      uses function getCategoryNames() defined in com::ibm::wala::client::AbstractEngineStopwatch
   variable stopwatch in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/AnalysisEngine.java
module com::ibm::wala::client::AnalysisEngine
   function getDefaultOptions(Entrypoints) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setClosedWorld(boolean) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setJ2SELibraries(JarFile[]) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setJ2SELibraries(Module[]) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setModuleFiles(Collection) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/AnalysisEngine.java
module com::ibm::wala::j2ee::client::AnalysisEngine
   inherits from com::ibm::wala::client::AnalysisEngine
   function setJ2EELibraries(JarFile[]) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setJ2EELibraries(Module[]) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/CallGraphBuilderFactory.java
module com::ibm::wala::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,boolean) in line 58
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   variable IMPL_PROPERTY in line 27
      protection public
   variable OBJECT_SENSITIVE_CONTAINER_HACK_CFA_BUILDER_FACTORY in line 43
      protection public
   variable RTA_BUILDER_FACTORY in line 29
      protection public
   variable XTA_BUILDER_FACTORY in line 31
      protection public
   variable XTA_CONTAINER_BUILDER_FACTORY in line 33
      protection public
   variable ZERO_CFA_BUILDER_FACTORY in line 35
      protection public
   variable ZERO_CONTAINER_CFA_BUILDER_FACTORY in line 37
      protection public
   variable ZERO_ONE_CFA_BUILDER_FACTORY in line 39
      protection public
   variable ZERO_ONE_CONTAINER_CFA_BUILDER_FACTORY in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/CallGraphBuilderFactory.java
module com::ibm::wala::j2ee::client::CallGraphBuilderFactory
   inherits from com::ibm::wala::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,J2EEAnalysisScope,DeploymentMetaData,WarningSet,boolean) in line 61
      protection public
      1 lines of code
      6 parameters
      1 conditional paths
   variable IMPL_PROPERTY in line 28
      protection public
   variable OBJECT_SENSITIVE_CONTAINER_HACK_CFA_BUILDER_FACTORY in line 44
      protection public
   variable RTA_BUILDER_FACTORY in line 30
      protection public
   variable XTA_BUILDER_FACTORY in line 32
      protection public
   variable XTA_CONTAINER_BUILDER_FACTORY in line 34
      protection public
   variable ZERO_CFA_BUILDER_FACTORY in line 36
      protection public
   variable ZERO_CONTAINER_CFA_BUILDER_FACTORY in line 38
      protection public
   variable ZERO_ONE_CFA_BUILDER_FACTORY in line 40
      protection public
   variable ZERO_ONE_CONTAINER_CFA_BUILDER_FACTORY in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/EngineStopwatch.java
module com::ibm::wala::client::EngineStopwatch
   function getTimer(byte) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function report() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function start(byte) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function stop(byte) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/impl/AbstractAnalysisEngine.java
module com::ibm::wala::client::impl::AbstractAnalysisEngine
   inherits from com::ibm::wala::client::AnalysisEngine
   abstract class
   function addApplicationModulesToScope() in line 210
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable scope defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable moduleFiles defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function buildAnalysisScope() in line 153
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable j2seLibs defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable scope defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable BASIC_FILE defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getExclusionsFile() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getPrimordialLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function addApplicationModulesToScope() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function buildCallGraph(ClassHierarchy,AnalysisOptions,boolean) in line 126
      14 lines of code
      3 parameters
      2 conditional paths
      uses function getCallGraphBuilderFactory() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getCallGraphBuilder(ClassHierarchy,AnalysisOptions) defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable cha defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable cg defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function makeCallGraph(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable pointerFlowGraphFactory defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getPointerFlowGraphFactory() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
      uses variable pointerAnalysis defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getPointerAnalysis() defined in com::ibm::wala::ipa::callgraph::CallGraphBuilder
   function buildClassHierarchy() in line 172
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getScope() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getWarnings() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getCallGraph() in line 203
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getCallGraphBuilder(ClassHierarchy,AnalysisOptions) in line 122
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getCallGraphBuilderFactory() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function make(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,boolean) defined in com::ibm::wala::client::CallGraphBuilderFactory
      uses variable cha defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getScope() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getWarnings() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getCallGraphBuilderFactory() in line 287
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraphBuilderFactory defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getClassHierarchy() in line 188
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getDefaultOptions(Entrypoints) in line 341
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getScope() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getExclusionsFile() in line 329
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exclusionsFile defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getHeapGraph() in line 319
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable heapGraph defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getPointerAnalysis() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable cg defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getPointerAnalysis() in line 302
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointerAnalysis defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getPointerFlowGraph() in line 309
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable pointerFlowGraph defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable pointerFlowGraphFactory defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function make(PointerAnalysis,CallGraph) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraphFactory
      uses variable pointerAnalysis defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable cg defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getScope() in line 273
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable scope defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getWarnings() in line 280
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function isClosedWorld() in line 266
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable closedWorld defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function setCallGraphBuilderFactory(CallGraphBuilderFactory) in line 295
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callGraphBuilderFactory defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function setClassHierarchy(ClassHierarchy) in line 196
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function setClosedWorld(boolean) in line 259
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExclusionsFile(String) in line 337
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exclusionsFile defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function setJ2SELibraries(JarFile[]) in line 229
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable j2seLibs defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function setJ2SELibraries(Module[]) in line 244
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable j2seLibs defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function setModuleFiles(Collection) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable moduleFiles defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   variable BASIC_FILE in line 48
   variable callGraphBuilderFactory in line 90
   variable cg in line 100
   variable cha in line 95
   variable closedWorld in line 85
   variable DEBUG_LEVEL in line 54
   variable exclusionsFile in line 60
   variable heapGraph in line 120
   variable j2seLibs in line 80
   variable moduleFiles in line 65
   variable pointerAnalysis in line 105
   variable pointerFlowGraph in line 115
   variable pointerFlowGraphFactory in line 110
   variable scope in line 70
   variable warnings in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/AbstractAnalysisEngine.java
module com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   inherits from com::ibm::wala::client::impl::AbstractAnalysisEngine
   inherits from com::ibm::wala::j2ee::client::AnalysisEngine
   abstract class
   function addApplicationModulesToScope() in line 89
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable scope defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable moduleFiles defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable dependentJars defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
      uses function setIgnoreDependentJars(boolean) defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function buildAnalysisScope() in line 65
      3 lines of code
      0 parameters
      1 conditional paths
   function buildAnalysisScope(String) in line 71
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable j2seLibs defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable j2eeLibs defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
      uses variable scope defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable exclusionsFile defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function addApplicationModulesToScope() defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   function getCallGraphBuilder(ClassHierarchy,AnalysisOptions) in line 57
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getCallGraphBuilderFactory() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses variable cha defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getScope() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
      uses function getDmd() defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
      uses function getWarnings() defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function getDmd() in line 130
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dmd defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   function isDependentJars() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dependentJars defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   function setDependentJars(boolean) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dependentJars defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   function setDmd(DeploymentMetaData) in line 138
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dmd defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   function setJ2EELibraries(JarFile[]) in line 107
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable j2eeLibs defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   function setJ2EELibraries(Module[]) in line 117
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable j2eeLibs defined in com::ibm::wala::j2ee::client::impl::AbstractAnalysisEngine
   function AbstractAnalysisEngine() in line 55
      1 lines of code
      0 parameters
      1 conditional paths
   variable dependentJars in line 53
   variable dmd in line 43
   variable j2eeLibs in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/impl/EclipseProjectAnalysisEngine.java
module com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   inherits from com::ibm::wala::client::impl::AbstractAnalysisEngine
   abstract class
   function buildAnalysisScope() in line 110
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable project defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses function resolveClasspathEntries(IClasspathEntry[],boolean) defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses variable userEntries defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses function makeAbsolute(IPath) defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses variable systemEntries defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses variable sourceEntries defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   function makeAbsolute(IPath) in line 66
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable fRootPath defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   function resolveClasspathEntries(IClasspathEntry[],boolean) in line 104
      5 lines of code
      2 parameters
      2 conditional paths
      uses function resolveClasspathEntry(IClasspathEntry,boolean) defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   function resolveClasspathEntry(IClasspathEntry,boolean) in line 72
      31 lines of code
      2 parameters
      6 conditional paths
      uses variable project defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses function resolveClasspathEntries(IClasspathEntry[],boolean) defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses function makeAbsolute(IPath) defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses variable userEntries defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses variable systemEntries defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses variable sourceEntries defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   function setJ2SELibraries(JarFile[]) in line 132
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   function setJ2SELibraries(Module[]) in line 137
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   function setModuleFiles(Collection) in line 142
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
      uses variable moduleFiles defined in com::ibm::wala::client::impl::AbstractAnalysisEngine
   function EclipseProjectAnalysisEngine() in line 54
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function EclipseProjectAnalysisEngine(IJavaProject) in line 60
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in com::ibm::wala::client::impl::EclipseProjectAnalysisEngine
   variable fRootPath in line 50
   variable project in line 52
   variable sourceEntries in line 46
   variable systemEntries in line 48
   variable userEntries in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/impl/RTABuilderFactory.java
module com::ibm::wala::client::impl::RTABuilderFactory
   inherits from com::ibm::wala::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,boolean) in line 37
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/RTABuilderFactory.java
module com::ibm::wala::j2ee::client::impl::RTABuilderFactory
   inherits from com::ibm::wala::client::impl::RTABuilderFactory
   inherits from com::ibm::wala::j2ee::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,J2EEAnalysisScope,DeploymentMetaData,WarningSet,boolean) in line 42
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/impl/ZeroCFABuilderFactory.java
module com::ibm::wala::client::impl::ZeroCFABuilderFactory
   inherits from com::ibm::wala::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,boolean) in line 37
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/ZeroCFABuilderFactory.java
module com::ibm::wala::j2ee::client::impl::ZeroCFABuilderFactory
   inherits from com::ibm::wala::client::impl::ZeroCFABuilderFactory
   inherits from com::ibm::wala::j2ee::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,J2EEAnalysisScope,DeploymentMetaData,WarningSet,boolean) in line 39
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/impl/ZeroContainerCFABuilderFactory.java
module com::ibm::wala::client::impl::ZeroContainerCFABuilderFactory
   inherits from com::ibm::wala::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,boolean) in line 37
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/ZeroContainerCFABuilderFactory.java
module com::ibm::wala::j2ee::client::impl::ZeroContainerCFABuilderFactory
   inherits from com::ibm::wala::client::impl::ZeroContainerCFABuilderFactory
   inherits from com::ibm::wala::j2ee::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,J2EEAnalysisScope,DeploymentMetaData,WarningSet,boolean) in line 42
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/impl/ZeroOneCFABuilderFactory.java
module com::ibm::wala::client::impl::ZeroOneCFABuilderFactory
   inherits from com::ibm::wala::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,boolean) in line 36
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/ZeroOneCFABuilderFactory.java
module com::ibm::wala::j2ee::client::impl::ZeroOneCFABuilderFactory
   inherits from com::ibm::wala::client::impl::ZeroOneCFABuilderFactory
   inherits from com::ibm::wala::j2ee::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,J2EEAnalysisScope,DeploymentMetaData,WarningSet,boolean) in line 41
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/client/impl/ZeroOneContainerCFABuilderFactory.java
module com::ibm::wala::client::impl::ZeroOneContainerCFABuilderFactory
   inherits from com::ibm::wala::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,AnalysisScope,WarningSet,boolean) in line 37
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/ZeroOneContainerCFABuilderFactory.java
module com::ibm::wala::j2ee::client::impl::ZeroOneContainerCFABuilderFactory
   inherits from com::ibm::wala::client::impl::ZeroOneContainerCFABuilderFactory
   inherits from com::ibm::wala::j2ee::client::CallGraphBuilderFactory
   function make(AnalysisOptions,ClassHierarchy,J2EEAnalysisScope,DeploymentMetaData,WarningSet,boolean) in line 41
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/core/plugin/CorePlugin.java
module com::ibm::wala::core::plugin::CorePlugin
   inherits from org::eclipse::core::runtime::Plugin
   function getDefault() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::core::plugin::CorePlugin
   function start(BundleContext) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function stop(BundleContext) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::core::plugin::CorePlugin
   function CorePlugin() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::core::plugin::CorePlugin
   variable plugin in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/AbstractMeetOperator.java
module com::ibm::wala::dataflow::graph::AbstractMeetOperator
   inherits from com::ibm::wala::fixedpoint::impl::AbstractOperator
   abstract class
   function isUnaryNoOp() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BasicFramework.java
module com::ibm::wala::dataflow::graph::BasicFramework
   inherits from com::ibm::wala::dataflow::graph::IKilldallFramework
   function getFlowGraph() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::dataflow::graph::BasicFramework
   function getTransferFunctionProvider() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable transferFunctionProvider defined in com::ibm::wala::dataflow::graph::BasicFramework
   function BasicFramework(Graph< T >,ITransferFunctionProvider< T >) in line 26
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::dataflow::graph::BasicFramework
      uses variable transferFunctionProvider defined in com::ibm::wala::dataflow::graph::BasicFramework
   variable flowGraph in line 23
   variable transferFunctionProvider in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorFilter.java
module com::ibm::wala::dataflow::graph::BitVectorFilter
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 82
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorFilter(BitVector) defined in com::ibm::wala::dataflow::graph::BitVectorFilter
      uses variable mask defined in com::ibm::wala::dataflow::graph::BitVectorFilter
      uses function equals(Object) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function evaluate(IVariable,IVariable) in line 34
      protection public
      26 lines of code
      2 parameters
      3 conditional paths
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function getValue() defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable mask defined in com::ibm::wala::dataflow::graph::BitVectorFilter
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function getBitVector() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mask defined in com::ibm::wala::dataflow::graph::BitVectorFilter
      uses function hashCode() defined in com::ibm::wala::util::intset::BitVectorIntSet
   function toString() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mask defined in com::ibm::wala::dataflow::graph::BitVectorFilter
   function BitVectorFilter(BitVector) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mask defined in com::ibm::wala::dataflow::graph::BitVectorFilter
   variable mask in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorFramework.java
module com::ibm::wala::dataflow::graph::BitVectorFramework
   inherits from com::ibm::wala::dataflow::graph::BasicFramework
   function getLatticeValues() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable latticeValues defined in com::ibm::wala::dataflow::graph::BitVectorFramework
   function BitVectorFramework(Graph< T >,ITransferFunctionProvider< T >,OrdinalSetMapping< L >) in line 26
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::dataflow::graph::BasicFramework
      uses variable transferFunctionProvider defined in com::ibm::wala::dataflow::graph::BasicFramework
      uses variable latticeValues defined in com::ibm::wala::dataflow::graph::BitVectorFramework
   variable latticeValues in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorIdentity.java
module com::ibm::wala::dataflow::graph::BitVectorIdentity
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 33
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::dataflow::graph::BitVectorIdentity
   function isIdentity() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BitVectorIdentity() in line 28
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorKillGen.java
module com::ibm::wala::dataflow::graph::BitVectorKillGen
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 77
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorKillGen(BitVector,BitVector) defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
      uses variable kill defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable gen defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
   function evaluate(IVariable,IVariable) in line 36
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getValue() defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable kill defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
      uses variable gen defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function getBitVector() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kill defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
      uses function hashCode() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable gen defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
   function toString() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BitVectorKillGen(BitVector,BitVector) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable kill defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
      uses variable gen defined in com::ibm::wala::dataflow::graph::BitVectorKillGen
   variable gen in line 26
   variable kill in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorMinusVector.java
module com::ibm::wala::dataflow::graph::BitVectorMinusVector
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 67
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorMinusVector(BitVector) defined in com::ibm::wala::dataflow::graph::BitVectorMinusVector
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorMinusVector
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function evaluate(IVariable,IVariable) in line 33
      protection public
      16 lines of code
      2 parameters
      2 conditional paths
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function getValue() defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorMinusVector
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function getBitVector() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorMinusVector
      uses function hashCode() defined in com::ibm::wala::util::intset::BitVectorIntSet
   function toString() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorMinusVector
   function BitVectorMinusVector(BitVector) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorMinusVector
   variable v in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorOr.java
module com::ibm::wala::dataflow::graph::BitVectorOr
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 65
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorOr(BitVector) defined in com::ibm::wala::dataflow::graph::BitVectorOr
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorOr
      uses function equals(Object) defined in com::ibm::wala::util::intset::BitVector
   function evaluate(IVariable,IVariable) in line 32
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorOr
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorOr
      uses function hashCode() defined in com::ibm::wala::util::intset::BitVector
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorOr
   function BitVectorOr(BitVector) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorOr
   variable v in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorSolver.java
module com::ibm::wala::dataflow::graph::BitVectorSolver
   inherits from com::ibm::wala::dataflow::graph::DataflowSolver
   function makeEdgeVariable(T,T) in line 38
      4 lines of code
      2 parameters
      1 conditional paths
   function makeNodeVariable(T,boolean) in line 34
      3 lines of code
      2 parameters
      1 conditional paths
   function BitVectorSolver(IKilldallFramework< T >) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable problem defined in com::ibm::wala::dataflow::graph::DataflowSolver
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorUnion.java
module com::ibm::wala::dataflow::graph::BitVectorUnion
   inherits from com::ibm::wala::dataflow::graph::AbstractMeetOperator
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable[]) in line 61
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::dataflow::graph::BitVectorUnion
   function toString() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BitVectorUnion() in line 28
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorUnionConstant.java
module com::ibm::wala::dataflow::graph::BitVectorUnionConstant
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 68
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorUnionConstant(int) defined in com::ibm::wala::dataflow::graph::BitVectorUnionConstant
      uses variable c defined in com::ibm::wala::dataflow::graph::BitVectorUnionConstant
   function evaluate(IVariable,IVariable) in line 35
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function set(int) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable c defined in com::ibm::wala::dataflow::graph::BitVectorUnionConstant
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in com::ibm::wala::dataflow::graph::BitVectorUnionConstant
   function toString() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in com::ibm::wala::dataflow::graph::BitVectorUnionConstant
   function BitVectorUnionConstant(int) in line 25
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable c defined in com::ibm::wala::dataflow::graph::BitVectorUnionConstant
   variable c in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BitVectorUnionVector.java
module com::ibm::wala::dataflow::graph::BitVectorUnionVector
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 65
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorUnionVector(BitVector) defined in com::ibm::wala::dataflow::graph::BitVectorUnionVector
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorUnionVector
      uses function sameBits(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function evaluate(IVariable,IVariable) in line 32
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorUnionVector
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorUnionVector
      uses function hashCode() defined in com::ibm::wala::util::intset::BitVector
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorUnionVector
   function BitVectorUnionVector(BitVector) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable v defined in com::ibm::wala::dataflow::graph::BitVectorUnionVector
   variable v in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BooleanIdentity.java
module com::ibm::wala::dataflow::graph::BooleanIdentity
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 34
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function sameValue(BooleanVariable) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::dataflow::graph::BooleanIdentity
   function isIdentity() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BooleanIdentity() in line 29
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BooleanSolver.java
module com::ibm::wala::dataflow::graph::BooleanSolver
   inherits from com::ibm::wala::dataflow::graph::DataflowSolver
   function makeEdgeVariable(Object,Object) in line 40
      5 lines of code
      2 parameters
      1 conditional paths
   function makeNodeVariable(Object,boolean) in line 34
      5 lines of code
      2 parameters
      1 conditional paths
   function BooleanSolver(IKilldallFramework< T >) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable problem defined in com::ibm::wala::dataflow::graph::DataflowSolver
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/BooleanUnion.java
module com::ibm::wala::dataflow::graph::BooleanUnion
   inherits from com::ibm::wala::dataflow::graph::AbstractMeetOperator
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable[]) in line 61
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function hashCode() defined in com::ibm::wala::fixpoint::BooleanVariable
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses function or(BooleanVariable) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses function sameValue(BooleanVariable) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::dataflow::graph::BooleanUnion
   function toString() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BooleanUnion() in line 28
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/DataflowSolver.java
module com::ibm::wala::dataflow::graph::DataflowSolver
   inherits from com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   abstract class
   function buildEquations(boolean,boolean) in line 188
      53 lines of code
      2 parameters
      1 conditional paths
   function fixShortCircuits(UnionFind) in line 273
      36 lines of code
      1 parameters
      1 conditional paths
   function getEdge(Object) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getEdge(Object,Object) in line 121
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getIn(Object) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getOut(Object) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProblem() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initializeVariables() in line 76
      23 lines of code
      0 parameters
      1 conditional paths
   function initializeWorkList() in line 105
      3 lines of code
      0 parameters
      1 conditional paths
   function makeEdgeVariable(T,T) in line 72
      1 lines of code
      2 parameters
      1 conditional paths
   function makeNodeVariable(T,boolean) in line 70
      1 lines of code
      2 parameters
      1 conditional paths
   function shortCircuitIdentities(Graph< T >,ITransferFunctionProvider< T >,UnionFind) in line 245
      24 lines of code
      3 parameters
      1 conditional paths
   function shortCircuitUnaryMeets(Graph< T >,ITransferFunctionProvider,UnionFind) in line 313
      11 lines of code
      3 parameters
      1 conditional paths
   function DataflowSolver(IKilldallFramework< T >) in line 57
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   variable edge2Var in line 52
   variable node2In in line 41
   variable node2Out in line 46
   variable problem in line 36
module com::ibm::wala::dataflow::graph::DataflowSolver::UnionFind
   function find(int) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function find(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
   function getKey(int) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable allKeys defined in com::ibm::wala::dataflow::graph::DataflowSolver::UnionFind
   function isIn(int) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node2In defined in com::ibm::wala::dataflow::graph::DataflowSolver
   function isOut(int) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isIn(int) defined in com::ibm::wala::dataflow::graph::DataflowSolver::UnionFind
      uses variable node2In defined in com::ibm::wala::dataflow::graph::DataflowSolver
      uses variable node2Out defined in com::ibm::wala::dataflow::graph::DataflowSolver
   function mapIt(int,Object[],Object[],Map< Object, IVariable >) in line 134
      9 lines of code
      4 parameters
      2 conditional paths
      uses variable allKeys defined in com::ibm::wala::dataflow::graph::DataflowSolver::UnionFind
      uses variable node2In defined in com::ibm::wala::dataflow::graph::DataflowSolver
      uses variable node2Out defined in com::ibm::wala::dataflow::graph::DataflowSolver
      uses variable edge2Var defined in com::ibm::wala::dataflow::graph::DataflowSolver
   function size() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMappingSize() defined in com::ibm::wala::util::collections::ObjectArrayMapping
   function union(Object,Object) in line 160
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getMappedIndex(Object) defined in com::ibm::wala::util::collections::ObjectArrayMapping
      uses function union(int,int) defined in com::ibm::wala::util::intset::IntegerUnionFind
   variable allKeys in line 132
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/IKilldallFramework.java
module com::ibm::wala::dataflow::graph::IKilldallFramework
   function getFlowGraph() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTransferFunctionProvider() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/ITransferFunctionProvider.java
module com::ibm::wala::dataflow::graph::ITransferFunctionProvider
   function getEdgeTransferFunction(T,T) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getMeetOperator() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNodeTransferFunction(T) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hasEdgeTransferFunctions() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasNodeTransferFunctions() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/graph/UnaryBitVectorUnion.java
module com::ibm::wala::dataflow::graph::UnaryBitVectorUnion
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 35
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(BitVector) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function sameValue(BitVectorVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::dataflow::graph::UnaryBitVectorUnion
   function toString() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function UnaryBitVectorUnion() in line 29
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/BackwardsSupergraph.java
module com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   inherits from com::ibm::wala::dataflow::IFDS::ISupergraph
   function addEdge(Object,Object) in line 263
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addNode(Object) in line 189
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function classifyEdge(T,T) in line 355
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
      uses variable CALL_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable OTHER defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable CALL_TO_RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
   function containsNode(T) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getCalledNodes(T) in line 96
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getSuccNodes(T) defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
      uses variable exitFilter defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getCallSites(T) in line 336
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getEntriesForProcedure(P) in line 289
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getExitsForProcedure(P) in line 298
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getLocalBlock(P,int) in line 414
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getLocalBlockNumber(T) in line 407
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getMain() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getMainEntry() in line 307
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getMainExit() in line 316
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getMaxNumber() in line 428
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getNode(int) in line 424
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getNormalSuccessors(final T) in line 110
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
      uses function accepts(Object) defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph::ExitFilter
      uses function getProcOf(T) defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getNumber(T) in line 420
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getNumberOfBlocks(P) in line 400
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getNumberOfNodes() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getPredNodeCount(T) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getPredNodeNumbers(Object) in line 444
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(T) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getProcOf(T) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getReturnSites(T) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getSuccNodeCount(T) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getSuccNodeNumbers(T) in line 440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function getSuccNodes(T) in line 237
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function hasEdge(T,T) in line 244
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function isCall(T) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function isEntry(T) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function isExit(T) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function isReturn(T) in line 325
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function iterateNodes() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function iterateNodes(IntSet) in line 432
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeAllIncidentEdges(Object) in line 278
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(Object,Object) in line 268
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(Object) in line 383
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeNode(Object) in line 199
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(Object) in line 160
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(T) in line 391
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
   function BackwardsSupergraph(ISupergraph< T, P >) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable delegate in line 42
   variable exitFilter in line 43
module com::ibm::wala::dataflow::IFDS::BackwardsSupergraph::ExitFilter
   inherits from com::ibm::wala::util::collections::Filter
   function accepts(Object) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::dataflow::IFDS::BackwardsSupergraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/CallFlowEdges.java
module com::ibm::wala::dataflow::IFDS::CallFlowEdges
   function addCallEdge(int,int,int) in line 65
      protection public
      22 lines of code
      3 parameters
      5 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses variable identityEdges defined in com::ibm::wala::dataflow::IFDS::CallFlowEdges
      uses function add(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable edges defined in com::ibm::wala::dataflow::IFDS::CallFlowEdges
      uses variable SIMPLE_SPACE_STINGY defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable TWO_LEVEL defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getCallFlowSources(int,int) in line 94
      protection public
      29 lines of code
      2 parameters
      7 conditional paths
      uses variable identityEdges defined in com::ibm::wala::dataflow::IFDS::CallFlowEdges
      uses variable edges defined in com::ibm::wala::dataflow::IFDS::CallFlowEdges
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable DEBUG_LEVEL defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
   function CallFlowEdges() in line 52
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable edges in line 42
   variable identityEdges in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/ExplodedSupergraph.java
module com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
   inherits from com::ibm::wala::util::graph::Graph
   function addEdge(ExplodedSupergraphNode,ExplodedSupergraphNode) in line 220
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addNode(ExplodedSupergraphNode) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsNode(ExplodedSupergraphNode) in line 68
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getFlowFunction(T,T) in line 179
      22 lines of code
      2 parameters
      6 conditional paths
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function classifyEdge(T,T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable CALL_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable flowFunctions defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getCallFlowFunction(Object,Object) defined in com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
      uses variable CALL_TO_RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getCalledNodes(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getCallToReturnFlowFunction(Object,Object) defined in com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
      uses function getCallNoneToReturnFlowFunction(Object,Object) defined in com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
      uses variable RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable OTHER defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getNormalFlowFunction(Object,Object) defined in com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
   function getFlowFunctions() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flowFunctions defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
   function getNumberOfNodes() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getPredNodeCount(ExplodedSupergraphNode< T >) in line 119
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function classifyEdge(T,T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getFlowFunction(T,T) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getSources(int) defined in com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
      uses function getFact() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getPredNodes(ExplodedSupergraphNode< T >) in line 73
      protection public
      41 lines of code
      1 parameters
      10 conditional paths
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function classifyEdge(T,T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getFlowFunction(T,T) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getSources(int) defined in com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
      uses function getFact() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function getCallSites(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable flowFunctions defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getReturnFlowFunction(Object,Object,Object) defined in com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
   function getSuccNodeCount(ExplodedSupergraphNode< T >) in line 206
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getFlowFunction(T,T) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getTargets(int) defined in com::ibm::wala::dataflow::IFDS::IUnaryFlowFunction
      uses function getFact() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getSuccNodes(ExplodedSupergraphNode< T >) in line 147
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function classifyEdge(T,T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getFlowFunction(T,T) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getTargets(int) defined in com::ibm::wala::dataflow::IFDS::IUnaryFlowFunction
      uses function getFact() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function getCallSites(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable flowFunctions defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function getReturnFlowFunction(Object,Object,Object) defined in com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
   function getSupergraph() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
   function hasEdge(ExplodedSupergraphNode< T >,ExplodedSupergraphNode< T >) in line 249
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getSuccNodes(ExplodedSupergraphNode< T >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
   function iterateNodes() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function removeAllIncidentEdges(ExplodedSupergraphNode) in line 230
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(ExplodedSupergraphNode,ExplodedSupergraphNode) in line 225
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(ExplodedSupergraphNode) in line 235
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNode(ExplodedSupergraphNode) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(ExplodedSupergraphNode) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(ExplodedSupergraphNode) in line 240
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function ExplodedSupergraph(ISupergraph< T,?>,IFlowFunctionMap) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses variable flowFunctions defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
   variable flowFunctions in line 37
   variable supergraph in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/ExplodedSupergraphNode.java
module com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   function equals(Object) in line 38
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ExplodedSupergraphNode(T,int) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable supergraphNode defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable fact defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   function getFact() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fact defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   function getSupergraphNode() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supergraphNode defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supergraphNode defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable fact defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   function toString() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supergraphNode defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable fact defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   function ExplodedSupergraphNode(T,int) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable supergraphNode defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable fact defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   variable fact in line 24
   variable supergraphNode in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/ExplodedSupergraphPath.java
module com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   function appendNumberedList(StringBuffer,Iterator) in line 419
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
   function computeSummarySLVP(ExplodedSupergraphNode< T >,ExplodedSupergraphNode< T >,Collection< CGNode >) in line 351
      45 lines of code
      3 parameters
      9 conditional paths
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
      uses variable esg defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable CALL_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable RETURN_EDGE defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable DEBUG defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   function findOrCreateSLVP(ExplodedSupergraphNode< T >,ExplodedSupergraphNode< T >,Stack< CGNode >) in line 134
      17 lines of code
      3 parameters
      4 conditional paths
      uses variable edge2SLVP defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function validInCallStack(List< ExplodedSupergraphNode< T >>,Stack< CGNode >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function computeSummarySLVP(ExplodedSupergraphNode< T >,ExplodedSupergraphNode< T >,Collection< CGNode >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   function findRealizablePath(ExplodedSupergraphWithSummaryEdges< T >,ExplodedSupergraphNode< T >) in line 323
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable esg defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses variable DEBUG defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function find() defined in com::ibm::wala::util::graph::traverse::BFSPathFinder
   function iterator() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function pruneBoringCalls(ISupergraph,ExplodedSupergraphPath< T >) in line 444
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable skipBoringCalls defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   function pruneForCallReturn(ISupergraph< T,?>,ExplodedSupergraphPath< T >) in line 452
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function pruneListForCallReturn(ISupergraph< T,?>,List< ExplodedSupergraphNode< T >>) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses variable outermostList defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
      uses variable edge2SLVP defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   function pruneListForCallReturn(ISupergraph< T,?>,List< ExplodedSupergraphNode< T >>) in line 464
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function isEntry(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function isExit(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function isCall(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function isReturn(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
   function summarize(ISupergraph< T,?>,ExplodedSupergraphPath< T >) in line 433
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function pruneForCallReturn(ISupergraph< T,?>,ExplodedSupergraphPath< T >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function pruneBoringCalls(ISupergraph,ExplodedSupergraphPath< T >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   function toString() in line 402
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable outermostList defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function appendNumberedList(StringBuffer,Iterator) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
      uses variable edge2SLVP defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   function validInCallStack(List< ExplodedSupergraphNode< T >>,Stack< CGNode >) in line 161
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
      uses variable esg defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
   function ExplodedSupergraphPath(List< ExplodedSupergraphNode< T >>,ExplodedSupergraphWithSummaryEdges< T >) in line 66
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable esg defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
   variable DEBUG in line 42
   variable edge2SLVP in line 54
   variable esg in line 61
   variable outermostList in line 47
   variable skipBoringCalls in line 59
   variable zeroFactFilter in line 183
module com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
   inherits from java::util::Iterator
   function hasNext() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
   function next() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
   function remove() in line 80
      protection public
      3 lines of code
      0 parameters
      8 conditional paths
      uses variable outermostList defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses variable esg defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses variable skipBoringCalls defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses function getFact() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function findOrCreateSLVP(ExplodedSupergraphNode< T >,ExplodedSupergraphNode< T >,Stack< CGNode >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath
      uses variable it defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::PathIterator
   variable it in line 78
module com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::SLVPFinder
   inherits from com::ibm::wala::util::graph::traverse::BFSPathFinder
   function find() in line 244
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function getConnected(final ExplodedSupergraphNode< T >) in line 220
      14 lines of code
      1 parameters
      1 conditional paths
   function sameProc(ExplodedSupergraphNode< T >,ExplodedSupergraphNode< T >) in line 235
      4 lines of code
      2 parameters
      1 conditional paths
module com::ibm::wala::dataflow::IFDS::ExplodedSupergraphPath::NoReturnBackwardsPathFinder
   inherits from com::ibm::wala::util::graph::traverse::BFSPathFinder
   function getConnected(ExplodedSupergraphNode< T >) in line 282
      33 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/ExplodedSupergraphWithSummaryEdges.java
module com::ibm::wala::dataflow::IFDS::ExplodedSupergraphWithSummaryEdges
   inherits from com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
   function getPredNodeCount(ExplodedSupergraphNode< T >) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPredNodes(ExplodedSupergraphNode< T >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphWithSummaryEdges
   function getPredNodes(ExplodedSupergraphNode< T >) in line 73
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getSupergraph() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function isReturn(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function getCallSites(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable solver defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphWithSummaryEdges
      uses function getSummarySources(T,int,T) defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses function getFact() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function getSuccNodeCount(ExplodedSupergraphNode< T >) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSuccNodes(ExplodedSupergraphNode< T >) defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphWithSummaryEdges
   function getSuccNodes(ExplodedSupergraphNode< T >) in line 48
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getSupergraph() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses function isCall(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses function getSupergraphNode() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function getReturnSites(T) defined in com::ibm::wala::dataflow::IFDS::ISupergraph
      uses variable solver defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphWithSummaryEdges
      uses function getSummaryTargets(T,int,T) defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses function getFact() defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphNode
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function ExplodedSupergraphWithSummaryEdges(ISupergraph< T,?>,IFlowFunctionMap,TabulationSolver< T,?>) in line 37
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses variable flowFunctions defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraph
      uses variable solver defined in com::ibm::wala::dataflow::IFDS::ExplodedSupergraphWithSummaryEdges
   variable solver in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IBinaryReturnFlowFunction.java
module com::ibm::wala::dataflow::IFDS::IBinaryReturnFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IFlowFunction
   function getTargets(int,int) in line 41
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IdentityFlowFunction.java
module com::ibm::wala::dataflow::IFDS::IdentityFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
   function getSources(int) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getTargets(int) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function identity() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable singleton defined in com::ibm::wala::dataflow::IFDS::IdentityFlowFunction
   function toString() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable singleton in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IdentityFlowFunctions.java
module com::ibm::wala::dataflow::IFDS::IdentityFlowFunctions
   inherits from com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
   function getCallFlowFunction(Object,Object) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCallNoneToReturnFlowFunction(Object,Object) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCallToReturnFlowFunction(Object,Object) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getNormalFlowFunction(Object,Object) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getReturnFlowFunction(Object,Object,Object) in line 50
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function singleton() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::dataflow::IFDS::IdentityFlowFunctions
   function IdentityFlowFunctions() in line 30
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IFlowFunction.java
module com::ibm::wala::dataflow::IFDS::IFlowFunction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IFlowFunctionMap.java
module com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
   function getCallFlowFunction(Object,Object) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getCallNoneToReturnFlowFunction(Object,Object) in line 63
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getCallToReturnFlowFunction(Object,Object) in line 54
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getNormalFlowFunction(Object,Object) in line 27
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getReturnFlowFunction(Object,Object,Object) in line 45
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IMergeFunction.java
module com::ibm::wala::dataflow::IFDS::IMergeFunction
   function merge(IntSet,int) in line 37
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IReversibleFlowFunction.java
module com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IUnaryFlowFunction
   function getSources(int) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/ISupergraph.java
module com::ibm::wala::dataflow::IFDS::ISupergraph
   inherits from com::ibm::wala::util::graph::NumberedGraph
   function classifyEdge(T,T) in line 163
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getCalledNodes(T) in line 58
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCallSites(T) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getEntriesForProcedure(P) in line 102
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getExitsForProcedure(P) in line 108
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getLocalBlock(P,int) in line 131
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getLocalBlockNumber(T) in line 122
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMain() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMainEntry() in line 136
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMainExit() in line 142
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNormalSuccessors(T) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfBlocks(P) in line 115
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getProcOf(T) in line 96
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getReturnSites(T) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isCall(T) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isEntry(T) in line 154
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isExit(T) in line 89
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isReturn(T) in line 149
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable CALL_EDGE in line 33
      protection public
   variable CALL_TO_RETURN_EDGE in line 37
      protection public
   variable OTHER in line 39
      protection public
   variable RETURN_EDGE in line 35
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/IUnaryFlowFunction.java
module com::ibm::wala::dataflow::IFDS::IUnaryFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IFlowFunction
   function getTargets(int) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/LocalPathEdges.java
module com::ibm::wala::dataflow::IFDS::LocalPathEdges
   function addIdentityPathEdge(int,int) in line 163
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable identityPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function add(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable altPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable SIMPLE_SPACE_STINGY defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable TWO_LEVEL defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses variable DEBUG_LEVEL defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
   function addPathEdge(int,int,int) in line 121
      protection public
      34 lines of code
      3 parameters
      7 conditional paths
      uses function addZeroPathEdge(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function addIdentityPathEdge(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable paths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable SIMPLE_SPACE_STINGY defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable TWO_LEVEL defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses variable altPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable DEBUG_LEVEL defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
   function addZeroPathEdge(int,int) in line 196
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable zeroPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function add(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable altPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable SIMPLE_SPACE_STINGY defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable TWO_LEVEL defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses variable DEBUG_LEVEL defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
   function contains(int,int,int) in line 315
      protection public
      30 lines of code
      3 parameters
      7 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable zeroPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable identityPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable paths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function contains(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getInverse(int,int) in line 237
      protection public
      70 lines of code
      2 parameters
      15 conditional paths
      uses variable paths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable identityPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable zeroPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function getReachable(int,int) in line 351
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable PARANOID defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function getReachableSlow(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function getReachableFast(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses variable altPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
   function getReachable(int) in line 418
      protection public
      43 lines of code
      1 parameters
      10 conditional paths
      uses variable paths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function getRelatedCount(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable identityPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable zeroPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
   function getReachableFast(int,int) in line 403
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable altPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getReachableSlow(int,int) in line 363
      36 lines of code
      2 parameters
      9 conditional paths
      uses variable paths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function contains(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable identityPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable zeroPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
   function getReachedNodeNumbers() in line 466
      protection public
      21 lines of code
      0 parameters
      8 conditional paths
      uses variable paths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable identityPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable zeroPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
   function LocalPathEdges(boolean) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable altPaths defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
   variable altPaths in line 84
   variable identityPaths in line 92
   variable PARANOID in line 38
   variable paths in line 61
   variable zeroPaths in line 100
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/LocalSummaryEdges.java
module com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
   function contains(int,int,int,int) in line 113
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function getIndexForEntryExitPair(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses variable summaries defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses function contains(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getIndexForEntryExitPair(int,int) in line 175
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable entryExitMap defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses function get(long) defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses variable UNASSIGNED defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses variable nextEntryExitIndex defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses function set(long,int) defined in com::ibm::wala::util::intset::SparseLongIntVector
   function getInvertedSummaryEdgesForTarget(int,int,int) in line 155
      protection public
      16 lines of code
      3 parameters
      4 conditional paths
      uses function getIndexForEntryExitPair(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses variable summaries defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses function getY() defined in com::ibm::wala::util::intset::IntPair
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getX() defined in com::ibm::wala::util::intset::IntPair
   function getSummaryEdges(int,int,int) in line 133
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses function getIndexForEntryExitPair(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses variable summaries defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function insertSummaryEdge(int,int,int,int) in line 86
      protection public
      14 lines of code
      4 parameters
      3 conditional paths
      uses function getIndexForEntryExitPair(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses variable summaries defined in com::ibm::wala::dataflow::IFDS::LocalSummaryEdges
      uses variable SIMPLE_SPACE_STINGY defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable SIMPLE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses variable DEBUG_LEVEL defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
   function LocalSummaryEdges() in line 71
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable entryExitMap in line 64
   variable nextEntryExitIndex in line 66
   variable summaries in line 52
   variable UNASSIGNED in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/PartiallyCollapsedSupergraph.java
module com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   inherits from com::ibm::wala::util::graph::AbstractGraph
   inherits from ISupergraph< Object, CGNode >
   function classifyEdge(Object,Object) in line 1029
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function isCall(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable CALL_EDGE defined in ISupergraph< Object, CGNode >
      uses variable CALL_TO_RETURN_EDGE defined in ISupergraph< Object, CGNode >
      uses function isExit(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable RETURN_EDGE defined in ISupergraph< Object, CGNode >
      uses variable OTHER defined in ISupergraph< Object, CGNode >
   function getCalledNodes(Object) in line 313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodes(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getCallGraph() in line 1145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getCallSites(Object) in line 336
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCallSites(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getEdgeManager() in line 193
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getEntries(Object) in line 230
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getProcOf(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getEntryForProcedure(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getEntriesForProcedure(CGNode) in line 961
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getEntryForProcedure(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getEntryForProcedure(Object) in line 211
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getEntry(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getExitsForProcedure(CGNode) in line 240
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getLocalBlock(CGNode,int) in line 1092
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getNode(int) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getLocalBlockNumber(Object) in line 1078
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getMain() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::CallGraph
   function getMainEntry() in line 973
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getEntryForProcedure(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getMain() defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getMainExit() in line 982
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses function getMain() defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getMaxNumber() in line 1119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getMaxNumber() defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getNode(int) in line 1109
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getNodeManager() in line 184
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getNormalSuccessors(Object) in line 1049
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumber(Object) in line 1105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getNumber(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getNumberOfBlocks(CGNode) in line 1058
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getMaxNumber() defined in com::ibm::wala::util::graph::NumberedNodeManager
   function getPredNodeNumbers(Object) in line 1141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getPredNodeNumbers(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
   function getProcOf(Object) in line 350
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCGNode(IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getReturnSites(Object) in line 322
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getReturnSites(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getSuccNodeNumbers(Object) in line 1133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodeNumbers(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
   function getUncollapsedGraph() in line 1019
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function isCall(Object) in line 260
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function hasCall(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function toString() defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function isCollapsedEntry(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
   function isEntry(Object) in line 284
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isEntryBlock() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function isCollapsedEntry(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function isExit(Object) in line 298
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isExitBlock() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function isCollapsedExit(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function isReturn(Object) in line 1003
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function isReturn(Object) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function isCollapsedExit(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getProcOf(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
   function iterateNodes(IntSet) in line 1123
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function PartiallyCollapsedSupergraph(CallGraph,CFGCache,Collection< CGNode >,WarningSet) in line 110
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function PartiallyCollapsedSupergraph(CallGraph,CFGCache,Collection< CGNode >,Filter,WarningSet) in line 125
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function PartiallyCollapsedSupergraph(CallGraph,CFGProvider,Collection< CGNode >,WarningSet) in line 138
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function PartiallyCollapsedSupergraph(CallGraph,CFGProvider,Collection< CGNode >,Filter,WarningSet) in line 153
      protection public
      25 lines of code
      5 parameters
      4 conditional paths
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function toString() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   variable cg in line 84
   variable edgeManager in line 79
   variable isEntry in line 96
   variable noCollapse in line 94
   variable nodeManager in line 77
   variable partialIPFG in line 89
module com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
   inherits from com::ibm::wala::util::graph::NumberedEdgeManager
   function addEdge(Object,Object) in line 728
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function computeTransverseEdges() in line 387
      75 lines of code
      0 parameters
      11 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function iterateNodes() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function hasCall(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCallTargets(IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses variable incomingTransverseEdges defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses variable outgoingTransverseEdges defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getReturnSites(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function iterateCollapsedNodes() defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function isCollapsedEntry(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function entry() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getNormalExit() defined in com::ibm::wala::cfg::TwoExitCFG
      uses function getExceptionalExit() defined in com::ibm::wala::cfg::TwoExitCFG
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getPredNodeCount(Object) in line 590
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getPredNodes(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses function size() defined in com::ibm::wala::util::collections::Iterator2Collection
   function getPredNodeNumbers(Object) in line 532
      protection public
      51 lines of code
      1 parameters
      13 conditional paths
      uses variable incomingTransverseEdges defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getPredNodeNumbers(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getNumber(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getPredNodes(Object) in line 485
      protection public
      42 lines of code
      1 parameters
      10 conditional paths
      uses variable incomingTransverseEdges defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getPredNodes(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   function getSuccNodeCount(Object) in line 717
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSuccNodes(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses function size() defined in com::ibm::wala::util::collections::Iterator2Collection
   function getSuccNodeNumbers(Object) in line 645
      protection public
      46 lines of code
      1 parameters
      11 conditional paths
      uses variable outgoingTransverseEdges defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodeNumbers(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getNumber(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function add(int) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getPredNodes(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses function getReturnSites(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function getSuccNodes(Object) in line 600
      protection public
      39 lines of code
      1 parameters
      9 conditional paths
      uses variable outgoingTransverseEdges defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodes(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses variable nodeManager defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getProcOfCollapsedNode(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses variable cg defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable noCollapse defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getCollapsedEntry(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getCollapsedExit(CGNode) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
      uses function getPredNodes(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses function getReturnSites(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function hasEdge(Object,Object) in line 696
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function hasEdge(BasicBlockInContext,BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getSuccNodeNumbers(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function getNumber(Object) defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function removeAllIncidentEdges(Object) in line 741
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(Object,Object) in line 732
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(Object) in line 750
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(Object) in line 759
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 463
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable incomingTransverseEdges defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::EdgeManager
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   variable incomingTransverseEdges in line 373
   variable outgoingTransverseEdges in line 378
module com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::NodeManager
   inherits from com::ibm::wala::util::graph::NumberedNodeManager
   function addNode(Object) in line 863
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsNode(Object) in line 883
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function containsNode(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getCollapsedEntry(CGNode) in line 820
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getCollapsedExit(CGNode) in line 835
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMaxNumber() in line 945
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getMaxNumber() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getNode(int) in line 935
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getNumber(Object) in line 927
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getNumber(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getNumberOfNodes() in line 854
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function getNumberOfNodes() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getProcOfCollapsedNode(Object) in line 808
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isCollapsedEntry(Object) in line 798
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isCollapsedExit(Object) in line 803
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function iterateCollapsedNodes() in line 912
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateNodes() in line 845
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function iterateNodes() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function iterateNodes(IntSet) in line 949
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function iterateUncollapsedNodes() in line 919
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable partialIPFG defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
      uses function iterateNodes() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function removeNode(Object) in line 873
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 896
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
   variable collapsedNodes in line 780
   variable node2EntryIndex in line 778
module com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph::CollapsedNode
   function equals(Object) in line 1174
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function hashCode() in line 1170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
   function toString() in line 1166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isEntry defined in com::ibm::wala::dataflow::IFDS::PartiallyCollapsedSupergraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/SingletonFlowFunction.java
module com::ibm::wala::dataflow::IFDS::SingletonFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
   function create(int) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function SingletonFlowFunction(int) defined in com::ibm::wala::dataflow::IFDS::SingletonFlowFunction
   function getSources(int) in line 47
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable zeroSet defined in com::ibm::wala::dataflow::IFDS::SingletonFlowFunction
   function getTargets(int) in line 36
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable zeroSet defined in com::ibm::wala::dataflow::IFDS::SingletonFlowFunction
   function SingletonFlowFunction(int) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
   variable zeroSet in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/SolverInterruptedException.java
module com::ibm::wala::dataflow::IFDS::SolverInterruptedException
   inherits from Exception
   variable serialVersionUID in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/TabulationDomain.java
module com::ibm::wala::dataflow::IFDS::TabulationDomain
   inherits from com::ibm::wala::util::intset::OrdinalSetMapping
   function isWeakerThan(int,int) in line 27
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/TabulationProblem.java
module com::ibm::wala::dataflow::IFDS::TabulationProblem
   function getDomain() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFunctionMap() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMergeFunction() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReachableOnEntry() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSupergraph() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/TabulationResult.java
module com::ibm::wala::dataflow::IFDS::TabulationResult
   function getProblem() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getResult(T) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSupergraphNodesReached() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/TabulationSolver.java
module com::ibm::wala::dataflow::IFDS::TabulationSolver
   function addToWorkList(T,int,T,int) in line 825
      3 lines of code
      4 parameters
      1 conditional paths
   function computeBinaryFlow(int,int,IBinaryReturnFlowFunction) in line 684
      18 lines of code
      3 parameters
      1 conditional paths
   function computeFlow(int,IUnaryFlowFunction) in line 707
      12 lines of code
      2 parameters
      1 conditional paths
   function computeInverseFlow(int,IReversibleFlowFunction) in line 723
      3 lines of code
      2 parameters
      1 conditional paths
   function findOrCreateCallFlowEdges(T) in line 851
      8 lines of code
      1 parameters
      1 conditional paths
   function findOrCreateLocalPathEdges(T) in line 829
      8 lines of code
      1 parameters
      1 conditional paths
   function findOrCreateLocalSummaryEdges(Object) in line 842
      8 lines of code
      1 parameters
      1 conditional paths
   function forwardTabulateSLRPs() in line 225
      37 lines of code
      0 parameters
      1 conditional paths
   function getInversePathEdges(T,T,int) in line 534
      8 lines of code
      3 parameters
      1 conditional paths
   function getProblem() in line 1125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSummarySources(T,int,T) in line 1114
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
   function getSummaryTargets(T,int,T) in line 1096
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
   function getSupergraph() in line 1063
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 209
      10 lines of code
      0 parameters
      1 conditional paths
   function makeLocalPathEdges() in line 838
      3 lines of code
      0 parameters
      1 conditional paths
   function merge(T,int,T,int) in line 789
      35 lines of code
      4 parameters
      1 conditional paths
   function peekFromWorkList() in line 731
      6 lines of code
      0 parameters
      1 conditional paths
   function performVerboseAction() in line 281
      15 lines of code
      0 parameters
      1 conditional paths
   function popFromWorkList() in line 727
      3 lines of code
      0 parameters
      1 conditional paths
   function processCall(final PathEdge) in line 547
      132 lines of code
      1 parameters
      1 conditional paths
   function processExit(final PathEdge) in line 331
      43 lines of code
      1 parameters
      1 conditional paths
   function processNormal(final PathEdge) in line 302
      20 lines of code
      1 parameters
      1 conditional paths
   function propagate(T,int,T,int) in line 757
      24 lines of code
      4 parameters
      1 conditional paths
   function propagateToReturnSites(final PathEdge,IntSet,final T,final IntSet) in line 391
      74 lines of code
      4 parameters
      1 conditional paths
   function propagateToReturnSiteWithBinaryFlowFunction(final PathEdge,final T,final IntSet,final T[],final T,final IFlowFunction) in line 486
      39 lines of code
      6 parameters
      1 conditional paths
   function solve() in line 188
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function tendToSoftCaches() in line 270
      7 lines of code
      0 parameters
      1 conditional paths
   function TabulationSolver(TabulationProblem< T, P >) in line 172
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   variable callFlowEdges in line 155
   variable DEBUG_IDENTITY_FLOW in line 84
   variable DEBUG_LEVEL in line 68
   variable DUMMY_ZERO in line 105
      protection public
   variable flowFunctionMap in line 132
   variable INTERRUPTIBLE in line 122
   variable pathEdges in line 146
   variable PERIODIC_WIPE_SOFT_CACHES in line 90
   variable problem in line 137
   variable summaryEdges in line 161
   variable supergraph in line 127
   variable verbose in line 70
   variable verboseCounter in line 79
   variable WIPE_SOFT_CACHE_INTERVAL in line 95
   variable wipeCount in line 100
   variable worklist in line 166
module com::ibm::wala::dataflow::IFDS::TabulationSolver::PathEdge
   function equals(Object) in line 921
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getD1() in line 930
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getD2() in line 934
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getN() in line 942
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSp() in line 938
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 912
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 893
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::dataflow::IFDS::TabulationSolver::Result
   inherits from com::ibm::wala::dataflow::IFDS::TabulationResult
   function getProblem() in line 1036
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable problem defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
   function getResult(T) in line 958
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses variable pathEdges defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getReachable(int,int) defined in com::ibm::wala::dataflow::IFDS::LocalPathEdges
   function getSupergraphNodesReached() in line 1045
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable pathEdges defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function toString() in line 990
      protection public
      40 lines of code
      0 parameters
      7 conditional paths
      uses variable supergraph defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
module com::ibm::wala::dataflow::IFDS::TabulationSolver::Worklist
   inherits from com::ibm::wala::util::collections::Heap
   function compareElements(Object,Object) in line 1077
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable problem defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses function getDomain() defined in com::ibm::wala::dataflow::IFDS::TabulationProblem
      uses function isWeakerThan(int,int) defined in com::ibm::wala::dataflow::IFDS::TabulationDomain
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/UniversalKillFlowFunction.java
module com::ibm::wala::dataflow::IFDS::UniversalKillFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
   function getSources(int) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getTargets(int) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function kill() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable singleton defined in com::ibm::wala::dataflow::IFDS::UniversalKillFlowFunction
   function toString() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable singleton in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/UnorderedDomain.java
module com::ibm::wala::dataflow::IFDS::UnorderedDomain
   inherits from com::ibm::wala::util::intset::MutableMapping
   inherits from com::ibm::wala::dataflow::IFDS::TabulationDomain
   function isWeakerThan(int,int) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/VectorGenFlowFunction.java
module com::ibm::wala::dataflow::IFDS::VectorGenFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
   function getSources(int) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable gen defined in com::ibm::wala::dataflow::IFDS::VectorGenFlowFunction
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
   function getTargets(int) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable gen defined in com::ibm::wala::dataflow::IFDS::VectorGenFlowFunction
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
   function make(SparseIntSet) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function VectorGenFlowFunction(SparseIntSet) defined in com::ibm::wala::dataflow::IFDS::VectorGenFlowFunction
      uses variable gen defined in com::ibm::wala::dataflow::IFDS::VectorGenFlowFunction
   function toString() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable gen defined in com::ibm::wala::dataflow::IFDS::VectorGenFlowFunction
   function VectorGenFlowFunction(SparseIntSet) in line 29
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable gen defined in com::ibm::wala::dataflow::IFDS::VectorGenFlowFunction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
   variable gen in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/IFDS/VectorKillFlowFunction.java
module com::ibm::wala::dataflow::IFDS::VectorKillFlowFunction
   inherits from com::ibm::wala::dataflow::IFDS::IReversibleFlowFunction
   function getSources(int) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kill defined in com::ibm::wala::dataflow::IFDS::VectorKillFlowFunction
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function getTargets(int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kill defined in com::ibm::wala::dataflow::IFDS::VectorKillFlowFunction
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function make(IntSet) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function VectorKillFlowFunction(IntSet) defined in com::ibm::wala::dataflow::IFDS::VectorKillFlowFunction
      uses variable kill defined in com::ibm::wala::dataflow::IFDS::VectorKillFlowFunction
   function VectorKillFlowFunction(IntSet) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kill defined in com::ibm::wala::dataflow::IFDS::VectorKillFlowFunction
   variable kill in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dataflow/ssa/SSAInference.java
module com::ibm::wala::dataflow::ssa::SSAInference
   inherits from com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   abstract class
   function createEquations(OperatorFactory) in line 85
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable ir defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function makeEquationForInstruction(OperatorFactory,SSAInstruction) defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function iteratePhis() defined in com::ibm::wala::ssa::IR
      uses function iteratePis() defined in com::ibm::wala::ssa::IR
      uses function iterateCatchInstructions() defined in com::ibm::wala::ssa::IR
   function createVariables(VariableFactory) in line 135
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable vars defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses variable symbolTable defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function getMaxValueNumber() defined in com::ibm::wala::ssa::SymbolTable
      uses function makeVariable(int) defined in com::ibm::wala::dataflow::ssa::SSAInference::VariableFactory
   function getVariable(int) in line 148
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable vars defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function init(IR,VariableFactory,OperatorFactory) in line 71
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable ir defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function createVariables(VariableFactory) defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function createEquations(OperatorFactory) defined in com::ibm::wala::dataflow::ssa::SSAInference
   function makeEquationForInstruction(OperatorFactory,SSAInstruction) in line 108
      23 lines of code
      2 parameters
      7 conditional paths
      uses function hasDef() defined in com::ibm::wala::ssa::SSAInstruction
      uses function get(SSAInstruction) defined in com::ibm::wala::dataflow::ssa::SSAInference::OperatorFactory
      uses function getVariable(int) defined in com::ibm::wala::dataflow::ssa::SSAInference
      uses function getDef() defined in com::ibm::wala::ssa::SSAInstruction
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function toString() in line 163
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable vars defined in com::ibm::wala::dataflow::ssa::SSAInference
   variable ir in line 38
   variable symbolTable in line 43
   variable vars in line 48
module com::ibm::wala::dataflow::ssa::SSAInference::OperatorFactory
   function get(SSAInstruction) in line 57
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::dataflow::ssa::SSAInference::VariableFactory
   function makeVariable(int) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dynamic/BasicLauncher.java
module com::ibm::wala::dynamic::BasicLauncher
   inherits from com::ibm::wala::dynamic::Launcher
   function getCmd() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cmd defined in com::ibm::wala::dynamic::BasicLauncher
   function launch() in line 106
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses function spawnProcess(String) defined in com::ibm::wala::dynamic::Launcher
      uses function getCmd() defined in com::ibm::wala::dynamic::BasicLauncher
      uses function drainStdErr(Process) defined in com::ibm::wala::dynamic::Launcher
      uses function isCaptureOutput() defined in com::ibm::wala::dynamic::Launcher
      uses function captureStdOut(Process) defined in com::ibm::wala::dynamic::Launcher
      uses function drainStdOut(Process) defined in com::ibm::wala::dynamic::Launcher
      uses function setOutput(byte[]) defined in com::ibm::wala::dynamic::Launcher
   function setCmd(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cmd defined in com::ibm::wala::dynamic::BasicLauncher
   function toString() in line 91
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable cmd defined in com::ibm::wala::dynamic::BasicLauncher
      uses variable captureOutput defined in com::ibm::wala::dynamic::Launcher
      uses variable output defined in com::ibm::wala::dynamic::Launcher
   function BasicLauncher() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable CAPTURE_OUTPUT_EDEFAULT in line 47
   variable cmd in line 37
   variable CMD_EDEFAULT in line 27
   variable OUTPUT_EDEFAULT in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dynamic/JavaLauncher.java
module com::ibm::wala::dynamic::JavaLauncher
   inherits from com::ibm::wala::dynamic::Launcher
   function getClasspathEntries() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classpathEntries defined in com::ibm::wala::dynamic::JavaLauncher
   function getJavaExe() in line 148
      4 lines of code
      0 parameters
      1 conditional paths
   function getMainClass() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mainClass defined in com::ibm::wala::dynamic::JavaLauncher
   function getProgramArgs() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable programArgs defined in com::ibm::wala::dynamic::JavaLauncher
   function launch() in line 158
      protection public
      23 lines of code
      0 parameters
      3 conditional paths
      uses function makeClasspath() defined in com::ibm::wala::dynamic::JavaLauncher
      uses function getJavaExe() defined in com::ibm::wala::dynamic::JavaLauncher
      uses function getMainClass() defined in com::ibm::wala::dynamic::JavaLauncher
      uses function getProgramArgs() defined in com::ibm::wala::dynamic::JavaLauncher
      uses function spawnProcess(String) defined in com::ibm::wala::dynamic::Launcher
      uses function isCaptureOutput() defined in com::ibm::wala::dynamic::Launcher
      uses function captureStdOut(Process) defined in com::ibm::wala::dynamic::Launcher
      uses function drainStdOut(Process) defined in com::ibm::wala::dynamic::Launcher
      uses function drainStdErr(Process) defined in com::ibm::wala::dynamic::Launcher
      uses function setOutput(byte[]) defined in com::ibm::wala::dynamic::Launcher
   function makeClasspath() in line 182
      15 lines of code
      0 parameters
      4 conditional paths
      uses function getClasspathEntries() defined in com::ibm::wala::dynamic::JavaLauncher
   function setMainClass(String) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainClass defined in com::ibm::wala::dynamic::JavaLauncher
   function setProgramArgs(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable programArgs defined in com::ibm::wala::dynamic::JavaLauncher
   function toString() in line 133
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable programArgs defined in com::ibm::wala::dynamic::JavaLauncher
      uses variable mainClass defined in com::ibm::wala::dynamic::JavaLauncher
      uses variable classpathEntries defined in com::ibm::wala::dynamic::JavaLauncher
   function JavaLauncher() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable classpathEntries in line 72
   variable MAIN_CLASS_EDEFAULT in line 52
   variable mainClass in line 62
   variable PROGRAM_ARGS_EDEFAULT in line 32
   variable programArgs in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/dynamic/Launcher.java
module com::ibm::wala::dynamic::Launcher
   abstract class
   function buildEnv(Map) in line 158
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable env defined in com::ibm::wala::dynamic::Launcher
   function captureStdOut(Process) in line 179
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable output defined in com::ibm::wala::dynamic::Launcher
      uses function drainAndCatch(BufferedInputStream,ByteArrayOutputStream) defined in com::ibm::wala::dynamic::Launcher
   function drainAndCatch(BufferedInputStream,ByteArrayOutputStream) in line 264
      7 lines of code
      2 parameters
      2 conditional paths
   function drainAndPrint(BufferedInputStream,PrintStream) in line 256
      7 lines of code
      2 parameters
      2 conditional paths
   function drainStdErr(Process) in line 193
      10 lines of code
      1 parameters
      5 conditional paths
      uses function drainAndPrint(BufferedInputStream,PrintStream) defined in com::ibm::wala::dynamic::Launcher
   function drainStdOut(Process) in line 168
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable output defined in com::ibm::wala::dynamic::Launcher
      uses function drainAndPrint(BufferedInputStream,PrintStream) defined in com::ibm::wala::dynamic::Launcher
   function getEnv() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable env defined in com::ibm::wala::dynamic::Launcher
   function getOutput() in line 295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable output defined in com::ibm::wala::dynamic::Launcher
   function getWorkingDir() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable workingDir defined in com::ibm::wala::dynamic::Launcher
   function isCaptureOutput() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable captureOutput defined in com::ibm::wala::dynamic::Launcher
   function setCaptureOutput(boolean) in line 286
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable captureOutput defined in com::ibm::wala::dynamic::Launcher
   function setEnv(Map) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable env defined in com::ibm::wala::dynamic::Launcher
   function setOutput(byte[]) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable output defined in com::ibm::wala::dynamic::Launcher
   function setWorkingDir(File) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable workingDir defined in com::ibm::wala::dynamic::Launcher
   function spawnProcess(String) in line 146
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable env defined in com::ibm::wala::dynamic::Launcher
      uses function getEnv() defined in com::ibm::wala::dynamic::Launcher
      uses function buildEnv(Map) defined in com::ibm::wala::dynamic::Launcher
      uses function getWorkingDir() defined in com::ibm::wala::dynamic::Launcher
   function toString() in line 131
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable workingDir defined in com::ibm::wala::dynamic::Launcher
      uses variable env defined in com::ibm::wala::dynamic::Launcher
   function Launcher() in line 89
      3 lines of code
      0 parameters
      1 conditional paths
   variable captureOutput in line 83
   variable env in line 63
   variable ENV_EDEFAULT in line 53
   variable output in line 73
   variable WORKING_DIR_EDEFAULT in line 34
   variable workingDir in line 43
module com::ibm::wala::dynamic::Launcher::Drainer
   inherits from Thread
   abstract class
   function getCapture() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function run() in line 221
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
   function setCapture(ByteArrayOutputStream) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable capture in line 213
   variable p in line 212
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/ECallGraphWrapper.java
module com::ibm::wala::emf::wrappers::ECallGraphWrapper
   inherits from com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function debugClassContainers(EContainer,EJavaClass) in line 111
      10 lines of code
      2 parameters
      2 conditional paths
   function export() in line 57
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphFactory
      uses function createECallGraph() defined in com::ibm::wala::ecore::java::callGraph::CallGraphFactory
      uses function makeNodes(ECallGraph) defined in com::ibm::wala::emf::wrappers::ECallGraphWrapper
      uses function makeEdges(ECallGraph,EObjectDictionary) defined in com::ibm::wala::emf::wrappers::ECallGraphWrapper
   function load(String,ClassLoader) in line 123
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function loadFromFile(String,ClassLoader) defined in com::ibm::wala::emf::wrappers::ECallGraphWrapper
      uses function getNodes() defined in com::ibm::wala::ecore::graph::EGraph
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getEdges() defined in com::ibm::wala::ecore::graph::EGraph
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getX() defined in com::ibm::wala::ecore::common::EPair
      uses function getY() defined in com::ibm::wala::ecore::common::EPair
   function loadFromFile(String,ClassLoader) in line 139
      33 lines of code
      2 parameters
      5 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   function makeEdges(ECallGraph,EObjectDictionary) in line 69
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createERelation() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getSuccNodes(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function createEPair() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
   function makeNodes(ECallGraph) in line 84
      26 lines of code
      1 parameters
      6 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function findOrAdd(EObject) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::ECallSite
      uses function getJavaMethod() defined in com::ibm::wala::ecore::java::ECallSite
      uses variable DEBUG defined in com::ibm::wala::emf::wrappers::ECallGraphWrapper
      uses function debugClassContainers(EContainer,EJavaClass) defined in com::ibm::wala::emf::wrappers::ECallGraphWrapper
      uses function getJavaClass() defined in com::ibm::wala::ecore::java::EJavaMethod
      uses function export(boolean) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function setNodes(ECollection) defined in com::ibm::wala::ecore::graph::EGraph
   variable DEBUG in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EClassHierarchyWrapper.java
module com::ibm::wala::emf::wrappers::EClassHierarchyWrapper
   inherits from com::ibm::wala::emf::wrappers::EObjectTree
   function addClass(EJavaClass) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function addSubClass(EJavaClass,EJavaClass) in line 178
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function export() in line 58
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaFactory
      uses function createEClassHierarchy() defined in com::ibm::wala::ecore::java::JavaFactory
      uses function makeNodes(EClassHierarchy) defined in com::ibm::wala::emf::wrappers::EClassHierarchyWrapper
      uses function makeEdges(EClassHierarchy) defined in com::ibm::wala::emf::wrappers::EClassHierarchyWrapper
   function getAllSuperclasses(EJavaClass) in line 183
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getSuperclass(EJavaClass) defined in com::ibm::wala::emf::wrappers::EClassHierarchyWrapper
   function getSuperclass(EJavaClass) in line 197
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getPredNodeCount(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getPredNodes(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function load(String,ClassLoader) in line 105
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function loadFromFile(String,ClassLoader) defined in com::ibm::wala::emf::wrappers::EClassHierarchyWrapper
   function load(EObject) in line 115
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getNodes() defined in com::ibm::wala::ecore::graph::EGraph
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getEdges() defined in com::ibm::wala::ecore::graph::EGraph
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getX() defined in com::ibm::wala::ecore::common::EPair
      uses function getY() defined in com::ibm::wala::ecore::common::EPair
   function loadFromFile(String,ClassLoader) in line 135
      29 lines of code
      2 parameters
      5 conditional paths
   function makeEdges(EClassHierarchy) in line 71
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createERelation() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getSuccNodes(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function createEPair() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
   function makeNodes(EClassHierarchy) in line 91
      9 lines of code
      1 parameters
      2 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function findOrAdd(EObject) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function export(boolean) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function setNodes(ECollection) defined in com::ibm::wala::ecore::graph::EGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EInterfaceHierarchyWrapper.java
module com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
   inherits from com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function addInterface(EJavaClass) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function addSubClass(EJavaClass,EJavaClass) in line 157
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function export() in line 53
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaFactory
      uses function createEInterfaceHierarchy() defined in com::ibm::wala::ecore::java::JavaFactory
      uses function makeNodes(EInterfaceHierarchy) defined in com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
      uses function makeEdges(EInterfaceHierarchy) defined in com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
   function getAllSuperclasses(EJavaClass) in line 162
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function load(String,ClassLoader) in line 86
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function loadFromFile(String,ClassLoader) defined in com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
   function load(EObject) in line 95
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getNodes() defined in com::ibm::wala::ecore::graph::EGraph
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getEdges() defined in com::ibm::wala::ecore::graph::EGraph
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getX() defined in com::ibm::wala::ecore::common::EPair
      uses function getY() defined in com::ibm::wala::ecore::common::EPair
   function loadFromFile(String,ClassLoader) in line 112
      29 lines of code
      2 parameters
      5 conditional paths
   function makeEdges(EInterfaceHierarchy) in line 61
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createERelation() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getSuccNodes(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function createEPair() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
   function makeNodes(EInterfaceHierarchy) in line 76
      9 lines of code
      1 parameters
      2 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function findOrAdd(EObject) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function export(boolean) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function setNodes(ECollection) defined in com::ibm::wala::ecore::graph::EGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EMFBridge.java
module com::ibm::wala::emf::wrappers::EMFBridge
   function getEClassLoaderName(TypeReference) in line 128
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses variable PRIMORDIAL_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
      uses variable APPLICATION_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable Extension defined in com::ibm::wala::types::ClassLoaderReference
      uses variable EXTENSION_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
   function makeCallGraph(CallGraph) in line 46
      protection public
      27 lines of code
      1 parameters
      6 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function makeJavaMethod(MethodReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function iterateSites() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function makeCallSite(EJavaMethod,CallSiteReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
   function makeCallSite(EJavaMethod,CallSiteReference) in line 81
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaFactory
      uses function createECallSite() defined in com::ibm::wala::ecore::java::JavaFactory
      uses function setBytecodeIndex(int) defined in com::ibm::wala::ecore::java::ECallSite
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::ECallSite
      uses function setDeclaredTarget(EJavaMethod) defined in com::ibm::wala::ecore::java::ECallSite
      uses function makeJavaMethod(MethodReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
   function makeClassHierarchy(ClassHierarchy) in line 148
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function makeJavaClass(TypeReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getImmediateSubclasses(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function makeFakeRootMethod() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function makeJavaMethod(MethodReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
   function makeInterfaceHierarchy(ClassHierarchy) in line 180
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function makeJavaClass(TypeReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function addInterface(EJavaClass) defined in com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
      uses function getImmediateSubclasses(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function addSubClass(EJavaClass,EJavaClass) defined in com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
   function makeJavaClass(TypeReference) in line 116
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaFactory
      uses function createEJavaClass() defined in com::ibm::wala::ecore::java::JavaFactory
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toUnicodeString() defined in com::ibm::wala::types::TypeName
      uses variable ClassTypeCode defined in com::ibm::wala::types::TypeReference
      uses function setClassName(String) defined in com::ibm::wala::ecore::java::EJavaClass
      uses function setLoader(EClassLoaderName) defined in com::ibm::wala::ecore::java::EJavaClass
      uses function getEClassLoaderName(TypeReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
   function makeJavaMethod(MethodReference) in line 101
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaFactory
      uses function createEJavaMethod() defined in com::ibm::wala::ecore::java::JavaFactory
      uses function makeJavaClass(TypeReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::EJavaMethod
      uses function setDescriptor(String) defined in com::ibm::wala::ecore::java::EJavaMethod
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function toUnicodeString() defined in com::ibm::wala::types::Descriptor
      uses function setMethodName(String) defined in com::ibm::wala::ecore::java::EJavaMethod
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function toUnicodeString() defined in com::ibm::wala::util::Atom
   function makeTypeHierarchy(ClassHierarchy) in line 212
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function makeClassHierarchy(ClassHierarchy) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function makeInterfaceHierarchy(ClassHierarchy) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function makeJavaClass(TypeReference) defined in com::ibm::wala::emf::wrappers::EMFBridge
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getDirectInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses function recordImplements(EJavaClass,EJavaClass) defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EMFScopeWrapper.java
module com::ibm::wala::emf::wrappers::EMFScopeWrapper
   inherits from com::ibm::wala::ipa::callgraph::AnalysisScope
   function addDefaultBypassLoader() in line 147
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SYNTHETIC_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses function getName() defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function addDefaultJarFileToScope(String,ClassLoaderReference) in line 306
      18 lines of code
      2 parameters
      4 conditional paths
   function addLibsToLoader(String[],ClassLoaderReference) in line 329
      18 lines of code
      2 parameters
      4 conditional paths
   function generateClassScope(ClassLoader,String,String) in line 435
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function createEJavaAnalysisScope() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function getLoaders() defined in com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
      uses function populate(EJavaAnalysisScope) defined in com::ibm::wala::emf::wrappers::EMFScopeWrapper
      uses function addDefaultBypassLoader() defined in com::ibm::wala::emf::wrappers::EMFScopeWrapper
      uses function setExclusions(SetOfClasses) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function generateJarScope(ClassLoader,String,String) in line 412
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
   function generateScope(EJavaAnalysisScope) in line 483
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function generateScope(final EJavaAnalysisScope,final EMFScopeWrapper) in line 488
      10 lines of code
      2 parameters
      2 conditional paths
      uses function populate(EJavaAnalysisScope) defined in com::ibm::wala::emf::wrappers::EMFScopeWrapper
      uses function addDefaultBypassLoader() defined in com::ibm::wala::emf::wrappers::EMFScopeWrapper
      uses function getExclusionFileName() defined in com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
      uses function setExclusions(SetOfClasses) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getExclusionString() in line 396
      3 lines of code
      0 parameters
      1 conditional paths
   function populate(EJavaAnalysisScope) in line 157
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getLoaders() defined in com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
      uses function getLoaderName() defined in com::ibm::wala::ecore::java::scope::EClassLoader
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::EClassLoader
   function processBuiltInModule(EBuiltInModule,ClassLoaderReference) in line 259
      40 lines of code
      2 parameters
      11 conditional paths
      uses function getId() defined in com::ibm::wala::ecore::java::scope::EBuiltInModule
      uses variable DEFAULT_J2SE_LIBS defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable DEFAULT_J2EE_LIBS defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable PRIMORDIAL_JAR_MODEL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable EXTENSION_JAR_MODEL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
   function processClassFile(EClassFile,ClassLoaderReference) in line 228
      6 lines of code
      2 parameters
      1 conditional paths
   function processJarFile(EJarFile,ClassLoaderReference) in line 239
      16 lines of code
      2 parameters
      2 conditional paths
      uses function getUrl() defined in com::ibm::wala::ecore::java::scope::EJarFile
   function processModule(EModule,final ClassLoaderReference) in line 174
      36 lines of code
      2 parameters
      2 conditional paths
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
   function processSourceFile(ESourceFile,ClassLoaderReference) in line 215
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getUrl() defined in com::ibm::wala::ecore::java::scope::EFile
   function readScope() in line 351
      17 lines of code
      0 parameters
      3 conditional paths
   function readScopeAsFile() in line 372
      23 lines of code
      0 parameters
      3 conditional paths
   function EMFScopeWrapper(final ClassLoader) in line 104
      5 lines of code
      1 parameters
      1 conditional paths
   function EMFScopeWrapper(String,String,ClassLoader,boolean) in line 111
      protection public
      27 lines of code
      4 parameters
      5 conditional paths
   function EMFScopeWrapper(String,String,ClassLoader) in line 139
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   variable DEBUG_LEVEL in line 83
   variable exclusionsFile in line 85
   variable loader in line 89
   variable scopeFile in line 87
   variable SUCCESS in line 91
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EObjectDictionary.java
module com::ibm::wala::emf::wrappers::EObjectDictionary
   function export(boolean) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function export(boolean,boolean) in line 84
      protection public
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createEContainer() defined in com::ibm::wala::ecore::common::CommonFactory
      uses variable map defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function getMappingSize() defined in com::ibm::wala::util::intset::MutableMapping
      uses function getMappedObject(int) defined in com::ibm::wala::util::intset::MutableMapping
      uses function setId(int) defined in com::ibm::wala::ecore::common::EObjectWithContainerId
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function createENotContainer() defined in com::ibm::wala::ecore::common::CommonFactory
   function findOrAdd(EObject) in line 46
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function getMappedIndex(Object) defined in com::ibm::wala::util::intset::MutableMapping
      uses function add(T) defined in com::ibm::wala::util::intset::MutableMapping
      uses function getMappedObject(int) defined in com::ibm::wala::util::intset::MutableMapping
   function get(int) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function getMappedObject(int) defined in com::ibm::wala::util::intset::MutableMapping
   function indexOf(EObject) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function getMappedIndex(Object) defined in com::ibm::wala::util::intset::MutableMapping
   function load(EContainer) in line 60
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function findOrAdd(EObject) defined in com::ibm::wala::emf::wrappers::EObjectDictionary
   function size() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::emf::wrappers::EObjectDictionary
      uses function getMappingSize() defined in com::ibm::wala::util::intset::MutableMapping
   variable map in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EObjectGraph.java
module com::ibm::wala::emf::wrappers::EObjectGraph
   inherits from com::ibm::wala::util::graph::NumberedGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EObjectGraphImpl.java
module com::ibm::wala::emf::wrappers::EObjectGraphImpl
   inherits from com::ibm::wala::emf::wrappers::EObjectGraph
   function addEdge(EObject,EObject) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function addNode(EObject) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function containsNode(EObject) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function equals(Object) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function export() in line 186
      protection public
      21 lines of code
      0 parameters
      4 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphFactory
      uses function createEGraph() defined in com::ibm::wala::ecore::graph::GraphFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createEContainer() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function createERelation() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function getSuccNodes(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function createEPair() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function setNodes(ECollection) defined in com::ibm::wala::ecore::graph::EGraph
      uses function setEdges(ERelation) defined in com::ibm::wala::ecore::graph::EGraph
   function fromEMF(EGraph) in line 170
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getX() defined in com::ibm::wala::ecore::common::EPair
      uses function getY() defined in com::ibm::wala::ecore::common::EPair
   function getMaxNumber() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getNode(int) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getNumber(EObject) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getNumberOfNodes() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getPredNodeCount(EObject) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getPredNodeNumbers(EObject) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getPredNodes(EObject) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getSuccNodeCount(EObject) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getSuccNodeNumbers(EObject) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getSuccNodes(EObject) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function hasEdge(EObject,EObject) in line 210
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function hashCode() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function iterateNodes() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function iterateNodes(IntSet) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function removeAllIncidentEdges(EObject) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function removeEdge(EObject,EObject) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function removeIncomingEdges(EObject) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function removeNode(EObject) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function removeNodeAndEdges(EObject) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function removeOutgoingEdges(EObject) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function toString() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   variable delegate in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EObjectTree.java
module com::ibm::wala::emf::wrappers::EObjectTree
   inherits from com::ibm::wala::emf::wrappers::EObjectGraphImpl
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/ETypeHierarchyWrapper.java
module com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
   function eloadFromFile(String) in line 123
      28 lines of code
      1 parameters
      5 conditional paths
   function getAllSuperclasses(EJavaClass) in line 195
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function containsNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getAllSuperclasses(EJavaClass) defined in com::ibm::wala::emf::wrappers::EClassHierarchyWrapper
      uses variable iface defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getAllSuperclasses(EJavaClass) defined in com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
   function getClasses() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
   function getImplements(EJavaClass) in line 176
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable cha defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getNumber(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses variable implementR defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getRelated(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses variable iface defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getNode(int) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function getInterfaces() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iface defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
   function getTargetType() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getETypeHierarchy() defined in com::ibm::wala::ecore::java::JavaPackage
   function loadFromFile(String) in line 111
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function eloadFromFile(String) defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function ETypeHierarchyWrapper(ETypeHierarchy) defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
   function recordImplements(EJavaClass,EJavaClass) in line 160
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable cha defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function getNumber(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses variable iface defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable implementR defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function add(int,int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function toEMF() in line 91
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaFactory
      uses function createETypeHierarchy() defined in com::ibm::wala::ecore::java::JavaFactory
      uses function setClasses(EClassHierarchy) defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses variable cha defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function export() defined in com::ibm::wala::emf::wrappers::EClassHierarchyWrapper
      uses function setInterfaces(EInterfaceHierarchy) defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses variable iface defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function export() defined in com::ibm::wala::emf::wrappers::EInterfaceHierarchyWrapper
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createERelation() defined in com::ibm::wala::ecore::common::CommonFactory
      uses variable implementR defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses function iterator() defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getNode(int) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getX() defined in com::ibm::wala::util::intset::IntPair
      uses function getY() defined in com::ibm::wala::util::intset::IntPair
      uses function createEPair() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function setImplements(ERelation) defined in com::ibm::wala::ecore::java::ETypeHierarchy
   function ETypeHierarchyWrapper(ETypeHierarchy) in line 65
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getClasses() defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses function getInterfaces() defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses function getImplements() defined in com::ibm::wala::ecore::java::ETypeHierarchy
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function getX() defined in com::ibm::wala::ecore::common::EPair
      uses function getY() defined in com::ibm::wala::ecore::common::EPair
      uses function recordImplements(EJavaClass,EJavaClass) defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
   function ETypeHierarchyWrapper(EClassHierarchyWrapper,EInterfaceHierarchyWrapper) in line 85
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
      uses variable iface defined in com::ibm::wala::emf::wrappers::ETypeHierarchyWrapper
   variable cha in line 58
   variable iface in line 59
   variable implementR in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/EUtil.java
module com::ibm::wala::emf::wrappers::EUtil
   function createMap(ERelation) in line 192
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function getX() defined in com::ibm::wala::ecore::common::EPair
      uses function getY() defined in com::ibm::wala::ecore::common::EPair
   function getURIConverter() in line 67
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
   function populateRelation(ERelation,Map) in line 209
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createEStringHolder() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setValue(String) defined in com::ibm::wala::ecore::common::EStringHolder
      uses function createEPair() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::EPair
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
   function pruneRelationForKey(ERelation,EObject) in line 319
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createERelation() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setName(String) defined in com::ibm::wala::ecore::common::ERelation
      uses function getName() defined in com::ibm::wala::ecore::common::ERelation
   function pruneRelationForKey(ERelation,Filter) in line 336
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function hasNext() defined in com::ibm::wala::util::collections::FilterIterator
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
      uses function createERelation() defined in com::ibm::wala::ecore::common::CommonFactory
      uses function setName(String) defined in com::ibm::wala::ecore::common::ERelation
      uses function getName() defined in com::ibm::wala::ecore::common::ERelation
   function readEObjects(String,ClassLoader) in line 92
      protection public
      25 lines of code
      2 parameters
      3 conditional paths
   function resolveEClass(EClass) in line 292
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
   function resolveEPackage(EClass) in line 243
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
   function resolveEPackage(EPackage) in line 267
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
   function saveToArray(EObject) in line 167
      protection public
      19 lines of code
      1 parameters
      2 conditional paths
   function saveToFile(EObject,String) in line 125
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function saveToFile(Collection< EObject >,String) in line 142
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
   variable CORE_ECORE in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/emf/wrappers/JavaScopeUtil.java
module com::ibm::wala::emf::wrappers::JavaScopeUtil
   function classifyToken(String) in line 209
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable JAR_FILE defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
   function createApplicationLoader() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function createEClassLoader() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function setLoaderName(String) defined in com::ibm::wala::ecore::java::scope::EClassLoader
      uses variable APPLICATION_LOADER_NAME defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
   function createClassApplicationLoader(String) in line 90
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function createEClassLoader() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function setLoaderName(String) defined in com::ibm::wala::ecore::java::scope::EClassLoader
      uses variable APPLICATION_LOADER_NAME defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function createClassModule(String) defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::EClassLoader
   function createClassModule(String) in line 142
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function createEClassFile() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function setUrl(String) defined in com::ibm::wala::ecore::java::scope::EFile
   function createJarApplicationLoader(String) in line 73
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function createApplicationLoader() defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function createJarModule(String) defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::EClassLoader
   function createJarModule(String) in line 129
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function createEJarFile() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function setUrl(String) defined in com::ibm::wala::ecore::java::scope::EJarFile
   function createPrimordialLoader() in line 106
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function createEClassLoader() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function setLoaderName(String) defined in com::ibm::wala::ecore::java::scope::EClassLoader
      uses variable PRIMORDIAL_LOADER_NAME defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function createEBuiltInModule() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses variable PRIMORDIAL_JAR_FILE defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function setId(EBuiltInResource) defined in com::ibm::wala::ecore::java::scope::EBuiltInModule
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::EClassLoader
   function makeAnalysisScope(String) in line 148
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function createEJavaAnalysisScope() defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
      uses function populateScope(EJavaAnalysisScope,String) defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
   function makePrimordialScope() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function makeAnalysisScope(String) defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
   function populateScope(EJavaAnalysisScope,String) in line 175
      26 lines of code
      2 parameters
      3 conditional paths
      uses function createApplicationLoader() defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function classifyToken(String) defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses variable JAR_FILE defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function createJarModule(String) defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::EClassLoader
      uses function createPrimordialLoader() defined in com::ibm::wala::emf::wrappers::JavaScopeUtil
   variable APPLICATION_LOADER_NAME in line 46
   variable JAR_FILE in line 36
   variable PRIMORDIAL_JAR_FILE in line 51
   variable PRIMORDIAL_LOADER_NAME in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/escape/FILiveObjectAnalysis.java
module com::ibm::wala::escape::FILiveObjectAnalysis
   inherits from com::ibm::wala::escape::ILiveObjectAnalysis
   function computeLiveNodes(InstanceKey) in line 173
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable heapGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses variable liveEverywhere defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractLocalPointerKey
      uses function getBase() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::TypedPointerKey
      uses variable callGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
   function mayBeLive(CGNode,int,CGNode,int) in line 87
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable callGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses variable heapGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function getHeapModel() defined in com::ibm::wala::analysis::pointers::HeapGraph
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function mayBeLive(InstanceKey,CGNode,int) in line 97
      protection public
      33 lines of code
      3 parameters
      7 conditional paths
      uses variable liveEverywhere defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses variable liveNodes defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function mayBeLiveInSomeCaller(InstanceKey,CGNode) defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses variable expensiveIntraproceduralAnalysis defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function mayBeLiveIntraprocedural(InstanceKey,CGNode,int) defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function computeLiveNodes(InstanceKey) defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function mayBeLive(CGNode,int,CGNode,int) defined in com::ibm::wala::escape::FILiveObjectAnalysis
   function mayBeLive(InstanceKey,CGNode,IntSet) in line 203
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function mayBeLive(CGNode,int,CGNode,int) defined in com::ibm::wala::escape::FILiveObjectAnalysis
   function mayBeLiveInSomeCaller(InstanceKey,CGNode) in line 131
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable callGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function mayBeLive(CGNode,int,CGNode,int) defined in com::ibm::wala::escape::FILiveObjectAnalysis
   function mayBeLiveIntraprocedural(InstanceKey,CGNode,int) in line 148
      19 lines of code
      3 parameters
      5 conditional paths
      uses variable callGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function getDU(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable heapGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function getValueNumber() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function FILiveObjectAnalysis(CallGraph,HeapGraph,boolean) in line 76
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable callGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses variable heapGraph defined in com::ibm::wala::escape::FILiveObjectAnalysis
      uses variable expensiveIntraproceduralAnalysis defined in com::ibm::wala::escape::FILiveObjectAnalysis
   variable callGraph in line 51
   variable expensiveIntraproceduralAnalysis in line 71
   variable heapGraph in line 56
   variable liveEverywhere in line 66
   variable liveNodes in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/escape/ILiveObjectAnalysis.java
module com::ibm::wala::escape::ILiveObjectAnalysis
   function mayBeLive(CGNode,int,CGNode,int) in line 40
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function mayBeLive(InstanceKey,CGNode,int) in line 54
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function mayBeLive(InstanceKey,CGNode,IntSet) in line 67
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/escape/IMethodEscapeAnalysis.java
module com::ibm::wala::escape::IMethodEscapeAnalysis
   function mayEscape(MethodReference,int,MethodReference) in line 36
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/escape/INodeEscapeAnalysis.java
module com::ibm::wala::escape::INodeEscapeAnalysis
   inherits from com::ibm::wala::escape::IMethodEscapeAnalysis
   function mayEscape(CGNode,int,CGNode) in line 36
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/escape/LocalLiveRangeAnalysis.java
module com::ibm::wala::escape::LocalLiveRangeAnalysis
   function findBlock(IR,SSAInstruction) in line 129
      18 lines of code
      2 parameters
      6 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInstruction
   function findBlock(IR,int) in line 153
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
   function findBlocks(IR,Iterator< SSAInstruction >) in line 103
      20 lines of code
      2 parameters
      6 conditional paths
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function add(T) defined in com::ibm::wala::util::collections::Iterator2Collection
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isEmpty() defined in com::ibm::wala::util::collections::Iterator2Collection
   function isLive(int,int,IR,DefUse) in line 48
      protection public
      50 lines of code
      4 parameters
      9 conditional paths
      uses function getNumberOfUses(int) defined in com::ibm::wala::ssa::DefUse
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function findBlock(IR,SSAInstruction) defined in com::ibm::wala::escape::LocalLiveRangeAnalysis
      uses function getDef(int) defined in com::ibm::wala::ssa::DefUse
      uses function findBlocks(IR,Iterator< SSAInstruction >) defined in com::ibm::wala::escape::LocalLiveRangeAnalysis
      uses function getUses(int) defined in com::ibm::wala::ssa::DefUse
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/escape/TrivialMethodEscape.java
module com::ibm::wala::escape::TrivialMethodEscape
   inherits from com::ibm::wala::escape::IMethodEscapeAnalysis
   inherits from com::ibm::wala::escape::INodeEscapeAnalysis
   function mayEscape(MethodReference,int,MethodReference) in line 72
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
      uses variable cg defined in com::ibm::wala::escape::TrivialMethodEscape
      uses function getNodes(MethodReference) defined in com::ibm::wala::ipa::callgraph::CallGraph
   function mayEscape(CGNode,int,CGNode) in line 92
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function mayEscape(MethodReference,int,MethodReference) defined in com::ibm::wala::escape::TrivialMethodEscape
   function mayEscape(Set,int,Set) in line 106
      36 lines of code
      3 parameters
      10 conditional paths
      uses variable cg defined in com::ibm::wala::escape::TrivialMethodEscape
      uses variable hg defined in com::ibm::wala::escape::TrivialMethodEscape
      uses function getHeapModel() defined in com::ibm::wala::analysis::pointers::HeapGraph
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function iterateNewSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function TrivialMethodEscape(CallGraph,HeapGraph) in line 63
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable hg defined in com::ibm::wala::escape::TrivialMethodEscape
      uses variable cg defined in com::ibm::wala::escape::TrivialMethodEscape
   variable cg in line 55
   variable hg in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/AbstractFixedPointSolver.java
module com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   inherits from com::ibm::wala::fixpoint::IFixedPointSolver
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   inherits from com::ibm::wala::util::debug::VerboseAction
   abstract class
   function addAllStatementsToWorkList() in line 247
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function getStatements() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function addToWorkList(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function addToWorkList(AbstractStatement) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable workList defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function insertStatement(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::Worklist
   function changedVariable(IVariable) in line 261
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses function addToWorkList(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function emptyWorkList() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable workList defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isEmpty() defined in com::ibm::wala::util::collections::Heap
   function getMaxEvalBetweenTopo() in line 541
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxEvalBetweenTopo defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function getMinSizeForTopSort() in line 530
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minSizeForTopSort defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function getNumberOfEvaluations() in line 563
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nEvaluated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function getPeriodicMaintainInterval() in line 588
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_PERIODIC_MAINTENANCE_INTERVAL defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function getStatements() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses function getStatements() defined in com::ibm::wala::fixpoint::IFixedPointSystem
   function getTopologicalGrowthFactor() in line 545
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable topologicalGrowthFactor defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function getVerboseInterval() in line 581
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_VERBOSE_INTERVAL defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function incNumberOfEvaluations() in line 567
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nEvaluated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function incorporateNewStatement(boolean,boolean,AbstractStatement) in line 298
      22 lines of code
      3 parameters
      8 conditional paths
      uses function evaluate() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses variable verbose defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable nEvaluated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getVerboseInterval() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function performVerboseAction() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getPeriodicMaintainInterval() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function periodicMaintenance() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isChanged(byte) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function updateWorkList(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isFixed(byte) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function removeStatement(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function addToWorkList(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function initForFirstSolve() in line 110
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function orderStatements() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function initializeVariables() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function initializeWorkList() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable firstSolve defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function initializeVariables() in line 435
      1 lines of code
      0 parameters
      1 conditional paths
   function initializeWorkList() in line 440
      1 lines of code
      0 parameters
      1 conditional paths
   function isChanged(byte) in line 518
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable CHANGED_MASK defined in com::ibm::wala::fixpoint::FixedPointConstants
   function isFixed(byte) in line 526
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable FIXED_MASK defined in com::ibm::wala::fixpoint::FixedPointConstants
   function isSideEffect(byte) in line 522
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable SIDE_EFFECT_MASK defined in com::ibm::wala::fixpoint::FixedPointConstants
   function lineBreak(String,int) in line 197
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
   function newStatement(IVariable,NullaryOperator,boolean,boolean) in line 280
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses function setOrderNumber(int) defined in com::ibm::wala::fixpoint::IVariable
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses variable nCreated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function addStatement(IFixedPointStatement) defined in com::ibm::wala::fixpoint::IFixedPointSystem
      uses function incorporateNewStatement(boolean,boolean,AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newStatement(IVariable,UnaryOperator,IVariable,boolean,boolean) in line 332
      protection public
      15 lines of code
      5 parameters
      3 conditional paths
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses function setOrderNumber(int) defined in com::ibm::wala::fixpoint::IVariable
      uses variable nCreated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function addStatement(IFixedPointStatement) defined in com::ibm::wala::fixpoint::IFixedPointSystem
      uses function incorporateNewStatement(boolean,boolean,AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newStatement(IVariable,AbstractOperator,IVariable,IVariable,boolean,boolean) in line 360
      protection public
      15 lines of code
      6 parameters
      3 conditional paths
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses function setOrderNumber(int) defined in com::ibm::wala::fixpoint::IVariable
      uses variable nCreated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function addStatement(IFixedPointStatement) defined in com::ibm::wala::fixpoint::IFixedPointSystem
      uses function incorporateNewStatement(boolean,boolean,AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newStatement(IVariable,AbstractOperator,IVariable,IVariable,IVariable,boolean,boolean) in line 390
      protection public
      15 lines of code
      7 parameters
      2 conditional paths
      uses function setOrderNumber(int) defined in com::ibm::wala::fixpoint::IVariable
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses variable nCreated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function addStatement(IFixedPointStatement) defined in com::ibm::wala::fixpoint::IFixedPointSystem
      uses function incorporateNewStatement(boolean,boolean,AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newStatement(IVariable,AbstractOperator,IVariable[],boolean,boolean) in line 417
      protection public
      14 lines of code
      5 parameters
      3 conditional paths
      uses function setOrderNumber(int) defined in com::ibm::wala::fixpoint::IVariable
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses variable nCreated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function addStatement(IFixedPointStatement) defined in com::ibm::wala::fixpoint::IFixedPointSystem
      uses function incorporateNewStatement(boolean,boolean,AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function initializeVariables() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function initializeWorkList() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function orderStatements() in line 481
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable minSizeForTopSort defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable topologicalGrowthFactor defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function orderStatementsInternal() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable nEvaluated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable evaluationsAtLastOrdering defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable maxEvalBetweenTopo defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function orderStatementsInternal() in line 462
      15 lines of code
      0 parameters
      5 conditional paths
      uses variable verbose defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable nEvaluated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable nCreated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function reorder() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable evaluationsAtLastOrdering defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function performVerboseAction() in line 179
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable nEvaluated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable nCreated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable workList defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function size() defined in com::ibm::wala::util::collections::Heap
      uses function takeStatement() defined in com::ibm::wala::fixedpoint::impl::Worklist
      uses function lineBreak(String,int) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function toString() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function insertStatement(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::Worklist
   function periodicMaintenance() in line 575
      2 lines of code
      0 parameters
      1 conditional paths
   function removeStatement(AbstractStatement) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses function removeStatement(IFixedPointStatement) defined in com::ibm::wala::fixpoint::IFixedPointSystem
   function reorder() in line 499
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable workList defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isEmpty() defined in com::ibm::wala::util::collections::Heap
      uses function takeStatement() defined in com::ibm::wala::fixedpoint::impl::Worklist
      uses function getFixedPointSystem() defined in com::ibm::wala::fixpoint::IFixedPointSolver
      uses function reorder() defined in com::ibm::wala::fixpoint::IFixedPointSystem
      uses function insertStatement(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::Worklist
   function setMaxEvalBetweenTopo(int) in line 552
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxEvalBetweenTopo defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function setMinEquationsForTopSort(int) in line 537
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minSizeForTopSort defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function setTopologicalGrowthFactor(double) in line 559
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable topologicalGrowthFactor defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function solve() in line 132
      protection public
      42 lines of code
      0 parameters
      10 conditional paths
      uses variable firstSolve defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function initForFirstSolve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable workList defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isEmpty() defined in com::ibm::wala::util::collections::Heap
      uses function orderStatements() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function takeStatement() defined in com::ibm::wala::fixedpoint::impl::Worklist
      uses function evaluate() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses variable verbose defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses variable nEvaluated defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getVerboseInterval() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function performVerboseAction() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getPeriodicMaintainInterval() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function periodicMaintenance() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isChanged(byte) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function updateWorkList(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isFixed(byte) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function removeStatement(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function toString() in line 222
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getStatements() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function updateWorkList(AbstractStatement) in line 449
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getLHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses function changedVariable(IVariable) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   variable DEFAULT_PERIODIC_MAINTENANCE_INTERVAL in line 51
      protection public
   variable DEFAULT_VERBOSE_INTERVAL in line 47
      protection public
   variable evaluationsAtLastOrdering in line 74
   variable firstSolve in line 105
   variable maxEvalBetweenTopo in line 72
   variable minSizeForTopSort in line 57
   variable nCreated in line 94
   variable nEvaluated in line 89
   variable topologicalGrowthFactor in line 63
   variable verbose in line 44
      protection public
   variable workList in line 99
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/AbstractFixedPointSystem.java
module com::ibm::wala::fixedpoint::impl::AbstractFixedPointSystem
   inherits from com::ibm::wala::fixpoint::IFixedPointSystem
   abstract class
   function addListener(IFixedPointSystemListener) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSystem
   function removeListener(IFixedPointSystemListener) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSystem
   variable listeners in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/AbstractOperator.java
module com::ibm::wala::fixedpoint::impl::AbstractOperator
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   abstract class
   function equals(Object) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable[]) in line 36
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function hashCode() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/AbstractStatement.java
module com::ibm::wala::fixedpoint::impl::AbstractStatement
   inherits from com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::fixpoint::IFixedPointStatement
   abstract class
   function equals(Object) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getOperator() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getOrderNumber() in line 69
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getLHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses function getOrderNumber() defined in com::ibm::wala::fixpoint::IVariable
   function hashCode() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 45
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses function getLHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function getRHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/AbstractVariable.java
module com::ibm::wala::fixedpoint::impl::AbstractVariable
   inherits from com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::fixpoint::IVariable
   abstract class
   function equals(Object) in line 29
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::fixedpoint::impl::AbstractVariable
   function getOrderNumber() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable orderNumber defined in com::ibm::wala::fixedpoint::impl::AbstractVariable
   function hashCode() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setOrderNumber(int) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable orderNumber defined in com::ibm::wala::fixedpoint::impl::AbstractVariable
   variable orderNumber in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/BasicNullaryStatement.java
module com::ibm::wala::fixedpoint::impl::BasicNullaryStatement
   inherits from com::ibm::wala::fixedpoint::impl::NullaryStatement
   function getOperator() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable operator in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/BasicUnaryStatement.java
module com::ibm::wala::fixedpoint::impl::BasicUnaryStatement
   inherits from com::ibm::wala::fixedpoint::impl::UnaryStatement
   function getOperator() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable operator in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/DefaultFixedPointSolver.java
module com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   inherits from com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   abstract class
   function getFixedPointSystem() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   function DefaultFixedPointSolver(int) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   function DefaultFixedPointSolver() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   variable graph in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/DefaultFixedPointSystem.java
module com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   inherits from com::ibm::wala::fixedpoint::impl::AbstractFixedPointSystem
   function addStatement(IFixedPointStatement) in line 131
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function addStatement(GeneralStatement) in line 148
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getRHS() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable equations defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses variable variables defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses function checkGraph() defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function addStatement(UnaryStatement) in line 178
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses variable variables defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses function checkGraph() defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function addStatement(NullaryStatement) in line 202
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses variable variables defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses function checkGraph() defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function addVariable(IVariable) in line 217
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable variables defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses function checkGraph() defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function checkGraph() in line 264
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function containsStatement(IFixedPointStatement) in line 367
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable equations defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function containsVariable(IVariable) in line 376
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable variables defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function equals(Object) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getNumberOfNodes() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getNumberOfStatementsThatDef(IVariable) in line 314
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getNumberOfStatementsThatUse(IVariable) in line 305
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getNumberOfVariables() in line 332
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getPredNodeCount(INodeWithNumber) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getPredNodes(INodeWithNumber) in line 342
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getStatements() in line 119
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getStatementsThatDef(IVariable) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getStatementsThatUse(IVariable) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getStep(int) in line 230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getVariable(int) in line 296
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function getVariables() in line 324
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function hashCode() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function performVerboseAction() in line 356
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function removeStatement(IFixedPointStatement) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function reorder() in line 239
      protection public
      21 lines of code
      0 parameters
      4 conditional paths
      uses function checkGraph() defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
      uses function setOrderNumber(int) defined in com::ibm::wala::fixpoint::IVariable
   function toString() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function DefaultFixedPointSystem(int) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::fixedpoint::impl::DefaultFixedPointSystem
   function DefaultFixedPointSystem() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable equations in line 51
   variable graph in line 44
   variable variables in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/GeneralStatement.java
module com::ibm::wala::fixedpoint::impl::GeneralStatement
   inherits from com::ibm::wala::fixedpoint::impl::AbstractStatement
   function equals(Object) in line 181
      protection public
      27 lines of code
      1 parameters
      11 conditional paths
      uses function GeneralStatement(IVariable,AbstractOperator) defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses function hashCode() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable operator defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function evaluate() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function getLHS() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function getOperator() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRHS() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function hashCode() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasVariable(IVariable) in line 59
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function makeHashCode() in line 156
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable primes defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function GeneralStatement(IVariable,AbstractOperator) in line 78
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses function makeHashCode() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function GeneralStatement(IVariable,AbstractOperator,IVariable,IVariable) in line 98
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses function makeHashCode() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function GeneralStatement(IVariable,AbstractOperator,IVariable,IVariable,IVariable) in line 122
      protection public
      10 lines of code
      5 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses function makeHashCode() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function GeneralStatement(IVariable,AbstractOperator,IVariable[]) in line 143
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses function makeHashCode() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   variable hashCode in line 26
   variable lhs in line 23
   variable operator in line 28
   variable primes in line 154
   variable rhs in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/NullaryOperator.java
module com::ibm::wala::fixedpoint::impl::NullaryOperator
   inherits from com::ibm::wala::fixedpoint::impl::AbstractOperator
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   abstract class
   function evaluate(IVariable,IVariable[]) in line 28
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function evaluate(IVariable) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/NullaryStatement.java
module com::ibm::wala::fixedpoint::impl::NullaryStatement
   inherits from com::ibm::wala::fixedpoint::impl::AbstractStatement
   abstract class
   function equals(Object) in line 72
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses function NullaryStatement(IVariable) defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function equals(Object) defined in com::ibm::wala::fixedpoint::impl::AbstractOperator
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
   function evaluate() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function evaluate(IVariable,IVariable[]) defined in com::ibm::wala::fixedpoint::impl::NullaryOperator
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
   function getLHS() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
   function getRHS() in line 110
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 100
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function hashCode() defined in com::ibm::wala::fixedpoint::impl::AbstractOperator
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
   function hasVariable(IVariable) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
   function NullaryStatement(IVariable) in line 64
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::NullaryStatement
   variable lhs in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/UnaryOperator.java
module com::ibm::wala::fixedpoint::impl::UnaryOperator
   inherits from com::ibm::wala::fixedpoint::impl::AbstractOperator
   inherits from com::ibm::wala::fixpoint::FixedPointConstants
   abstract class
   function evaluate(IVariable,IVariable) in line 29
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable[]) in line 52
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function isIdentity() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeEquation(IVariable,IVariable) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/UnaryStatement.java
module com::ibm::wala::fixedpoint::impl::UnaryStatement
   inherits from com::ibm::wala::fixedpoint::impl::AbstractStatement
   abstract class
   function equals(Object) in line 114
      protection public
      36 lines of code
      1 parameters
      11 conditional paths
      uses function UnaryStatement(IVariable,IVariable) defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function equals(Object) defined in com::ibm::wala::fixedpoint::impl::AbstractOperator
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function evaluate() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function evaluate(IVariable,IVariable) defined in com::ibm::wala::fixedpoint::impl::UnaryOperator
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function getLHS() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function getOperands() in line 64
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function getRHS() in line 167
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getRightHandSide() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function hashCode() in line 154
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function hashCode() defined in com::ibm::wala::fixedpoint::impl::AbstractOperator
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function hasVariable(IVariable) in line 76
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function toString() in line 88
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function UnaryStatement(IVariable,IVariable) in line 105
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   variable lhs in line 30
   variable rhs in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixedpoint/impl/Worklist.java
module com::ibm::wala::fixedpoint::impl::Worklist
   inherits from com::ibm::wala::util::collections::Heap
   function compareElements(Object,Object) in line 30
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getOrderNumber() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
   function insert(Object) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function insertStatement(AbstractStatement) in line 51
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable contents defined in com::ibm::wala::fixedpoint::impl::Worklist
   function take() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function takeStatement() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in com::ibm::wala::fixedpoint::impl::Worklist
   function Worklist() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable contents in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/BitVectorVariable.java
module com::ibm::wala::fixpoint::BitVectorVariable
   inherits from com::ibm::wala::fixedpoint::impl::AbstractVariable
   function addAll(BitVector) in line 52
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAll(BitVectorVariable) in line 61
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function clear(int) in line 126
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function copyState(IVariable) in line 37
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function BitVectorVariable() defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function equals(Object) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function get(int) in line 107
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function contains(int) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function getValue() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
   function hashCode() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::fixpoint::BitVectorVariable
   function populationCount() in line 146
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function sameValue(BitVectorVariable) in line 71
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function set(int) in line 97
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function toString() in line 86
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses function toString() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function BitVectorVariable() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable hash in line 29
   variable V in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/BooleanVariable.java
module com::ibm::wala::fixpoint::BooleanVariable
   inherits from com::ibm::wala::fixedpoint::impl::AbstractVariable
   function copyState(IVariable) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function BooleanVariable(int) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable B defined in com::ibm::wala::fixpoint::BooleanVariable
   function equals(Object) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getValue() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable B defined in com::ibm::wala::fixpoint::BooleanVariable
   function hashCode() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::fixpoint::BooleanVariable
   function or(BooleanVariable) in line 71
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::fixpoint::BooleanVariable
   function sameValue(BooleanVariable) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable B defined in com::ibm::wala::fixpoint::BooleanVariable
   function set(boolean) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable B defined in com::ibm::wala::fixpoint::BooleanVariable
   function toString() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable B defined in com::ibm::wala::fixpoint::BooleanVariable
   function BooleanVariable(int) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::fixpoint::BooleanVariable
   function BooleanVariable(boolean,int) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::fixpoint::BooleanVariable
   variable B in line 25
   variable hash in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/FixedPointConstants.java
module com::ibm::wala::fixpoint::FixedPointConstants
   variable CHANGED in line 25
      protection public
   variable CHANGED_AND_FIXED in line 35
      protection public
   variable CHANGED_MASK in line 45
      protection public
   variable FIXED_MASK in line 49
      protection public
   variable NOT_CHANGED in line 30
      protection public
   variable NOT_CHANGED_AND_FIXED in line 40
      protection public
   variable SIDE_EFFECT_MASK in line 53
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/IFixedPointSolver.java
module com::ibm::wala::fixpoint::IFixedPointSolver
   function getFixedPointSystem() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function solve() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/IFixedPointStatement.java
module com::ibm::wala::fixpoint::IFixedPointStatement
   inherits from com::ibm::wala::util::graph::INodeWithNumber
   function evaluate() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLHS() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRHS() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasVariable(IVariable) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/IFixedPointSystem.java
module com::ibm::wala::fixpoint::IFixedPointSystem
   function addListener(IFixedPointSystemListener) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addStatement(IFixedPointStatement) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsStatement(IFixedPointStatement) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsVariable(IVariable) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfStatementsThatDef(IVariable) in line 84
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfStatementsThatUse(IVariable) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getStatements() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getStatementsThatDef(IVariable) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getStatementsThatUse(IVariable) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getVariables() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeListener(IFixedPointSystemListener) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeStatement(IFixedPointStatement) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reorder() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/IFixedPointSystemListener.java
module com::ibm::wala::fixpoint::IFixedPointSystemListener
   function statementAdded(IFixedPointStatement,IFixedPointSystem) in line 28
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function statementRemoved(IFixedPointStatement,IFixedPointSystem) in line 34
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/IntSetVariable.java
module com::ibm::wala::fixpoint::IntSetVariable
   inherits from com::ibm::wala::fixedpoint::impl::AbstractVariable
   abstract class
   function add(int) in line 113
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
   function addAll(IntSet) in line 56
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
   function addAll(IntSetVariable) in line 71
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function addAll(IntSet) defined in com::ibm::wala::fixpoint::IntSetVariable
   function addAllInIntersection(IntSetVariable,IntSet) in line 167
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function copyState(IVariable) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::IntSet
   function addAllInIntersection(IntSet,IntSet) in line 187
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::IntSet
      uses function addAllInIntersection(IntSet,IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
   function contains(int) in line 126
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function containsAny(IntSet) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function containsAny(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function copyState(IVariable) in line 34
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
   function getValue() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
   function hashCode() in line 156
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function remove(int) in line 145
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function hashCode() defined in com::ibm::wala::fixpoint::IntSetVariable
   function removeAll() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
   function sameValue(IntSetVariable) in line 85
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function size() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function toString() in line 100
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable V defined in com::ibm::wala::fixpoint::IntSetVariable
   variable V in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/IVariable.java
module com::ibm::wala::fixpoint::IVariable
   inherits from com::ibm::wala::util::graph::INodeWithNumber
   function copyState(IVariable) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getOrderNumber() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setOrderNumber(int) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/TrueOperator.java
module com::ibm::wala::fixpoint::TrueOperator
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 31
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getValue() defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses function set(boolean) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::fixpoint::TrueOperator
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TrueOperator() in line 26
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/fixpoint/UnaryOr.java
module com::ibm::wala::fixpoint::UnaryOr
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 34
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getValue() defined in com::ibm::wala::fixpoint::BooleanVariable
      uses function or(BooleanVariable) defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
   function hashCode() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINGLETON defined in com::ibm::wala::fixpoint::UnaryOr
   function toString() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function UnaryOr() in line 28
      2 lines of code
      0 parameters
      1 conditional paths
   variable SINGLETON in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/AnalysisOptions.java
module com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getAnalysisScope() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisScope defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getCFGCache() in line 452
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfgCache defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getClassTargetSelector() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classTargetSelector defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getConstantType(Object) in line 387
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable constantTypes defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getDispatchBoundHeuristic() in line 342
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dispatchBoundHeuristic defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getEntrypoints() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getIRFactory() in line 444
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable irFactory defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getMaxEvalBetweenTopo() in line 308
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxEvalBetweenTopo defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getMethodTargetSelector() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodTargetSelector defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getMinEquationsForTopSort() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minEquationsForTopSort defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getReflectionSpec() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reflection defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getSSACache() in line 448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ssaCache defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getSSAOptions() in line 375
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ssaOptions defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getSupportRefinement() in line 359
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supportRefinement defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getTopologicalGrowthFactor() in line 316
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable topologicalGrowthFactor defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getTraceStringConstants() in line 429
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable traceStringConstants defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getUseConstantSpecificKeys() in line 405
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable useConstantSpecificKeys defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getUseLexicalScopingForGlobals() in line 421
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable useLexicalScopingForGlobals defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getUseStacksForLexicalScoping() in line 413
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable useStacksForLexicalScoping defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function hasConstantType(Object) in line 396
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable constantTypes defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function invalidateCache(IMethod,Context) in line 456
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable ssaCache defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function invalidate(IMethod,Context) defined in com::ibm::wala::ssa::SSACache
      uses variable cfgCache defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function invalidate(IMethod,Context) defined in com::ibm::wala::cfg::CFGCache
   function setAnalysisScope(AnalysisScope) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisScope defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setConstantType(Class<?extends Object >,TypeReference) in line 401
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable constantTypes defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setDispatchBoundHeuristic(byte) in line 351
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dispatchBoundHeuristic defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setMaxEvalBetweenTopo(int) in line 325
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxEvalBetweenTopo defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setMinEquationsForTopSort(int) in line 300
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minEquationsForTopSort defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setReflectionSpec(ReflectionSpecification) in line 247
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSelector(MethodTargetSelector) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodTargetSelector defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setSelector(ClassTargetSelector) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classTargetSelector defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setSSAOptions(SSAOptions) in line 383
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ssaOptions defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setSupportRefinement(boolean) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable supportRefinement defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setTopologicalGrowthFactor(double) in line 334
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable topologicalGrowthFactor defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setTraceStringConstants(boolean) in line 425
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable traceStringConstants defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setUseConstantSpecificKeys(boolean) in line 409
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useConstantSpecificKeys defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setUseLexicalScopingForGlobals(boolean) in line 433
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLexicalScopingForGlobals defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setUsePreTransitiveSolver(boolean) in line 461
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function usePreTransitiveSolver() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function setUseStacksForLexicalScoping(boolean) in line 417
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useStacksForLexicalScoping defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function usePreTransitiveSolver() in line 440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnalysisOptions(IRFactory) in line 181
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function AnalysisOptions() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnalysisOptions(AnalysisScope,IRFactory,Entrypoints) in line 198
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function AnalysisOptions(AnalysisScope,Entrypoints) in line 204
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable analysisScope in line 48
   variable cfgCache in line 176
   variable CHA_DISPATCH_BOUND in line 41
      protection public
   variable classTargetSelector in line 63
   variable constantTypes in line 134
   variable dispatchBoundHeuristic in line 92
   variable entrypoints in line 53
   variable irFactory in line 172
   variable maxEvalBetweenTopo in line 87
   variable methodTargetSelector in line 68
   variable minEquationsForTopSort in line 74
   variable NO_DISPATCH_BOUND in line 37
      protection public
   variable reflection in line 58
   variable SIMPLE_DISPATCH_BOUND in line 39
      protection public
   variable ssaCache in line 174
   variable ssaOptions in line 110
   variable supportRefinement in line 99
   variable topologicalGrowthFactor in line 80
   variable traceStringConstants in line 168
   variable UNSPECIFIED in line 43
      protection public
   variable useConstantSpecificKeys in line 120
   variable useLexicalScopingForGlobals in line 160
   variable usePreTransitiveSolver in line 105
   variable useStacksForLexicalScoping in line 149
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/AnalysisScope.java
module com::ibm::wala::ipa::callgraph::AnalysisScope
   function addClassFileToScope(ClassLoaderReference,File) in line 157
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable moduleMap defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function addSourceFileToScope(ClassLoaderReference,File,String) in line 146
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable moduleMap defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function addToScope(ClassLoaderReference,JarFile) in line 168
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable moduleMap defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function addToScope(ClassLoaderReference,Module) in line 182
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable moduleMap defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function classLoaderName2Ref(String) in line 211
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function findMethod(Atom,String,Atom,ImmutableByteArray) in line 274
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getApplicationLoader() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable APPLICATION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getArrayClassLoader() in line 290
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayClassLoader defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getExclusions() in line 240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exclusions defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getExclusionString() in line 267
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exclusions defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getExtensionLoader() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable EXTENSION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getJavaLibraryVersion() in line 310
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses function getRtJar() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getLoader(Atom) in line 196
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getVal(int) defined in com::ibm::wala::util::Atom
      uses variable loadersByName defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getLoaderImpl(ClassLoaderReference) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loaderImplByRef defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getLoaders() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadersByName defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getModules(ClassLoaderReference) in line 281
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable moduleMap defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getNumberOfLoaders() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadersByName defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getPrimordialLoader() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable PRIMORDIAL defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getRtJar() in line 294
      15 lines of code
      0 parameters
      5 conditional paths
      uses function getModules(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getPrimordialLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getSyntheticLoader() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable SYNTHETIC defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function isJava14Libraries() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getJavaLibraryVersion() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function isJava15Libraries() in line 329
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getJavaLibraryVersion() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function setExclusions(SetOfClasses) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exclusions defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function setLoaderImpl(ClassLoaderReference,String) in line 222
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable loaderImplByRef defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function toString() in line 253
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable loadersByName defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getExclusionString() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function AnalysisScope() in line 88
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable PRIMORDIAL defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable EXTENSION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable APPLICATION defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable SYNTHETIC defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function setParent(ClassLoaderReference) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable loadersByName defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   variable APPLICATION in line 64
      protection public
   variable arrayClassLoader in line 81
   variable DEBUG_LEVEL in line 58
   variable exclusions in line 71
   variable EXTENSION in line 62
      protection public
   variable loaderImplByRef in line 215
   variable loadersByName in line 76
   variable moduleMap in line 86
   variable PRIMORDIAL in line 60
      protection public
   variable SYNTHETIC in line 66
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/CallGraph.java
module com::ibm::wala::ipa::callgraph::CallGraph
   inherits from com::ibm::wala::util::graph::NumberedGraph
   function dump(String) in line 71
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassHierarchy() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEntrypointNodes() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFakeRootNode() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInterpreter(CGNode) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNode(IMethod,Context) in line 50
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getNodes(MethodReference) in line 57
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/CallGraphBuilder.java
module com::ibm::wala::ipa::callgraph::CallGraphBuilder
   function getPointerAnalysis() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPointerFlowGraphFactory() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeCallGraph(AnalysisOptions) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/CallGraphFactory.java
module com::ibm::wala::ipa::callgraph::CallGraphFactory
   function make(ClassHierarchy) in line 22
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/CallGraphFactory.java
module com::ibm::wala::ecore::java::callGraph::CallGraphFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createECallGraph() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCallGraphPackage() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/CallGraphStats.java
module com::ibm::wala::ipa::callgraph::CallGraphStats
   function collectMethods(CallGraph) in line 85
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function countBytecodeBytes(CallGraph) in line 60
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getStats(CallGraph) in line 33
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function collectMethods(CallGraph) defined in com::ibm::wala::ipa::callgraph::CallGraphStats
      uses function countBytecodeBytes(CallGraph) defined in com::ibm::wala::ipa::callgraph::CallGraphStats
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/CGEdge.java
module com::ibm::wala::ipa::callgraph::CGEdge
   function equals(Object) in line 40
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function CGEdge(CGNode,CGNode) defined in com::ibm::wala::ipa::callgraph::CGEdge
      uses variable src defined in com::ibm::wala::ipa::callgraph::CGEdge
      uses variable dest defined in com::ibm::wala::ipa::callgraph::CGEdge
   function getDest() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dest defined in com::ibm::wala::ipa::callgraph::CGEdge
   function getSrc() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ipa::callgraph::CGEdge
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ipa::callgraph::CGEdge
      uses variable dest defined in com::ibm::wala::ipa::callgraph::CGEdge
   function toString() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ipa::callgraph::CGEdge
      uses variable dest defined in com::ibm::wala::ipa::callgraph::CGEdge
   function CGEdge(CGNode,CGNode) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ipa::callgraph::CGEdge
      uses variable dest defined in com::ibm::wala::ipa::callgraph::CGEdge
   variable dest in line 32
   variable src in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/CGLabeledEdge.java
module com::ibm::wala::ipa::callgraph::CGLabeledEdge
   inherits from com::ibm::wala::ipa::callgraph::CGEdge
   function equals(Object) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::ipa::callgraph::CGLabeledEdge
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
   function getLabel() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::ipa::callgraph::CGLabeledEdge
   function hashCode() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::ipa::callgraph::CGLabeledEdge
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
   function CGLabeledEdge(CGNode,CallSiteReference,CGNode) in line 19
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ipa::callgraph::CGEdge
      uses variable label defined in com::ibm::wala::ipa::callgraph::CGLabeledEdge
   variable label in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/CGNode.java
module com::ibm::wala::ipa::callgraph::CGNode
   inherits from com::ibm::wala::util::graph::INodeWithNumber
   inherits from com::ibm::wala::ipa::callgraph::ContextItem
   function addTarget(CallSiteReference,CGNode) in line 67
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getCallGraph() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getContext() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getIR(WarningSet) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMethod() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfTargets(CallSiteReference) in line 73
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPossibleSites(CGNode) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPossibleTargets(CallSiteReference) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function iterateSites() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/ClassTargetSelector.java
module com::ibm::wala::ipa::callgraph::ClassTargetSelector
   function getAllocatedTarget(CGNode,NewSiteReference) in line 49
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/Context.java
module com::ibm::wala::ipa::callgraph::Context
   function get(ContextKey) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/ContextItem.java
module com::ibm::wala::ipa::callgraph::ContextItem
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/ContextKey.java
module com::ibm::wala::ipa::callgraph::ContextKey
   variable CALLER in line 25
      protection public
   variable CALLSITE in line 32
      protection public
   variable RECEIVER in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/ContextSelector.java
module com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 68
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 62
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 40
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 34
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 48
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/ContextUtil.java
module com::ibm::wala::ipa::callgraph::ContextUtil
   function getConcreteClassFromContext(Context) in line 31
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function get(ContextKey) defined in com::ibm::wala::ipa::callgraph::Context
      uses variable RECEIVER defined in com::ibm::wala::ipa::callgraph::ContextKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/Entrypoint.java
module com::ibm::wala::ipa::callgraph::Entrypoint
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   abstract class
   function addCall(FakeRootMethod,WarningSet) in line 137
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function makeSite(int) defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function makeArgument(FakeRootMethod,int,WarningSet) defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function addInvocation(int[],CallSiteReference) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function equals(Object) in line 126
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMethod() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getParameterTypes(int) defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::callgraph::Entrypoint
   function getNumberOfParameters() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParameterTypes(int) in line 163
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
   function makeArgument(FakeRootMethod,int,WarningSet) in line 97
      25 lines of code
      3 parameters
      5 conditional paths
      uses function getParameterTypes(int) defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function addAllocation(TypeReference,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getDef() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function addPhi(int[]) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function makeSite(int) in line 67
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getSelector() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::Selector
      uses variable clinitSelector defined in com::ibm::wala::types::MethodReference
      uses function isStatic() defined in com::ibm::wala::classLoader::IMember
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable initSelector defined in com::ibm::wala::types::MethodReference
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function toString() in line 173
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getParameterTypes(int) defined in com::ibm::wala::ipa::callgraph::Entrypoint
   function Entrypoint(IMethod) in line 43
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
   function Entrypoint(MethodReference,ClassHierarchy) in line 52
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable method in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/Entrypoints.java
module com::ibm::wala::ipa::callgraph::Entrypoints
   function iterator() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/AllApplicationEntrypoints.java
module com::ibm::wala::ipa::callgraph::impl::AllApplicationEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   function isApplicationClass(AnalysisScope,IClass) in line 63
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
   function AllApplicationEntrypoints(AnalysisScope,final ClassHierarchy) in line 37
      protection public
      20 lines of code
      2 parameters
      7 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function isApplicationClass(AnalysisScope,IClass) defined in com::ibm::wala::ipa::callgraph::impl::AllApplicationEntrypoints
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
      uses function isAbstract() defined in com::ibm::wala::classLoader::IMethod
      uses function add(Entrypoint) defined in com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::impl::AllApplicationEntrypoints
      uses function size() defined in com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   variable DEBUG in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ArgumentTypeEntrypoint.java
module com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
   inherits from com::ibm::wala::ipa::callgraph::Entrypoint
   function chooseAConcreteSubClass(IClass) in line 81
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
   function chooseAnImplementor(IClass) in line 72
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
      uses function getImplementors(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function getNumberOfParameters() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
   function getParameterTypes(int) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
   function makeParameterTypes(IMethod) in line 40
      31 lines of code
      1 parameters
      9 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses function chooseAConcreteSubClass(IClass) defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function chooseAnImplementor(IClass) defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getInnermostElementClass() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getDimensionality() defined in com::ibm::wala::classLoader::ArrayClass
   function ArgumentTypeEntrypoint(IMethod,ClassHierarchy) in line 96
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
      uses function makeParameterTypes(IMethod) defined in com::ibm::wala::ipa::callgraph::impl::ArgumentTypeEntrypoint
   variable cha in line 35
   variable paramTypes in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/BasicCallGraph.java
module com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   inherits from com::ibm::wala::ipa::callgraph::CallGraph
   abstract class
   function containsNode(CGNode) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
   function dump(String) in line 242
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function prettyPrint(CGNode) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function findOrCreateMr2Nodes(IMethod) in line 121
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable mr2Nodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function findOrCreateNode(IMethod,Context) in line 108
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getEntrypointNodes() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypointNodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function getFakeRootNode() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fakeRoot defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function getInterpreter(CGNode) in line 350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interpreter defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function getNode(Key) in line 130
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function getNode(IMethod,Context) in line 282
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function getNodeManager() in line 394
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function getNodes(MethodReference) in line 335
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable mr2Nodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function getNumberOfNodes() in line 360
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function init() in line 94
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable fakeRoot defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function makeFakeRootNode() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function registerNode(Key,CGNode) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function findOrCreateNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function iterateNodes() in line 370
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function makeFakeRootNode() in line 100
      1 lines of code
      0 parameters
      1 conditional paths
   function prettyPrint(CGNode) in line 262
      5 lines of code
      1 parameters
      1 conditional paths
   function registerEntrypoint(CGNode) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entrypointNodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function registerNode(Key,CGNode) in line 110
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable nodes defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function findOrCreateMr2Nodes(IMethod) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses variable m defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::Key
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getNumberOfNodes() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function removeNodeAndEdges(CGNode) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInterpreter(SSAContextInterpreter) in line 386
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interpreter defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function toString() in line 217
      protection public
      21 lines of code
      0 parameters
      6 conditional paths
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function iterateSites() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
   function BasicCallGraph() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 50
   variable entrypointNodes in line 67
   variable fakeRoot in line 57
   variable interpreter in line 62
   variable mr2Nodes in line 85
   variable nodeManager in line 52
   variable nodes in line 73
module com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
   inherits from com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::ipa::callgraph::CGNode
   abstract class
   function addTarget(CallSiteReference,CGNode) in line 210
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function equals(Object) in line 186
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getContext() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
      uses function addTarget(CallSiteReference,CGNode) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
   function getMethod() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
      uses function hashCode() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
   function getPossibleTargets(CallSiteReference) in line 181
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 191
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
      uses variable context defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
   function NodeImpl(IMethod,Context) in line 166
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::NodeImpl
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function isAbstract() defined in com::ibm::wala::classLoader::IMethod
   variable context in line 164
   variable method in line 159
module com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::Key
   function equals(Object) in line 311
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable m defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::Key
      uses variable C defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph::Key
   function hashCode() in line 307
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Key(IMethod,Context) in line 298
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable C in line 296
   variable m in line 294
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/BasicEntrypoints.java
module com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::Entrypoints
   function add(Entrypoint) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   function iterator() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   function size() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   variable entrypoints in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ClassHierarchyClassTargetSelector.java
module com::ibm::wala::ipa::callgraph::impl::ClassHierarchyClassTargetSelector
   inherits from com::ibm::wala::ipa::callgraph::ClassTargetSelector
   function getAllocatedTarget(CGNode,NewSiteReference) in line 42
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ClassHierarchyClassTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
   function ClassHierarchyClassTargetSelector(ClassHierarchy) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ClassHierarchyClassTargetSelector
   variable cha in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ClassHierarchyMethodTargetSelector.java
module com::ibm::wala::ipa::callgraph::impl::ClassHierarchyMethodTargetSelector
   inherits from com::ibm::wala::ipa::callgraph::MethodTargetSelector
   function feasibleChaResolution(ClassHierarchy,CallSiteReference,IClass) in line 99
      protection public
      32 lines of code
      3 parameters
      6 conditional paths
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::Selector
      uses variable clinitSelector defined in com::ibm::wala::types::MethodReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isSubclassOf(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getCalleeTarget(CGNode,CallSiteReference,IClass) in line 61
      protection public
      34 lines of code
      3 parameters
      7 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function isDispatch() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isFixed() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable classHierarchy defined in com::ibm::wala::ipa::callgraph::impl::ClassHierarchyMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::impl::ClassHierarchyMethodTargetSelector
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function feasibleChaResolution(ClassHierarchy,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::impl::ClassHierarchyMethodTargetSelector
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function mightReturnSyntheticMethod(CGNode,CallSiteReference) in line 138
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function mightReturnSyntheticMethod(MethodReference) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ClassHierarchyMethodTargetSelector(ClassHierarchy,WarningSet) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classHierarchy defined in com::ibm::wala::ipa::callgraph::impl::ClassHierarchyMethodTargetSelector
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::impl::ClassHierarchyMethodTargetSelector
   variable classHierarchy in line 36
   variable warnings in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ComposedEntrypoints.java
module com::ibm::wala::ipa::callgraph::impl::ComposedEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::Entrypoints
   function iterator() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::ipa::callgraph::impl::ComposedEntrypoints
   function ComposedEntrypoints(Entrypoints,Entrypoints) in line 31
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses function iterator() defined in com::ibm::wala::ipa::callgraph::Entrypoints
      uses variable entrypoints defined in com::ibm::wala::ipa::callgraph::impl::ComposedEntrypoints
   variable entrypoints in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ContextInsensitiveSelector.java
module com::ibm::wala::ipa::callgraph::impl::ContextInsensitiveSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 44
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 37
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 30
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/DefaultContextSelector.java
module com::ibm::wala::ipa::callgraph::impl::DefaultContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::impl::DefaultContextSelector
      uses function allSitesDispatchIdentically(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 81
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::impl::DefaultContextSelector
      uses function contextIsIrrelevant(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 64
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::impl::DefaultContextSelector
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 53
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::impl::DefaultContextSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 92
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::impl::DefaultContextSelector
      uses function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function setWarnings(WarningSet) in line 73
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function DefaultContextSelector(ClassHierarchy,MethodTargetSelector) in line 39
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::impl::DefaultContextSelector
   variable delegate in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/DefaultEntrypoint.java
module com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   inherits from com::ibm::wala::ipa::callgraph::Entrypoint
   function getCha() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function getNumberOfParameters() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function getParameterTypes(int) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function makeParameterTypes(IMethod) in line 52
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
   function makeParameterTypes(IMethod,int) in line 61
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
   function setParameterTypes(int,TypeReference[]) in line 72
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function DefaultEntrypoint(IMethod,ClassHierarchy) in line 31
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses function makeParameterTypes(IMethod) defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function DefaultEntrypoint(MethodReference,ClassHierarchy) in line 40
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses variable paramTypes defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses function makeParameterTypes(IMethod) defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable cha in line 29
   variable paramTypes in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/DelegatingContextSelector.java
module com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 111
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses function allSitesDispatchIdentically(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable B defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses function contextIsIrrelevant(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable B defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 71
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable B defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 47
      protection public
      20 lines of code
      4 parameters
      6 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses variable A defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable B defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 82
      protection public
      8 lines of code
      4 parameters
      3 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable B defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
   function setWarnings(WarningSet) in line 94
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses function setWarnings(WarningSet) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable B defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
   function DelegatingContextSelector(ContextSelector,ContextSelector) in line 35
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses variable B defined in com::ibm::wala::ipa::callgraph::impl::DelegatingContextSelector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable A in line 32
   variable B in line 33
   variable DEBUG in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/Everywhere.java
module com::ibm::wala::ipa::callgraph::impl::Everywhere
   inherits from com::ibm::wala::ipa::callgraph::Context
   function equals(Object) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function get(ContextKey) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Everywhere() in line 28
      2 lines of code
      0 parameters
      1 conditional paths
   variable EVERYWHERE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ExplicitCallGraph.java
module com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
   inherits from com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   function findOrCreateNode(IMethod,Context) in line 101
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function makeNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses function registerNode(Key,CGNode) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function getClassHierarchy() in line 331
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
   function getEdgeManager() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
   function makeEdgeManger() in line 440
      3 lines of code
      0 parameters
      1 conditional paths
   function makeFakeRootNode() in line 91
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findOrCreateNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function makeNode(IMethod,Context) in line 84
      3 lines of code
      2 parameters
      1 conditional paths
   function ExplicitCallGraph(ClassHierarchy,AnalysisOptions) in line 74
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses function init() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   variable cha in line 62
   variable DEBUG in line 57
   variable edgeManager in line 72
   variable options in line 67
module com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
   inherits from NodeImpl
   function addTarget(CallSiteReference,CGNode) in line 187
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function addTarget(int,CGNode) in line 191
      33 lines of code
      2 parameters
      5 conditional paths
      uses variable allTargets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function set(int,T) defined in com::ibm::wala::util::intset::SparseVector
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
   function clearAllTargets() in line 312
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function clear() defined in com::ibm::wala::util::intset::SparseVector
      uses variable allTargets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function clear() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function equals(Object) in line 289
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getAllTargetNumbers() in line 308
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allTargets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
   function getCallGraph() in line 317
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIR(WarningSet) in line 321
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function getNumberOfTargets(CallSiteReference) in line 230
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function getPossibleSites(final CGNode) in line 177
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function iterateSites() defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getPossibleTargetNumbers(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function getPossibleTargetNumbers(CallSiteReference) in line 160
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
   function getPossibleTargets(CallSiteReference) in line 142
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function hashCode() in line 300
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function iterateSites() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function iterateCallSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   function removeTarget(CGNode) in line 256
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable allTargets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function safeIterateIndices() defined in com::ibm::wala::util::intset::SparseVector
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function remove(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
      uses function set(int,T) defined in com::ibm::wala::util::intset::SparseVector
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function ExplicitNode(IMethod,Context) in line 138
      3 lines of code
      2 parameters
      1 conditional paths
   variable allTargets in line 133
   variable targets in line 131
module com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitEdgeManager
   inherits from com::ibm::wala::util::graph::NumberedEdgeManager
   function addEdge(CGNode,CGNode) in line 393
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function addEdge(int,int) in line 407
      4 lines of code
      2 parameters
      1 conditional paths
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getPredNodeCount(CGNode) in line 377
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function ExplicitNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function getRelatedCount(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getPredNodeNumbers(CGNode) in line 362
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function ExplicitNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getPredNodes(CGNode) in line 368
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getPredNodeNumbers(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
   function getSuccNodeCount(CGNode) in line 388
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ExplicitNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getAllTargetNumbers() defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function getSuccNodeNumbers(CGNode) in line 357
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ExplicitNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getAllTargetNumbers() defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
   function getSuccNodes(CGNode) in line 383
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ExplicitNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getAllTargetNumbers() defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function intIterator() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function hasEdge(CGNode,CGNode) in line 426
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function contains(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function removeAllIncidentEdges(CGNode) in line 412
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(CGNode,CGNode) in line 401
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function remove(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function removeIncomingEdges(CGNode) in line 416
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(CGNode) in line 421
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/FakeRootMethod.java
module com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   inherits from com::ibm::wala::classLoader::SyntheticMethod
   function addAllocation(TypeReference,WarningSet) in line 339
      protection public
      58 lines of code
      2 parameters
      8 conditional paths
      uses variable nextLocal defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable T defined in com::ibm::wala::classLoader::SyntheticClass
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses variable statements defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function initValueNumberForConstantOne() defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getDimensionality() defined in com::ibm::wala::types::TypeReference
      uses variable valueNumberForConstantOne defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable cha defined in com::ibm::wala::classLoader::SyntheticClass
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeReference) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod::AllocationFailure
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getDef() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable initSelector defined in com::ibm::wala::types::MethodReference
      uses function addInvocation(int[],CallSiteReference) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function invalidateCache(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function addGetInstance(FieldReference,int) in line 434
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable nextLocal defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable statements defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function addGetStatic(FieldReference) in line 440
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable nextLocal defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable statements defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function addInvocation(int[],CallSiteReference) in line 317
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable statements defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses variable nextLocal defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function invalidateCache(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function addPhi(int[]) in line 427
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable nextLocal defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable statements defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function getInterpreter() in line 446
      protection public
      71 lines of code
      0 parameters
      5 conditional paths
      uses variable statements defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getNewSite() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable rootMethod defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function getRootClass() in line 527
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootClass defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function getRootMethod() in line 531
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootMethod defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function getStatements(SSAOptions,WarningSet) in line 289
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable statements defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function initValueNumberForConstantOne() in line 398
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable valueNumberForConstantOne defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable nextLocal defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function isFakeRootMethod(MethodReference) in line 523
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable rootMethod defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   function makeIR(SSAOptions,WarningSet) in line 304
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable valueNumberForConstantOne defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function makeControlFlowGraph() defined in com::ibm::wala::classLoader::SyntheticMethod
   function FakeRootMethod(final ClassHierarchy,AnalysisOptions) in line 278
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable rootMethod defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable cha defined in com::ibm::wala::classLoader::SyntheticClass
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
   variable cha in line 83
   variable name in line 64
   variable nextLocal in line 81
   variable options in line 85
   variable rootClass in line 66
   variable rootMethod in line 69
   variable statements in line 72
   variable valueNumberForConstantOne in line 74
module com::ibm::wala::ipa::callgraph::impl::FakeRootMethod::FakeRootClass
   inherits from com::ibm::wala::classLoader::SyntheticClass
   function getAllAncestorInterfaces() in line 144
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getAllFields() in line 272
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllImplementedInterfaces() in line 133
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getAllInstanceFields() in line 241
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getAllMethods() in line 262
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllStaticFields() in line 252
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getClassInitializer() in line 177
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredInstanceFields() in line 199
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredMethods() in line 188
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredStaticFields() in line 210
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getDirectInterfaces() in line 230
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getField(Atom) in line 166
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getMethod(Selector) in line 155
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getModifiers() in line 111
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticClass
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getSuperclass() in line 122
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function isReferenceType() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticClass
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
module com::ibm::wala::ipa::callgraph::impl::FakeRootMethod::AllocationFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeReference) in line 422
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ReflectiveForObjectSubtypesEntrypoint.java
module com::ibm::wala::ipa::callgraph::impl::ReflectiveForObjectSubtypesEntrypoint
   inherits from com::ibm::wala::ipa::callgraph::impl::ReflectiveSubtypesEntrypoint
   function useReflectiveMachinery(TypeReference) in line 28
      3 lines of code
      1 parameters
      1 conditional paths
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
   function ReflectiveForObjectSubtypesEntrypoint(MethodReference,ClassHierarchy) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function ReflectiveForObjectSubtypesEntrypoint(IMethod,ClassHierarchy) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/ReflectiveSubtypesEntrypoint.java
module com::ibm::wala::ipa::callgraph::impl::ReflectiveSubtypesEntrypoint
   inherits from com::ibm::wala::ipa::callgraph::impl::SubtypesEntrypoint
   abstract class
   function makeArgument(FakeRootMethod,int,WarningSet) in line 33
      11 lines of code
      3 parameters
      2 conditional paths
      uses function useReflectiveMachinery(TypeReference) defined in com::ibm::wala::ipa::callgraph::impl::ReflectiveSubtypesEntrypoint
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
      uses function addAllocation(TypeReference,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable JavaLangString defined in com::ibm::wala::types::TypeReference
      uses function getDef() defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable JavaLangClassForName defined in com::ibm::wala::types::MethodReference
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function addInvocation(int[],CallSiteReference) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable JavaLangClassNewInstance defined in com::ibm::wala::types::MethodReference
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function useReflectiveMachinery(TypeReference) in line 31
      1 lines of code
      1 parameters
      1 conditional paths
   function ReflectiveSubtypesEntrypoint(MethodReference,ClassHierarchy) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function ReflectiveSubtypesEntrypoint(IMethod,ClassHierarchy) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses function useReflectiveMachinery(TypeReference) defined in com::ibm::wala::ipa::callgraph::impl::ReflectiveSubtypesEntrypoint
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/SetOfClasses.java
module com::ibm::wala::ipa::callgraph::impl::SetOfClasses
   abstract class
   function add(IClass) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function contains(String) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function contains(TypeReference) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function iterator(ClassHierarchy) in line 36
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function contains(String) defined in com::ibm::wala::ipa::callgraph::impl::SetOfClasses
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function add(IClass) defined in com::ibm::wala::ipa::callgraph::impl::SetOfClasses
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/SubtypesEntrypoint.java
module com::ibm::wala::ipa::callgraph::impl::SubtypesEntrypoint
   inherits from com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function makeParameterTypes(MethodReference) in line 44
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
   function makeParameterTypes(MethodReference,int) in line 53
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getCha() defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getImplementors(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function SubtypesEntrypoint(MethodReference,ClassHierarchy) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function SubtypesEntrypoint(IMethod,ClassHierarchy) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/impl/UnresolvedReflectionWarning.java
module com::ibm::wala::ipa::callgraph::impl::UnresolvedReflectionWarning
   inherits from com::ibm::wala::util::warnings::MethodWarning
   function getMsg() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::util::warnings::MethodWarning
   function UnresolvedReflectionWarning(CGNode) in line 19
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/MethodTargetSelector.java
module com::ibm::wala::ipa::callgraph::MethodTargetSelector
   function getCalleeTarget(CGNode,CallSiteReference,IClass) in line 52
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function mightReturnSyntheticMethod(CGNode,CallSiteReference) in line 61
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function mightReturnSyntheticMethod(MethodReference) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AbstractAllocationSiteKey.java
module com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   inherits from com::ibm::wala::analysis::reflection::InstanceKeyWithNode
   abstract class
   function equals(Object) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConcreteType() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   function getNode() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   function hashCode() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function AbstractAllocationSiteKey(CGNode,IClass) in line 25
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function hashCode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function toString() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   variable node in line 23
   variable type in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AbstractAnalysis.java
module com::ibm::wala::ipa::callgraph::propagation::AbstractAnalysis
   inherits from com::ibm::wala::util::graph::Graph
   function getContainer(Object) in line 103
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getContainerReadLink(Object,Object) in line 92
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getContainerWriteLink(Object,Object) in line 94
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getEncoding(Object) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getInterpretation(int) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSources(int) in line 81
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getValue(Object) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isField(Object) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AbstractFieldPointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceFieldPointerKey
   abstract class
   function getInstanceKey() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function AbstractFieldPointerKey(InstanceKey) in line 17
      4 lines of code
      1 parameters
      1 conditional paths
   variable instance in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AbstractLocalPointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::AbstractLocalPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractPointerKey
   abstract class
   function getNode() in line 18
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AbstractPointerAnalysis.java
module com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   inherits from com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
   abstract class
   function getCallGraph() in line 57
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function getHeapGraph() in line 47
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable heapGraph defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function getInstanceKeyMapping() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function getInstanceKeys() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function AbstractPointerAnalysis(CallGraph,MutableMapping< InstanceKey >) in line 42
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   variable cg in line 35
   variable heapGraph in line 31
   variable instanceKeys in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AbstractPointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::AbstractPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::PointerKey
   abstract class
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AbstractPointsToSolver.java
module com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointsToSolver
   abstract class
   function getBuilder() in line 46
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
   function getReflectionHandler() in line 50
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reflectionHandler defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
   function getSystem() in line 54
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
   function solve() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function AbstractPointsToSolver(PropagationSystem,PropagationCallGraphBuilder) in line 33
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function solve() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
   variable builder in line 25
   variable DEBUG in line 21
   variable reflectionHandler in line 27
   variable system in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AllocationSiteInstanceKeys.java
module com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 69
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getInstanceKeyForClassObject(TypeReference) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function getInstanceKeyForClassObject(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForConstant(Object) in line 112
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function getUseConstantSpecificKeys() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getConstantType(Object) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 96
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 127
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getStringConstantForInstanceKey(InstanceKey) in line 119
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function AllocationSiteInstanceKeys(AnalysisOptions,ClassHierarchy,WarningSet) in line 56
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
   variable cha in line 46
   variable classBased in line 48
   variable options in line 36
   variable warnings in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AllocationSiteKey.java
module com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   abstract class
   function equals(Object) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSite() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
   function hashCode() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
   function AllocationSiteKey(CGNode,NewSiteReference,IClass) in line 24
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
      uses function hashCode() defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
   variable site in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ArrayInstanceKey.java
module com::ibm::wala::ipa::callgraph::propagation::ArrayInstanceKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   function equals(Object) in line 24
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ArrayInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::ArrayInstanceKey
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function getTypeFilter() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   function hashCode() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function toString() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function ArrayInstanceKey(InstanceKey) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AssignEquation.java
module com::ibm::wala::ipa::callgraph::propagation::AssignEquation
   inherits from com::ibm::wala::fixedpoint::impl::UnaryStatement
   inherits from com::ibm::wala::util::debug::VerboseAction
   function equals(Object) in line 50
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
   function getOperator() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function performVerboseAction() in line 63
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::AssignEquation
      uses variable lhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable rhs defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   variable DEBUG in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/AssignOperator.java
module com::ibm::wala::ipa::callgraph::propagation::AssignOperator
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 39
      protection public
      29 lines of code
      2 parameters
      1 conditional paths
   function hashCode() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeEquation(IVariable,IVariable) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/CallerContext.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   inherits from com::ibm::wala::ipa::callgraph::Context
   function equals(Object) in line 49
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function CallerContext(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   function get(ContextKey) in line 38
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable CALLER defined in com::ibm::wala::ipa::callgraph::ContextKey
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   function getCaller() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   function hashCode() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   function toString() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   function CallerContext(CGNode) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   variable caller in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/CallerContextPair.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContextPair
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
   function equals(Object) in line 60
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function CallerContextPair(CGNode,Context) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContextPair
      uses function getCaller() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContextPair
   function get(ContextKey) in line 49
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable CALLER defined in com::ibm::wala::ipa::callgraph::ContextKey
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContextPair
      uses function get(ContextKey) defined in com::ibm::wala::ipa::callgraph::Context
   function hashCode() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCaller() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContextPair
   function toString() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCaller() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContextPair
   function CallerContextPair(CGNode,Context) in line 37
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContextPair
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable baseContext in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/CallerSiteContextPair.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContextPair
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContext
   function equals(Object) in line 61
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function CallerSiteContextPair(CGNode,CallSiteReference,Context) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContextPair
      uses function getCaller() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContextPair
   function get(ContextKey) in line 50
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable CALLER defined in com::ibm::wala::ipa::callgraph::ContextKey
      uses variable CALLSITE defined in com::ibm::wala::ipa::callgraph::ContextKey
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContextPair
      uses function get(ContextKey) defined in com::ibm::wala::ipa::callgraph::Context
   function hashCode() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContextPair
   function toString() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContextPair
   function CallerSiteContextPair(CGNode,CallSiteReference,Context) in line 38
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerContext
      uses variable baseContext defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallerSiteContextPair
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable baseContext in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/CallStringContextSelector.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   abstract class
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 197
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 193
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 185
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 169
      protection public
      11 lines of code
      4 parameters
      3 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses function getCallString(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function getCallString(CGNode,CallSiteReference,IMethod) in line 156
      12 lines of code
      3 parameters
      3 conditional paths
      uses function getLength(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function get(ContextKey) defined in com::ibm::wala::ipa::callgraph::Context
      uses variable CALL_STRING defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses function CallString(CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getLength(CGNode,CallSiteReference,IMethod) in line 154
      1 lines of code
      3 parameters
      1 conditional paths
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 181
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function setWarnings(WarningSet) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses function setWarnings(WarningSet) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function CallStringContextSelector(ContextSelector) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses function getLength(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   variable base in line 148
   variable CALL_STRING in line 28
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
   inherits from com::ibm::wala::ipa::callgraph::ContextItem
   function equals(Object) in line 70
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function CallString(CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses variable sites defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses variable methods defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
   function hashCode() in line 61
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable sites defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable methods defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
   function toString() in line 53
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable sites defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses variable methods defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
   function CallString(CallSiteReference,IMethod) in line 39
      4 lines of code
      2 parameters
      1 conditional paths
   function CallString(CallSiteReference,IMethod,int,CallString) in line 44
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable sites defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses variable methods defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
   variable methods in line 37
   variable sites in line 35
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallStringContext
   inherits from com::ibm::wala::ipa::callgraph::Context
   function equals(Object) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function get(ContextKey) in line 107
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable CALL_STRING defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   function hashCode() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
   function toString() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toString() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
   function CallStringContext(CallString) in line 91
      3 lines of code
      1 parameters
      1 conditional paths
   variable cs in line 89
module com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallStringContextPair
   inherits from com::ibm::wala::ipa::callgraph::Context
   function equals(Object) in line 126
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   function get(ContextKey) in line 139
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable CALL_STRING defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   function hashCode() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   function toString() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toString() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector::CallString
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   function CallStringContextPair(CallString,Context) in line 121
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   variable base in line 119
   variable cs in line 117
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/CFABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::CFABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
   abstract class
   function makeDefaultContextInterpreters(SSAContextInterpreter,AnalysisOptions,ClassHierarchy,ReflectionSpecification,WarningSet) in line 38
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function CFABuilder(ClassHierarchy,WarningSet,AnalysisOptions) in line 34
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable usePreTransitiveSolver defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/CFAPointerKeys.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   inherits from com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getFilteredPointerKeyForLocal(CGNode,int,IClass) in line 44
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getFilteredPointerKeyForLocal(CGNode,int,InstanceKey) in line 61
      protection public
      8 lines of code
      3 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getPointerKeyForArrayContents(InstanceKey) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPointerKeyForExceptionalReturnValue(CGNode) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPointerKeyForInstanceField(InstanceKey,IField) in line 85
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getPointerKeyForLocal(CGNode,int) in line 35
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getPointerKeyForReturnValue(CGNode) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPointerKeyForStaticField(IField) in line 78
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function CFAPointerKeys() in line 32
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/ContainerContextSelector.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 304
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 290
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function findNodeRecursiveMatchingContext(IMethod,Context) in line 160
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function getReceiver() defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
   function findRecursiveMatchingContext(IMethod,Context,InstanceKey) in line 134
      protection public
      17 lines of code
      3 parameters
      4 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function findRecursiveMatchingContext(IMethod,Context) in line 189
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findNodeRecursiveMatchingContext(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 201
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 94
      protection public
      23 lines of code
      4 parameters
      7 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function isArrayCopy(MethodReference) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getClassHierarchy() in line 297
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
   function isArrayCopy(MethodReference) in line 118
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangSystem defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable arraycopyAtom defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable synthArraycopy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
   function isContainer(IClass) in line 267
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 214
      protection public
      48 lines of code
      4 parameters
      11 conditional paths
      uses function isArrayCopy(MethodReference) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function isStatic() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function isContainer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function getNumberOfImmediateSubclasses(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses function isInteresting(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
   function setWarnings(WarningSet) in line 279
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function ContainerContextSelector(ClassHierarchy,ZeroXInstanceKeys) in line 78
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContainerContextSelector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable arraycopyAtom in line 58
      protection public
   variable arraycopyDesc in line 60
   variable cha in line 67
   variable DEBUG in line 48
   variable delegate in line 72
   variable JavaLangSystem in line 55
      protection public
   variable JavaLangSystemName in line 51
   variable synthArraycopy in line 62
      protection public
   variable SyntheticSystem in line 53
      protection public
   variable SyntheticSystemName in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/ContextInsensitiveSSAInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::ContextInsensitiveRTAInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function getCFG(CGNode,WarningSet) in line 80
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
   function getDU(CGNode,WarningSet) in line 95
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function findOrCreateDU(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getIR(CGNode,WarningSet) in line 48
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function findOrCreateIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
      uses function getSSAOptions() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getNumberOfStatements(CGNode,WarningSet) in line 60
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function recordFactoryType(CGNode,IClass) in line 71
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ContextInsensitiveSSAInterpreter(AnalysisOptions,ClassHierarchy) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ContextInsensitiveSSAInterpreter
   variable cha in line 36
   variable options in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/DefaultSSAInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function getCFAInterpreter(CGNode) in line 58
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable cloneInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses variable defaultInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
   function getCFG(CGNode,WarningSet) in line 137
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getCFAInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses function getCFG(CGNode,WarningSet) defined in com::ibm::wala::ipa::cfg::CFGProvider
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function getDU(CGNode,WarningSet) in line 143
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getCFAInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses function getDU(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function getIR(CGNode,WarningSet) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getCFAInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function getNumberOfStatements(CGNode,WarningSet) in line 85
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getCFAInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses function getNumberOfStatements(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function iterateCallSites(CGNode,WarningSet) in line 117
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getCFAInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses function iterateCallSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function iterateNewSites(CGNode,WarningSet) in line 106
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getCFAInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses function iterateNewSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function recordFactoryType(CGNode,IClass) in line 127
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function understands(IMethod,Context) in line 95
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function DefaultSSAInterpreter(AnalysisOptions,ClassHierarchy,WarningSet) in line 47
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
      uses variable cloneInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
      uses variable defaultInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DefaultSSAInterpreter
   variable cloneInterpreter in line 39
   variable defaultInterpreter in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/DelegatingSSAContextInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function getCFG(CGNode,WarningSet) in line 94
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function getCFG(CGNode,WarningSet) defined in com::ibm::wala::ipa::cfg::CFGProvider
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
   function getDU(CGNode,WarningSet) in line 109
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function getDU(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
   function getIR(CGNode,WarningSet) in line 45
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
   function getNumberOfStatements(CGNode,WarningSet) in line 60
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function getNumberOfStatements(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
   function recordFactoryType(CGNode,IClass) in line 83
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses function recordFactoryType(CGNode,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
   function understands(CGNode) in line 74
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   function DelegatingSSAContextInterpreter(SSAContextInterpreter,SSAContextInterpreter) in line 34
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::cfa::DelegatingSSAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable A in line 31
   variable B in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/ExceptionReturnValueKey.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::ExceptionReturnValueKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::ReturnValueKey
   function equals(Object) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/nCFABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::nCFABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CFABuilder
   function getDefaultDispatchBoundHeuristic() in line 55
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CHA_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function nCFABuilder(int,ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter,ReflectionSpecification) in line 33
      protection public
      16 lines of code
      7 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setInstanceKeys(InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextSelector(ContextSelector) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/nCFAContextSelector.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::nCFAContextSelector
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
   function getLength(CGNode,CallSiteReference,IMethod) in line 26
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ipa::callgraph::propagation::cfa::nCFAContextSelector
   function nCFAContextSelector(int,ContextSelector) in line 21
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CallStringContextSelector
      uses variable n defined in com::ibm::wala::ipa::callgraph::propagation::cfa::nCFAContextSelector
   variable n in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/OneCFABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::OneCFABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CFABuilder
   function getDefaultDispatchBoundHeuristic() in line 55
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CHA_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function OneCFABuilder(ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter,ReflectionSpecification) in line 33
      protection public
      16 lines of code
      6 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setInstanceKeys(InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextSelector(ContextSelector) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/OneLevelContextSelector.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 80
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 73
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelContextSelector
      uses function contextIsIrrelevant(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 60
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelContextSelector
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 44
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelContextSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 53
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelContextSelector
      uses function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function setWarnings(WarningSet) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelContextSelector
      uses function setWarnings(WarningSet) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function OneLevelContextSelector(ContextSelector) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelContextSelector
   variable baseSelector in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/OneLevelSiteContextSelector.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelSiteContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 97
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 69
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelSiteContextSelector
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 49
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelSiteContextSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 58
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelSiteContextSelector
      uses function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function setWarnings(WarningSet) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelSiteContextSelector
      uses function setWarnings(WarningSet) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function OneLevelSiteContextSelector(ContextSelector) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable baseSelector defined in com::ibm::wala::ipa::callgraph::propagation::cfa::OneLevelSiteContextSelector
   variable baseSelector in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/ZeroContainerCFABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroContainerCFABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CFABuilder
   function getDefaultDispatchBoundHeuristic() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CHA_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function ZeroContainerCFABuilder(ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter,ReflectionSpecification) in line 45
      protection public
      16 lines of code
      6 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setInstanceKeys(InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable NONE defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextSelector(ContextSelector) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeDefaultContextInterpreters(SSAContextInterpreter,AnalysisOptions,ClassHierarchy,ReflectionSpecification,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFABuilder
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/ZeroOneContainerCFABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroOneContainerCFABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CFABuilder
   function getDefaultDispatchBoundHeuristic() in line 87
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CHA_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function makeContainerContextSelector(ClassHierarchy,ZeroXInstanceKeys) in line 78
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function makeInstanceKeys(ClassHierarchy,WarningSet,AnalysisOptions,SSAContextInterpreter) in line 66
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_MANY defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_PRIMITIVE_HOLDERS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_STRINGS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_THROWABLES defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function ZeroOneContainerCFABuilder(ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter,ReflectionSpecification) in line 46
      protection public
      19 lines of code
      6 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeInstanceKeys(ClassHierarchy,WarningSet,AnalysisOptions,SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroOneContainerCFABuilder
      uses function setInstanceKeys(InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeContainerContextSelector(ClassHierarchy,ZeroXInstanceKeys) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroOneContainerCFABuilder
      uses function getInstanceKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextSelector(ContextSelector) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/ZeroXCFABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXCFABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::cfa::CFABuilder
   function getDefaultDispatchBoundHeuristic() in line 93
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable instancePolicy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXCFABuilder
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable CHA_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable NO_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function make(AnalysisOptions,ClassHierarchy,ClassLoader,AnalysisScope,String[],WarningSet,byte) in line 77
      protection public
      10 lines of code
      7 parameters
      2 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function ZeroXCFABuilder(ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter,ReflectionSpecification,int) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXCFABuilder
      uses function getReflectionSpec() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable instancePolicy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXCFABuilder
   function makeInstanceKeys(ClassHierarchy,WarningSet,AnalysisOptions,SSAContextInterpreter,int) in line 58
      4 lines of code
      5 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable instancePolicy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXCFABuilder
   function ZeroXCFABuilder(ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter,ReflectionSpecification,int) in line 36
      protection public
      18 lines of code
      7 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable instancePolicy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXCFABuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextSelector(ContextSelector) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeInstanceKeys(ClassHierarchy,WarningSet,AnalysisOptions,SSAContextInterpreter,int) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXCFABuilder
      uses function setInstanceKeys(InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   variable instancePolicy in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/cfa/ZeroXInstanceKeys.java
module com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function allFieldsArePrimitive(IClass) in line 327
      23 lines of code
      1 parameters
      6 conditional paths
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getDeclaredInstanceFields() defined in com::ibm::wala::classLoader::IClass
      uses function getFieldReference() defined in com::ibm::wala::classLoader::IField
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function allocationPolicy() in line 162
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable policy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable ALLOCATIONS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function countAllocsByType(CGNode) in line 233
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function iterateNewSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
   function exceedsSmushLimit(IClass,CGNode) in line 210
      17 lines of code
      2 parameters
      4 conditional paths
      uses function countAllocsByType(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_LIMIT defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function getClassHierarchy() in line 354
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 184
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInteresting(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function smushMany() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function exceedsSmushLimit(IClass,CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable smushed defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses variable siteBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForClassObject(TypeReference) in line 293
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForClassObject(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForConstant(Object) in line 269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForConstant(Object) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 256
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function allocationPolicy() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable siteBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteInstanceKeys
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 289
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getStringConstantForInstanceKey(InstanceKey) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function getStringConstantForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function isInteresting(IClass) in line 300
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses function allocationPolicy() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function smushStrings() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function isStringish(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function smushThrowables() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function isThrowable(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function isStackTraceElement(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function smushPrimHolders() defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function allFieldsArePrimitive(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function isStackTraceElement(IClass) in line 323
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangStackTraceElement defined in com::ibm::wala::types::TypeReference
   function isStringish(IClass) in line 315
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangString defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangStringBuffer defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function isThrowable(IClass) in line 319
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses function isSubclassOf(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangThrowable defined in com::ibm::wala::types::TypeReference
   function smushMany() in line 158
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable policy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_MANY defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function smushPrimHolders() in line 174
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable policy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_PRIMITIVE_HOLDERS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function smushStrings() in line 166
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable policy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_STRINGS defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function smushThrowables() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable policy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable SMUSH_THROWABLES defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   function ZeroXInstanceKeys(AnalysisOptions,ClassHierarchy,RTAContextInterpreter,WarningSet,int) in line 144
      protection public
      10 lines of code
      5 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable siteBased defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable smushed defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable policy defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ZeroXInstanceKeys
   variable ALLOCATIONS in line 60
      protection public
   variable cha in line 121
   variable classBased in line 105
   variable contextInterpreter in line 126
   variable JavaLangStringBuffer in line 48
      protection public
   variable JavaLangStringBufferName in line 46
   variable NONE in line 54
      protection public
   variable policy in line 100
   variable siteBased in line 110
   variable SMUSH_LIMIT in line 95
   variable SMUSH_MANY in line 89
      protection public
   variable SMUSH_PRIMITIVE_HOLDERS in line 79
      protection public
   variable SMUSH_STRINGS in line 66
      protection public
   variable SMUSH_THROWABLES in line 73
      protection public
   variable smushed in line 116
   variable warnings in line 131
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ClassBasedInstanceKeys.java
module com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getClassHierarchy() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 51
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
   function getInstanceKeyForClassObject(TypeReference) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangClass defined in com::ibm::wala::types::TypeReference
   function getInstanceKeyForConstant(Object) in line 117
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses function hasConstantType(Object) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getUseConstantSpecificKeys() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getConstantType(Object) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 76
      protection public
      35 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getElementClass() defined in com::ibm::wala::classLoader::ArrayClass
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 139
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getStringConstantForInstanceKey(InstanceKey) in line 128
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function ClassBasedInstanceKeys(AnalysisOptions,ClassHierarchy,WarningSet) in line 44
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   variable cha in line 42
   variable DEBUG in line 36
   variable options in line 40
   variable warnings in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/CloneContextSelector.java
module com::ibm::wala::ipa::callgraph::propagation::CloneContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 92
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable CLONE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 84
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable CLONE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 60
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 42
      protection public
      14 lines of code
      4 parameters
      4 conditional paths
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable CLONE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses variable selector defined in com::ibm::wala::ipa::callgraph::propagation::CloneContextSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverTypeContextSelector
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 67
      protection public
      6 lines of code
      4 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable CLONE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
   function setWarnings(WarningSet) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CloneContextSelector(ClassHierarchy) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable selector in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ConcreteTypeKey.java
module com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   function equals(Object) in line 38
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ConcreteTypeKey(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
   function getConcreteType() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
   function getInstanceKeysForPEI(SSAInstruction,ClassHierarchy) in line 76
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getExceptionTypes() defined in com::ibm::wala::ssa::SSAInstruction
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function ConcreteTypeKey(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
   function getType() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
   function ConcreteTypeKey(IClass) in line 28
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
   variable type in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ConstantKey.java
module com::ibm::wala::ipa::callgraph::propagation::ConstantKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   function equals(Object) in line 26
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ConstantKey(Object,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
      uses variable value defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
   function getConcreteType() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueClass defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
   function getValue() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
   function hashCode() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
   function toString() in line 37
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable value defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
   function ConstantKey(Object,IClass) in line 22
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable value defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
      uses variable valueClass defined in com::ibm::wala::ipa::callgraph::propagation::ConstantKey
   variable value in line 20
   variable valueClass in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ContainerUtil.java
module com::ibm::wala::ipa::callgraph::propagation::ContainerUtil
   function isContainer(IClass,ClassHierarchy) in line 51
      protection public
      36 lines of code
      2 parameters
      9 conditional paths
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses variable JavaUtilCollection defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getPackage() defined in com::ibm::wala::types::TypeName
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaUtilMap defined in com::ibm::wala::types::TypeReference
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getAllAncestorInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable miscContainers defined in com::ibm::wala::ipa::callgraph::propagation::ContainerUtil
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
   variable FreezableList in line 34
      protection public
   variable FreezableListName in line 33
   variable JarAttributes in line 38
      protection public
   variable JarAttributesName in line 37
   variable miscContainers in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/FilteredPointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::PointerKey
   function getTypeFilter() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/HeapModel.java
module com::ibm::wala::ipa::callgraph::propagation::HeapModel
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   inherits from com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getClassHierarchy() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iteratePointerKeys() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/InstanceFieldKey.java
module com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function equals(Object) in line 30
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function InstanceFieldKey(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function getField() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
   function hashCode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
   function InstanceFieldKey(InstanceKey,IField) in line 23
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
   variable field in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/InstanceFieldKeyWithFilter.java
module com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKeyWithFilter
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   function getTypeFilter() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filter defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKeyWithFilter
   function InstanceFieldKeyWithFilter(ClassHierarchy,InstanceKey,IField) in line 28
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getFieldTypeReference() defined in com::ibm::wala::classLoader::IField
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
   variable filter in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/InstanceFieldPointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::InstanceFieldPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::PointerKey
   function getInstanceKey() in line 18
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/InstanceFilteredPointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::InstanceFilteredPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   function getInstanceFilter() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/InstanceKey.java
module com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   inherits from com::ibm::wala::ipa::callgraph::ContextItem
   function getConcreteType() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/InstanceKeyFactory.java
module com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 29
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getInstanceKeyForClassObject(TypeReference) in line 57
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getInstanceKeyForConstant(Object) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 36
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 53
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getStringConstantForInstanceKey(InstanceKey) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/IPointerOperator.java
module com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function isComplex() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/IPointsToSolver.java
module com::ibm::wala::ipa::callgraph::propagation::IPointsToSolver
   function solve() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/LocalPointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractLocalPointerKey
   function equals(Object) in line 36
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function LocalPointerKey(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function getNode() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function getValueNumber() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function isParameter() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function LocalPointerKey(CGNode,int) in line 25
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable node in line 22
   variable valueNumber in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/LocalPointerKeyWithFilter.java
module com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithFilter
   inherits from com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   function getTypeFilter() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeFilter defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithFilter
   function LocalPointerKeyWithFilter(CGNode,int,IClass) in line 29
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable typeFilter defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithFilter
   variable typeFilter in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/LocalPointerKeyWithInstanceFilter.java
module com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithInstanceFilter
   inherits from com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithFilter
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceFilteredPointerKey
   function getInstanceFilter() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filter defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithInstanceFilter
   function LocalPointerKeyWithInstanceFilter(CGNode,int,InstanceKey) in line 28
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable valueNumber defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable filter defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithInstanceFilter
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   variable filter in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/MultiNewArrayAllocationSiteKey.java
module com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
   function equals(Object) in line 47
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function MultiNewArrayAllocationSiteKey(CGNode,NewSiteReference,IClass,int) defined in com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
      uses variable dim defined in com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
   function getDim() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dim defined in com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dim defined in com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
   function myElementType(IClass,int) in line 29
      12 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dim defined in com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
   function MultiNewArrayAllocationSiteKey(CGNode,NewSiteReference,IClass,int) in line 42
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function myElementType(IClass,int) defined in com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses variable dim defined in com::ibm::wala::ipa::callgraph::propagation::MultiNewArrayAllocationSiteKey
   variable dim in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/NodeKey.java
module com::ibm::wala::ipa::callgraph::propagation::NodeKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractLocalPointerKey
   abstract class
   function equals(Object) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNode() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
      uses function hashCode() defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
   function hashCode() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function internalEquals(Object) in line 24
      8 lines of code
      1 parameters
      2 conditional paths
      uses function NodeKey(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
   function internalHashCode() in line 32
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
   function NodeKey(CGNode) in line 21
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
   variable node in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/NormalAllocationSiteKey.java
module com::ibm::wala::ipa::callgraph::propagation::NormalAllocationSiteKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
   function equals(Object) in line 25
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function AllocationSiteKey(CGNode,NewSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
   function hashCode() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::AllocationSiteKey
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
   function NormalAllocationSiteKey(CGNode,NewSiteReference,IClass) in line 22
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerAnalysis.java
module com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
   function getClassHierarchy() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getHeapGraph() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getHeapModel() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInstanceKeyMapping() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInstanceKeys() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPointerKeys() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPointsToSet(PointerKey) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isFiltered(PointerKey) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerAnalysisImpl.java
module com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function computeImplicitExceptionsForCall(CGNode,SSAInvokeInstruction) in line 417
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function computeImplicitPointsToSet(PointerKey) in line 200
      32 lines of code
      1 parameters
      5 conditional paths
      uses variable lpk defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function getDU(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function getValueNumber() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable H defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function toOrdinalSet(InstanceKey[]) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getDef(int) defined in com::ibm::wala::ssa::DefUse
      uses function makeImplicitPointsToVisitor(LocalPointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function computeImplicitPointsToSetAtALoad(CGNode,SSAArrayLoadInstruction) in line 265
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function iterator() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getBackingSet() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function computeImplicitPointsToSetAtCall(LocalPointerKey,CGNode,SSAInvokeInstruction) in line 388
      9 lines of code
      3 parameters
      2 conditional paths
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable lpk defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getValueNumber() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function computeImplicitExceptionsForCall(CGNode,SSAInvokeInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function computeImplicitPointsToSetAtCatch(CGNode,SSAGetCaughtExceptionInstruction) in line 310
      49 lines of code
      2 parameters
      11 conditional paths
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function getBasicBlockForCatch(SSAGetCaughtExceptionInstruction) defined in com::ibm::wala::ssa::IR
      uses function getPEI(ProgramCounter) defined in com::ibm::wala::ssa::IR
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function iterator() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getExceptionTypes() defined in com::ibm::wala::ssa::SSAInstruction
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getType() defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
   function computeImplicitPointsToSetAtCheckCast(CGNode,SSACheckCastInstruction) in line 360
      27 lines of code
      2 parameters
      7 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getVal() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function iterator() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getInstanceKeyMapping() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function computeImplicitPointsToSetAtGet(CGNode,SSAGetInstruction) in line 281
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function computeImplicitPointsToSetAtGet(CGNode,FieldReference,int,boolean) in line 285
      24 lines of code
      4 parameters
      5 conditional paths
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function resolveField(FieldReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function iterator() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getBackingSet() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function computeImplicitPointsToSetAtPhi(CGNode,SSAPhiInstruction) in line 249
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses variable lpk defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getBackingSet() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function computeImplicitPointsToSetAtPi(CGNode,SSAPiInstruction) in line 233
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable lpk defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getBackingSet() defined in com::ibm::wala::util::intset::OrdinalSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function getClassHierarchy() in line 579
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getHeapModel() in line 435
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable H defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
   function getPointerKeys() in line 575
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function iterateKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function getPointsToSet(PointerKey) in line 119
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function isImplicit(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function computeImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function isFiltered(PointerKey) in line 141
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function isImplicit(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
   function makeHeapModel() in line 110
      3 lines of code
      0 parameters
      1 conditional paths
   function makeImplicitPointsToVisitor(LocalPointerKey) in line 196
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ImplicitPointsToSetVisitor(LocalPointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses variable lpk defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function toOrdinalSet(InstanceKey[]) in line 398
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function toString() in line 97
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function iterateKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function iterator() defined in com::ibm::wala::util::intset::OrdinalSet
   function PointerAnalysisImpl(PropagationCallGraphBuilder,CallGraph,PointsToMap,MutableMapping< InstanceKey >,PointerKeyFactory,InstanceKeyFactory) in line 78
      protection public
      13 lines of code
      6 parameters
      2 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable H defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function makeHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
   variable builder in line 76
   variable H in line 64
   variable iKeyFactory in line 74
   variable pointerKeys in line 69
   variable pointsToMap in line 59
module com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function visitArrayLoad(SSAArrayLoadInstruction) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function computeImplicitPointsToSetAtALoad(CGNode,SSAArrayLoadInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function visitCheckCast(SSACheckCastInstruction) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function computeImplicitPointsToSetAtCheckCast(CGNode,SSACheckCastInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function visitGet(SSAGetInstruction) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function computeImplicitPointsToSetAtGet(CGNode,SSAGetInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function visitGetCaughtException(SSAGetCaughtExceptionInstruction) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function computeImplicitPointsToSetAtCatch(CGNode,SSAGetCaughtExceptionInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function visitInvoke(SSAInvokeInstruction) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function computeImplicitPointsToSetAtCall(LocalPointerKey,CGNode,SSAInvokeInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable lpk defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function visitNew(SSANewInstruction) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function visitPhi(SSAPhiInstruction) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function computeImplicitPointsToSetAtPhi(CGNode,SSAPhiInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function visitPi(SSAPiInstruction) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToSet defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function computeImplicitPointsToSetAtPi(CGNode,SSAPiInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function ImplicitPointsToSetVisitor(LocalPointerKey) in line 158
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable lpk defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   variable lpk in line 155
   variable node in line 154
   variable pointsToSet in line 156
module com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::HModel
   inherits from com::ibm::wala::ipa::callgraph::propagation::HeapModel
   function getClassHierarchy() in line 565
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
   function getFilteredPointerKeyForLocal(CGNode,int,IClass) in line 510
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function getFilteredPointerKeyForLocal(CGNode,int,InstanceKey) in line 514
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 456
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function getInstanceKeyForClassObject(TypeReference) in line 489
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getInstanceKeyForConstant(Object) in line 475
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getInstanceKeyForConstant(Object) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 466
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 484
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getPointerKeyForArrayContents(InstanceKey) in line 561
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForExceptionalReturnValue(CGNode) in line 532
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function getPointerKeyForInstanceField(InstanceKey,IField) in line 551
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForLocal(CGNode,int) in line 500
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function getPointerKeyForReturnValue(CGNode) in line 523
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl::ImplicitPointsToSetVisitor
   function getPointerKeyForStaticField(IField) in line 541
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getStringConstantForInstanceKey(InstanceKey) in line 479
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function iteratePointerKeys() in line 446
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysisImpl
      uses function iterateKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerFlowGraph.java
module com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   inherits from com::ibm::wala::util::graph::AbstractGraph
   function addExceptionEdges(CGNode,PointerAnalysis,IR,List< ProgramCounter >,PointerKey) in line 551
      19 lines of code
      5 parameters
      4 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getPEI(ProgramCounter) defined in com::ibm::wala::ssa::IR
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
   function getEdgeManager() in line 118
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function getIR(CGNode) in line 225
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable wipeCount defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses variable WIPE_THRESHOLD defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function getNodeManager() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function getPointerAnalysis() in line 571
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function iterateNodes() in line 575
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function processAllNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function makeInstructionVisitor(CGNode,IR,BasicBlock) in line 259
      3 lines of code
      3 parameters
      1 conditional paths
   function processAllNodes() in line 88
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable processedNodes defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function processNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function processCallers(CGNode) in line 97
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable processedNodes defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function processNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function processNode(CGNode) in line 212
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable processedNodes defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getIR(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function visit(CGNode,IR) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function visit(CGNode,IR) in line 241
      17 lines of code
      2 parameters
      4 conditional paths
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function makeInstructionVisitor(CGNode,IR,BasicBlock) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
      uses function getExitBlock() defined in com::ibm::wala::ssa::IR
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function addExceptionEdges(CGNode,PointerAnalysis,IR,List< ProgramCounter >,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function PointerFlowGraph(PointerAnalysis,CallGraph) in line 83
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   variable cg in line 66
   variable delegate in line 68
   variable edgeManager in line 77
   variable pa in line 64
   variable processedNodes in line 73
   variable warnings in line 75
   variable WIPE_THRESHOLD in line 81
   variable wipeCount in line 79
module com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::LazyEdgeManager
   inherits from com::ibm::wala::util::graph::EdgeManager
   function addEdge(PointerKey,PointerKey) in line 181
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function getPredNodeCount(PointerKey) in line 166
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function lazyPred(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::LazyEdgeManager
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function getPredNodes(PointerKey) in line 161
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function lazyPred(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::LazyEdgeManager
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function getSuccNodeCount(PointerKey) in line 176
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function lazySucc(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::LazyEdgeManager
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function getSuccNodes(PointerKey) in line 171
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function lazySucc(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::LazyEdgeManager
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function hasEdge(PointerKey,PointerKey) in line 201
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function lazySucc(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::LazyEdgeManager
      uses function lazyPred(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::LazyEdgeManager
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function lazyPred(Object) in line 141
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractLocalPointerKey
      uses variable processedNodes defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function processNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function isParameter() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function processCallers(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function processAllNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function lazySucc(Object) in line 124
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractLocalPointerKey
      uses variable processedNodes defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function processNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function processCallers(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function processAllNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function removeAllIncidentEdges(PointerKey) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(PointerKey,PointerKey) in line 185
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function removeIncomingEdges(PointerKey) in line 193
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(PointerKey) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph::InstructionVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function visitArrayLoad(SSAArrayLoadInstruction) in line 282
      protection public
      26 lines of code
      1 parameters
      6 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getDef() defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function visitArrayStore(SSAArrayStoreInstruction) in line 314
      protection public
      26 lines of code
      1 parameters
      6 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getValue() defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function visitCheckCast(SSACheckCastInstruction) in line 346
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getResult() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses function getVal() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function visitGet(SSAGetInstruction) in line 397
      protection public
      29 lines of code
      1 parameters
      5 conditional paths
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getDef() defined in com::ibm::wala::ssa::SSAGetInstruction
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function resolveField(FieldReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function visitGetCaughtException(SSAGetCaughtExceptionInstruction) in line 533
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getDef() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses function addExceptionEdges(CGNode,PointerAnalysis,IR,List< ProgramCounter >,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function visitInvoke(SSAInvokeInstruction) in line 473
      protection public
      44 lines of code
      1 parameters
      8 conditional paths
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getIR(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function hasDef() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDef() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function visitPi(SSAPiInstruction) in line 361
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getDef() defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses function getVal() defined in com::ibm::wala::ssa::SSAPiInstruction
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function visitPut(SSAPutInstruction) in line 432
      protection public
      35 lines of code
      1 parameters
      7 conditional paths
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function resolveField(FieldReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getVal() defined in com::ibm::wala::ssa::SSAPutInstruction
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function visitReturn(SSAReturnInstruction) in line 374
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function returnsPrimitiveType() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses function returnsVoid() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses variable pa defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getResult() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses variable delegate defined in com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraph
   function visitThrow(SSAThrowInstruction) in line 523
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function InstructionVisitor(CGNode,IR,BasicBlock) in line 271
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable bb in line 269
   variable ir in line 267
   variable node in line 265
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerFlowGraphFactory.java
module com::ibm::wala::ipa::callgraph::propagation::PointerFlowGraphFactory
   function make(PointerAnalysis,CallGraph) in line 7
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerKey.java
module com::ibm::wala::ipa::callgraph::propagation::PointerKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerKeyComparator.java
module com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
   inherits from java::util::Comparator
   function compare(Object,Object) in line 180
      protection public
      60 lines of code
      2 parameters
      14 conditional paths
      uses function compareLocalKey(LocalPointerKey,Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function compareReturnValueKey(ReturnValueKey,Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function compareExceptionKey(ExceptionReturnValueKey,Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function compareFieldKey(InstanceFieldKey,Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function compareStaticKey(StaticFieldKey,Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function compareArrayKey(ArrayInstanceKey,Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function compareOtherKeys(Object,Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
   function compareArrayKey(ArrayInstanceKey,Object) in line 150
      29 lines of code
      2 parameters
      6 conditional paths
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getDimensionality() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getInnermostElementClass() defined in com::ibm::wala::classLoader::ArrayClass
      uses function comparePrimitives(TypeReference,TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function getReference() defined in com::ibm::wala::classLoader::ArrayClass
      uses function getInnermostElementType() defined in com::ibm::wala::types::TypeReference
      uses function compareConcreteTypes(IClass,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
   function compareConcreteTypes(IClass,IClass) in line 42
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function getNumber(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function compareExceptionKey(ExceptionReturnValueKey,Object) in line 106
      14 lines of code
      2 parameters
      3 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::ExceptionReturnValueKey
   function compareFieldKey(InstanceFieldKey,Object) in line 121
      13 lines of code
      2 parameters
      3 conditional paths
      uses function compareInstanceKeys(InstanceKey,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses function compareFields(IField,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
   function compareFields(IField,IField) in line 59
      10 lines of code
      2 parameters
      2 conditional paths
   function compareInstanceKeys(InstanceKey,InstanceKey) in line 55
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compareConcreteTypes(IClass,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   function compareLocalKey(LocalPointerKey,Object) in line 70
      20 lines of code
      2 parameters
      4 conditional paths
      uses function getValueNumber() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function compareOtherKeys(Object,Object) in line 241
      5 lines of code
      2 parameters
      1 conditional paths
   function comparePrimitives(TypeReference,TypeReference) in line 31
      10 lines of code
      2 parameters
      2 conditional paths
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
   function compareReturnValueKey(ReturnValueKey,Object) in line 91
      14 lines of code
      2 parameters
      3 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::ReturnValueKey
   function compareStaticKey(StaticFieldKey,Object) in line 135
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses function getNumber(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function compareFields(IField,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
   function equals(Object) in line 247
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function PointerKeyComparator(ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
   function hashCode() in line 252
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
   function PointerKeyComparator(ClassHierarchy) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyComparator
   variable cha in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerKeyFactory.java
module com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getFilteredPointerKeyForLocal(CGNode,int,IClass) in line 40
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getFilteredPointerKeyForLocal(CGNode,int,InstanceKey) in line 42
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getPointerKeyForArrayContents(InstanceKey) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPointerKeyForExceptionalReturnValue(CGNode) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPointerKeyForInstanceField(InstanceKey,IField) in line 67
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getPointerKeyForLocal(CGNode,int) in line 32
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getPointerKeyForReturnValue(CGNode) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPointerKeyForStaticField(IField) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointerKeyNodeManager.java
module com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
   inherits from com::ibm::wala::util::graph::NodeManager
   function addNode(Object) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsNode(Object) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function countNodes() in line 67
      4 lines of code
      0 parameters
      2 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
      uses variable count defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
   function getNumberOfNodes() in line 56
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable count defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
      uses function countNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
   function iterateNodes() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
      uses function iterateKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function removeNode(Object) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 104
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
   function PointerKeyNodeManager(PointsToMap) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyNodeManager
   variable count in line 36
   variable pointsToMap in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointsToMap.java
module com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function findOrCreateIndex(PointerKey) in line 128
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function getIndex(PointerKey) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function getNumberOfPointerKeys() in line 176
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function getPointsToSet(PointerKey) in line 91
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isImplicit(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable uf defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function find(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function upgradeToFilter(PointsToSetVariable,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function getPointsToSet(int) in line 110
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable uf defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function find(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
   function getRepresentative(int) in line 289
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uf defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function find(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
   function getTransitiveRoots() in line 196
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function iterateKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function isImplicit(PointerKey) in line 171
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
   function isUnified(PointerKey) in line 166
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
   function iterateKeys() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function put(PointerKey,PointsToSetVariable) in line 123
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function set(int,T) defined in com::ibm::wala::util::intset::IVector
   function recordImplicit(PointerKey) in line 118
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function set(int,T) defined in com::ibm::wala::util::intset::IVector
   function recordTransitiveRoot(PointerKey) in line 151
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable transitiveRoots defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
   function recordUnified(PointerKey) in line 139
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function set(int,T) defined in com::ibm::wala::util::intset::IVector
   function revertToPreTransitive() in line 183
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function iterateKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function isImplicit(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function removeAll() defined in com::ibm::wala::fixpoint::IntSetVariable
   function unify(IntSet) in line 210
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function unify(int,int) in line 221
      protection public
      28 lines of code
      2 parameters
      7 conditional paths
      uses variable uf defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function find(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses variable pointsToSets defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
      uses function union(int,int) defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses function addAll(IntSet) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function recordUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function upgradeTypeFilter(PointsToSetVariable,PointsToSetVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function recordTransitiveRoot(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function upgradeToFilter(PointsToSetVariable,IClass) in line 266
      15 lines of code
      2 parameters
      3 conditional paths
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses function getValueNumber() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
      uses variable pointerKeys defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
   function upgradeTypeFilter(PointsToSetVariable,PointsToSetVariable) in line 250
      15 lines of code
      2 parameters
      5 conditional paths
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getTypeFilter() defined in com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
      uses function upgradeToFilter(PointsToSetVariable,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   variable pointerKeys in line 38
   variable pointsToSets in line 48
   variable transitiveRoots in line 76
   variable uf in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PointsToSetVariable.java
module com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
   inherits from com::ibm::wala::fixpoint::IntSetVariable
   function equals(Object) in line 44
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable pointerKey defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
   function getPointerKey() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointerKey defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
   function hashCode() in line 54
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable pointerKey defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function toString() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointerKey defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
   function PointsToSetVariable(PointerKey) in line 24
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function PointsToSetVariable() in line 31
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable pointerKey in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PreTransitiveSolver.java
module com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
   function findComplexUses() in line 197
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses function getSystem() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function getStatements() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function isComplexStatement(AbstractStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
   function getLvals(Graph< IVariable >,PointerKey,Path,MutableIntSet) in line 130
      44 lines of code
      4 parameters
      8 conditional paths
      uses function contains(int) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver::Path
      uses function getSystem() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function size() defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver::Path
      uses function unifyCycle(Path,int) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function add(int) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver::Path
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function remove(int) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver::Path
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function iterator() defined in com::ibm::wala::util::collections::Iterator2Collection
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function addAll(IntSet) defined in com::ibm::wala::fixpoint::IntSetVariable
   function isComplexStatement(AbstractStatement) in line 106
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function isComplex() defined in com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function solve() in line 64
      protection public
      41 lines of code
      0 parameters
      7 conditional paths
      uses function getBuilder() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function addConstraintsFromNewNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getSystem() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function revertToPreTransitive() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function findComplexUses() defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver
      uses function getAssignmentGraph() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getLvals(Graph< IVariable >,PointerKey,Path,MutableIntSet) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function getStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isComplexStatement(AbstractStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver
      uses function evaluate() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses function getReflectionHandler() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function updateForReflection() defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
   function unifyCycle(Path,int) in line 175
      15 lines of code
      2 parameters
      4 conditional paths
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function size() defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver::Path
      uses function get(int) defined in com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver::Path
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses function getSystem() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function unify(IntSet) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function PreTransitiveSolver(PropagationSystem,PropagationCallGraphBuilder) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
module com::ibm::wala::ipa::callgraph::propagation::PreTransitiveSolver::Path
   function add(int) in line 237
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
   function contains(int) in line 221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function get(int) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function remove(int) in line 229
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableIntSet
   function size() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::IntSet
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PropagationCallGraphBuilder.java
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   inherits from com::ibm::wala::ipa::callgraph::CallGraphBuilder
   abstract class
   function addAssignmentsForCatchPointerKey(PointerKey,Set,PointerKey) in line 483
      27 lines of code
      3 parameters
      5 conditional paths
      uses variable DEBUG_GENERAL defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::ExceptionLookupFailure
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangThrowable defined in com::ibm::wala::types::TypeReference
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable filterOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function addConstraintsFromChangedNode(CGNode) in line 1861
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function unconditionallyAddConstraintsFromNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function addConstraintsFromNewNodes() in line 346
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable discoveredNodes defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function addConstraintsFromNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function addConstraintsFromNode(CGNode) in line 338
      1 lines of code
      1 parameters
      1 conditional paths
   function assignInstanceToCatch(PointerKey,Set,InstanceKey) in line 463
      6 lines of code
      3 parameters
      2 conditional paths
      uses function catches(Set,IClass,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function catches(Set,IClass,ClassHierarchy) in line 618
      protection public
      38 lines of code
      3 parameters
      11 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable THROWABLE_SET defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function isSubclassOf(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function createEmptyCallGraph(ClassHierarchy,AnalysisOptions) in line 235
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function customInit() in line 330
      2 lines of code
      0 parameters
      1 conditional paths
      uses function addConstraintsFromNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function filterForClass(IntSet,IClass) in line 1760
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getMutableInstanceKeysForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable DEBUG_FILTER defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
   function findOrCreateBoundFromClassHierarchy(MethodReference) in line 983
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable cachedBoundMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference) in line 860
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable dispatchBoundHeuristic defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable NO_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable SIMPLE_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getSimpleBoundOnNumberOfTargets(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable CHA_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getBoundOnNumberOfTargetsFromClassHierarchy(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getBoundOnNumberOfTargetsFromClassHierarchy(CGNode,CallSiteReference) in line 920
      44 lines of code
      2 parameters
      11 conditional paths
      uses function isDispatch() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function hasManyImplementors(MethodReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function findOrCreateBoundFromClassHierarchy(MethodReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable CUTOFF defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPossibleTargets(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
   function getCallGraph() in line 807
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getClassHierarchy() in line 791
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getContextInterpreter() in line 845
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getContextSelector() in line 1023
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getDefaultDispatchBoundHeuristic() in line 239
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getFilteredPointerKeyForLocal(CGNode,int,IClass) in line 377
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getFilteredPointerKeyForLocal(CGNode,int,InstanceKey) in line 384
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 1044
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForClassObject(TypeReference) in line 1075
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKeyForClassObject(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForConstant(Object) in line 1067
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKeyForConstant(Object) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 1059
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeys() in line 1031
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getInstanceKeysForClass(IClass) in line 1750
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKeysForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function getJavaLangObject() in line 799
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable JAVA_LANG_OBJECT defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getJavaLangThrowable() in line 803
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable JAVA_LANG_THROWABLE defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getMutableInstanceKeysForClass(IClass) in line 1746
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getOptions() in line 795
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getPointerAnalysis() in line 829
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function extractPointerAnalysis(PropagationCallGraphBuilder) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function getPointerFlowGraphFactory() in line 833
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPointerKeyFactory() in line 841
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getPointerKeyForArrayContents(InstanceKey) in line 443
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForExceptionalReturnValue(CGNode) in line 402
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForInstanceField(InstanceKey,IField) in line 422
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForLocal(CGNode,int) in line 366
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForReturnValue(CGNode) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForStaticField(IField) in line 410
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPropagationSystem() in line 837
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getSimpleBoundOnNumberOfTargets(CGNode,CallSiteReference) in line 880
      33 lines of code
      2 parameters
      7 conditional paths
      uses function isInterface() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function isVirtual() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function isPrivate() defined in com::ibm::wala::classLoader::IMethod
      uses function isFinal() defined in com::ibm::wala::classLoader::IMethod
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) defined in com::ibm::wala::ipa::callgraph::ContextSelector
   function getSolver() in line 1852
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable solver defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getStringConstantForInstanceKey(InstanceKey) in line 1071
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getStringConstantForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getTargetForCall(CGNode,CallSiteReference,InstanceKey) in line 1005
      protection public
      14 lines of code
      3 parameters
      2 conditional paths
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function isAbstract() defined in com::ibm::wala::classLoader::IMethod
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function findOrCreateNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
   function getWarnings() in line 811
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function hasManyImplementors(MethodReference) in line 969
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
   function haveAlreadyVisited(CGNode) in line 1079
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable alreadyVisited defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function isJavaLangObject(IClass) in line 247
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
   function makeCallGraph(AnalysisOptions) in line 256
      protection public
      44 lines of code
      1 parameters
      7 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeSystem(AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable DEBUG_GENERAL defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable dispatchBoundHeuristic defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable UNSPECIFIED defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getDefaultDispatchBoundHeuristic() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setMinEquationsForTopSort(int) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getMinEquationsForTopSort() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function setTopologicalGrowthFactor(double) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getTopologicalGrowthFactor() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function setMaxEvalBetweenTopo(int) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getMaxEvalBetweenTopo() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable discoveredNodes defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getEntrypoints() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function iterator() defined in com::ibm::wala::ipa::callgraph::Entrypoints
      uses variable DEBUG_ENTRYPOINTS defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function addCall(FakeRootMethod,WarningSet) defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(Entrypoint) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::EntrypointResolutionWarning
      uses variable entrypointCallSites defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function customInit() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable solver defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeSolver() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function solve() defined in com::ibm::wala::ipa::callgraph::propagation::IPointsToSolver
   function makeSolver() in line 305
      1 lines of code
      0 parameters
      1 conditional paths
   function makeSystem(AnalysisOptions) in line 301
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getSupportRefinement() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeSolver() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function markAlreadyVisited(CGNode) in line 1086
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable alreadyVisited defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function markChanged(CGNode) in line 1099
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable alreadyVisited defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable discoveredNodes defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function markDiscovered(CGNode) in line 1095
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable discoveredNodes defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function setContextInterpreter(SSAContextInterpreter) in line 819
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
   function setContextSelector(ContextSelector) in line 1027
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function setInstanceKeys(InstanceKeyFactory) in line 1035
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 1848
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function unconditionallyAddConstraintsFromNode(CGNode) in line 1865
      1 lines of code
      1 parameters
      1 conditional paths
   function wasChanged(CGNode) in line 1104
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable discoveredNodes defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable alreadyVisited defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function PropagationCallGraphBuilder(ClassHierarchy,WarningSet,AnalysisOptions,PointerKeyFactory) in line 218
      16 lines of code
      4 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getDispatchBoundHeuristic() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function createEmptyCallGraph(ClassHierarchy,AnalysisOptions) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable JAVA_LANG_OBJECT defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable JAVA_LANG_THROWABLE defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable JavaLangThrowable defined in com::ibm::wala::types::TypeReference
   variable alreadyVisited in line 132
   variable assignOperator in line 163
   variable cachedBoundMap in line 195
   variable callGraph in line 158
   variable cha in line 117
   variable contextInterpreter in line 178
   variable contextSelector in line 184
   variable CUTOFF in line 852
   variable DEBUG_ALL in line 66
   variable DEBUG_ARRAY_LOAD in line 70
   variable DEBUG_ARRAY_STORE in line 72
   variable DEBUG_ENTRYPOINTS in line 82
   variable DEBUG_FILTER in line 74
   variable DEBUG_GENERAL in line 76
   variable DEBUG_GET in line 78
   variable DEBUG_PUT in line 80
   variable discoveredNodes in line 138
   variable dispatchBoundHeuristic in line 200
   variable entrypointCallSites in line 143
   variable filterOperator in line 168
   variable instanceKeyFactory in line 189
   variable inverseFilterOperator in line 173
   variable JAVA_LANG_OBJECT in line 102
   variable JAVA_LANG_THROWABLE in line 107
   variable options in line 127
   variable pointerKeyFactory in line 97
   variable rememberGetPutHistory in line 206
   variable solver in line 153
   variable system in line 148
   variable THROWABLE_SET in line 112
      protection public
   variable warnings in line 122
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::EntrypointResolutionWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(Entrypoint) in line 325
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::ExceptionLookupFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeReference) in line 529
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 525
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::TypedPointerKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   function equals(Object) in line 575
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::TypedPointerKey
      uses variable base defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::TypedPointerKey
   function getBase() in line 606
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeFilter() in line 566
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 590
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 599
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TypedPointerKey(PointerKey,IClass) in line 552
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable base in line 543
   variable type in line 541
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::FilterOperator
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 774
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 682
      protection public
      68 lines of code
      2 parameters
      12 conditional paths
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses variable DEBUG_FILTER defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function contains(int) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function add(int) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getTypeFilter() defined in com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
      uses function getInstanceKeysForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function addAllInIntersection(IntSetVariable,IntSet) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   function hashCode() in line 785
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 756
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 765
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilterOperator() in line 675
      2 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::ArrayLoadOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 1195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable) in line 1124
      protection public
      56 lines of code
      1 parameters
      10 conditional paths
      uses variable DEBUG_ARRAY_LOAD defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newFieldRead(PointerKey,UnaryOperator,PointerKey,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   function hashCode() in line 1186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 1208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isLoadOperator() in line 1199
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ArrayLoadOperator(PointsToSetVariable) in line 1119
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function registerFixedSet(PointsToSetVariable,UnarySideEffect) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   variable priorInstances in line 1113
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::ArrayStoreOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 1304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable) in line 1227
      protection public
      53 lines of code
      1 parameters
      11 conditional paths
      uses variable DEBUG_ARRAY_STORE defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function isJavaLangObject(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newFieldWrite(PointerKey,UnaryOperator,PointerKey,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable filterOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function hashCode() in line 1286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 1295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isLoadOperator() in line 1308
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ArrayStoreOperator(PointsToSetVariable) in line 1222
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function registerFixedSet(PointsToSetVariable,UnarySideEffect) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::GetFieldOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 1412
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::GetFieldOperator
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::GetFieldOperator
   function evaluate(IVariable) in line 1331
      protection public
      56 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG_GET defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newFieldRead(PointerKey,UnaryOperator,PointerKey,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   function filterInstances(IntSet) in line 1394
      3 lines of code
      1 parameters
      1 conditional paths
   function getField() in line 1424
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 1403
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 1437
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isLoadOperator() in line 1428
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function GetFieldOperator(IField,PointsToSetVariable) in line 1321
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function registerFixedSet(PointsToSetVariable,UnarySideEffect) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   variable field in line 1317
   variable priorInstances in line 1319
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::PutFieldOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 1540
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::PutFieldOperator
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::PutFieldOperator
   function evaluate(IVariable) in line 1469
      protection public
      46 lines of code
      1 parameters
      7 conditional paths
      uses variable DEBUG_PUT defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newFieldWrite(PointerKey,UnaryOperator,PointerKey,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   function filterInstances(IntSet) in line 1522
      3 lines of code
      1 parameters
      1 conditional paths
   function getField() in line 1560
      3 lines of code
      0 parameters
      1 conditional paths
   function getPutAssignmentOperator() in line 1553
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function hashCode() in line 1531
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 1465
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isLoadOperator() in line 1564
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1450
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PutFieldOperator(IField,PointsToSetVariable) in line 1454
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function registerFixedSet(PointsToSetVariable,UnarySideEffect) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   variable field in line 1446
   variable priorInstances in line 1448
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::InstancePutFieldOperator
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 1629
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::InstancePutFieldOperator
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::InstancePutFieldOperator
   function evaluate(IVariable,IVariable) in line 1591
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   function hashCode() in line 1620
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 1643
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1579
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstancePutFieldOperator(IField,InstanceKey) in line 1583
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable field in line 1573
   variable instance in line 1575
   variable priorInstances in line 1577
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::InstanceArrayStoreOperator
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 1727
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable instance defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::InstanceArrayStoreOperator
   function evaluate(IVariable,IVariable) in line 1668
      protection public
      44 lines of code
      2 parameters
      10 conditional paths
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   function hashCode() in line 1718
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 1741
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1657
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstanceArrayStoreOperator(InstanceKey) in line 1661
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable instance in line 1653
   variable priorInstances in line 1655
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::InverseFilterOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::FilterOperator
   function evaluate(IVariable,IVariable) in line 1813
      protection public
      30 lines of code
      2 parameters
      5 conditional paths
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function getTypeFilter() defined in com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
      uses variable DEBUG_FILTER defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function size() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getInstanceKeysForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function addAll(IntSet) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
   function isComplex() in line 1803
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1794
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InverseFilterOperator() in line 1785
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder::MutableBoolean
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PropagationGraph.java
module com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   inherits from com::ibm::wala::fixedpoint::impl::AbstractFixedPointSystem
   function addImplicitStatement(UnaryStatement) in line 258
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function addVariable(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function findOrCreateRelation(Map< UnaryOperator, IBinaryNonNegativeIntRelation >,UnaryOperator) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable implicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses variable implicitUnaryCount defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable invImplicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function addStatement(GeneralStatement) in line 202
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function addEquation(AbstractStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
      uses variable delegateStatements defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function addVariable(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getRHS() defined in com::ibm::wala::fixedpoint::impl::GeneralStatement
   function addStatement(UnaryStatement) in line 222
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function useImplicitRepresentation(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function addImplicitStatement(UnaryStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function addEquation(AbstractStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
      uses variable delegateStatements defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function addVariable(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
   function addStatement(IFixedPointStatement) in line 947
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function addStatement(GeneralStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function containsImplicitStatement(UnaryStatement) in line 916
      17 lines of code
      1 parameters
      4 conditional paths
      uses function containsVariable(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses variable implicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function contains(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function containsStatement(IFixedPointStatement) in line 903
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function useImplicitRepresentation(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function containsImplicitStatement(UnaryStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateStatements defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function containsVariable(IVariable) in line 939
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function containsNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function countImplicitEdges() in line 1218
      8 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in com::ibm::wala::util::collections::FilterIterator
      uses variable next defined in com::ibm::wala::util::collections::FilterIterator
   function equals(Object) in line 299
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function findOrCreateRelation(Map< UnaryOperator, IBinaryNonNegativeIntRelation >,UnaryOperator) in line 107
      8 lines of code
      2 parameters
      2 conditional paths
      uses function makeRelation(AbstractOperator) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getAssignmentGraph() in line 963
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getFilterAssignmentGraph() in line 977
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
   function getNumberOfStatementsThatDef(IVariable) in line 839
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable implicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getNumberOfStatementsThatUse(IVariable) in line 817
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable invImplicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getStatements() in line 305
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function iterateNodes(final IntSet) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
   function getStatementsThatDef(IVariable) in line 793
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable implicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getStatementsThatUse(IVariable) in line 770
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable invImplicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getVariables() in line 862
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function iterateNodes(final IntSet) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
   function hashCode() in line 499
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function makeRelation(AbstractOperator) in line 119
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable SIMPLE_SPACE_STINGY defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable SIMPLE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function performVerboseAction() in line 876
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable VERBOSE defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getVarCount() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
      uses variable implicitUnaryCount defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getEquationCount() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
      uses variable implicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function hasNext() defined in com::ibm::wala::util::collections::FilterIterator
      uses variable next defined in com::ibm::wala::util::collections::FilterIterator
      uses function performVerboseAction() defined in com::ibm::wala::util::debug::VerboseAction
   function removeImplicitStatement(UnaryStatement) in line 278
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function findOrCreateRelation(Map< UnaryOperator, IBinaryNonNegativeIntRelation >,UnaryOperator) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable implicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function remove(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses variable invImplicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable implicitUnaryCount defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function removeStatement(IFixedPointStatement) in line 507
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function useImplicitRepresentation(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function removeImplicitStatement(UnaryStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateStatements defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function removeNodeAndEdges(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function removeVariable(PointsToSetVariable) in line 250
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getNumberOfStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getNumberOfStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function removeNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function reorder() in line 521
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses function setOrderNumber(int) defined in com::ibm::wala::fixpoint::IVariable
   function spaceReport() in line 1208
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function countImplicitEdges() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function useImplicitRepresentation(IFixedPointStatement) in line 243
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
   variable DEBUG in line 61
   variable delegateGraph in line 75
   variable delegateStatements in line 77
   variable edgeManager in line 73
   variable implicitUnaryCount in line 100
   variable implicitUnaryMap in line 87
   variable invImplicitUnaryMap in line 95
   variable nodeManager in line 68
   variable VERBOSE in line 63
module com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function addEquation(AbstractStatement) in line 153
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function containsStatement(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable equationCount defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
   function addNode(INodeWithNumber) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addVariable(IVariable) in line 164
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function containsVariable(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable varCount defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
   function getEdgeManager() in line 185
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getEquationCount() in line 189
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable equationCount defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
   function getNodeManager() in line 176
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getVarCount() in line 193
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable varCount defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
   variable equationCount in line 141
   variable varCount in line 143
module com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::ImplicitUseIterator
   inherits from java::util::Iterator
   function hasNext() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 347
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getNode(int) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function makeEquation(IVariable,IVariable) defined in com::ibm::wala::fixedpoint::impl::UnaryOperator
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
   function remove() in line 363
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::ImplicitDefIterator
   inherits from java::util::Iterator
   function hasNext() in line 393
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 402
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getNode(int) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function makeEquation(IVariable,IVariable) defined in com::ibm::wala::fixedpoint::impl::UnaryOperator
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function remove() in line 417
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::GlobalImplicitIterator
   inherits from java::util::Iterator
   function advanceOuter() in line 443
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable implicitUnaryMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function hasNext() in line 461
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 470
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getX() defined in com::ibm::wala::util::intset::IntPair
      uses function getY() defined in com::ibm::wala::util::intset::IntPair
      uses function makeEquation(IVariable,IVariable) defined in com::ibm::wala::fixedpoint::impl::UnaryOperator
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getNode(int) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
   function remove() in line 487
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable currentOperator in line 434
   variable innerDelegate in line 432
   variable outerKeyDelegate in line 430
module com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::VariableGraphView
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function addEdge(IVariable,IVariable) in line 729
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addNode(IVariable) in line 582
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsNode(IVariable) in line 602
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getEdgeManager() in line 758
      5 lines of code
      0 parameters
      1 conditional paths
   function getNodeManager() in line 748
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getNumberOfNodes() in line 573
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getVarCount() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
   function getPredNodeCount(INodeWithNumber) in line 653
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function useImplicitRepresentation(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function getPredNodes(IVariable) in line 612
      protection public
      35 lines of code
      1 parameters
      4 conditional paths
      uses function getStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function useImplicitRepresentation(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function getSuccNodeCount(IVariable) in line 711
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getLHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
   function getSuccNodes(IVariable) in line 672
      protection public
      33 lines of code
      1 parameters
      2 conditional paths
      uses function getStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getLHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
   function iterateNodes() in line 564
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getVariables() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function removeAllIncidentEdges(IVariable) in line 738
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNode(IVariable) in line 592
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(IVariable) in line 555
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::FilteredConstraintGraphView
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   abstract class
   function addEdge(IVariable,IVariable) in line 1174
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addNode(IVariable) in line 1027
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsNode(IVariable) in line 1047
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getEdgeManager() in line 1202
      4 lines of code
      0 parameters
      1 conditional paths
   function getNodeManager() in line 1193
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getNumberOfNodes() in line 1018
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getVarCount() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph::DelegateGraph
   function getPredNodeCount(IVariable) in line 1098
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getPredNodes(IVariable) in line 1057
      protection public
      35 lines of code
      1 parameters
      3 conditional paths
      uses function getStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getSuccNodeCount(IVariable) in line 1156
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getSuccNodes(IVariable) in line 1115
      protection public
      35 lines of code
      1 parameters
      3 conditional paths
      uses function getStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function iterateNodes() in line 1009
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getVariables() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function removeAllIncidentEdges(IVariable) in line 1183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNode(IVariable) in line 1037
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(IVariable) in line 1000
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/PropagationSystem.java
module com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   inherits from com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   function extractPointerAnalysis(PropagationCallGraphBuilder) in line 621
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable pointerAnalysis defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function makePointerAnalysis(PropagationCallGraphBuilder) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function findOrCreateIndexForInstanceKey(InstanceKey) in line 307
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function findOrCreatePointsToSet(PointerKey) in line 266
      protection public
      40 lines of code
      1 parameters
      10 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function put(PointerKey,PointsToSetVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function getTypeFilter() defined in com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   function findOrCreateSparseSetForClass(IClass) in line 175
      11 lines of code
      1 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable class2InstanceKey defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableIntSetFactory
   function getAssignmentGraph() in line 724
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getAssignmentGraph() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getFilterAsssignmentGraph() in line 728
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getFilterAssignmentGraph() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getFixedPointSystem() in line 689
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function getInstanceKey(int) in line 219
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function getInstanceKeysForClass(IClass) in line 209
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable class2InstanceKey defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function getNumber(PointerKey) in line 932
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function getNumberOfPointerKeys() in line 705
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getNumberOfPointerKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses variable workList defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function getPeriodicMaintainInterval() in line 776
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable periodicMaintainInterval defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function getStatementsThatDef(IVariable) in line 720
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getStatementsThatUse(IVariable) in line 716
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function getTransitiveRoots() in line 739
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getTransitiveRoots() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function getVerboseInterval() in line 760
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable verboseInterval defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function initializeVariables() in line 243
      4 lines of code
      0 parameters
      1 conditional paths
   function initializeWorkList() in line 614
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAllStatementsToWorkList() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function isTransitiveRoot(PointerKey) in line 743
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function isUnified(PointerKey) in line 928
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function iteratePointerKeys() in line 698
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function iterateKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function makeArray(TypeReference,int) in line 514
      7 lines of code
      2 parameters
      2 conditional paths
   function makePointerAnalysis(PropagationCallGraphBuilder) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable instanceKeys defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function newConstraint(PointerKey,UnaryOperator,PointerKey) in line 325
      protection public
      25 lines of code
      3 parameters
      6 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function recordTransitiveRoot(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newConstraint(PointerKey,AbstractOperator,PointerKey) in line 351
      protection public
      17 lines of code
      3 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newConstraint(PointerKey,AbstractOperator,PointerKey,PointerKey) in line 369
      protection public
      20 lines of code
      4 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newConstraint(PointerKey,InstanceKey) in line 407
      protection public
      36 lines of code
      2 parameters
      6 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function recordTransitiveRoot(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function contains(int) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function add(int) defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function registerInstanceOfClass(IClass,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::impl::NodeWithNumber
      uses function changedVariable(IVariable) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newFieldRead(PointerKey,UnaryOperator,PointerKey,PointerKey) in line 400
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function newFieldWrite(PointerKey,UnaryOperator,PointerKey,PointerKey) in line 393
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function newSideEffect(UnaryOperator,PointerKey) in line 577
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function newSideEffect(AbstractOperator,PointerKey,PointerKey) in line 596
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function performVerboseAction() in line 632
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable DEBUG_MEMORY defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG_MEM_COUNTER defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG_MEM_INTERVAL defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function spaceReport() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getFixedPointSystem() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable workList defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function takeStatement() defined in com::ibm::wala::fixedpoint::impl::Worklist
      uses function printRHSInstances(AbstractStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function insertStatement(AbstractStatement) defined in com::ibm::wala::fixedpoint::impl::Worklist
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
   function periodicMaintenance() in line 751
      4 lines of code
      0 parameters
      1 conditional paths
   function printRHSInstances(AbstractStatement) in line 657
      27 lines of code
      1 parameters
      5 conditional paths
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function toString() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
   function recordImplicitPointsToSet(PointerKey) in line 253
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function recordImplicit(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function registerArrayInstanceWithAllInterfacesOfElement(int,IClass,int) in line 493
      20 lines of code
      3 parameters
      4 conditional paths
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getAllAncestorInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses function getAllImplementedInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function makeArray(TypeReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function findOrCreateSparseSetForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function registerArrayInstanceWithAllSuperclassesOfElement(int,IClass,int) in line 522
      17 lines of code
      3 parameters
      3 conditional paths
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
      uses function makeArray(TypeReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function findOrCreateSparseSetForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function registerFixedSet(PointsToSetVariable,UnarySideEffect) in line 153
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fixedSetMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function registerInstanceOfClass(IClass,int) in line 450
      30 lines of code
      2 parameters
      6 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function registerInstanceWithAllSuperclasses(int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function registerInstanceWithAllInterfaces(IClass,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getDimensionality() defined in com::ibm::wala::classLoader::ArrayClass
      uses function registerMultiDimArraysForArrayOfObjectTypes(int,int,ArrayClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getInnermostElementClass() defined in com::ibm::wala::classLoader::ArrayClass
      uses function registerArrayInstanceWithAllSuperclassesOfElement(int,IClass,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function registerArrayInstanceWithAllInterfacesOfElement(int,IClass,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
   function registerInstanceWithAllInterfaces(IClass,int) in line 545
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getAllImplementedInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses function findOrCreateSparseSetForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function registerInstanceWithAllSuperclasses(int,IClass) in line 562
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function findOrCreateSparseSetForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function registerMultiDimArraysForArrayOfObjectTypes(int,int,ArrayClass) in line 481
      11 lines of code
      3 parameters
      2 conditional paths
      uses function makeArray(TypeReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getClassLoader() defined in com::ibm::wala::classLoader::ArrayClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function findOrCreateSparseSetForClass(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function replaceLHS(PointsToSetVariable,PointsToSetVariable,AbstractStatement) in line 916
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getLHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function getRHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function removeStatement(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function replaceRHS(PointsToSetVariable,PointsToSetVariable,AbstractStatement) in line 889
      20 lines of code
      3 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function newStatement(IVariable,NullaryOperator,boolean,boolean) defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getLHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses function getOperator() defined in com::ibm::wala::fixedpoint::impl::AbstractStatement
      uses function getRHS() defined in com::ibm::wala::fixpoint::IFixedPointStatement
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function removeStatement(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function revertToPreTransitive() in line 735
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function revertToPreTransitive() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
   function setPeriodicMaintainInterval(int) in line 783
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVerboseInterval(int) in line 768
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable verboseInterval defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function unify(IntSet) in line 793
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function unify(IntSet) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getRepresentative(int) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
      uses function updateEquationsForUnification(HashSet< PointsToSetVariable >,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function updateSideEffectsForUnification(HashSet< PointsToSetVariable >,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function updateEquationsForUnification(HashSet< PointsToSetVariable >,int) in line 836
      46 lines of code
      2 parameters
      10 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getRightHandSide() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function getRepresentative(int) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getIndex(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function getPointerKey() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses variable flowGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function removeStatement(IFixedPointStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function replaceLHS(PointsToSetVariable,PointsToSetVariable,AbstractStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getLHS() defined in com::ibm::wala::fixedpoint::impl::UnaryStatement
      uses function replaceRHS(PointsToSetVariable,PointsToSetVariable,AbstractStatement) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getNumberOfStatementsThatDef(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function getNumberOfStatementsThatUse(IVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
      uses function removeVariable(PointsToSetVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationGraph
   function updateSideEffects(PointsToSetVariable,PointsToSetVariable) in line 158
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable fixedSetMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function replaceFixedSet(PointsToSetVariable) defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   function updateSideEffectsForUnification(HashSet< PointsToSetVariable >,int) in line 820
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable pointsToMap defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToMap
      uses function updateSideEffects(PointsToSetVariable,PointsToSetVariable) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function PropagationSystem(CallGraph,PointerKeyFactory,InstanceKeyFactory,boolean,WarningSet) in line 138
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   variable cg in line 126
   variable class2InstanceKey in line 98
   variable DEBUG in line 65
   variable DEBUG_MEM_COUNTER in line 69
   variable DEBUG_MEM_INTERVAL in line 71
   variable DEBUG_MEMORY in line 67
   variable fixedSetMap in line 121
   variable flowGraph in line 81
   variable instanceKeyFactory in line 113
   variable instanceKeys in line 86
   variable periodicMaintainInterval in line 130
   variable pointerAnalysis in line 103
   variable pointerKeyFactory in line 108
   variable pointsToMap in line 76
   variable verboseInterval in line 128
   variable warnings in line 91
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ReceiverInstanceContext.java
module com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
   inherits from com::ibm::wala::ipa::callgraph::Context
   function equals(Object) in line 66
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function ReceiverInstanceContext(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
      uses variable I defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
   function get(ContextKey) in line 39
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable RECEIVER defined in com::ibm::wala::ipa::callgraph::ContextKey
      uses variable I defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
   function getReceiver() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable I defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable I defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
   function toString() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable I defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
   function ReceiverInstanceContext(InstanceKey) in line 32
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable I defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverInstanceContext
   variable I in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ReceiverTypeContextSelector.java
module com::ibm::wala::ipa::callgraph::propagation::ReceiverTypeContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 101
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 92
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 62
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 47
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::ReceiverTypeContextSelector
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 73
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable cha in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ReflectionHandler.java
module com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
   function computeFactoryReturnStatements() in line 105
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function iterateNodes() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
   function modifyFactoryInterpreter(Statement,Collection< Statement >,RTAContextInterpreter,ClassHierarchy) in line 125
      27 lines of code
      4 parameters
      6 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function iterateNormalInstructions() defined in com::ibm::wala::ssa::IR
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getResult() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function recordFactoryType(CGNode,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKey
   function updateForReflection() in line 65
      39 lines of code
      0 parameters
      7 conditional paths
      uses function computeFactoryReturnStatements() defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
      uses variable VERBOSE defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable REFLECTION defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function modifyFactoryInterpreter(Statement,Collection< Statement >,RTAContextInterpreter,ClassHierarchy) defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
      uses function getContextInterpreter() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function addConstraintsFromChangedNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function ReflectionHandler(PropagationCallGraphBuilder) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
   variable builder in line 53
   variable VERBOSE in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ReturnValueKey.java
module com::ibm::wala::ipa::callgraph::propagation::ReturnValueKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::NodeKey
   function equals(Object) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
   function ReturnValueKey(CGNode) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/ReturnValueKeyWithFilter.java
module com::ibm::wala::ipa::callgraph::propagation::ReturnValueKeyWithFilter
   inherits from com::ibm::wala::ipa::callgraph::propagation::ReturnValueKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::FilteredPointerKey
   function getTypeFilter() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeFilter defined in com::ibm::wala::ipa::callgraph::propagation::ReturnValueKeyWithFilter
   function ReturnValueKeyWithFilter(CGNode,IClass) in line 31
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::NodeKey
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable typeFilter defined in com::ibm::wala::ipa::callgraph::propagation::ReturnValueKeyWithFilter
   variable typeFilter in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/AbstractRTABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   abstract class
   function addCallConstraints(CGNode) in line 162
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getRTAContextInterpreter() defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function visitInvoke(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function addConstraintsFromNode(CGNode) in line 131
      17 lines of code
      1 parameters
      3 conditional paths
      uses function haveAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function markAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function addNewConstraints(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function addCallConstraints(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function addFieldConstraints(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function addFieldConstraints(CGNode) in line 172
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getRTAContextInterpreter() defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function processFieldAccess(CGNode,FieldReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function addNewConstraints(CGNode) in line 152
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getRTAContextInterpreter() defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function visitNew(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function createEmptyCallGraph(ClassHierarchy,AnalysisOptions) in line 456
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function customInit() in line 386
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable PRE_ALLOC defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function addAllocation(TypeReference,WarningSet) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function visitNew(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getNewSite() defined in com::ibm::wala::ssa::SSANewInstruction
   function getAllocatedTypes() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allocatedClasses defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function getKeyForSite(CallSiteReference) in line 312
      1 lines of code
      1 parameters
      1 conditional paths
   function getPointerAnalysis() in line 476
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getOptions() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable allocatedClasses defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getRTAContextInterpreter() in line 123
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getContextInterpreter() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function makeContextInterpreter(SSAContextInterpreter,ReflectionSpecification,WarningSet) in line 431
      9 lines of code
      3 parameters
      1 conditional paths
      uses function getOptions() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function makeContextSelector(ContextSelector) in line 420
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function makeDispatchOperator(CallSiteReference,CGNode) in line 310
      1 lines of code
      2 parameters
      1 conditional paths
   function makeSolver() in line 411
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function makeSystem(AnalysisOptions) in line 465
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setVerboseInterval(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable VERBOSE_INTERVAL defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function setPeriodicMaintainInterval(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable PERIODIC_MAINTAIN_INTERVAL defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function processClassInitializer(IClass) in line 203
      36 lines of code
      1 parameters
      8 conditional paths
      uses variable clinitProcessed defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getClassInitializer() defined in com::ibm::wala::classLoader::IClass
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function addInvocation(int[],CallSiteReference) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function findOrCreateNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function processFieldAccess(CGNode,FieldReference) in line 187
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getType() defined in com::ibm::wala::types::MemberReference
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function processClassInitializer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function unconditionallyAddConstraintsFromNode(CGNode) in line 441
      8 lines of code
      1 parameters
      1 conditional paths
      uses function addNewConstraints(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function addCallConstraints(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function addFieldConstraints(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function markAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function updateSetsForNewClass(IClass,InstanceKey,CGNode,NewSiteReference) in line 379
      1 lines of code
      4 parameters
      1 conditional paths
   function visitInvoke(CGNode,CallSiteReference) in line 243
      protection public
      66 lines of code
      2 parameters
      14 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getContextSelector() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function contextIsIrrelevant(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::ContextSelector
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getTargetForCall(CGNode,CallSiteReference,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function processClassInitializer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable delegateMap defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function delegate(CallSiteReference,CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
      uses function getKeyForSite(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function makeDispatchOperator(CallSiteReference,CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newSideEffect(UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function addTarget(CallSiteReference,CGNode) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable entrypointCallSites defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function registerEntrypoint(CGNode) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function haveAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function markDiscovered(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function visitNew(CGNode,NewSiteReference) in line 341
      protection public
      32 lines of code
      2 parameters
      7 conditional paths
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses variable allocatedClasses defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function updateSetsForNewClass(IClass,InstanceKey,CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function processClassInitializer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function AbstractRTABuilder(ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter,ReflectionSpecification) in line 115
      protection public
      7 lines of code
      6 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setInstanceKeys(InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function setContextSelector(ContextSelector) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeContextSelector(ContextSelector) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function setContextInterpreter(SSAContextInterpreter) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function makeContextInterpreter(SSAContextInterpreter,ReflectionSpecification,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   variable allocatedClasses in line 91
   variable clinitProcessed in line 86
   variable clone2Assign in line 81
   variable DEBUG in line 72
   variable DEBUG_LEVEL in line 70
   variable delegateMap in line 99
   variable PERIODIC_MAINTAIN_INTERVAL in line 76
   variable PRE_ALLOC in line 105
   variable VERBOSE_INTERVAL in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/BasicRTABuilder.java
module com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
   function getDefaultDispatchBoundHeuristic() in line 255
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_DISPATCH_BOUND defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getKeyForSelector(Selector) in line 102
      3 lines of code
      1 parameters
      1 conditional paths
   function getKeyForSite(CallSiteReference) in line 98
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function makeDispatchOperator(CallSiteReference,CGNode) in line 246
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
   function registerImplementedMethods(IClass,InstanceKey) in line 83
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function getKeyForSelector(Selector) defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function updateSetsForNewClass(IClass,InstanceKey,CGNode,NewSiteReference) in line 60
      19 lines of code
      4 parameters
      4 conditional paths
      uses function registerImplementedMethods(IClass,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder
      uses function getAllImplementedInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function BasicRTABuilder(ClassHierarchy,WarningSet,AnalysisOptions,ContextSelector,SSAContextInterpreter) in line 50
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextSelector defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable contextInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
module com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   function equals(Object) in line 230
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
   function evaluate(IVariable,IVariable) in line 130
      protection public
      81 lines of code
      2 parameters
      14 conditional paths
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses variable NOT_CHANGED defined in com::ibm::wala::fixpoint::FixedPointConstants
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function filterForClass(IntSet,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getTargetForCall(CGNode,CallSiteReference,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable clone2Assign defined in com::ibm::wala::ipa::callgraph::propagation::rta::AbstractRTABuilder
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable CLONE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function haveAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function markDiscovered(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses variable previousReceivers defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
   function hashCode() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable caller defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::BasicRTABuilder::DispatchOperator
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
   function toString() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable caller in line 118
   variable previousReceivers in line 128
   variable site in line 117
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/CallSite.java
module com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
   function equals(Object) in line 35
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function CallSite(CallSiteReference,CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
   function getNode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
   function getSelector() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function getSite() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
   function hashCode() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
   function toString() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function toString() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
   function CallSite(CallSiteReference,CGNode) in line 26
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
   variable node in line 24
   variable site in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/ContextInsensitiveRTAInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::rta::ContextInsensitiveRTAInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   abstract class
   function iterateCallSites(CGNode,WarningSet) in line 51
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function iterateFieldsRead(CGNode,WarningSet) in line 65
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function iterateFieldsWritten(CGNode,WarningSet) in line 78
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function iterateNewSites(CGNode,WarningSet) in line 38
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function recordFactoryType(CGNode,IClass) in line 95
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function understands(CGNode) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/DefaultRTAInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   function getNodeInterpreter(CGNode) in line 56
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getInterpreter() defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
      uses variable defaultInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function getWarnings() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function iterateCallSites(CGNode,WarningSet) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getNodeInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
      uses function iterateCallSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function iterateFieldsRead(CGNode,WarningSet) in line 86
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getNodeInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
      uses function iterateFieldsRead(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function iterateFieldsWritten(CGNode,WarningSet) in line 93
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getNodeInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
      uses function iterateFieldsWritten(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function iterateNewSites(CGNode,WarningSet) in line 72
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getNodeInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
      uses function iterateNewSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   function recordFactoryType(CGNode,IClass) in line 105
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function understands(CGNode) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DefaultRTAInterpreter(AnalysisOptions,ClassHierarchy,WarningSet) in line 48
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
      uses variable defaultInterpreter defined in com::ibm::wala::ipa::callgraph::propagation::rta::DefaultRTAInterpreter
   variable DEBUG in line 35
   variable defaultInterpreter in line 41
   variable warnings in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/DelegatingExplicitCallGraph.java
module com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph
   inherits from com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
   function makeEdgeManger() in line 282
      3 lines of code
      0 parameters
      1 conditional paths
   function makeNode(IMethod,Context) in line 172
      3 lines of code
      2 parameters
      1 conditional paths
      uses function DelegatingCGNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
   function DelegatingExplicitCallGraph(ClassHierarchy,AnalysisOptions) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
      uses variable options defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph
   variable delegateR in line 45
module com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
   inherits from com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
   function delegate(CallSiteReference,CGNode,CallSiteReference) in line 156
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function set(int,T) defined in com::ibm::wala::util::intset::SparseVector
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses variable delegateR defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function getAllTargetNumbers() in line 77
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function iterator() defined in com::ibm::wala::util::intset::SparseVector
      uses function delegate(CallSiteReference,CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
      uses function ExplicitNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function getNumberOfTargets(CallSiteReference) in line 144
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function getNumberOfTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
   function getPossibleTargetNumbers(CallSiteReference) in line 109
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function DelegatingCGNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function getPossibleTargetNumbers(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
   function getPossibleTargets(CallSiteReference) in line 97
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function get(int) defined in com::ibm::wala::util::intset::SparseVector
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function getSite() defined in com::ibm::wala::ipa::callgraph::propagation::rta::CallSite
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
   function hasTarget(int) in line 121
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable targets defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function iterator() defined in com::ibm::wala::util::intset::SparseVector
      uses function delegate(CallSiteReference,CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
      uses function ExplicitNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::impl::ExplicitCallGraph::ExplicitNode
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function DelegatingCGNode(IMethod,Context) in line 68
      3 lines of code
      2 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingEdgeManager
   inherits from ExplicitEdgeManager
   function addEdge(CGNode,CGNode) in line 184
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function getPredNodeCount(CGNode) in line 241
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getPredNodeNumbers(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getPredNodeNumbers(CGNode) in line 251
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses variable delegateR defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function DelegatingCGNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
      uses function getNode(Key) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function hasEdge(CGNode,CGNode) in line 226
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function DelegatingCGNode(IMethod,Context) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
      uses function getNumber(T) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function hasTarget(int) defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingExplicitCallGraph::DelegatingCGNode
   function removeAllIncidentEdges(CGNode) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeIncomingEdges(CGNode) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(CGNode) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/DelegatingRTAContextInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   function iterateCallSites(CGNode,WarningSet) in line 82
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function iterateCallSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function iterateFieldsRead(CGNode,WarningSet) in line 100
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function iterateFieldsRead(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function iterateFieldsWritten(CGNode,WarningSet) in line 118
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function iterateFieldsWritten(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function iterateNewSites(CGNode,WarningSet) in line 63
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function iterateNewSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function recordFactoryType(CGNode,IClass) in line 130
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses function recordFactoryType(CGNode,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function setWarnings(WarningSet) in line 144
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses function setWarnings(WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function toString() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function understands(CGNode) in line 48
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses function understands(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
   function DelegatingRTAContextInterpreter(RTAContextInterpreter,RTAContextInterpreter) in line 34
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable A defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses variable B defined in com::ibm::wala::ipa::callgraph::propagation::rta::DelegatingRTAContextInterpreter
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable A in line 30
   variable B in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/RTAContextInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   function iterateCallSites(CGNode,WarningSet) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function iterateFieldsRead(CGNode,WarningSet) in line 48
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function iterateFieldsWritten(CGNode,WarningSet) in line 53
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function iterateNewSites(CGNode,WarningSet) in line 38
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function recordFactoryType(CGNode,IClass) in line 65
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 71
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function understands(CGNode) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/RTASelectorKey.java
module com::ibm::wala::ipa::callgraph::propagation::rta::RTASelectorKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::PointerKey
   function equals(Object) in line 38
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable selector defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTASelectorKey
      uses function equals(Object) defined in com::ibm::wala::types::Selector
   function getTypeFilter() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selector defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTASelectorKey
      uses function hashCode() defined in com::ibm::wala::types::Selector
   function toString() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selector defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTASelectorKey
      uses function toString() defined in com::ibm::wala::types::Selector
   variable selector in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/TypeBasedHeapModel.java
module com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   inherits from com::ibm::wala::ipa::callgraph::propagation::HeapModel
   function computePointerKeys(CGNode,CallGraph) in line 118
      27 lines of code
      2 parameters
      7 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function solve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getMaxValueNumber() defined in com::ibm::wala::ssa::SymbolTable
      uses function isConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function isStringConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
      uses function getInstanceKeyForConstant(Object) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function getConstantValue(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getType(int) defined in com::ibm::wala::analysis::typeInference::TypeInference
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function isReferenceType() defined in com::ibm::wala::classLoader::IClass
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function computePointerKeys(IClass) in line 148
      29 lines of code
      1 parameters
      7 conditional paths
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getElementClass() defined in com::ibm::wala::classLoader::ArrayClass
      uses function isReferenceType() defined in com::ibm::wala::classLoader::IClass
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
      uses function getAllFields() defined in com::ibm::wala::classLoader::IClass
      uses function getFieldTypeReference() defined in com::ibm::wala::classLoader::IField
      uses function isStatic() defined in com::ibm::wala::classLoader::IField
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function getClassHierarchy() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getFilteredPointerKeyForLocal(CGNode,int,IClass) in line 248
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getFilteredPointerKeyForLocal(CGNode,int,InstanceKey) in line 253
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getIKeyFactory() in line 281
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 192
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getInstanceKeyForClassObject(TypeReference) in line 216
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getInstanceKeyForConstant(Object) in line 202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function getInstanceKeyForConstant(Object) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 197
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 211
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getPointerKeyForArrayContents(InstanceKey) in line 274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function getPointerKeyForExceptionalReturnValue(CGNode) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function getPointerKeyForInstanceField(InstanceKey,IField) in line 270
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function getPointerKeyForLocal(CGNode,int) in line 221
      protection public
      26 lines of code
      2 parameters
      5 conditional paths
      uses function initPKeysForNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
      uses variable pKeys defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangString defined in com::ibm::wala::types::TypeReference
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function getPointerKeyForReturnValue(CGNode) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function getPointerKeyForStaticField(IField) in line 266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::cfa::CFAPointerKeys
   function getStringConstantForInstanceKey(InstanceKey) in line 206
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function initAllPKeys() in line 91
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable pKeys defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses variable klasses defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function computePointerKeys(CGNode,CallGraph) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function initPKeysForNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   function initPKeysForNode(CGNode) in line 105
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable pKeys defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses variable nodesHandled defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function computePointerKeys(CGNode,CallGraph) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   function iteratePointerKeys() in line 179
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function initAllPKeys() defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses variable pKeys defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   function TypeBasedHeapModel(AnalysisOptions,Collection< IClass >,CallGraph) in line 85
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable iKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses variable klasses defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   variable cg in line 69
   variable iKeyFactory in line 65
   variable klasses in line 67
   variable nodesHandled in line 71
   variable pKeys in line 79
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/rta/TypeBasedPointerAnalysis.java
module com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
   function computeOrdinalInstanceSet(IClass) in line 95
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable klasses defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getImplementors(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function toOrdinalInstanceKeySet(Collection) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
   function getClassHierarchy() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable heapModel defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   function getHeapModel() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable heapModel defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
   function getPointerKeys() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable heapModel defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
      uses function iteratePointerKeys() defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedHeapModel
   function getPointsToSet(PointerKey) in line 81
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function inferType(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
      uses variable pointsTo defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
      uses function computeOrdinalInstanceSet(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
   function inferType(PointerKey) in line 124
      18 lines of code
      1 parameters
      5 conditional paths
      uses function getTypeFilter() defined in com::ibm::wala::ipa::callgraph::propagation::LocalPointerKeyWithFilter
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
      uses function getFieldTypeReference() defined in com::ibm::wala::classLoader::IField
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceFieldKey
      uses function getTypeFilter() defined in com::ibm::wala::ipa::callgraph::propagation::ArrayInstanceKey
   function isFiltered(PointerKey) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeInstanceKeys(Collection< IClass >) in line 70
      10 lines of code
      1 parameters
      3 conditional paths
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function add(T) defined in com::ibm::wala::util::intset::MutableMapping
   function toOrdinalInstanceKeySet(Collection) in line 112
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getInstanceKeyMapping() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function add(int) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function TypeBasedPointerAnalysis(AnalysisOptions,Collection< IClass >,CallGraph) in line 60
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointerAnalysis
      uses function makeInstanceKeys(Collection< IClass >) defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
      uses variable klasses defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
      uses variable heapModel defined in com::ibm::wala::ipa::callgraph::propagation::rta::TypeBasedPointerAnalysis
   variable heapModel in line 49
   variable klasses in line 47
   variable pointsTo in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/SmushedAllocationSiteInstanceKeys.java
module com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 71
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getInstanceKeyForClassObject(TypeReference) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function getInstanceKeyForClassObject(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getInstanceKeyForConstant(Object) in line 114
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function getUseConstantSpecificKeys() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getConstantType(Object) defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 98
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function getClassTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 129
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable classBased defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::ClassBasedInstanceKeys
   function getStringConstantForInstanceKey(InstanceKey) in line 121
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function SmushedAllocationSiteInstanceKeys(AnalysisOptions,ClassHierarchy,WarningSet) in line 58
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteInstanceKeys
   variable cha in line 48
   variable classBased in line 50
   variable options in line 38
   variable warnings in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/SmushedAllocationSiteKey.java
module com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   function equals(Object) in line 28
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function SmushedAllocationSiteKey(CGNode,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SmushedAllocationSiteKey
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   function hashCode() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
   function SmushedAllocationSiteKey(CGNode,IClass) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
      uses variable type defined in com::ibm::wala::ipa::callgraph::propagation::AbstractAllocationSiteKey
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/SSAContextInterpreter.java
module com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
   inherits from com::ibm::wala::ipa::cfg::CFGProvider
   function getDU(CGNode,WarningSet) in line 34
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getIR(CGNode,WarningSet) in line 32
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getNumberOfStatements(CGNode,WarningSet) in line 39
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/SSAPropagationCallGraphBuilder.java
module com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   inherits from com::ibm::wala::ipa::callgraph::propagation::HeapModel
   abstract class
   function addBlockInstructionConstraints(CGNode,ControlFlowGraph,BasicBlock,ConstraintVisitor) in line 291
      16 lines of code
      4 parameters
      4 conditional paths
      uses function setBasicBlock(IBasicBlock) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
      uses function wasChanged(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function addPhiConstraints(CGNode,ControlFlowGraph,BasicBlock,ConstraintVisitor) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
   function addConstraintsFromNode(CGNode) in line 203
      8 lines of code
      1 parameters
      2 conditional paths
      uses function haveAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function markAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function unconditionallyAddConstraintsFromNode(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
   function addExceptionDefConstraints(IR,DefUse,CGNode,List< ProgramCounter >,PointerKey,Set) in line 388
      68 lines of code
      6 parameters
      16 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getPEI(ProgramCounter) defined in com::ibm::wala::ssa::IR
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable SHORT_CIRCUIT_SINGLE_USES defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function hasUniqueCatchBlock(SSAAbstractInvokeInstruction,IR) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function addAssignmentsForCatchPointerKey(PointerKey,Set,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function assignInstanceToCatch(PointerKey,Set,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getExceptionTypes() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference,InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getType() defined in com::ibm::wala::ipa::callgraph::propagation::ConcreteTypeKey
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function addNodeInstructionConstraints(CGNode,IR,DefUse) in line 271
      11 lines of code
      3 parameters
      3 conditional paths
      uses function makeVisitor(ExplicitCallGraph.ExplicitNode,IR,DefUse,ExplicitCallGraph) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function addBlockInstructionConstraints(CGNode,ControlFlowGraph,BasicBlock,ConstraintVisitor) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function wasChanged(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function addNodePassthruExceptionConstraints(CGNode,IR,DefUse) in line 367
      7 lines of code
      3 parameters
      1 conditional paths
      uses function getIncomingPEIs(IR,IBasicBlock) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getExitBlock() defined in com::ibm::wala::ssa::IR
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function addExceptionDefConstraints(IR,DefUse,CGNode,List< ProgramCounter >,PointerKey,Set) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable THROWABLE_SET defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function addPhiConstraints(CGNode,ControlFlowGraph,BasicBlock,ConstraintVisitor) in line 314
      45 lines of code
      4 parameters
      12 conditional paths
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function isExitBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function iteratePhis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getDef() defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function hasNoInterestingUses(int,DefUse) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function contentsAreInvariant(SymbolTable,DefUse,int) in line 1884
      14 lines of code
      3 parameters
      4 conditional paths
      uses function isConstantRef(SymbolTable,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable SHORT_CIRCUIT_INVARIANT_SETS defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getDef(int) defined in com::ibm::wala::ssa::DefUse
   function getCaughtExceptionTypes(SSAGetCaughtExceptionInstruction,IR) in line 2002
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable ir defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function getBasicBlockNumber() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function getCFAContextInterpreter() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getContextInterpreter() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getFilter(CGNode) in line 1846
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReceiverClass(IMethod) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getIncomingPEIs(IR,IBasicBlock) in line 510
      protection public
      26 lines of code
      2 parameters
      7 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function isEntryBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function isPEI() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getProgramCounter(int) defined in com::ibm::wala::cfg::ControlFlowGraph
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference,InstanceKeyFactory) in line 193
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 2019
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference,InstanceKeyFactory) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable instanceKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) in line 1906
      3 lines of code
      5 parameters
      1 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel,boolean) in line 1910
      24 lines of code
      6 parameters
      5 conditional paths
      uses function isConstantRef(SymbolTable,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getConstantValue(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getInstanceKeyForConstant(Object) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getDef(int) defined in com::ibm::wala::ssa::DefUse
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getNewSite() defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function getReceiverClass(IMethod) in line 1862
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isStatic() defined in com::ibm::wala::classLoader::IMember
   function getUniqueCatchKey(SSAAbstractInvokeInstruction,IR,CGNode) in line 491
      14 lines of code
      3 parameters
      3 conditional paths
      uses function getBasicBlocksForCall(CallSiteReference) defined in com::ibm::wala::ssa::IR
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getExceptionalSuccessors(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getDef() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function hasNoInterestingUses(int,DefUse) in line 1688
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function makeInterestingVisitor(int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getUses(int) defined in com::ibm::wala::ssa::DefUse
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable bingo defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::InterestingVisitor
   function hasUniqueCatchBlock(SSAAbstractInvokeInstruction,IR) in line 463
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getBasicBlocksForCall(CallSiteReference) defined in com::ibm::wala::ssa::IR
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getExceptionalSuccessors(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function isConstantRef(SymbolTable,int) in line 1935
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function isConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getConstantValue(int) defined in com::ibm::wala::ssa::SymbolTable
   function isRootOfVirtualMethodHierarchy(IMethod) in line 1824
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function isRootType(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::classLoader::IMethod
   function isRootType(IClass) in line 1816
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getRootClass() defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function iteratePointerKeys() in line 1998
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function iteratePointerKeys() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function makeInterestingVisitor(int) in line 1703
      3 lines of code
      1 parameters
      1 conditional paths
   function makeSolver() in line 2028
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable usePreTransitiveSolver defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function makeVisitor(ExplicitCallGraph.ExplicitNode,IR,DefUse,ExplicitCallGraph) in line 261
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function needsFilterForReceiver(SSAAbstractInvokeInstruction,CGNode) in line 1781
      34 lines of code
      2 parameters
      6 conditional paths
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function isStatic() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function isSpecial() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getDeclaredTarget() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isRootOfVirtualMethodHierarchy(IMethod) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreateBoundFromClassHierarchy(MethodReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function processResolvedCall(CGNode,SSAAbstractInvokeInstruction,CGNode,InstanceKey,PointerKey) in line 1546
      141 lines of code
      5 parameters
      21 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function addTarget(CallSiteReference,CGNode) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable entrypointCallSites defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function registerEntrypoint(CGNode) defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function haveAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function markDiscovered(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getNumberOfParameters() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function isStatic() defined in com::ibm::wala::classLoader::IMember
      uses function needsFilterForReceiver(SSAAbstractInvokeInstruction,CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses function getFilter(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function isRootType(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable filterOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function hasDef() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDef() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable SHORT_CIRCUIT_SINGLE_USES defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
   function unconditionallyAddConstraintsFromNode(CGNode) in line 215
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable PERIODIC_WIPE_SOFT_CACHES defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable wipeCount defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable WIPE_SOFT_CACHE_INTERVAL defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getCFAContextInterpreter() defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function toString() defined in com::ibm::wala::ssa::IR
      uses function getDU(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function addNodeInstructionConstraints(CGNode,IR,DefUse) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function addNodePassthruExceptionConstraints(CGNode,IR,DefUse) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
   function SSAPropagationCallGraphBuilder(ClassHierarchy,WarningSet,AnalysisOptions,PointerKeyFactory,boolean) in line 176
      5 lines of code
      5 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable warnings defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable pointerKeyFactory defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   variable clinitVisited in line 163
   variable clone2Assign in line 153
   variable cloneSelector in line 158
   variable DEBUG in line 99
   variable DEBUG_METHOD_SUBSTRING in line 103
   variable DEBUG_MULTINEWARRAY in line 101
   variable PERIODIC_WIPE_SOFT_CACHES in line 109
      protection public
   variable SHORT_CIRCUIT_INVARIANT_SETS in line 138
   variable SHORT_CIRCUIT_SINGLE_USES in line 148
   variable usePreTransitiveSolver in line 174
   variable WIPE_SOFT_CACHE_INTERVAL in line 114
      protection public
   variable wipeCount in line 119
module com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function booleanConstantTest(SSAConditionalBranchInstruction,int) in line 1180
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function isZero(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses function isOne(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getOperator() defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable NE defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction::Operator
   function computeInvariantParameters(SSAAbstractInvokeInstruction) in line 1278
      20 lines of code
      1 parameters
      6 conditional paths
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function getBasicBlock() in line 1261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function nullConstantTest(SSAConditionalBranchInstruction,int) in line 1197
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function isNullConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses function getOperator() defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable EQ defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction::Operator
   function processClassInitializer(IClass) in line 862
      40 lines of code
      1 parameters
      9 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable clinitVisited defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getClassInitializer() defined in com::ibm::wala::classLoader::IClass
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function getTargetForCall(CGNode,CallSiteReference,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function addInvocation(int[],CallSiteReference) defined in com::ibm::wala::ipa::callgraph::impl::FakeRootMethod
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function processResolvedCall(CGNode,SSAAbstractInvokeInstruction,CGNode,InstanceKey,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function computeInvariantParameters(SSAAbstractInvokeInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function processPutField(int,int,IField) in line 940
      44 lines of code
      3 parameters
      10 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getFieldTypeReference() defined in com::ibm::wala::classLoader::IField
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newSideEffect(UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function processPutStatic(int,FieldReference,IField) in line 985
      26 lines of code
      3 parameters
      5 conditional paths
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getType() defined in com::ibm::wala::types::MemberReference
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(FieldReference) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::FieldResolutionFailure
      uses function processClassInitializer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function setBasicBlock(IBasicBlock) in line 1268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable basicBlock defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function visitArrayLoad(SSAArrayLoadInstruction) in line 594
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getDef() defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function hasNoInterestingUses(int,DefUse) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newSideEffect(UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function visitArrayStore(SSAArrayStoreInstruction) in line 632
      protection public
      73 lines of code
      1 parameters
      17 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getValue() defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function isRootType(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable filterOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isUnified(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newSideEffect(UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function visitCheckCast(SSACheckCastInstruction) in line 711
      protection public
      55 lines of code
      1 parameters
      11 conditional paths
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::CheckcastFailure
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getResult() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getVal() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses function hasNoInterestingUses(int,DefUse) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getDef() defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getJavaLangObject() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function isRootType(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable filterOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function visitGet(SSAGetInstruction) in line 797
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitGetInternal(int,int,boolean,FieldReference) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getDef() defined in com::ibm::wala::ssa::SSAGetInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function visitGetCaughtException(SSAGetCaughtExceptionInstruction) in line 1165
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function getIncomingPEIs(IR,IBasicBlock) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable ir defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getBasicBlock() defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getDef() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses function getCaughtExceptionTypes(SSAGetCaughtExceptionInstruction,IR) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function addExceptionDefConstraints(IR,DefUse,CGNode,List< ProgramCounter >,PointerKey,Set) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function visitGetInternal(int,int,boolean,FieldReference) in line 801
      55 lines of code
      4 parameters
      11 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function resolveField(FieldReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function hasNoInterestingUses(int,DefUse) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getType() defined in com::ibm::wala::types::MemberReference
      uses function processClassInitializer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newSideEffect(UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function findOrCreatePointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function visitInvoke(SSAInvokeInstruction) in line 1017
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInvokeInternal(SSAAbstractInvokeInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function visitInvokeInternal(SSAAbstractInvokeInstruction) in line 1021
      58 lines of code
      1 parameters
      10 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable debug defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function hasUniqueCatchBlock(SSAAbstractInvokeInstruction,IR) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable ir defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getUniqueCatchKey(SSAAbstractInvokeInstruction,IR,CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function isStatic() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getTargetForCall(CGNode,CallSiteReference,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function processResolvedCall(CGNode,SSAAbstractInvokeInstruction,CGNode,InstanceKey,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function computeInvariantParameters(SSAAbstractInvokeInstruction) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function processClassInitializer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getReceiver() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function newSideEffect(UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
   function visitLoadClass(SSALoadClassInstruction) in line 1299
      protection public
      11 lines of code
      1 parameters
      23 conditional paths
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getDef() defined in com::ibm::wala::ssa::SSALoadClassInstruction
      uses function getInstanceKeyForClassObject(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getLoadedClass() defined in com::ibm::wala::ssa::SSALoadClassInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function getValue() defined in com::ibm::wala::fixpoint::IntSetVariable
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getInstanceKey(int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable clone2Assign defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::Selector
      uses variable cloneSelector defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable options defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getMethodTargetSelector() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable CLONE defined in com::ibm::wala::analysis::reflection::CloneInterpreter
      uses function getDef() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getReceiver() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getTargetForCall(CGNode,CallSiteReference,InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function processResolvedCall(CGNode,SSAAbstractInvokeInstruction,CGNode,InstanceKey,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function haveAlreadyVisited(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function markDiscovered(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function getBoundOnNumberOfTargets(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function hashCode() defined in com::ibm::wala::ssa::SSAInstruction
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInstruction
   function visitNew(SSANewInstruction) in line 1085
      protection public
      64 lines of code
      1 parameters
      12 conditional paths
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getNewSite() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getDef() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable debug defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function findOrCreateIndexForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getConcreteType() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function processClassInitializer(IClass) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable ir defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function isIntegerConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getConstantValue(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable DEBUG_MULTINEWARRAY defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
   function visitPi(SSAPiInstruction) in line 1215
      protection public
      45 lines of code
      1 parameters
      8 conditional paths
      uses variable ir defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getVal() defined in com::ibm::wala::ssa::SSAPiInstruction
      uses function hasNoInterestingUses(int,DefUse) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getDef() defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getBasicBlock() defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getCause() defined in com::ibm::wala::ssa::SSAPiInstruction
      uses function getNode(int) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getSuccessor() defined in com::ibm::wala::ssa::SSAPiInstruction
      uses function booleanConstantTest(SSAConditionalBranchInstruction,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getDef() defined in com::ibm::wala::ssa::SSAInstruction
      uses variable cha defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable filterOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable inverseFilterOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function nullConstantTest(SSAConditionalBranchInstruction,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function visitPut(SSAPutInstruction) in line 908
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitPutInternal(int,int,boolean,FieldReference) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getVal() defined in com::ibm::wala::ssa::SSAPutInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function visitPutInternal(int,int,boolean,FieldReference) in line 912
      protection public
      27 lines of code
      4 parameters
      7 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
      uses function resolveField(FieldReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getWarnings() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(FieldReference) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::FieldResolutionFailure
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function isStringConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function processPutStatic(int,FieldReference,IField) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function processPutField(int,int,IField) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   function visitReturn(SSAReturnInstruction) in line 772
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function returnsPrimitiveType() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses function returnsVoid() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getResult() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses function contentsAreInvariant(SymbolTable,DefUse,int) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function recordImplicitPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses function getInvariantContents(SymbolTable,DefUse,CGNode,int,HeapModel) defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function newConstraint(PointerKey,UnaryOperator,PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PropagationSystem
      uses variable assignOperator defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
   function visitThrow(SSAThrowInstruction) in line 1155
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function ConstraintVisitor(ExplicitCallGraph.ExplicitNode,IR,ExplicitCallGraph,DefUse) in line 574
      protection public
      14 lines of code
      4 parameters
      2 conditional paths
      uses variable node defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable ir defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses variable callGraph defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable DEBUG_METHOD_SUBSTRING defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder
      uses function toString() defined in com::ibm::wala::ipa::callgraph::impl::BasicCallGraph
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable symbolTable defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
      uses variable du defined in com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::ConstraintVisitor
   variable basicBlock in line 560
   variable callGraph in line 550
   variable debug in line 572
   variable du in line 570
   variable ir in line 555
   variable node in line 545
   variable symbolTable in line 565
module com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::DispatchOperator
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   inherits from com::ibm::wala::ipa::callgraph::propagation::IPointerOperator
   function equals(Object) in line 1505
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function evaluate(IVariable,IVariable) in line 1359
      protection public
      96 lines of code
      2 parameters
      1 conditional paths
   function hashCode() in line 1496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isComplex() in line 1527
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 1487
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function willNeverChangeAgain(IntSet) in line 1459
      27 lines of code
      1 parameters
      1 conditional paths
   variable call in line 1324
   variable constParams in line 1328
   variable node in line 1326
   variable previousReceivers in line 1351
   variable uniqueCatch in line 1330
module com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::InterestingVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function visitArrayLoad(SSAArrayLoadInstruction) in line 1719
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function visitArrayStore(SSAArrayStoreInstruction) in line 1725
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getValue() defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
   function visitCheckCast(SSACheckCastInstruction) in line 1731
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGet(SSAGetInstruction) in line 1735
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
   function visitGetCaughtException(SSAGetCaughtExceptionInstruction) in line 1742
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitInvoke(SSAInvokeInstruction) in line 1746
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPhi(SSAPhiInstruction) in line 1750
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPi(SSAPiInstruction) in line 1754
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPut(SSAPutInstruction) in line 1758
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
   function visitReturn(SSAReturnInstruction) in line 1765
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitThrow(SSAThrowInstruction) in line 1769
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function InterestingVisitor(int) in line 1713
      3 lines of code
      1 parameters
      1 conditional paths
   variable bingo in line 1717
   variable vn in line 1711
module com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::CheckcastFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeReference) in line 1965
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 1961
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::callgraph::propagation::SSAPropagationCallGraphBuilder::FieldResolutionFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function create(FieldReference) in line 1988
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 1984
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/StandardSolver.java
module com::ibm::wala::ipa::callgraph::propagation::StandardSolver
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
   function solve() in line 37
      protection public
      26 lines of code
      0 parameters
      4 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function getSystem() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function solve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function getBuilder() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function addConstraintsFromNewNodes() defined in com::ibm::wala::ipa::callgraph::propagation::PropagationCallGraphBuilder
      uses function getReflectionHandler() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses function updateForReflection() defined in com::ibm::wala::ipa::callgraph::propagation::ReflectionHandler
   function StandardSolver(PropagationSystem,PropagationCallGraphBuilder) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable system defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
      uses variable builder defined in com::ibm::wala::ipa::callgraph::propagation::AbstractPointsToSolver
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/StaticFieldKey.java
module com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractPointerKey
   function equals(Object) in line 29
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function StaticFieldKey(IField) defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
   function getField() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
   function hashCode() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
   function toString() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
   function StaticFieldKey(IField) in line 22
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable field defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
   variable field in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/StringConstantKey.java
module com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::InstanceKey
   function equals(Object) in line 26
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function StringConstantKey(String,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
      uses variable string defined in com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
   function getConcreteType() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stringClass defined in com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
   function getString() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable string defined in com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
   function hashCode() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function StringConstantKey(String,IClass) in line 22
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable string defined in com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
      uses variable stringClass defined in com::ibm::wala::ipa::callgraph::propagation::StringConstantKey
   variable string in line 20
   variable stringClass in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/propagation/UnarySideEffect.java
module com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   inherits from com::ibm::wala::fixedpoint::impl::UnaryOperator
   abstract class
   function equals(Object) in line 55
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function UnarySideEffect(PointsToSetVariable) defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
      uses variable fixedSet defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
      uses function equals(Object) defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
   function evaluate(IVariable,IVariable) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fixedSet defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   function evaluate(IVariable) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fixedSet defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
      uses function hashCode() defined in com::ibm::wala::ipa::callgraph::propagation::PointsToSetVariable
      uses function isLoadOperator() defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   function isLoadOperator() in line 77
      1 lines of code
      0 parameters
      1 conditional paths
   function replaceFixedSet(PointsToSetVariable) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fixedSet defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   function UnarySideEffect(PointsToSetVariable) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fixedSet defined in com::ibm::wala::ipa::callgraph::propagation::UnarySideEffect
   variable fixedSet in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/callgraph/ReflectionSpecification.java
module com::ibm::wala::ipa::callgraph::ReflectionSpecification
   function getTypeForNewInstance(MethodReference,int,ClassHierarchy) in line 32
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cfg/BasicBlockInContext.java
module com::ibm::wala::ipa::cfg::BasicBlockInContext
   inherits from com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::cfg::IBasicBlock
   function equals(Object) in line 116
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BasicBlockInContext(CGNode,IBasicBlock) defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses variable node defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
   function getDelegate() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
   function getFirstInstructionIndex() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
   function getLastInstructionIndex() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
   function getMethod() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function getMethod() defined in com::ibm::wala::cfg::IBasicBlock
   function getNode() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
   function getNumber() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
   function hashCode() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses variable node defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
   function isCatchBlock() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function isCatchBlock() defined in com::ibm::wala::cfg::IBasicBlock
   function isEntryBlock() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function isEntryBlock() defined in com::ibm::wala::cfg::IBasicBlock
   function isExitBlock() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function isExitBlock() defined in com::ibm::wala::cfg::IBasicBlock
   function iterateAllInstructions() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function iterateAllInstructions() defined in com::ibm::wala::cfg::IBasicBlock
   function toString() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses variable node defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
   function BasicBlockInContext(CGNode,IBasicBlock) in line 33
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable node defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
   variable delegate in line 29
   variable node in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cfg/CFGProvider.java
module com::ibm::wala::ipa::cfg::CFGProvider
   function getCFG(CGNode,WarningSet) in line 30
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cfg/DefaultCFGProvider.java
module com::ibm::wala::ipa::cfg::DefaultCFGProvider
   inherits from com::ibm::wala::ipa::cfg::CFGProvider
   function getCFG(CGNode,WarningSet) in line 33
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable callGraph defined in com::ibm::wala::ipa::cfg::DefaultCFGProvider
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getCFG(CGNode,WarningSet) defined in com::ibm::wala::ipa::cfg::CFGProvider
      uses variable cfgCache defined in com::ibm::wala::ipa::cfg::DefaultCFGProvider
      uses function findOrCreate(IMethod,Context,ClassHierarchy,WarningSet) defined in com::ibm::wala::cfg::CFGCache
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
   function DefaultCFGProvider(CallGraph,CFGCache) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfgCache defined in com::ibm::wala::ipa::cfg::DefaultCFGProvider
   variable callGraph in line 25
   variable cfgCache in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cfg/InterproceduralCFG.java
module com::ibm::wala::ipa::cfg::InterproceduralCFG
   inherits from com::ibm::wala::util::graph::NumberedGraph
   function addEdge(BasicBlockInContext,BasicBlockInContext) in line 670
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addEdgesFromExceptionalExitToReturn(CGNode,IBasicBlock,CGNode,TwoExitCFG) in line 385
      12 lines of code
      4 parameters
      3 conditional paths
      uses function getExceptionalExit() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function addEdgesFromExitToReturn(CGNode,IBasicBlock,CGNode,ControlFlowGraph) in line 461
      12 lines of code
      4 parameters
      3 conditional paths
      uses function exit() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function addEdgesFromNormalExitToReturn(CGNode,IBasicBlock,CGNode,TwoExitCFG) in line 425
      12 lines of code
      4 parameters
      3 conditional paths
      uses function getNormalExit() defined in com::ibm::wala::cfg::TwoExitCFG
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function addEdgesToEntryBlock(CGNode,IBasicBlock) in line 482
      43 lines of code
      2 parameters
      12 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable cg defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable relevant defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses variable P defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCFG(CGNode,WarningSet) defined in com::ibm::wala::ipa::cfg::CFGProvider
      uses variable warnings defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function makeCallSiteReference(ClassLoaderReference,int,IInvokeInstruction) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function getProgramCounter(int) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function addEdgesToNonEntryBlock(CGNode,ControlFlowGraph,IInstruction[],IBasicBlock) in line 260
      102 lines of code
      4 parameters
      23 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function makeCallSiteReference(ClassLoaderReference,int,IInvokeInstruction) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function getProgramCounter(int) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable relevant defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses variable P defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCFG(CGNode,WarningSet) defined in com::ibm::wala::ipa::cfg::CFGProvider
      uses variable warnings defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable partitionExits defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function representsNormalReturn(ControlFlowGraph,IBasicBlock,IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function representsExceptionalReturn(ControlFlowGraph,IBasicBlock,IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function addEdgesFromNormalExitToReturn(CGNode,IBasicBlock,CGNode,TwoExitCFG) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function addEdgesFromExceptionalExitToReturn(CGNode,IBasicBlock,CGNode,TwoExitCFG) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function addEdgesFromExitToReturn(CGNode,IBasicBlock,CGNode,ControlFlowGraph) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable CALL_TO_RETURN_EDGES defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function addNode(BasicBlockInContext) in line 601
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function addNodeForEachBasicBlock(ControlFlowGraph,CGNode) in line 533
      13 lines of code
      2 parameters
      4 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function hasCall(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable hasCallVector defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
      uses function getNumber(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function containsNode(BasicBlockInContext) in line 702
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function createEdges() in line 155
      31 lines of code
      0 parameters
      7 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable relevant defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses variable P defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCFG(CGNode,WarningSet) defined in com::ibm::wala::ipa::cfg::CFGProvider
      uses variable warnings defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable partitionExits defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getInstructions() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function entry() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function addEdgesToEntryBlock(CGNode,IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function addEdgesToNonEntryBlock(CGNode,ControlFlowGraph,IInstruction[],IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function createNodes() in line 190
      17 lines of code
      0 parameters
      5 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable relevant defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function addNodeForEachBasicBlock(ControlFlowGraph,CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getCallSites(BasicBlockInContext) in line 878
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable isCall defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getCallTargets(IBasicBlock) in line 748
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCGNode(IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getCallTargets(IBasicBlock,ControlFlowGraph,CGNode) in line 761
      12 lines of code
      3 parameters
      2 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getProgramCounter(int) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function makeCallSiteReference(ClassLoaderReference,int,IInvokeInstruction) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getMethod() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function getNumberOfTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
   function getCFG(CGNode) in line 212
      protection public
      35 lines of code
      1 parameters
      9 conditional paths
      uses variable P defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCFG(CGNode,WarningSet) defined in com::ibm::wala::ipa::cfg::CFGProvider
      uses variable warnings defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses variable partitionExits defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getCFG(IBasicBlock) in line 551
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getCGNode(IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getCGNode(IBasicBlock) in line 562
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getEntry(CGNode) in line 850
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function entry() defined in com::ibm::wala::cfg::ControlFlowGraph
   function getMaxNumber() in line 825
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getNode(int) in line 815
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getNumber(BasicBlockInContext) in line 807
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getNumberOfNodes() in line 592
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getPredNodeCount(BasicBlockInContext) in line 633
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getPredNodeNumbers(BasicBlockInContext) in line 846
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getPredNodes(BasicBlockInContext) in line 621
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getReturnSites(BasicBlockInContext) in line 861
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function isReturn(Object) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isEntryBlock() defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function getSuccNodes(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getSuccNodeCount(BasicBlockInContext) in line 657
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getSuccNodeNumbers(BasicBlockInContext) in line 838
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function getSuccNodes(BasicBlockInContext) in line 645
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function hasCall(BasicBlockInContext) in line 710
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function containsNode(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable hasCallVector defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
      uses function getNumber(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function hasCall(IBasicBlock,ControlFlowGraph) in line 723
      19 lines of code
      2 parameters
      4 conditional paths
      uses function getInstructions() defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getCGNode(IBasicBlock) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function hasEdge(BasicBlockInContext,BasicBlockInContext) in line 798
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function isReturn(Object) in line 898
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getCFG(CGNode) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getDelegate() defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
      uses function hasCall(BasicBlockInContext) defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function getNode() defined in com::ibm::wala::ipa::cfg::BasicBlockInContext
   function iterateNodes() in line 583
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function iterateNodes(IntSet) in line 829
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function makeCallSiteReference(ClassLoaderReference,int,IInvokeInstruction) in line 363
      protection public
      12 lines of code
      3 parameters
      2 conditional paths
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getInvocationCode() defined in com::ibm::wala::shrikeBT::IInvokeInstruction
   function removeAllIncidentEdges(BasicBlockInContext) in line 683
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(BasicBlockInContext,BasicBlockInContext) in line 674
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(BasicBlockInContext) in line 778
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeNode(BasicBlockInContext) in line 611
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(BasicBlockInContext) in line 574
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(BasicBlockInContext) in line 788
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function representsExceptionalReturn(ControlFlowGraph,IBasicBlock,IBasicBlock) in line 407
      8 lines of code
      3 parameters
      3 conditional paths
      uses function getExceptionalSuccessors(IBasicBlock) defined in com::ibm::wala::cfg::ControlFlowGraph
   function representsNormalReturn(ControlFlowGraph,IBasicBlock,IBasicBlock) in line 443
      8 lines of code
      3 parameters
      3 conditional paths
      uses function getNormalSuccessors(IBasicBlock) defined in com::ibm::wala::cfg::ControlFlowGraph
   function toString() in line 693
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function InterproceduralCFG(CallGraph,CFGCache,WarningSet) in line 111
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   function InterproceduralCFG(CallGraph,CFGProvider,Filter,boolean,WarningSet) in line 126
      protection public
      25 lines of code
      5 parameters
      3 conditional paths
      uses variable P defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable relevant defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable warnings defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable partitionExits defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function createNodes() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses function createEdges() defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
      uses variable DEBUG_LEVEL defined in com::ibm::wala::ipa::cfg::InterproceduralCFG
   variable CALL_TO_RETURN_EDGES in line 63
   variable cg in line 73
   variable DEBUG_LEVEL in line 58
   variable G in line 68
   variable hasCallVector in line 99
   variable isCall in line 892
   variable P in line 84
   variable partitionExits in line 79
   variable relevant in line 89
   variable warnings in line 94
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cha/CancelCHAConstructionException.java
module com::ibm::wala::ipa::cha::CancelCHAConstructionException
   inherits from com::ibm::wala::ipa::cha::ClassHierarchyException
   function CancelCHAConstructionException() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function get(final String) defined in com::ibm::wala::util::internationalization::IStringBundle
   variable serialVersionUID in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cha/ClassHierarchy.java
module com::ibm::wala::ipa::cha::ClassHierarchy
   function addAllClasses(IClassLoader,IProgressMonitor) in line 195
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function addClass(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable root defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function addClass(IClass) in line 218
      protection public
      76 lines of code
      1 parameters
      17 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function computeSuperclasses(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getAllImplementedInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeReference,String) defined in com::ibm::wala::ipa::cha::ClassHierarchy::ClassExclusion
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function findOrCreateNode(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable rootDescriptor defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable root defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function recordImplements(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function computeOverriders(Node,Selector) in line 516
      13 lines of code
      2 parameters
      3 conditional paths
      uses function findMethod(IClass,Selector) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function computePossibleTargets(IClass,MethodReference) in line 358
      22 lines of code
      2 parameters
      5 conditional paths
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses variable implementors defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function computeTargetsNotInterface(MethodReference,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function computeSubClasses(TypeReference) in line 906
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangError defined in com::ibm::wala::types::TypeReference
      uses variable subclassesOfError defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function computeSubClassesInternal(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function computeSubClassesInternal(IClass) in line 948
      18 lines of code
      1 parameters
      5 conditional paths
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function findNode(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function computeSuperclasses(IClass) in line 127
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function computeTargetsNotInterface(MethodReference,IClass) in line 392
      23 lines of code
      2 parameters
      3 conditional paths
      uses function findNode(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function computeOverriders(Node,Selector) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function findMethod(IClass,Selector) in line 502
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
   function findNode(IClass) in line 530
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function findOrCreateNode(IClass) in line 534
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function findOrCreateTargetSet(IClass,MethodReference) in line 337
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable targetCache defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function computePossibleTargets(IClass,MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getFactory() in line 661
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getImmediateSubclasses(IClass) in line 1039
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
      uses function findNode(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses variable children defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function getImplementors(TypeReference) in line 984
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable implementors defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getJavaLangErrorTypes() in line 930
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable subTypeRefsOfError defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangError defined in com::ibm::wala::types::TypeReference
      uses variable subclassesOfError defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function getLeastCommonSuperclass(IClass,IClass) in line 671
      protection public
      39 lines of code
      2 parameters
      11 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Null defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable map defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSuperclasses(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function getLeastCommonSuperclass(TypeReference,TypeReference) in line 720
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getLeastCommonSuperclass(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function getLoader(ClassLoaderReference) in line 1012
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable loaders defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function equals(Object) defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function getLoaders() in line 1008
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loaders defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getNumber(IClass) in line 1103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getNumberOfClasses() in line 1004
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getNumberOfImmediateSubclasses(IClass) in line 1030
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findNode(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses variable children defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function getPossibleTargets(MethodReference) in line 313
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getLoader(ClassLoaderReference,ClassHierarchy,AnalysisScope) defined in com::ibm::wala::classLoader::ClassLoaderFactory
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function findOrCreateTargetSet(IClass,MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getRootClass() in line 1099
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getScope() in line 1022
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function getSuperclasses(IClass) in line 711
      8 lines of code
      1 parameters
      2 conditional paths
   function implementsInterface(IClass,TypeReference) in line 882
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses variable implementors defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function isInterface(TypeReference) in line 967
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
   function isSubclassOf(IClass,IClass) in line 812
      protection public
      61 lines of code
      2 parameters
      13 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable map defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable left defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses function slowIsSubclass(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable right defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function isSyntheticClass(IClass) in line 805
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getLoader(ClassLoaderReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable syntheticLoaderRef defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function iterateAllClasses() in line 996
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function lookupClass(TypeReference) in line 737
      protection public
      38 lines of code
      1 parameters
      11 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses variable loaders defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function equals(Object) defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses variable DEBUG defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function findNode(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function isArrayClass() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getInnermostElementType() defined in com::ibm::wala::types::TypeReference
   function make(AnalysisScope,WarningSet) in line 1064
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getExclusions() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function make(AnalysisScope,WarningSet,IProgressMonitor) in line 1068
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function make(AnalysisScope,WarningSet) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getExclusions() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function make(AnalysisScope,ClassLoaderFactory,WarningSet) in line 1079
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function ClassHierarchy(AnalysisScope,ClassLoaderFactory,WarningSet,IProgressMonitor) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function make(AnalysisScope,ClassLoaderFactory,WarningSet,IProgressMonitor) in line 1084
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function ClassHierarchy(AnalysisScope,ClassLoaderFactory,WarningSet,IProgressMonitor) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function make(AnalysisScope,ClassLoaderFactory,WarningSet,TypeReference) in line 1089
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function ClassHierarchy(AnalysisScope,ClassLoaderFactory,WarningSet,IProgressMonitor) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable rootDescriptor defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function make(AnalysisScope,ClassLoaderFactory,WarningSet,TypeReference,IProgressMonitor) in line 1094
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function ClassHierarchy(AnalysisScope,ClassLoaderFactory,WarningSet,IProgressMonitor) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable rootDescriptor defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function numberTree() in line 567
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable root defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function visitForNumbering(Node) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function recordImplements(IClass,IClass) in line 301
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable implementors defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function recursiveStringify(Node,StringBuffer) in line 549
      7 lines of code
      2 parameters
      2 conditional paths
      uses function toString() defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function resolveField(FieldReference) in line 436
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getType() defined in com::ibm::wala::types::MemberReference
   function resolveField(IClass,FieldReference) in line 451
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getField(Atom) defined in com::ibm::wala::classLoader::IClass
      uses function getName() defined in com::ibm::wala::types::MemberReference
   function resolveMethod(MethodReference) in line 423
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function resolveMethod(IClass,Selector) in line 465
      protection public
      27 lines of code
      2 parameters
      7 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function findMethod(IClass,Selector) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
      uses variable DEBUG defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function slowIsSubclass(IClass,IClass) in line 785
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function toString() in line 543
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function recursiveStringify(Node,StringBuffer) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable root defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function visitForNumbering(Node) in line 574
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable left defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses variable nextNumber defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable children defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses variable right defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function ClassHierarchy(AnalysisScope,ClassLoaderFactory,WarningSet,IProgressMonitor) in line 147
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
   function ClassHierarchy(AnalysisScope,ClassLoaderFactory,WarningSet,TypeReference,IProgressMonitor) in line 159
      32 lines of code
      5 parameters
      4 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable factory defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable rootDescriptor defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable loaders defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getNumberOfLoaders() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getLoaders() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getLoader(ClassLoaderReference,ClassHierarchy,AnalysisScope) defined in com::ibm::wala::classLoader::ClassLoaderFactory
      uses function addAllClasses(IClassLoader,IProgressMonitor) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function numberTree() defined in com::ibm::wala::ipa::cha::ClassHierarchy
   variable DEBUG in line 60
   variable factory in line 80
   variable implementors in line 108
   variable loaders in line 87
   variable map in line 70
   variable nextNumber in line 565
   variable root in line 75
   variable rootDescriptor in line 65
   variable scope in line 102
   variable subclassesOfError in line 113
   variable subTypeRefsOfError in line 118
   variable syntheticLoaderName in line 801
   variable syntheticLoaderRef in line 803
   variable targetCache in line 97
   variable warnings in line 92
module com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function equals(Object) in line 650
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 641
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function toString() in line 624
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses variable children defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
      uses function toString() defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   variable children in line 593
   variable klass in line 591
   variable left in line 600
   variable right in line 602
module com::ibm::wala::ipa::cha::ClassHierarchy::ClassExclusion
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeReference,String) in line 1128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
   function getMsg() in line 1124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::ipa::cha::ClassHierarchy::Node
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/analysis/ClassHierarchy.java
module com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function checkSubtypeOfHierarchy(ClassHierarchyProvider,String,String) in line 136
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
      uses variable YES defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses function checkSupertypesContain(ClassHierarchyProvider,String,String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable MAYBE defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses function checkSubtypesContain(ClassHierarchyProvider,String,String,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function checkSubtypesContain(ClassHierarchyProvider,String,String,HashSet< String >) in line 105
      30 lines of code
      4 parameters
      8 conditional paths
      uses function isInterface(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses variable NO defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable YES defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses function getSubClasses(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses variable MAYBE defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function checkSuperinterfacesContain(ClassHierarchyProvider,String,String,HashSet< String >) in line 43
      25 lines of code
      4 parameters
      7 conditional paths
      uses function getSuperInterfaces(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses variable MAYBE defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable NO defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable YES defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function checkSupertypesContain(ClassHierarchyProvider,String,String) in line 69
      35 lines of code
      3 parameters
      9 conditional paths
      uses variable NO defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses function getSuperClass(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
      uses variable MAYBE defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable YES defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses function isInterface(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses function checkSuperinterfacesContain(ClassHierarchyProvider,String,String,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function collectDominatingSuperClasses(ClassHierarchyProvider,String,HashSet< String >,HashSet< String >) in line 234
      13 lines of code
      4 parameters
      3 conditional paths
      uses function getSuperClass(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
   function collectDominatingSuperInterfaces(ClassHierarchyProvider,String,HashSet< String >,HashSet< String >) in line 268
      12 lines of code
      4 parameters
      3 conditional paths
      uses function getSuperClass(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses function collectDominatingSuperInterfacesFromClass(ClassHierarchyProvider,String,HashSet< String >,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function collectDominatingSuperInterfacesFromClass(ClassHierarchyProvider,String,HashSet< String >,HashSet< String >) in line 248
      19 lines of code
      4 parameters
      5 conditional paths
      uses function getSuperInterfaces(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses function insertSuperInterfaces(ClassHierarchyProvider,String,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function findCommonSupertype(ClassHierarchyProvider,String,String) in line 360
      protection public
      54 lines of code
      3 parameters
      15 conditional paths
      uses variable TYPE_unknown defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_null defined in com::ibm::wala::shrikeBT::Constants
      uses function findCommonSupertypeHierarchy(ClassHierarchyProvider,String,String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
   function findCommonSupertypeHierarchy(ClassHierarchyProvider,String,String) in line 281
      65 lines of code
      3 parameters
      13 conditional paths
      uses function isSubtypeOf(ClassHierarchyProvider,String,String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable YES defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
      uses function insertSuperClasses(ClassHierarchyProvider,String,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses function insertSuperClassInterfaces(ClassHierarchyProvider,String,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses function collectDominatingSuperClasses(ClassHierarchyProvider,String,HashSet< String >,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable TYPE_unknown defined in com::ibm::wala::shrikeBT::Constants
      uses function collectDominatingSuperInterfaces(ClassHierarchyProvider,String,HashSet< String >,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function insertSuperClasses(ClassHierarchyProvider,String,HashSet< String >) in line 211
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getSuperClass(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
   function insertSuperClassInterfaces(ClassHierarchyProvider,String,HashSet< String >) in line 222
      11 lines of code
      3 parameters
      3 conditional paths
      uses function getSuperClass(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
      uses function insertSuperInterfaces(ClassHierarchyProvider,String,HashSet< String >) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function insertSuperInterfaces(ClassHierarchyProvider,String,HashSet< String >) in line 192
      18 lines of code
      3 parameters
      5 conditional paths
      uses function getSuperInterfaces(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
   function isSubtypeOf(ClassHierarchyProvider,String,String) in line 159
      protection public
      32 lines of code
      3 parameters
      11 conditional paths
      uses variable NO defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable YES defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable TYPE_unknown defined in com::ibm::wala::shrikeBT::Constants
      uses variable MAYBE defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable TYPE_null defined in com::ibm::wala::shrikeBT::Constants
      uses function checkSubtypeOfHierarchy(ClassHierarchyProvider,String,String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
   function ClassHierarchy() in line 27
      2 lines of code
      0 parameters
      1 conditional paths
   variable MAYBE in line 41
      protection public
   variable NO in line 33
      protection public
   variable YES in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cha/ClassHierarchyException.java
module com::ibm::wala::ipa::cha::ClassHierarchyException
   inherits from com::ibm::wala::util::warnings::WalaException
   function ClassHierarchyException(String) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cha/ClassHierarchyStats.java
module com::ibm::wala::ipa::cha::ClassHierarchyStats
   function printStats(ClassHierarchy) in line 27
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getLoaders() defined in com::ibm::wala::ipa::cha::ClassHierarchy
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/cha/ClassHierarchyWarning.java
module com::ibm::wala::ipa::cha::ClassHierarchyWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/modref/ArrayLengthKey.java
module com::ibm::wala::ipa::modref::ArrayLengthKey
   inherits from com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function equals(Object) in line 29
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ArrayLengthKey(InstanceKey) defined in com::ibm::wala::ipa::modref::ArrayLengthKey
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function hashCode() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
   function ArrayLengthKey(InstanceKey) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/modref/DelegatingExtendedHeapModel.java
module com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
   inherits from com::ibm::wala::ipa::modref::ExtendedHeapModel
   function getClassHierarchy() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
   function getFilteredPointerKeyForLocal(CGNode,int,IClass) in line 47
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getFilteredPointerKeyForLocal(CGNode,int,InstanceKey) in line 51
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getFilteredPointerKeyForLocal(CGNode,int,IClass) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getInstanceKeyForAllocation(CGNode,NewSiteReference) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForClassObject(TypeReference) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getInstanceKeyForClassObject(TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForConstant(Object) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getInstanceKeyForConstant(Object) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) in line 67
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) in line 71
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getInstanceKeyForPEI(CGNode,ProgramCounter,TypeReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function getPointerKeyForArrayContents(InstanceKey) in line 75
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForArrayLength(InstanceKey) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPointerKeyForExceptionalReturnValue(CGNode) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getPointerKeyForExceptionalReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForInstanceField(InstanceKey,IField) in line 84
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForLocal(CGNode,int) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForReturnValue(CGNode) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getPointerKeyForReturnValue(CGNode) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getPointerKeyForStaticField(IField) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function getStringConstantForInstanceKey(InstanceKey) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function getStringConstantForInstanceKey(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
   function iteratePointerKeys() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
      uses function iteratePointerKeys() defined in com::ibm::wala::ipa::callgraph::propagation::HeapModel
   function DelegatingExtendedHeapModel(HeapModel) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::DelegatingExtendedHeapModel
   variable h in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/modref/ExtendedHeapModel.java
module com::ibm::wala::ipa::modref::ExtendedHeapModel
   inherits from com::ibm::wala::ipa::callgraph::propagation::HeapModel
   function getPointerKeyForArrayLength(InstanceKey) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/modref/GenReach.java
module com::ibm::wala::ipa::modref::GenReach
   inherits from com::ibm::wala::dataflow::graph::BitVectorFramework
   function makeDomain(Map< T, Collection< L >>) in line 43
      9 lines of code
      1 parameters
      1 conditional paths
   function GenReach(Graph< T >,Map< T, Collection< L >>) in line 36
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
module com::ibm::wala::ipa::modref::GenReach::GenFunctions
   inherits from com::ibm::wala::dataflow::graph::ITransferFunctionProvider
   function getEdgeTransferFunction(T,T) in line 92
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getGen(T) in line 71
      12 lines of code
      1 parameters
      1 conditional paths
   function getMeetOperator() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNodeTransferFunction(T) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function hasEdgeTransferFunctions() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasNodeTransferFunctions() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function GenFunctions(Map< T, Collection< L >>) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable domain in line 56
   variable gen in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/modref/ModRef.java
module com::ibm::wala::ipa::modref::ModRef
   function computeMod(CallGraph,PointerAnalysis,HeapExclusions) in line 60
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function scanForMod(CallGraph,PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::modref::ModRef
      uses function transitiveClosure(CallGraph,Map< CGNode, Collection< PointerKey >>) defined in com::ibm::wala::ipa::modref::ModRef
   function computeMod(CallGraph,PointerAnalysis) in line 80
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function computeMod(CallGraph,PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::modref::ModRef
   function computeRef(CallGraph,PointerAnalysis,HeapExclusions) in line 70
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function scanForRef(CallGraph,PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::modref::ModRef
      uses function transitiveClosure(CallGraph,Map< CGNode, Collection< PointerKey >>) defined in com::ibm::wala::ipa::modref::ModRef
   function computeRef(CallGraph,PointerAnalysis) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function computeRef(CallGraph,PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::modref::ModRef
   function getMod(CGNode,ExtendedHeapModel,PointerAnalysis,SSAInstruction,HeapExclusions) in line 320
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
      uses function filter(Collection< PointerKey >) defined in com::ibm::wala::ipa::slicer::HeapExclusions
   function getRef(CGNode,ExtendedHeapModel,PointerAnalysis,SSAInstruction,HeapExclusions) in line 328
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function RefVisitor(CGNode,Collection< PointerKey >,PointerAnalysis,ExtendedHeapModel) defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
      uses function filter(Collection< PointerKey >) defined in com::ibm::wala::ipa::slicer::HeapExclusions
   function scanForMod(CallGraph,PointerAnalysis,HeapExclusions) in line 112
      8 lines of code
      3 parameters
      2 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function scanNodeForMod(final CGNode,final PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::modref::ModRef
   function scanForRef(CallGraph,PointerAnalysis,HeapExclusions) in line 127
      8 lines of code
      3 parameters
      2 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function scanNodeForRef(final CGNode,final PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::modref::ModRef
   function scanNodeForMod(final CGNode,final PointerAnalysis,HeapExclusions) in line 142
      15 lines of code
      3 parameters
      4 conditional paths
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function iterateNormalInstructions() defined in com::ibm::wala::ssa::IR
      uses function filter(Collection< PointerKey >) defined in com::ibm::wala::ipa::slicer::HeapExclusions
   function scanNodeForRef(final CGNode,final PointerAnalysis,HeapExclusions) in line 162
      15 lines of code
      3 parameters
      4 conditional paths
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function iterateNormalInstructions() defined in com::ibm::wala::ssa::IR
      uses function filter(Collection< PointerKey >) defined in com::ibm::wala::ipa::slicer::HeapExclusions
   function transitiveClosure(CallGraph,Map< CGNode, Collection< PointerKey >>) in line 93
      12 lines of code
      2 parameters
      2 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getValue() defined in com::ibm::wala::fixpoint::BitVectorVariable
module com::ibm::wala::ipa::modref::ModRef::RefVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function visitArrayLength(SSAArrayLengthInstruction) in line 195
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForArrayLength(InstanceKey) defined in com::ibm::wala::ipa::modref::ExtendedHeapModel
   function visitArrayLoad(SSAArrayLoadInstruction) in line 203
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function visitGet(SSAGetInstruction) in line 211
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function resolveField(FieldReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function RefVisitor(CGNode,Collection< PointerKey >,PointerAnalysis,ExtendedHeapModel) in line 187
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
   variable h in line 185
   variable n in line 179
   variable pa in line 183
   variable result in line 181
module com::ibm::wala::ipa::modref::ModRef::ModVisitor
   inherits from com::ibm::wala::ssa::SSAInstruction::Visitor
   function visitArrayStore(SSAArrayStoreInstruction) in line 297
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function visitNew(SSANewInstruction) in line 243
      protection public
      52 lines of code
      1 parameters
      10 conditional paths
      uses function getConcreteType() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getDimensionality() defined in com::ibm::wala::types::TypeReference
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getInstanceKeyForMultiNewArray(CGNode,NewSiteReference,int) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getNewSite() defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getPointerKeyForArrayContents(InstanceKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForArrayLength(InstanceKey) defined in com::ibm::wala::ipa::modref::ExtendedHeapModel
      uses function getInstanceKeyForAllocation(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKeyFactory
      uses variable IGNORE_ALLOC_HEAP_DEFS defined in com::ibm::wala::ipa::slicer::PDG
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getAllInstanceFields() defined in com::ibm::wala::classLoader::IClass
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function visitPut(SSAPutInstruction) in line 305
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function resolveField(FieldReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getPointerKeyForStaticField(IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses function getPointerKeyForLocal(CGNode,int) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getPointsToSet(PointerKey) defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses function getPointerKeyForInstanceField(InstanceKey,IField) defined in com::ibm::wala::ipa::callgraph::propagation::PointerKeyFactory
   function ModVisitor(CGNode,Collection< PointerKey >,ExtendedHeapModel,PointerAnalysis) in line 235
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable result defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable h defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
      uses variable pa defined in com::ibm::wala::ipa::modref::ModRef::RefVisitor
   variable h in line 231
   variable n in line 227
   variable pa in line 233
   variable result in line 229
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/GetCaughtExceptionStatement.java
module com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
   inherits from com::ibm::wala::ipa::slicer::Statement
   function equals(Object) in line 36
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function GetCaughtExceptionStatement(CGNode,SSAGetCaughtExceptionInstruction) defined in com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable st defined in com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInstruction
   function getInstruction() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable st defined in com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
   function getKind() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CATCH defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable st defined in com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
      uses function hashCode() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable st defined in com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
   function GetCaughtExceptionStatement(CGNode,SSAGetCaughtExceptionInstruction) in line 25
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable st defined in com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
   variable st in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/HeapExclusions.java
module com::ibm::wala::ipa::slicer::HeapExclusions
   function excludes(PointerKey) in line 107
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getType(PointerKey) defined in com::ibm::wala::ipa::slicer::HeapExclusions
   function filter(Collection< PointerKey >) in line 49
      protection public
      37 lines of code
      1 parameters
      9 conditional paths
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable VERBOSE defined in com::ibm::wala::ipa::slicer::HeapExclusions
      uses function verboseAction(PointerKey) defined in com::ibm::wala::ipa::slicer::HeapExclusions
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
   function getType(PointerKey) in line 112
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
   function verboseAction(PointerKey) in line 87
      19 lines of code
      1 parameters
      6 conditional paths
      uses function getInstanceKey() defined in com::ibm::wala::ipa::callgraph::propagation::AbstractFieldPointerKey
      uses function getConcreteType() defined in com::ibm::wala::ipa::callgraph::propagation::InstanceKey
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable considered defined in com::ibm::wala::ipa::slicer::HeapExclusions
      uses function getField() defined in com::ibm::wala::ipa::callgraph::propagation::StaticFieldKey
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
   function HeapExclusions(SetOfClasses) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable considered in line 37
   variable set in line 39
   variable VERBOSE in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/HeapReachingDefs.java
module com::ibm::wala::ipa::slicer::HeapReachingDefs
   function allCalleesMod(ReturnCaller,Map< CGNode, OrdinalSet< PointerKey >>) in line 360
      12 lines of code
      2 parameters
      4 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCall() defined in com::ibm::wala::ipa::slicer::HeapStatement::ReturnCaller
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
   function computeReachingDefs(CGNode,IR,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,Collection< Statement >,HeapExclusions) in line 76
      protection public
      39 lines of code
      6 parameters
      4 conditional paths
      uses variable VERBOSE defined in com::ibm::wala::ipa::slicer::HeapReachingDefs
      uses function createStatementDomain(Collection< Statement >) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs
      uses function mapInstructionsToStatements(OrdinalSetMapping< Statement >) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs
      uses function solve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function makeResult(BitVectorSolver< IBasicBlock >,OrdinalSetMapping< Statement >,CGNode,ExtendedHeapModel,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,ExpandedControlFlowGraph,Map< SSAInstruction, NormalStatement >,HeapExclusions) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
   function createStatementDomain(Collection< Statement >) in line 417
      5 lines of code
      1 parameters
      1 conditional paths
   function getMod(Statement,CGNode,ExtendedHeapModel,PointerAnalysis,HeapExclusions) in line 373
      29 lines of code
      5 parameters
      16 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function toString() defined in com::ibm::wala::ipa::slicer::Statement
   function makeResult(BitVectorSolver< IBasicBlock >,OrdinalSetMapping< Statement >,CGNode,ExtendedHeapModel,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,ExpandedControlFlowGraph,Map< SSAInstruction, NormalStatement >,HeapExclusions) in line 346
      7 lines of code
      9 parameters
      1 conditional paths
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
   function mapInstructionsToStatements(OrdinalSetMapping< Statement >) in line 406
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
   variable VERBOSE in line 69
module com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
   inherits from java::util::Map
   function clear() in line 189
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function computeResult(Statement,Map< PointerKey, MutableIntSet >,BitVectorSolver< IBasicBlock >,OrdinalSetMapping< Statement >,CGNode,ExtendedHeapModel,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,ExpandedControlFlowGraph,Map< SSAInstruction, NormalStatement >) in line 261
      75 lines of code
      10 parameters
      22 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
      uses function getBlockForInstruction(int) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructionIndex() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function getIn(Object) defined in com::ibm::wala::dataflow::graph::DataflowSolver
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getValue() defined in com::ibm::wala::fixpoint::BitVectorVariable
      uses variable exit defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function allCalleesMod(ReturnCaller,Map< CGNode, OrdinalSet< PointerKey >>) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs
   function containsKey(Object) in line 194
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsValue(Object) in line 199
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function eagerPopulate(Map< PointerKey, MutableIntSet >,BitVectorSolver< IBasicBlock >,OrdinalSetMapping< Statement >,CGNode,ExtendedHeapModel,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,ExpandedControlFlowGraph,Map< SSAInstruction, NormalStatement >) in line 138
      8 lines of code
      9 parameters
      2 conditional paths
      uses function computeResult(Statement,Map< PointerKey, MutableIntSet >,BitVectorSolver< IBasicBlock >,OrdinalSetMapping< Statement >,CGNode,ExtendedHeapModel,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,ExpandedControlFlowGraph,Map< SSAInstruction, NormalStatement >) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
   function entrySet() in line 204
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 209
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function findOrCreateIntSet(Map< PointerKey, MutableIntSet >,PointerKey) in line 180
      8 lines of code
      2 parameters
      2 conditional paths
   function get(Object) in line 214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 218
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function initPointerKeyMod(OrdinalSetMapping< Statement >,CGNode,ExtendedHeapModel,PointerAnalysis) in line 155
      24 lines of code
      4 parameters
      5 conditional paths
      uses function findOrCreateIntSet(Map< PointerKey, MutableIntSet >,PointerKey) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function getMod(Statement,CGNode,ExtendedHeapModel,PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
   function isEmpty() in line 223
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function keySet() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function put(Statement,OrdinalSet< Statement >) in line 232
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function putAll(Map<?extends Statement,?extends OrdinalSet< Statement >>) in line 237
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function remove(Object) in line 242
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function size() in line 247
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function values() in line 252
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable exclusions in line 119
module com::ibm::wala::ipa::slicer::HeapReachingDefs::RD
   inherits from com::ibm::wala::dataflow::graph::ITransferFunctionProvider
   function getEdgeTransferFunction(IBasicBlock,IBasicBlock) in line 473
      protection public
      26 lines of code
      2 parameters
      5 conditional paths
      uses function getInstruction() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function getNormalSuccessors(IBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getMeetOperator() in line 500
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNodeTransferFunction(IBasicBlock) in line 504
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function hasEdgeTransferFunctions() in line 509
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasNodeTransferFunctions() in line 513
      protection public
      3 lines of code
      0 parameters
      5 conditional paths
      uses function isEntryBlock() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function getInstruction() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function getRelated(int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
      uses function getMappedIndex(T) defined in com::ibm::wala::util::intset::OrdinalSetMapping
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
   function heapEntryStatements() in line 548
      9 lines of code
      0 parameters
      9 conditional paths
      uses variable HEAP_PARAM_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function add(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function getInstruction() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
      uses function getMod(Statement,CGNode,ExtendedHeapModel,PointerAnalysis,HeapExclusions) defined in com::ibm::wala::ipa::slicer::HeapReachingDefs
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
      uses function getMappedIndex(T) defined in com::ibm::wala::util::intset::OrdinalSetMapping
   function initHeapReturnCaller() in line 461
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable HEAP_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function add(int,int) defined in com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function RD(CGNode,ExpandedControlFlowGraph,PointerAnalysis,OrdinalSetMapping< Statement >,Map< SSAInstruction, NormalStatement >,HeapExclusions) in line 449
      protection public
      11 lines of code
      6 parameters
      1 conditional paths
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::HeapReachingDefs::RDMap
   variable cfg in line 430
   variable domain in line 432
   variable exclusions in line 440
   variable h in line 436
   variable heapReturnCaller in line 447
   variable node in line 428
   variable pa in line 434
   variable ssaInstruction2Statement in line 438
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/HeapStatement.java
module com::ibm::wala::ipa::slicer::HeapStatement
   inherits from com::ibm::wala::ipa::slicer::Statement
   abstract class
   function getLocation() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loc defined in com::ibm::wala::ipa::slicer::HeapStatement
   function HeapStatement(CGNode,PointerKey) in line 21
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable loc defined in com::ibm::wala::ipa::slicer::HeapStatement
   variable loc in line 19
module com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
   inherits from com::ibm::wala::ipa::slicer::HeapStatement
   function equals(Object) in line 56
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function ParamCaller(CGNode,SSAInvokeInstruction,PointerKey) defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function getCall() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function getCall() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable call defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
   function getKind() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable HEAP_PARAM_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function getCall() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
      uses function hashCode() defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses variable call defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
   function ParamCaller(CGNode,SSAInvokeInstruction,PointerKey) in line 31
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable loc defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses variable call defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
   variable call in line 29
module com::ibm::wala::ipa::slicer::HeapStatement::ParamCallee
   inherits from com::ibm::wala::ipa::slicer::HeapStatement
   function equals(Object) in line 83
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function ParamCallee(CGNode,PointerKey) defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCallee
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
   function getKind() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable HEAP_PARAM_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCallee
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
   function ParamCallee(CGNode,PointerKey) in line 68
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable loc defined in com::ibm::wala::ipa::slicer::HeapStatement
module com::ibm::wala::ipa::slicer::HeapStatement::ReturnCaller
   inherits from com::ibm::wala::ipa::slicer::HeapStatement
   function equals(Object) in line 127
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function getCall() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses function getCall() defined in com::ibm::wala::ipa::slicer::HeapStatement::ReturnCaller
   function getCall() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable call defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
   function getKind() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable HEAP_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function getCall() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
      uses function hashCode() defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCallee
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses variable call defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
   function ReturnCaller(CGNode,SSAInvokeInstruction,PointerKey) in line 102
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable loc defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses variable call defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCaller
   variable call in line 100
module com::ibm::wala::ipa::slicer::HeapStatement::ReturnCallee
   inherits from com::ibm::wala::ipa::slicer::HeapStatement
   function equals(Object) in line 154
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
   function getKind() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable HEAP_RET_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::HeapStatement::ParamCallee
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
   function ReturnCallee(CGNode,PointerKey) in line 139
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable loc defined in com::ibm::wala::ipa::slicer::HeapStatement
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/ISDG.java
module com::ibm::wala::ipa::slicer::ISDG
   inherits from com::ibm::wala::util::graph::NumberedGraph
   function getCOptions() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPDG(CGNode) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function iterateLazyNodes() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/MethodEntryStatement.java
module com::ibm::wala::ipa::slicer::MethodEntryStatement
   inherits from com::ibm::wala::ipa::slicer::Statement
   function equals(Object) in line 29
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function MethodEntryStatement(CGNode) defined in com::ibm::wala::ipa::slicer::MethodEntryStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function getKind() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable METHOD_ENTRY defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::MethodEntryStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::MethodEntryStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function MethodEntryStatement(CGNode) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/NormalStatement.java
module com::ibm::wala::ipa::slicer::NormalStatement
   inherits from com::ibm::wala::ipa::slicer::Statement
   function equals(Object) in line 39
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function NormalStatement(CGNode,int) defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable instructionIndex defined in com::ibm::wala::ipa::slicer::NormalStatement
   function getInstruction() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses variable instructionIndex defined in com::ibm::wala::ipa::slicer::NormalStatement
   function getInstructionIndex() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructionIndex defined in com::ibm::wala::ipa::slicer::NormalStatement
   function getKind() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NORMAL defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructionIndex defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getSignature() defined in com::ibm::wala::classLoader::IMethod
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAInstruction
   function NormalStatement(CGNode,int) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable instructionIndex defined in com::ibm::wala::ipa::slicer::NormalStatement
   variable instructionIndex in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/ParamStatement.java
module com::ibm::wala::ipa::slicer::ParamStatement
   inherits from com::ibm::wala::ipa::slicer::Statement
   abstract class
   function ParamStatement(CGNode) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
module com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
   function getValueNumber() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::slicer::ParamStatement::CallStatementCarrier
   function getCall() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ipa::slicer::ParamStatement::ParamCaller
   inherits from com::ibm::wala::ipa::slicer::ParamStatement
   inherits from com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
   inherits from com::ibm::wala::ipa::slicer::ParamStatement::CallStatementCarrier
   function equals(Object) in line 66
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable valueNumber defined in com::ibm::wala::ipa::slicer::ParamStatement::ParamCaller
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable call defined in com::ibm::wala::ipa::slicer::ParamStatement::ParamCaller
   function getCall() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable PARAM_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function getValueNumber() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function hashCode() defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function toString() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getValueNumber() defined in com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
   function ParamCaller(CGNode,SSAInvokeInstruction,int) in line 41
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
   variable call in line 37
   variable valueNumber in line 39
module com::ibm::wala::ipa::slicer::ParamStatement::ParamCallee
   inherits from com::ibm::wala::ipa::slicer::ParamStatement
   inherits from com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
   function equals(Object) in line 100
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable valueNumber defined in com::ibm::wala::ipa::slicer::ParamStatement::ParamCallee
   function getKind() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable PARAM_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function getValueNumber() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function ParamCallee(CGNode,int) in line 85
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
   variable valueNumber in line 83
module com::ibm::wala::ipa::slicer::ParamStatement::NormalReturnCaller
   inherits from com::ibm::wala::ipa::slicer::ParamStatement
   inherits from com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
   inherits from com::ibm::wala::ipa::slicer::ParamStatement::CallStatementCarrier
   function equals(Object) in line 150
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable valueNumber defined in com::ibm::wala::ipa::slicer::ParamStatement::NormalReturnCaller
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable call defined in com::ibm::wala::ipa::slicer::ParamStatement::NormalReturnCaller
   function getCall() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NORMAL_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function getValueNumber() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function hashCode() defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function toString() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function NormalReturnCaller(CGNode,SSAInvokeInstruction) in line 125
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses function getDef() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   variable call in line 121
   variable valueNumber in line 123
module com::ibm::wala::ipa::slicer::ParamStatement::ExceptionalReturnCaller
   inherits from com::ibm::wala::ipa::slicer::ParamStatement
   inherits from com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
   inherits from com::ibm::wala::ipa::slicer::ParamStatement::CallStatementCarrier
   function equals(Object) in line 195
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable valueNumber defined in com::ibm::wala::ipa::slicer::ParamStatement::ExceptionalReturnCaller
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable call defined in com::ibm::wala::ipa::slicer::ParamStatement::ExceptionalReturnCaller
   function getCall() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EXC_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function getValueNumber() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function hashCode() defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function toString() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function ExceptionalReturnCaller(CGNode,SSAInvokeInstruction) in line 170
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   variable call in line 166
   variable valueNumber in line 168
module com::ibm::wala::ipa::slicer::ParamStatement::NormalReturnCallee
   inherits from com::ibm::wala::ipa::slicer::ParamStatement
   function equals(Object) in line 222
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function getKind() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NORMAL_RET_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 237
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function NormalReturnCallee(CGNode) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
module com::ibm::wala::ipa::slicer::ParamStatement::ExceptionalReturnCallee
   inherits from com::ibm::wala::ipa::slicer::ParamStatement
   function equals(Object) in line 254
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function getKind() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EXC_RET_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function hashCode() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function ExceptionalReturnCallee(CGNode) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/PDG.java
module com::ibm::wala::ipa::slicer::PDG
   inherits from com::ibm::wala::util::graph::impl::SlowSparseNumberedGraph
   function addParamPassingStatements(SSAInvokeInstruction,Map< CGNode, OrdinalSet< PointerKey >>,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) in line 796
      38 lines of code
      4 parameters
      7 conditional paths
      uses variable callerParamStatements defined in com::ibm::wala::ipa::slicer::PDG
      uses variable callerReturnStatements defined in com::ibm::wala::ipa::slicer::PDG
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getDeclaredResultType() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function isIgnoreExceptions() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function isIgnoreHeap() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function unionHeapLocations(CGNode,SSAInvokeInstruction,Map< CGNode, OrdinalSet< PointerKey >>) defined in com::ibm::wala::ipa::slicer::PDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
   function computeIncomingHeapDependencies(Statement) in line 893
      19 lines of code
      1 parameters
      8 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable IGNORE_ALLOC_HEAP_DEFS defined in com::ibm::wala::ipa::slicer::PDG
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses variable h defined in com::ibm::wala::ipa::slicer::PDG
      uses variable pa defined in com::ibm::wala::ipa::slicer::PDG
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::PDG
      uses function createHeapDataDependenceEdges(final PointerKey,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
   function computeInstructionIndices(IR) in line 617
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function computeOutgoingHeapDependencies(Statement) in line 913
      19 lines of code
      1 parameters
      8 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable IGNORE_ALLOC_HEAP_DEFS defined in com::ibm::wala::ipa::slicer::PDG
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses variable h defined in com::ibm::wala::ipa::slicer::PDG
      uses variable pa defined in com::ibm::wala::ipa::slicer::PDG
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::PDG
      uses function createHeapDataDependenceEdges(final PointerKey,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
   function computeReturnStatements(final IR) in line 558
      14 lines of code
      1 parameters
      2 conditional paths
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getInstructionIndex() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function iterateNodes() defined in com::ibm::wala::util::graph::AbstractGraph
   function createCalleeParams(Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) in line 721
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function isIgnoreHeap() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable h defined in com::ibm::wala::ipa::slicer::PDG
      uses variable paramCalleeStatements defined in com::ibm::wala::ipa::slicer::PDG
   function createControlDependenceEdges(ControlDependenceOptions) in line 136
      71 lines of code
      1 parameters
      17 conditional paths
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes(final IntSet) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses function isExitBlock() defined in com::ibm::wala::cfg::IBasicBlock
      uses function isEntryBlock() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable callerParamStatements defined in com::ibm::wala::ipa::slicer::PDG
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable callerReturnStatements defined in com::ibm::wala::ipa::slicer::PDG
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function iterateAllInstructions() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable paramCalleeStatements defined in com::ibm::wala::ipa::slicer::PDG
   function createHeapDataDependenceEdges(final PointerKey,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) in line 441
      84 lines of code
      4 parameters
      27 conditional paths
      uses variable locationsHandled defined in com::ibm::wala::ipa::slicer::PDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function isIgnoreHeap() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::PDG
      uses function excludes(PointerKey) defined in com::ibm::wala::ipa::slicer::HeapExclusions
      uses variable t defined in com::ibm::wala::ipa::slicer::PDG::SingletonSet
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable VERBOSE defined in com::ibm::wala::ipa::slicer::PDG
      uses variable h defined in com::ibm::wala::ipa::slicer::PDG
      uses function iterateNodes() defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable pa defined in com::ibm::wala::ipa::slicer::PDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
   function createNodes(Map< CGNode, OrdinalSet< PointerKey >>,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions,ControlDependenceOptions) in line 664
      17 lines of code
      4 parameters
      3 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function createNormalStatements(IR,Map< CGNode, OrdinalSet< PointerKey >>,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function createSpecialStatements(IR,Collection< SSAInstruction >) defined in com::ibm::wala::ipa::slicer::PDG
      uses function createCalleeParams(Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses function createReturnStatements(Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function createNormalStatements(IR,Map< CGNode, OrdinalSet< PointerKey >>,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) in line 772
      17 lines of code
      4 parameters
      4 conditional paths
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function addParamPassingStatements(SSAInvokeInstruction,Map< CGNode, OrdinalSet< PointerKey >>,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
   function createReturnStatements(Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions) in line 690
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReturnType() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function isIgnoreExceptions() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function isIgnoreHeap() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
      uses variable h defined in com::ibm::wala::ipa::slicer::PDG
      uses variable returnStatements defined in com::ibm::wala::ipa::slicer::PDG
   function createScalarDataDependenceEdges(DataDependenceOptions) in line 218
      162 lines of code
      1 parameters
      48 conditional paths
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallGraph() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getDU(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes() defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function statement2SSAInstruction(SSAInstruction[],Statement) defined in com::ibm::wala::ipa::slicer::PDG
      uses function isTerminateAtCast() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function getNumberOfDefs() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getDef() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getUses(int) defined in com::ibm::wala::ssa::DefUse
      uses function isIgnoreBasePtrs() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function hasBasePointer(SSAInstruction) defined in com::ibm::wala::ipa::slicer::PDG
      uses function getBasePointer(SSAInstruction) defined in com::ibm::wala::ipa::slicer::PDG
      uses function getIndex() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isIgnoreExceptions() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable EXC_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getValueNumber() defined in com::ibm::wala::ipa::slicer::ParamStatement::ValueNumberCarrier
      uses function computeReturnStatements(final IR) defined in com::ibm::wala::ipa::slicer::PDG
      uses function getPEIs(final IR) defined in com::ibm::wala::ipa::slicer::PDG
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function isParameter(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getDef(int) defined in com::ibm::wala::ssa::DefUse
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function toString() defined in com::ibm::wala::ipa::slicer::Statement
   function createScalarEdges(DataDependenceOptions,ControlDependenceOptions) in line 120
      4 lines of code
      2 parameters
      1 conditional paths
      uses function createScalarDataDependenceEdges(DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function createControlDependenceEdges(ControlDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
   function createSpecialStatements(IR,Collection< SSAInstruction >) in line 747
      18 lines of code
      2 parameters
      6 conditional paths
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::IR
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAInstruction
   function equals(Object) in line 866
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
   function getBasePointer(SSAInstruction) in line 539
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function getCallerParamStatements(SSAInvokeInstruction) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callerParamStatements defined in com::ibm::wala::ipa::slicer::PDG
   function getCallerReturnStatements(SSAInvokeInstruction) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callerReturnStatements defined in com::ibm::wala::ipa::slicer::PDG
   function getCallGraphNode() in line 861
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
   function getParamCalleeStatements() in line 853
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable paramCalleeStatements defined in com::ibm::wala::ipa::slicer::PDG
   function getPEIs(final IR) in line 576
      14 lines of code
      1 parameters
      6 conditional paths
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getInstructionIndex() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function isPEI() defined in com::ibm::wala::ssa::SSAInstruction
      uses function iterateNodes() defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses variable instructionIndices defined in com::ibm::wala::ipa::slicer::PDG
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAInstruction
   function getPredNodeCount(Statement) in line 880
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(Statement) in line 886
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function isIgnoreHeap() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function computeIncomingHeapDependencies(Statement) defined in com::ibm::wala::ipa::slicer::PDG
   function getReturnStatements() in line 857
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable returnStatements defined in com::ibm::wala::ipa::slicer::PDG
   function getSuccNodeCount(Statement) in line 934
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(Statement) in line 940
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses function isIgnoreHeap() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function computeOutgoingHeapDependencies(Statement) defined in com::ibm::wala::ipa::slicer::PDG
   function hasBasePointer(SSAInstruction) in line 526
      12 lines of code
      1 parameters
      4 conditional paths
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function hasEdge(Statement,Statement) in line 948
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function hashCode() in line 875
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
   function statement2SSAInstruction(SSAInstruction[],Statement) in line 634
      24 lines of code
      2 parameters
      5 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getInstructionIndex() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function getPhi() defined in com::ibm::wala::ipa::slicer::PhiStatement
      uses function getPi() defined in com::ibm::wala::ipa::slicer::PiStatement
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::GetCaughtExceptionStatement
      uses function toString() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 847
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
   function unionHeapLocations(CGNode,SSAInvokeInstruction,Map< CGNode, OrdinalSet< PointerKey >>) in line 838
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable t defined in com::ibm::wala::ipa::slicer::PDG::SingletonSet
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function PDG(final CGNode,PointerAnalysis,Map< CGNode, OrdinalSet< PointerKey >>,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions,ControlDependenceOptions,HeapExclusions) in line 105
      protection public
      14 lines of code
      7 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::PDG
      uses variable pa defined in com::ibm::wala::ipa::slicer::PDG
      uses function getHeapModel() defined in com::ibm::wala::ipa::callgraph::propagation::PointerAnalysis
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::PDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::PDG
      uses variable exclusions defined in com::ibm::wala::ipa::slicer::PDG
      uses variable instructionIndices defined in com::ibm::wala::ipa::slicer::PDG
      uses function computeInstructionIndices(IR) defined in com::ibm::wala::ipa::slicer::PDG
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function createNodes(Map< CGNode, OrdinalSet< PointerKey >>,Map< CGNode, OrdinalSet< PointerKey >>,DataDependenceOptions,ControlDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
      uses function createScalarEdges(DataDependenceOptions,ControlDependenceOptions) defined in com::ibm::wala::ipa::slicer::PDG
   variable callerParamStatements in line 81
   variable callerReturnStatements in line 83
   variable dOptions in line 95
   variable exclusions in line 85
   variable h in line 91
   variable IGNORE_ALLOC_HEAP_DEFS in line 69
      protection public
   variable instructionIndices in line 75
   variable locationsHandled in line 87
   variable mod in line 93
   variable node in line 73
   variable pa in line 89
   variable paramCalleeStatements in line 77
   variable returnStatements in line 79
   variable VERBOSE in line 71
module com::ibm::wala::ipa::slicer::PDG::SingletonSet
   inherits from com::ibm::wala::ipa::callgraph::impl::SetOfClasses
   function add(IClass) in line 390
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function contains(String) in line 395
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function contains(TypeReference) in line 401
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in com::ibm::wala::ipa::slicer::PDG::SingletonSet
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
   variable t in line 383
module com::ibm::wala::ipa::slicer::PDG::SetComplement
   inherits from com::ibm::wala::ipa::callgraph::impl::SetOfClasses
   function add(IClass) in line 418
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function contains(String) in line 423
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function contains(TypeReference) in line 429
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable set in line 407
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/PhiStatement.java
module com::ibm::wala::ipa::slicer::PhiStatement
   inherits from com::ibm::wala::ipa::slicer::Statement
   function equals(Object) in line 36
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function PhiStatement(CGNode,SSAPhiInstruction) defined in com::ibm::wala::ipa::slicer::PhiStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable phi defined in com::ibm::wala::ipa::slicer::PhiStatement
      uses function equals(Object) defined in com::ibm::wala::ssa::SSAInstruction
   function getKind() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable PHI defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function getPhi() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable phi defined in com::ibm::wala::ipa::slicer::PhiStatement
   function hashCode() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable phi defined in com::ibm::wala::ipa::slicer::PhiStatement
      uses function hashCode() defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable phi defined in com::ibm::wala::ipa::slicer::PhiStatement
   function PhiStatement(CGNode,SSAPhiInstruction) in line 25
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable phi defined in com::ibm::wala::ipa::slicer::PhiStatement
   variable phi in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/PiStatement.java
module com::ibm::wala::ipa::slicer::PiStatement
   inherits from com::ibm::wala::ipa::slicer::Statement
   function equals(Object) in line 36
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function PiStatement(CGNode,SSAPiInstruction) defined in com::ibm::wala::ipa::slicer::PiStatement
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable pi defined in com::ibm::wala::ipa::slicer::PiStatement
   function getKind() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable PI defined in com::ibm::wala::ipa::slicer::Statement::Kind
   function getPi() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pi defined in com::ibm::wala::ipa::slicer::PiStatement
   function hashCode() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable pi defined in com::ibm::wala::ipa::slicer::PiStatement
   function PiStatement(CGNode,SSAPiInstruction) in line 25
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses variable pi defined in com::ibm::wala::ipa::slicer::PiStatement
   variable pi in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/ReachabilityFunctions.java
module com::ibm::wala::ipa::slicer::ReachabilityFunctions
   inherits from com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
   function getCallFlowFunction(Object,Object) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCallNoneToReturnFlowFunction(Object,Object) in line 56
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCallToReturnFlowFunction(Object,Object) in line 60
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getNormalFlowFunction(Object,Object) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getReturnFlowFunction(Object,Object,Object) in line 69
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function singleton() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ReachabilityFunctions() in line 46
      2 lines of code
      0 parameters
      1 conditional paths
   variable f in line 34
   variable instance in line 28
   variable killReachability in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/SDG.java
module com::ibm::wala::ipa::slicer::SDG
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   inherits from com::ibm::wala::ipa::slicer::ISDG
   function computeAllPDGs() in line 144
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::slicer::SDG
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getPDG(CGNode) defined in com::ibm::wala::ipa::slicer::SDG
   function eagerConstruction() in line 137
      3 lines of code
      0 parameters
      1 conditional paths
      uses function computeAllPDGs() defined in com::ibm::wala::ipa::slicer::SDG
   function getCOptions() in line 633
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cOptions defined in com::ibm::wala::ipa::slicer::SDG
   function getEdgeManager() in line 612
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeMgr defined in com::ibm::wala::ipa::slicer::SDG
   function getNodeManager() in line 617
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeMgr defined in com::ibm::wala::ipa::slicer::SDG
   function getPDG(CGNode) in line 621
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable pdgMap defined in com::ibm::wala::ipa::slicer::SDG
      uses variable pa defined in com::ibm::wala::ipa::slicer::SDG
      uses variable mod defined in com::ibm::wala::ipa::slicer::SDG
      uses variable ref defined in com::ibm::wala::ipa::slicer::SDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable cOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable heapExclude defined in com::ibm::wala::ipa::slicer::SDG
      uses function iterateNodes(final IntSet) defined in com::ibm::wala::util::graph::AbstractNumberedGraph
      uses variable nodeMgr defined in com::ibm::wala::ipa::slicer::SDG
      uses function addNode(T) defined in com::ibm::wala::util::graph::impl::SlowNumberedNodeManager
   function iterateLazyNodes() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeMgr defined in com::ibm::wala::ipa::slicer::SDG
   function toString() in line 128
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function eagerConstruction() defined in com::ibm::wala::ipa::slicer::SDG
   function SDG(final CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions) in line 112
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::slicer::SDG
      uses variable pa defined in com::ibm::wala::ipa::slicer::SDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable cOptions defined in com::ibm::wala::ipa::slicer::SDG
   function SDG(CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions,HeapExclusions) in line 116
      protection public
      10 lines of code
      5 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::ipa::slicer::SDG
      uses variable pa defined in com::ibm::wala::ipa::slicer::SDG
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses function isIgnoreHeap() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable heapExclude defined in com::ibm::wala::ipa::slicer::SDG
      uses variable cOptions defined in com::ibm::wala::ipa::slicer::SDG
   variable cg in line 71
   variable cOptions in line 91
   variable dOptions in line 86
   variable edgeMgr in line 66
   variable heapExclude in line 108
   variable mod in line 97
   variable nodeMgr in line 61
   variable pa in line 76
   variable pdgMap in line 81
   variable ref in line 103
module com::ibm::wala::ipa::slicer::SDG::Nodes
   inherits from com::ibm::wala::util::graph::impl::SlowNumberedNodeManager
   function getNumberOfNodes() in line 176
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function eagerConstruction() defined in com::ibm::wala::ipa::slicer::SDG
   function iterateNodes() in line 162
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function eagerConstruction() defined in com::ibm::wala::ipa::slicer::SDG
module com::ibm::wala::ipa::slicer::SDG::Edges
   inherits from com::ibm::wala::util::graph::NumberedEdgeManager
   function addEdge(Statement,Statement) in line 184
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getPredNodeCount(Statement) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function getPredNodeNumbers(Statement) in line 590
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getNumber(Object) defined in com::ibm::wala::util::graph::impl::SlowNumberedNodeManager
   function getPredNodes(Statement) in line 192
      protection public
      144 lines of code
      1 parameters
      38 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses function isIgnoreExceptions() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable EXC_RET_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses variable EXC_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getPDG(CGNode) defined in com::ibm::wala::ipa::slicer::SDG
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function addNode(T) defined in com::ibm::wala::util::graph::impl::SlowNumberedNodeManager
      uses variable mod defined in com::ibm::wala::ipa::slicer::SDG
      uses variable cg defined in com::ibm::wala::ipa::slicer::SDG
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getPossibleSites(CGNode) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallInstructionIndices(CallSiteReference) defined in com::ibm::wala::ssa::IR
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable cOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
   function getSuccNodeCount(Statement) in line 337
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
   function getSuccNodeNumbers(Statement) in line 600
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getNumber(Object) defined in com::ibm::wala::util::graph::impl::SlowNumberedNodeManager
   function getSuccNodes(Statement) in line 341
      protection public
      134 lines of code
      1 parameters
      37 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable cOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function getPDG(CGNode) defined in com::ibm::wala::ipa::slicer::SDG
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function addNode(T) defined in com::ibm::wala::util::graph::impl::SlowNumberedNodeManager
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable cg defined in com::ibm::wala::ipa::slicer::SDG
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getPossibleSites(CGNode) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getIR(WarningSet) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallInstructionIndices(CallSiteReference) defined in com::ibm::wala::ssa::IR
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable ref defined in com::ibm::wala::ipa::slicer::SDG
   function hasEdge(Statement,Statement) in line 476
      protection public
      93 lines of code
      2 parameters
      27 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable cOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
      uses function getPDG(CGNode) defined in com::ibm::wala::ipa::slicer::SDG
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getInstruction() defined in com::ibm::wala::ipa::slicer::NormalStatement
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable dOptions defined in com::ibm::wala::ipa::slicer::SDG
      uses variable NONE defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable EXC_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses variable NORMAL_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses variable HEAP_RET_CALLER defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses variable PARAM_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses variable HEAP_PARAM_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
   function removeAllIncidentEdges(Statement) in line 570
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(Statement,Statement) in line 575
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(Statement) in line 580
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(Statement) in line 585
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/SDGSupergraph.java
module com::ibm::wala::ipa::slicer::SDGSupergraph
   inherits from com::ibm::wala::dataflow::IFDS::ISupergraph
   function addEdge(Statement,Statement) in line 399
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addNode(Statement) in line 376
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function classifyEdge(Statement,Statement) in line 60
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function containsNode(Statement) in line 381
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCalledNodes(Statement) in line 101
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function getCallSites(Statement) in line 70
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
   function getEntriesForProcedure(PDG) in line 124
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getEntry(Statement) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getExitsForProcedure(PDG) in line 141
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getLocalBlock(PDG,int) in line 159
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getLocalBlockNumber(Statement) in line 168
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMain() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMainEntry() in line 187
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getMainExit() in line 197
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getMaxNumber() in line 466
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNode(int) in line 470
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNormalSuccessors(Statement) in line 209
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getNumber(Statement) in line 474
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfBlocks(PDG) in line 223
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfNodes() in line 385
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getPredNodeCount(Statement) in line 404
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getPredNodeNumbers(Statement) in line 483
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(Statement) in line 409
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProcOf(Statement) in line 233
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getReturnSites(Statement) in line 243
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeCount(Statement) in line 413
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeNumbers(Statement) in line 492
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(Statement) in line 418
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function hasEdge(Statement,Statement) in line 430
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
   function isCall(Statement) in line 274
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
   function isEntry(Statement) in line 302
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
   function isExit(Statement) in line 326
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function isReturn(Statement) in line 347
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
   function iterateNodes() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateNodes(IntSet) in line 478
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeAllIncidentEdges(Statement) in line 446
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(Statement,Statement) in line 451
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(Statement) in line 456
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNode(Statement) in line 394
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(Statement) in line 371
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(Statement) in line 461
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function SDGSupergraph(ISDG,Statement,boolean) in line 49
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable backward in line 47
   variable sdg in line 37
   variable src in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/SDGView.java
module com::ibm::wala::ipa::slicer::SDGView
   inherits from com::ibm::wala::ipa::slicer::ISDG
   function addEdge(Statement,Statement) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addNode(Statement) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsNode(Statement) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function containsNode(T) defined in com::ibm::wala::util::graph::NodeManager
   function getCOptions() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getCOptions() defined in com::ibm::wala::ipa::slicer::ISDG
   function getMaxNumber() in line 58
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getMaxNumber() defined in com::ibm::wala::util::graph::NumberedNodeManager
   function getNode(int) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getNode(int) defined in com::ibm::wala::util::graph::NumberedNodeManager
   function getNumber(Statement) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getNumber(T) defined in com::ibm::wala::util::graph::NumberedNodeManager
   function getNumberOfNodes() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
   function getPDG(CGNode) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getPDG(CGNode) defined in com::ibm::wala::ipa::slicer::ISDG
   function getPredNodeCount(Statement) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getPredNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
   function getPredNodeNumbers(Statement) in line 82
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getPredNodes(Statement) defined in com::ibm::wala::ipa::slicer::SDGView
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getNumber(Statement) defined in com::ibm::wala::ipa::slicer::SDGView
   function getPredNodes(Statement) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable notExcluded defined in com::ibm::wala::ipa::slicer::SDGView
   function getSuccNodeCount(Statement) in line 96
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
   function getSuccNodeNumbers(Statement) in line 101
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getSuccNodes(Statement) defined in com::ibm::wala::ipa::slicer::SDGView
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getNumber(Statement) defined in com::ibm::wala::ipa::slicer::SDGView
   function getSuccNodes(Statement) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses variable notExcluded defined in com::ibm::wala::ipa::slicer::SDGView
   function hasEdge(Statement,Statement) in line 115
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
      uses variable notExcluded defined in com::ibm::wala::ipa::slicer::SDGView
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
   function iterateLazyNodes() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function iterateLazyNodes() defined in com::ibm::wala::ipa::slicer::ISDG
   function iterateNodes() in line 131
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
   function iterateNodes(IntSet) in line 136
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
   function removeAllIncidentEdges(Statement) in line 141
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function removeAllIncidentEdges(T) defined in com::ibm::wala::util::graph::EdgeManager
   function removeEdge(Statement,Statement) in line 146
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function removeEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
   function removeIncomingEdges(Statement) in line 151
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function removeIncomingEdges(T) defined in com::ibm::wala::util::graph::EdgeManager
   function removeNode(Statement) in line 156
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function removeNode(T) defined in com::ibm::wala::util::graph::NodeManager
   function removeNodeAndEdges(Statement) in line 161
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function removeNodeAndEdges(T) defined in com::ibm::wala::util::graph::Graph
   function removeOutgoingEdges(Statement) in line 166
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::ipa::slicer::SDGView
      uses function removeOutgoingEdges(T) defined in com::ibm::wala::util::graph::EdgeManager
   function SDGView(final ISDG,final Collection< Statement >) in line 36
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   variable delegate in line 32
   variable notExcluded in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/SliceFunctions.java
module com::ibm::wala::ipa::slicer::SliceFunctions
   inherits from com::ibm::wala::dataflow::IFDS::IFlowFunctionMap
   function getCallFlowFunction(Object,Object) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCallNoneToReturnFlowFunction(Object,Object) in line 31
      protection public
      27 lines of code
      2 parameters
      9 conditional paths
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getLocation() defined in com::ibm::wala::ipa::slicer::HeapStatement
   function getCallToReturnFlowFunction(Object,Object) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getNormalFlowFunction(Object,Object) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getReturnFlowFunction(Object,Object,Object) in line 67
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/Slicer.java
module com::ibm::wala::ipa::slicer::Slicer
   function computeBackwardSlice(Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions) in line 131
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function computeSlice(SDG,Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions,boolean) defined in com::ibm::wala::ipa::slicer::Slicer
   function computeBackwardSlice(SDG,Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions) in line 149
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
      uses function computeSlice(SDG,Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions,boolean) defined in com::ibm::wala::ipa::slicer::Slicer
   function computeBackwardSlice(Statement,CallGraph,PointerAnalysis) in line 330
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function computeBackwardSlice(Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions) defined in com::ibm::wala::ipa::slicer::Slicer
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable FULL defined in com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
   function computeForwardSlice(Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions) in line 141
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function computeSlice(SDG,Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions,boolean) defined in com::ibm::wala::ipa::slicer::Slicer
   function computeForwardSlice(SDG,Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions) in line 157
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
      uses function computeSlice(SDG,Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions,boolean) defined in com::ibm::wala::ipa::slicer::Slicer
   function computeNewBackwardRoots(Collection< Statement >,Statement,Collection< Statement >,ISDG) in line 289
      35 lines of code
      4 parameters
      9 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function removeAll(Collection) defined in com::ibm::wala::util::collections::Iterator2Collection
      uses variable VERBOSE defined in com::ibm::wala::ipa::slicer::Slicer
   function computeNewForwardRoots(Collection< Statement >,Statement,Collection< Statement >,ISDG,DataDependenceOptions) in line 246
      39 lines of code
      5 parameters
      10 conditional paths
      uses function getNode() defined in com::ibm::wala::ipa::slicer::Statement
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isIgnoreExceptions() defined in com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
      uses variable EXC_RET_CALLEE defined in com::ibm::wala::ipa::slicer::Statement::Kind
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function removeAll(Collection) defined in com::ibm::wala::util::collections::Iterator2Collection
      uses variable VERBOSE defined in com::ibm::wala::ipa::slicer::Slicer
   function computeNewRoots(Collection< Statement >,Statement,Collection< Statement >,ISDG,boolean,DataDependenceOptions) in line 234
      8 lines of code
      6 parameters
      2 conditional paths
      uses function computeNewBackwardRoots(Collection< Statement >,Statement,Collection< Statement >,ISDG) defined in com::ibm::wala::ipa::slicer::Slicer
      uses function computeNewForwardRoots(Collection< Statement >,Statement,Collection< Statement >,ISDG,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::Slicer
   function computeSlice(SDG,Statement,CallGraph,PointerAnalysis,DataDependenceOptions,ControlDependenceOptions,boolean) in line 166
      67 lines of code
      7 parameters
      12 conditional paths
      uses variable VERBOSE defined in com::ibm::wala::ipa::slicer::Slicer
      uses function solve() defined in com::ibm::wala::dataflow::IFDS::TabulationSolver
      uses variable DEBUG defined in com::ibm::wala::ipa::slicer::Slicer
      uses function result2Slice(ISDG,final TabulationResult< Statement >) defined in com::ibm::wala::ipa::slicer::Slicer
      uses function computeNewRoots(Collection< Statement >,Statement,Collection< Statement >,ISDG,boolean,DataDependenceOptions) defined in com::ibm::wala::ipa::slicer::Slicer
      uses variable BAIL_OUT defined in com::ibm::wala::ipa::slicer::Slicer
   function result2Slice(ISDG,final TabulationResult< Statement >) in line 338
      20 lines of code
      2 parameters
      1 conditional paths
      uses function getSupergraphNodesReached() defined in com::ibm::wala::dataflow::IFDS::TabulationResult
   variable BAIL_OUT in line 56
      protection public
   variable DEBUG in line 48
      protection public
   variable VERBOSE in line 50
      protection public
module com::ibm::wala::ipa::slicer::Slicer::DataDependenceOptions
   function getName() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isIgnoreBasePtrs() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isIgnoreExceptions() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isIgnoreHeap() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTerminateAtCast() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DataDependenceOptions(String,boolean,boolean,boolean,boolean) in line 76
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
   variable FULL in line 62
      protection public
   variable ignoreBasePtrs in line 68
   variable ignoreExceptions in line 74
   variable ignoreHeap in line 70
   variable name in line 66
   variable NO_BASE_NO_HEAP in line 63
      protection public
   variable NO_BASE_PTRS in line 62
      protection public
   variable NO_HEAP in line 63
      protection public
   variable NONE in line 64
      protection public
   variable REFLECTION in line 64
      protection public
   variable terminateAtCast in line 72
module com::ibm::wala::ipa::slicer::Slicer::ControlDependenceOptions
   function getName() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ControlDependenceOptions(String) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable FULL in line 113
      protection public
   variable name in line 115
   variable NONE in line 113
      protection public
module com::ibm::wala::ipa::slicer::Slicer::SliceProblem
   inherits from com::ibm::wala::dataflow::IFDS::TabulationProblem
   function getDomain() in line 383
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getFunctionMap() in line 393
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in com::ibm::wala::ipa::slicer::Slicer::SliceProblem
   function getMergeFunction() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReachableOnEntry() in line 411
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSupergraph() in line 420
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supergraph defined in com::ibm::wala::ipa::slicer::Slicer::SliceProblem
   function SliceProblem(Statement,CallGraph,ISDG,boolean) in line 371
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ipa::slicer::Slicer::SliceProblem
      uses variable f defined in com::ibm::wala::ipa::slicer::Slicer::SliceProblem
   variable f in line 369
   variable src in line 365
   variable supergraph in line 367
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/slicer/Statement.java
module com::ibm::wala::ipa::slicer::Statement
   abstract class
   function equals(Object) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getKind() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
   function hashCode() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function Statement(final CGNode) in line 29
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in com::ibm::wala::ipa::slicer::Statement
      uses function getKind() defined in com::ibm::wala::ipa::slicer::Statement
      uses function equals(Object) defined in com::ibm::wala::ipa::slicer::Statement
      uses function hashCode() defined in com::ibm::wala::ipa::slicer::Statement
      uses function toString() defined in com::ibm::wala::ipa::slicer::Statement
   variable node in line 27
module com::ibm::wala::ipa::slicer::Statement::Kind
   variable CATCH in line 23
      protection public
   variable EXC_RET_CALLEE in line 23
      protection public
   variable EXC_RET_CALLER in line 23
      protection public
   variable HEAP_PARAM_CALLEE in line 24
      protection public
   variable HEAP_PARAM_CALLER in line 24
      protection public
   variable HEAP_RET_CALLEE in line 24
      protection public
   variable HEAP_RET_CALLER in line 24
      protection public
   variable METHOD_ENTRY in line 25
      protection public
   variable NORMAL in line 23
      protection public
   variable NORMAL_RET_CALLEE in line 23
      protection public
   variable NORMAL_RET_CALLER in line 23
      protection public
   variable PARAM_CALLEE in line 23
      protection public
   variable PARAM_CALLER in line 23
      protection public
   variable PHI in line 23
      protection public
   variable PI in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/BypassClassTargetSelector.java
module com::ibm::wala::ipa::summaries::BypassClassTargetSelector
   inherits from com::ibm::wala::ipa::callgraph::ClassTargetSelector
   function getAllocatedTarget(CGNode,NewSiteReference) in line 77
      protection public
      43 lines of code
      2 parameters
      10 conditional paths
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses variable DEBUG defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable allocatableTypes defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses variable bypassLoader defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses function lookupClass(TypeName) defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses function registerClass(TypeName,IClass) defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function BypassClassTargetSelector(ClassTargetSelector,Set< TypeReference >,ClassHierarchy,IClassLoader) in line 58
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable bypassLoader defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses variable allocatableTypes defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassClassTargetSelector
   variable allocatableTypes in line 41
   variable bypassLoader in line 56
   variable cha in line 46
   variable DEBUG in line 36
   variable parent in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/BypassMethodTargetSelector.java
module com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
   inherits from com::ibm::wala::ipa::callgraph::MethodTargetSelector
   function canIgnore(MethodReference) in line 261
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getPackage() defined in com::ibm::wala::types::TypeName
      uses variable ignoredPackages defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
   function findOrCreateSyntheticMethod(MethodReference,boolean) in line 167
      33 lines of code
      2 parameters
      6 conditional paths
      uses variable syntheticMethods defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function canIgnore(MethodReference) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function generateNoOp(MethodReference,boolean) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function findSummary(MethodReference) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
   function findOrCreateSyntheticMethod(IMethod,boolean) in line 206
      21 lines of code
      2 parameters
      4 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable syntheticMethods defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function canIgnore(MethodReference) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function generateNoOp(MethodReference,boolean) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function findSummary(MethodReference) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
   function findSummary(MethodReference) in line 268
      38 lines of code
      1 parameters
      9 conditional paths
      uses variable methodSummaries defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getPackage() defined in com::ibm::wala::types::TypeName
   function generateNoOp(MethodReference,boolean) in line 228
      3 lines of code
      2 parameters
      1 conditional paths
   function getBypassInternal(IMethod,boolean) in line 155
      6 lines of code
      2 parameters
      2 conditional paths
      uses function findOrCreateSyntheticMethod(MethodReference,boolean) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
   function getCalleeTarget(CGNode,CallSiteReference,IClass) in line 100
      protection public
      44 lines of code
      3 parameters
      12 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function isVirtual() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function isInterface() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function findOrCreateSyntheticMethod(MethodReference,boolean) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function isStatic() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getBypassInternal(IMethod,boolean) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function canIgnore(MethodReference) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
   function getClassHierarchy() in line 307
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
   function mightReturnSyntheticMethod(CGNode,CallSiteReference) in line 317
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function mightReturnSyntheticMethod(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function findOrCreateSyntheticMethod(MethodReference,boolean) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function isStatic() defined in com::ibm::wala::classLoader::IMember
   function mightReturnSyntheticMethod(MethodReference) in line 335
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function mightReturnSyntheticMethod(CGNode,CallSiteReference) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function findOrCreateSyntheticMethod(MethodReference,boolean) defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function isStatic() defined in com::ibm::wala::classLoader::IMember
   function BypassMethodTargetSelector(MethodTargetSelector,Map< MethodReference, MethodSummary >,Set< Atom >,ClassHierarchy) in line 89
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable methodSummaries defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses variable ignoredPackages defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassMethodTargetSelector
   variable cha in line 69
   variable ignoredPackages in line 64
   variable methodSummaries in line 58
   variable parent in line 74
   variable syntheticMethods in line 81
module com::ibm::wala::ipa::summaries::BypassMethodTargetSelector::NoOpSummary
   inherits from com::ibm::wala::ipa::summaries::MethodSummary
   function getStatements() in line 244
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getReturnType() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses variable NO_STATEMENTS defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function NoOpSummary(MethodReference,boolean) in line 234
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function setStatic(boolean) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function isStatic() defined in com::ibm::wala::ipa::summaries::MethodSummary
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/BypassSyntheticClass.java
module com::ibm::wala::ipa::summaries::BypassSyntheticClass
   inherits from com::ibm::wala::classLoader::SyntheticClass
   function equals(Object) in line 207
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
   function getAllAncestorInterfaces() in line 108
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getAllAncestorInterfaces() defined in com::ibm::wala::classLoader::IClass
   function getAllFields() in line 290
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getAllFields() defined in com::ibm::wala::classLoader::IClass
   function getAllImplementedInterfaces() in line 92
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function getAllAncestorInterfaces() defined in com::ibm::wala::classLoader::IClass
      uses function getAllImplementedInterfaces() defined in com::ibm::wala::classLoader::IClass
   function getAllInstanceFields() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getAllInstanceFields() defined in com::ibm::wala::classLoader::IClass
   function getAllMethods() in line 283
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getAllMethods() defined in com::ibm::wala::classLoader::IClass
   function getAllStaticFields() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getAllStaticFields() defined in com::ibm::wala::classLoader::IClass
   function getClassInitializer() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassLoader() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
   function getDeclaredInstanceFields() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getDeclaredInstanceFields() defined in com::ibm::wala::classLoader::IClass
   function getDeclaredMethods() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
   function getDeclaredStaticFields() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getDeclaredStaticFields() defined in com::ibm::wala::classLoader::IClass
   function getDirectInterfaces() in line 258
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getField(Atom) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getField(Atom) defined in com::ibm::wala::classLoader::IClass
   function getMethod(Selector) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
   function getModifiers() in line 229
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getName(TypeReference) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable T defined in com::ibm::wala::classLoader::SyntheticClass
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
   function getName() in line 240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticClass
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getRealType() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
   function getSourceFileName() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getSourceFileName() defined in com::ibm::wala::classLoader::IClass
   function getSuperclass() in line 75
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses variable loader defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function hashCode() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
   function isReferenceType() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticClass
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
   function isSyntheticImplentor() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
   function toString() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
   function BypassSyntheticClass(IClass,IClassLoader,ClassHierarchy) in line 55
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses variable realType defined in com::ibm::wala::ipa::summaries::BypassSyntheticClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable cha defined in com::ibm::wala::classLoader::SyntheticClass
   variable loader in line 53
   variable realType in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/BypassSyntheticClassLoader.java
module com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   inherits from com::ibm::wala::classLoader::IClassLoader
   function getName() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable me defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses function getName() defined in com::ibm::wala::types::ClassLoaderReference
   function getNumberOfClasses() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable syntheticClasses defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function getNumberOfMethods() in line 132
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getParent() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function getReference() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable me defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function getSourceFileName(IClass) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function init(Set) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterateAllClasses() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable syntheticClasses defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function lookupClass(TypeName) in line 76
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses variable syntheticClasses defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function registerClass(TypeName,IClass) in line 92
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses function addClass(IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable syntheticClasses defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function removeAll(Collection< IClass >) in line 162
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable syntheticClasses defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses function getName() defined in com::ibm::wala::classLoader::IClass
   function BypassSyntheticClassLoader(ClassLoaderReference,IClassLoader,SetOfClasses,ClassHierarchy,WarningSet) in line 69
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses variable me defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses variable cha defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses variable parent defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   variable cha in line 62
   variable me in line 58
   variable parent in line 60
   variable syntheticClasses in line 67
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/MethodBypass.java
module com::ibm::wala::ipa::summaries::MethodBypass
   function extractPackage(TypeReference) in line 188
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
   function findOrCreateSyntheticMethod(MethodReference) in line 108
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable considered defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses variable syntheticMethods defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function findSummary(MethodReference) defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable cha defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function findSummary(MethodReference) in line 130
      36 lines of code
      1 parameters
      9 conditional paths
      uses variable methodSummaries defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function extractPackage(TypeReference) defined in com::ibm::wala::ipa::summaries::MethodBypass
   function getBypass(MethodReference) in line 90
      12 lines of code
      1 parameters
      3 conditional paths
      uses function findOrCreateSyntheticMethod(MethodReference) defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function resolveTarget(MethodReference) defined in com::ibm::wala::ipa::summaries::MethodBypass
   function getBypass(IMethod) in line 174
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getBypass(MethodReference) defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function getClassHierarchy() in line 199
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::ipa::summaries::MethodBypass
   function isAllocatable(IClass) in line 221
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses variable allocatable defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function resolveTarget(MethodReference) in line 203
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function MethodBypass(Map,Set,ClassHierarchy) in line 76
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable methodSummaries defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses variable allocatable defined in com::ibm::wala::ipa::summaries::MethodBypass
      uses variable cha defined in com::ibm::wala::ipa::summaries::MethodBypass
   variable allocatable in line 59
   variable cha in line 64
   variable considered in line 74
   variable methodSummaries in line 54
   variable syntheticMethods in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/MethodSummary.java
module com::ibm::wala::ipa::summaries::MethodSummary
   function addConstant(Integer,ConstantValue) in line 89
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable constantValues defined in com::ibm::wala::ipa::summaries::MethodSummary
   function addPoison(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addStatement(SSAInstruction) in line 82
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable statements defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getConstants() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constantValues defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getMethod() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getNextProgramCounter() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nextProgramCounter defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getNumberOfParameters() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
   function getParameterType(int) in line 187
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function isStatic() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getParameterType(int) defined in com::ibm::wala::types::MethodReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
   function getPoison() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable poison defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getPoisonLevel() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable poisonLevel defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getReturnType() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
   function getStatements() in line 138
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable statements defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable NO_STATEMENTS defined in com::ibm::wala::ipa::summaries::MethodSummary
   function hasPoison() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable poison defined in com::ibm::wala::ipa::summaries::MethodSummary
   function isFactory() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 104
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFactory(boolean) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPoisonLevel(byte) in line 127
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable poisonLevel defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable MILD defined in com::ibm::wala::util::warnings::Warning
      uses variable MODERATE defined in com::ibm::wala::util::warnings::Warning
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
   function setStatic(boolean) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isStatic() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function toString() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
   function MethodSummary(MethodReference) in line 75
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
   variable constantValues in line 48
   variable isFactory in line 73
   variable isStatic in line 68
   variable method in line 38
   variable nextProgramCounter in line 53
   variable NO_STATEMENTS in line 33
   variable poison in line 58
   variable poisonLevel in line 63
   variable statements in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/ReflectionSummary.java
module com::ibm::wala::ipa::summaries::ReflectionSummary
   function addType(int,TypeReference) in line 44
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateSetForBCIndex(int) defined in com::ibm::wala::ipa::summaries::ReflectionSummary
   function findOrCreateSetForBCIndex(int) in line 49
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in com::ibm::wala::ipa::summaries::ReflectionSummary
   function getTypeForNewInstance(int,ClassHierarchy) in line 59
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses variable map defined in com::ibm::wala::ipa::summaries::ReflectionSummary
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getTypesForProgramLocation(int) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::ipa::summaries::ReflectionSummary
   variable map in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/SummarizedMethod.java
module com::ibm::wala::ipa::summaries::SummarizedMethod
   inherits from com::ibm::wala::classLoader::SyntheticMethod
   function getNumberOfParameters() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getParameterType(int) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function getParameterType(int) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getPoison() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function getPoison() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getPoisonLevel() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function getPoisonLevel() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function getStatements(SSAOptions,WarningSet) in line 91
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function getStatements() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function hasPoison() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function hasPoison() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function isAbstract() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function isNative() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function isStatic() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses variable isStatic defined in com::ibm::wala::ipa::summaries::MethodSummary
   function makeIR(SSAOptions,WarningSet) in line 132
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getStatements(SSAOptions,WarningSet) defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses function makeControlFlowGraph() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses function getConstants() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function SummarizedMethod(MethodReference,MethodSummary,IClass) in line 34
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable declaringClass defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses variable isStatic defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable isFactory defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable summary in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/SyntheticIR.java
module com::ibm::wala::ipa::summaries::SyntheticIR
   inherits from com::ibm::wala::ssa::IR
   function getLocalMap() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeSymbolTable(IMethod,SSAInstruction[],Map< Integer, ConstantValue >) in line 57
      20 lines of code
      3 parameters
      6 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ssa::IR
      uses variable method defined in com::ibm::wala::ssa::IR
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
      uses variable instructions defined in com::ibm::wala::ssa::IR
      uses function getNumberOfDefs() defined in com::ibm::wala::ssa::SSAInstruction
      uses function ensureSymbol(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
      uses function setConstantValue(int,ConstantValue) defined in com::ibm::wala::ssa::SymbolTable
   function SyntheticIR(IMethod,Context,AbstractCFG,SSAInstruction[],SSAOptions,Map< Integer, ConstantValue >,WarningSet) in line 43
      protection public
      7 lines of code
      7 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::IR
      uses variable instructions defined in com::ibm::wala::ssa::IR
      uses function makeSymbolTable(IMethod,SSAInstruction[],Map< Integer, ConstantValue >) defined in com::ibm::wala::ipa::summaries::SyntheticIR
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses variable options defined in com::ibm::wala::ssa::IR
      uses function setupLocationMap() defined in com::ibm::wala::ssa::IR
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/SyntheticIRFactory.java
module com::ibm::wala::ipa::summaries::SyntheticIRFactory
   inherits from com::ibm::wala::ssa::IRFactory
   function makeCFG(IMethod,Context,ClassHierarchy,WarningSet) in line 26
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function makeControlFlowGraph() defined in com::ibm::wala::classLoader::SyntheticMethod
   function makeIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) in line 32
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function makeIR(SSAOptions,WarningSet) defined in com::ibm::wala::classLoader::SyntheticMethod
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/XMLMethodSummaryReader.java
module com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   function getAllocatableClasses() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allocatable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   function getIgnoredPackages() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoredPackages defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   function getSummaries() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summaries defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   function readXML(InputStream) in line 208
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function XMLMethodSummaryReader(InputStream,AnalysisScope) in line 195
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function readXML(InputStream) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   variable A_ALLOCATABLE in line 176
   variable A_ARG in line 174
   variable A_CLASS in line 152
   variable A_DEF in line 164
   variable A_DESCRIPTOR in line 156
   variable A_FACTORY in line 184
   variable A_FIELD in line 170
   variable A_FIELD_TYPE in line 172
   variable A_IGNORE in line 182
   variable A_INDEX in line 180
   variable A_LEVEL in line 160
   variable A_NAME in line 148
   variable A_NUM_ARGS in line 186
   variable A_REASON in line 158
   variable A_REF in line 178
   variable A_SIZE in line 154
   variable A_STATIC in line 166
   variable A_TYPE in line 150
   variable A_VALUE in line 168
   variable A_WILDCARD in line 162
   variable allocatable in line 86
   variable E_AASTORE in line 116
   variable E_ATHROW in line 122
   variable E_CALL in line 104
   variable E_CLASS in line 100
   variable E_CLASSLOADER in line 96
   variable E_CONSTANT in line 124
   variable E_GETFIELD in line 120
   variable E_METHOD in line 98
   variable E_NEW in line 106
   variable E_PACKAGE in line 102
   variable E_POISON in line 108
   variable E_PUTFIELD in line 118
   variable E_PUTSTATIC in line 114
   variable E_RETURN in line 112
   variable E_SUMMARY_SPEC in line 110
   variable elementMap in line 126
   variable ignoredPackages in line 91
   variable scope in line 70
   variable summaries in line 81
   variable V_NULL in line 188
   variable V_TRUE in line 190
module com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function checkReturnValue(MethodSummary) in line 424
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function getReturnType() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses function getStatements() defined in com::ibm::wala::ipa::summaries::MethodSummary
   function classLoaderName2Ref(String) in line 859
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function className2Ref(String) in line 869
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
   function endElement(String,String,String) in line 376
      protection public
      41 lines of code
      3 parameters
      19 conditional paths
      uses variable elementMap defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_CLASSLOADER defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_METHOD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function checkReturnValue(MethodSummary) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_CLASS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingClass defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_PACKAGE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingPackage defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_CALL defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_GETFIELD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_NEW defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_POISON defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_PUTSTATIC defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_PUTFIELD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_AASTORE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_ATHROW defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_SUMMARY_SPEC defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_RETURN defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_CONSTANT defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   function processAastore(Attributes) in line 684
      26 lines of code
      1 parameters
      6 conditional paths
      uses variable A_REF defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_INDEX defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_VALUE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processAllocation(Attributes) in line 507
      34 lines of code
      1 parameters
      4 conditional paths
      uses variable A_CLASS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_DEF defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable nextLocal defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses variable A_SIZE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function getDimensionality() defined in com::ibm::wala::types::TypeReference
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processAthrow(Attributes) in line 547
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable A_VALUE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processCallSite(Attributes) in line 444
      57 lines of code
      1 parameters
      9 conditional paths
      uses variable A_TYPE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_NAME defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_CLASS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_DESCRIPTOR defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable A_ARG defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable nextLocal defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_DEF defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processConstant(Attributes) in line 745
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable A_NAME defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable nextLocal defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_TYPE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_VALUE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function addConstant(Integer,ConstantValue) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processGetField(Attributes) in line 568
      37 lines of code
      1 parameters
      5 conditional paths
      uses variable A_CLASS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_FIELD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_FIELD_TYPE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_DEF defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable nextLocal defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_REF defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processPoison(Attributes) in line 767
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable A_REASON defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function addPoison(String) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable A_LEVEL defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function setPoisonLevel(byte) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
      uses variable MODERATE defined in com::ibm::wala::util::warnings::Warning
      uses variable MILD defined in com::ibm::wala::util::warnings::Warning
   function processPutField(Attributes) in line 611
      36 lines of code
      1 parameters
      5 conditional paths
      uses variable A_CLASS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_FIELD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_FIELD_TYPE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_VALUE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_REF defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processPutStatic(Attributes) in line 653
      25 lines of code
      1 parameters
      3 conditional paths
      uses variable A_CLASS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_FIELD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_FIELD_TYPE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_VALUE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
   function processReturn(Attributes) in line 716
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function getReturnType() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable A_VALUE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable V_NULL defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable nextLocal defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
   function startClass(String,Attributes) in line 360
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable governingPackage defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable governingClass defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function className2Ref(String) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_ALLOCATABLE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable allocatable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   function startElement(String,String,String,Attributes) in line 287
      protection public
      72 lines of code
      4 parameters
      20 conditional paths
      uses variable elementMap defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_CLASSLOADER defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_NAME defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses function classLoaderName2Ref(String) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_METHOD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_WILDCARD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function startMethod(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_CLASS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function startClass(String,Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_PACKAGE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingPackage defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable A_IGNORE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable V_TRUE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable ignoredPackages defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable E_CALL defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processCallSite(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_NEW defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processAllocation(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_PUTSTATIC defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processPutStatic(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_PUTFIELD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processPutField(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_GETFIELD defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processGetField(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_ATHROW defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processAthrow(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_AASTORE defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processAastore(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_RETURN defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processReturn(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_POISON defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processPoison(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_CONSTANT defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function processConstant(Attributes) defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable E_SUMMARY_SPEC defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
   function startMethod(Attributes) in line 788
      64 lines of code
      1 parameters
      11 conditional paths
      uses variable A_NAME defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_DESCRIPTOR defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable governingClass defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable summaries defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses variable A_STATIC defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function setStatic(boolean) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable A_FACTORY defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function setFactory(boolean) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable A_NUM_ARGS defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
      uses variable nextLocal defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
      uses variable symbolTable defined in com::ibm::wala::ipa::summaries::XMLMethodSummaryReader::SAXHandler
   variable governingClass in line 264
   variable governingLoader in line 254
   variable governingMethod in line 259
   variable governingPackage in line 269
   variable nextLocal in line 274
   variable symbolTable in line 279
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ipa/summaries/XMLReflectionReader.java
module com::ibm::wala::ipa::summaries::XMLReflectionReader
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   inherits from com::ibm::wala::ipa::callgraph::ReflectionSpecification
   function getSummaries() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summaries defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
   function getSummary(MethodReference) in line 295
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable summaries defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
   function getTypeForNewInstance(MethodReference,int,ClassHierarchy) in line 286
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable summaries defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses function getTypeForNewInstance(int,ClassHierarchy) defined in com::ibm::wala::ipa::summaries::ReflectionSummary
      uses variable bcIndex defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
   function readXML(InputStream) in line 106
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function XMLReflectionReader(InputStream,AnalysisScope) in line 94
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses function readXML(InputStream) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
   variable A_BCINDEX in line 89
   variable A_DESCRIPTOR in line 88
   variable A_NAME in line 87
   variable E_CLASS in line 67
   variable E_CLASSLOADER in line 65
   variable E_METHOD in line 66
   variable E_NEW_INSTANCE in line 70
   variable E_PACKAGE in line 68
   variable E_REFLECTION_SPEC in line 69
   variable E_TYPE in line 71
   variable elementMap in line 73
   variable scope in line 54
   variable summaries in line 60
module com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function classLoaderName2Ref(String) in line 268
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scope defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function className2Ref(String) in line 276
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
   function endElement(String,String,String) in line 211
      protection public
      29 lines of code
      3 parameters
      9 conditional paths
      uses variable elementMap defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable E_CLASSLOADER defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_METHOD defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_CLASS defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable governingClass defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_NEW_INSTANCE defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable bcIndex defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_PACKAGE defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable governingPackage defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_TYPE defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable E_REFLECTION_SPEC defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
   function processType(String) in line 198
      4 lines of code
      1 parameters
      1 conditional paths
      uses function className2Ref(String) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses function addType(int,TypeReference) defined in com::ibm::wala::ipa::summaries::ReflectionSummary
      uses variable bcIndex defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
   function startClass(String) in line 203
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable governingPackage defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable governingClass defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses function className2Ref(String) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
   function startElement(String,String,String,Attributes) in line 155
      protection public
      37 lines of code
      4 parameters
      9 conditional paths
      uses variable elementMap defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable E_CLASSLOADER defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable A_NAME defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable governingLoader defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses function classLoaderName2Ref(String) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_METHOD defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses function startMethod(Attributes) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_CLASS defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses function startClass(String) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_TYPE defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses function processType(String) defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_NEW_INSTANCE defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable A_BCINDEX defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable bcIndex defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_PACKAGE defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable governingPackage defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable E_REFLECTION_SPEC defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
   function startMethod(Attributes) in line 247
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable A_NAME defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable A_DESCRIPTOR defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
      uses variable governingClass defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable governingMethod defined in com::ibm::wala::ipa::summaries::XMLReflectionReader::SAXHandler
      uses variable summaries defined in com::ibm::wala::ipa::summaries::XMLReflectionReader
   variable bcIndex in line 150
   variable governingClass in line 142
   variable governingLoader in line 134
   variable governingMethod in line 138
   variable governingPackage in line 146
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/model/java/lang/System.java
module com::ibm::wala::model::java::lang::System
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/model/SyntheticFactory.java
module com::ibm::wala::model::SyntheticFactory
   function getObject() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/properties/DefaultPropertiesValues.java
module com::ibm::wala::properties::DefaultPropertiesValues
   variable DEFAULT_OUTPUT_DIR in line 18
      protection public
   variable DEFAULT_WALA_REPORT_FILENAME in line 17
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/properties/WalaProperties.java
module com::ibm::wala::properties::WalaProperties
   function addJarFilesFromDirectory(File,ArrayList< String >) in line 98
      13 lines of code
      2 parameters
      4 conditional paths
   function getJ2EEJarFiles() in line 70
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadProperties() defined in com::ibm::wala::properties::WalaProperties
      uses variable J2EE_DIR defined in com::ibm::wala::properties::WalaProperties
      uses function getJarsInDirectory(String) defined in com::ibm::wala::properties::WalaProperties
   function getJ2SEJarFiles() in line 55
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function loadProperties() defined in com::ibm::wala::properties::WalaProperties
      uses variable J2SE_DIR defined in com::ibm::wala::properties::WalaProperties
      uses function getJarsInDirectory(String) defined in com::ibm::wala::properties::WalaProperties
   function getJarsInDirectory(String) in line 84
      13 lines of code
      1 parameters
      2 conditional paths
      uses function addJarFilesFromDirectory(File,ArrayList< String >) defined in com::ibm::wala::properties::WalaProperties
   function getWalaHomeDir() in line 147
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
   function loadProperties() in line 114
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function loadPropertiesFromFile(String) defined in com::ibm::wala::properties::WalaProperties
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable DEFAULT_OUTPUT_DIR defined in com::ibm::wala::properties::DefaultPropertiesValues
      uses variable WALA_REPORT defined in com::ibm::wala::properties::WalaProperties
      uses variable DEFAULT_WALA_REPORT_FILENAME defined in com::ibm::wala::properties::DefaultPropertiesValues
      uses function getWalaHomeDir() defined in com::ibm::wala::properties::WalaProperties
   function loadPropertiesFromFile(String) in line 136
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function get(final String) defined in com::ibm::wala::util::internationalization::IStringBundle
   function replaceString(String,String,String) in line 44
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
   variable ECLIPSE_PLUGINS_DIR in line 38
      protection public
   variable INPUT_DIR in line 30
      protection public
   variable J2EE_DIR in line 36
      protection public
   variable J2SE_DIR in line 34
      protection public
   variable OUTPUT_DIR in line 32
      protection public
   variable WALA_REPORT in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/analysis/DeadAssignmentElimination.java
module com::ibm::wala::ssa::analysis::DeadAssignmentElimination
   function doTransformation(IR,DeadValueSystem) in line 56
      25 lines of code
      2 parameters
      8 conditional paths
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable DEBUG defined in com::ibm::wala::ssa::analysis::DeadAssignmentElimination
      uses function hasPhi() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function iteratePhis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getDef() defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function isDead(int) defined in com::ibm::wala::ssa::analysis::DeadAssignmentElimination::DeadValueSystem
      uses function removePhis(Set< SSAPhiInstruction >) defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function perform(IR) in line 44
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function solve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
      uses function doTransformation(IR,DeadValueSystem) defined in com::ibm::wala::ssa::analysis::DeadAssignmentElimination
   variable DEBUG in line 38
module com::ibm::wala::ssa::analysis::DeadAssignmentElimination::DeadValueSystem
   inherits from com::ibm::wala::fixedpoint::impl::DefaultFixedPointSolver
   function initializeVariables() in line 161
      3 lines of code
      0 parameters
      1 conditional paths
   function initializeWorkList() in line 168
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAllStatementsToWorkList() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function isDead(int) in line 176
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable trivialDead defined in com::ibm::wala::ssa::analysis::DeadAssignmentElimination::DeadValueSystem
      uses variable vars defined in com::ibm::wala::ssa::analysis::DeadAssignmentElimination::DeadValueSystem
      uses function getValue() defined in com::ibm::wala::fixpoint::BooleanVariable
   variable trivialDead in line 97
   variable vars in line 92
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/analysis/ExpandedCFGDotWriter.java
module com::ibm::wala::ssa::analysis::ExpandedCFGDotWriter
   function dotOutput(ExpandedControlFlowGraph) in line 51
      34 lines of code
      1 parameters
      6 conditional paths
      uses function iterateNodes(IntSet) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function isEntryBlock() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function isExitBlock() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function dotOutput(SSACFG) in line 86
      33 lines of code
      1 parameters
      6 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function dotOutput(ExpandedControlFlowGraph) defined in com::ibm::wala::ssa::analysis::ExpandedCFGDotWriter
      uses function isEntryBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function isExitBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
   function dotOutput(BasicBlock) in line 120
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function dotOutput(SingleInstructionBasicBlock) in line 128
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getNumber() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function getInstruction() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
   function write(String,ExpandedControlFlowGraph) in line 27
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function dotOutput(ExpandedControlFlowGraph) defined in com::ibm::wala::ssa::analysis::ExpandedCFGDotWriter
   function write(String,SSACFG) in line 39
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function dotOutput(ExpandedControlFlowGraph) defined in com::ibm::wala::ssa::analysis::ExpandedCFGDotWriter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/analysis/ExpandedControlFlowGraph.java
module com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   inherits from com::ibm::wala::cfg::ControlFlowGraph
   function addEdge(SingleInstructionBasicBlock,SingleInstructionBasicBlock) in line 678
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable successors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable predecessors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function addEdge(IBasicBlock,IBasicBlock) in line 832
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addNode(IBasicBlock) in line 918
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function basicBlockHasNonNullInstruction(BasicBlock) in line 604
      9 lines of code
      1 parameters
      3 conditional paths
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function basicBlockHasPhi(BasicBlock) in line 586
      10 lines of code
      1 parameters
      3 conditional paths
      uses function iteratePhis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function basicBlockHasPi(BasicBlock) in line 621
      10 lines of code
      1 parameters
      3 conditional paths
      uses function iteratePis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function containsNode(IBasicBlock) in line 874
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createBasicBlocks() in line 209
      46 lines of code
      0 parameters
      6 conditional paths
      uses function entry() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function setIsEntryBlock(boolean) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function getBlockInstructions(BasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function isCatchBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function exit() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function setIsExitBlock(boolean) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses variable basicBlocks defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstruction() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
   function createGraphEdges() in line 259
      34 lines of code
      0 parameters
      7 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function basicBlockHasNonNullInstruction(BasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function isEntryBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function handleLastInstruction(BasicBlock,SingleInstructionBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getBlockInstructions(BasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructionBlock(SSAInstruction) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function addEdge(SingleInstructionBasicBlock,SingleInstructionBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function isExitBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable DEBUG defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function basicBlockHasPi(BasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function processNoPi(BasicBlock,Object[]) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function processWithPi(BasicBlock,Object[]) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function debugDump() in line 1232
      31 lines of code
      0 parameters
      6 conditional paths
      uses variable ir defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructions() defined in com::ibm::wala::ssa::SSACFG
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::IR
      uses function iteratePhis() defined in com::ibm::wala::ssa::IR
   function dumpBasicBlocks() in line 170
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function dumpDotFile() in line 1224
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function dumpGraphEdges() in line 179
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable successors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable predecessors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function entry() in line 717
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function exit() in line 724
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getAllInstructions() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBasicBlockEntry(BasicBlock) in line 643
      28 lines of code
      1 parameters
      6 conditional paths
      uses function basicBlockHasPhi(BasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getFirstInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable ir defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getLastInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function isCatchBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function iteratePhis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function getBlockForInstruction(int) in line 740
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable ir defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
   function getBlockForInstruction(SSAInstruction) in line 750
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBlockInstructions(BasicBlock) in line 537
      41 lines of code
      1 parameters
      10 conditional paths
      uses function iteratePhis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function iteratePis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable DEBUG defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getFirstInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable instructions defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getCatchInstruction() defined in com::ibm::wala::ssa::SSACFG::ExceptionHandlerBasicBlock
   function getCatchBlocks() in line 731
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getCatchBlocks() defined in com::ibm::wala::ssa::SSACFG
   function getExceptionalPredecessors(IBasicBlock) in line 1264
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getExceptionalSuccessors(IBasicBlock) in line 783
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getExceptionalSuccessors(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
   function getFallThroughTarget(IBasicBlock) in line 987
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fallThroughTargets defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function getInstructionBlock(SSAInstruction) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getInstructions() in line 757
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructions() defined in com::ibm::wala::ssa::SSACFG
   function getMaxNumber() in line 881
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethod() in line 774
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getNode(int) in line 945
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getNormalPredecessors(IBasicBlock) in line 1269
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getNormalSuccessors(IBasicBlock) in line 792
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable successors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getNumber(IBasicBlock) in line 936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfNodes() in line 952
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getPredecessors(BasicBlock) in line 710
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable predecessors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function getPredNodeCount(IBasicBlock) in line 800
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable predecessors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getPredNodeNumbers(IBasicBlock) in line 1286
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(IBasicBlock) in line 904
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable predecessors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getProgramCounter(int) in line 767
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getProgramCounter(int) defined in com::ibm::wala::ssa::SSACFG
   function getSuccessors(BasicBlock) in line 699
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable successors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function getSuccNodeCount(IBasicBlock) in line 825
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable successors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getSuccNodeNumbers(IBasicBlock) in line 1280
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(IBasicBlock) in line 810
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable successors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getTrueCasePiInstructions() in line 458
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trueCasePiInstructions defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function handleLastInstruction(BasicBlock,SingleInstructionBasicBlock) in line 378
      74 lines of code
      2 parameters
      15 conditional paths
      uses function isPiBlock() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function isFallThroughEdge(SSACFG,IBasicBlock,IBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstruction() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function isExitBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function addEdge(SingleInstructionBasicBlock,SingleInstructionBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses function isEntryBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable fallThroughTargets defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function basicBlockHasNonNullInstruction(BasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getBasicBlockEntry(BasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructionBlock(SSAInstruction) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable isFallThrough defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function hasEdge(IBasicBlock,IBasicBlock) in line 1274
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function isFallThroughEdge(SSACFG,IBasicBlock,IBasicBlock) in line 967
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getSuccNodeCount(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function isFallThroughTarget(IBasicBlock,IBasicBlock) in line 975
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getFallThroughTarget(IBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function iterateNodes(IntSet) in line 867
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterateNodes() in line 885
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function processNoPi(BasicBlock,Object[]) in line 302
      18 lines of code
      2 parameters
      3 conditional paths
      uses function getInstructionBlock(SSAInstruction) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function addEdge(SingleInstructionBasicBlock,SingleInstructionBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable fallThroughTargets defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function handleLastInstruction(BasicBlock,SingleInstructionBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function processWithPi(BasicBlock,Object[]) in line 329
      39 lines of code
      2 parameters
      8 conditional paths
      uses function getInstructionBlock(SSAInstruction) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function isPiBlock() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
      uses function addEdge(SingleInstructionBasicBlock,SingleInstructionBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable fallThroughTargets defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function iteratePis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable trueCasePiInstructions defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function handleLastInstruction(BasicBlock,SingleInstructionBasicBlock) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function removeAllIncidentEdges(IBasicBlock) in line 846
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(IBasicBlock,IBasicBlock) in line 839
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(IBasicBlock) in line 853
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNode(IBasicBlock) in line 895
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(IBasicBlock) in line 927
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(IBasicBlock) in line 860
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ExpandedControlFlowGraph(IR) in line 143
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable ir defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses variable DEBUG defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function debugDump() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function getMethod() defined in com::ibm::wala::ssa::IR
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable method defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses variable successors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses variable predecessors defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function createBasicBlocks() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function createGraphEdges() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function dumpBasicBlocks() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
      uses function dumpGraphEdges() defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   variable basicBlocks in line 70
   variable cfg in line 90
   variable DEBUG in line 65
   variable entry in line 110
   variable exit in line 115
   variable fallThroughTargets in line 135
   variable instructions in line 80
   variable ir in line 95
   variable method in line 85
   variable predecessors in line 105
   variable successors in line 100
   variable trueCasePiInstructions in line 120
module com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function equals(Object) in line 506
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function BBEdge(BasicBlock,BasicBlock,boolean) defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses function equals(Object) defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable isFallThrough defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function hashCode() in line 517
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses function hashCode() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function toString() in line 524
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   function BBEdge(BasicBlock,BasicBlock,boolean) in line 493
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable dest defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
      uses variable isFallThrough defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::BBEdge
   variable dest in line 481
      protection public
   variable isFallThrough in line 471
      protection public
   variable src in line 476
      protection public
module com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
   inherits from com::ibm::wala::ssa::ISSABasicBlock
   function equals(Object) in line 1163
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable number defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
   function getFirstInstructionIndex() in line 1045
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGraphNodeId() in line 1137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInstruction() in line 1036
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLastInstruction() in line 1185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLastInstructionIndex() in line 1054
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethod() in line 1119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph
   function getNumber() in line 1128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 1171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isCatchBlock() in line 1063
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEntryBlock() in line 1110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExitBlock() in line 1101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPiBlock() in line 1072
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateAllInstructions() in line 1159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iteratePhis() in line 1151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iteratePis() in line 1155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setGraphNodeId(int) in line 1147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsEntryBlock(boolean) in line 1082
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsExitBlock(boolean) in line 1092
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 1175
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAInstruction
   function SingleInstructionBasicBlock(int,SSAInstruction) in line 1026
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable instruction in line 1006
   variable isEntry in line 1016
   variable isExit in line 1011
   variable number in line 1001
module com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionExceptionHandlerBlock
   inherits from com::ibm::wala::ssa::analysis::ExpandedControlFlowGraph::SingleInstructionBasicBlock
   function isCatchBlock() in line 1215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SingleInstructionExceptionHandlerBlock(int,SSAInstruction) in line 1205
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/AuxiliaryCache.java
module com::ibm::wala::ssa::AuxiliaryCache
   function cache(IMethod,Context,SSAOptions,Object) in line 117
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses variable nItems defined in com::ibm::wala::ssa::AuxiliaryCache
      uses variable RESET_THRESHOLD defined in com::ibm::wala::ssa::AuxiliaryCache
      uses function reset() defined in com::ibm::wala::ssa::AuxiliaryCache
      uses variable dictionary defined in com::ibm::wala::ssa::AuxiliaryCache
   function find(IMethod,Context,SSAOptions) in line 97
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable dictionary defined in com::ibm::wala::ssa::AuxiliaryCache
   function invalidate(IMethod,Context) in line 134
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dictionary defined in com::ibm::wala::ssa::AuxiliaryCache
   function reset() in line 64
      25 lines of code
      0 parameters
      6 conditional paths
      uses variable dictionary defined in com::ibm::wala::ssa::AuxiliaryCache
      uses variable nItems defined in com::ibm::wala::ssa::AuxiliaryCache
      uses function iterator() defined in com::ibm::wala::util::collections::Pair
   function wipe() in line 56
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable dictionary defined in com::ibm::wala::ssa::AuxiliaryCache
      uses variable nItems defined in com::ibm::wala::ssa::AuxiliaryCache
   variable dictionary in line 40
   variable nItems in line 51
   variable RESET_THRESHOLD in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/ConstantValue.java
module com::ibm::wala::ssa::ConstantValue
   inherits from com::ibm::wala::ssa::Value
   function equals(Object) in line 91
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function ConstantValue(Object) defined in com::ibm::wala::ssa::ConstantValue
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function getValue() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function hashCode() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function isNullConstant() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function isOneConstant() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function isStringConstant() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function isZeroConstant() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function toString() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function ConstantValue(Object) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function ConstantValue(int) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   function ConstantValue(double) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable constant defined in com::ibm::wala::ssa::ConstantValue
   variable constant in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/DefaultIRFactory.java
module com::ibm::wala::ssa::DefaultIRFactory
   inherits from com::ibm::wala::ssa::IRFactory
   function makeCFG(IMethod,Context,ClassHierarchy,WarningSet) in line 35
      protection public
      10 lines of code
      4 parameters
      3 conditional paths
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses variable syntheticFactory defined in com::ibm::wala::ssa::DefaultIRFactory
      uses function makeCFG(IMethod,Context,ClassHierarchy,WarningSet) defined in com::ibm::wala::ipa::summaries::SyntheticIRFactory
      uses variable shrikeFactory defined in com::ibm::wala::ssa::DefaultIRFactory
      uses function makeCFG(final IMethod,Context,final ClassHierarchy,final WarningSet) defined in com::ibm::wala::classLoader::ShrikeIRFactory
   function makeIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) in line 49
      protection public
      10 lines of code
      5 parameters
      3 conditional paths
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses variable syntheticFactory defined in com::ibm::wala::ssa::DefaultIRFactory
      uses function makeIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ipa::summaries::SyntheticIRFactory
      uses variable shrikeFactory defined in com::ibm::wala::ssa::DefaultIRFactory
      uses function makeIR(final IMethod,Context,final ClassHierarchy,final SSAOptions,final WarningSet) defined in com::ibm::wala::classLoader::ShrikeIRFactory
   variable shrikeFactory in line 28
   variable syntheticFactory in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/DefUse.java
module com::ibm::wala::ssa::DefUse
   function getDef(int) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defs defined in com::ibm::wala::ssa::DefUse
   function getNumberOfUses(int) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uses defined in com::ibm::wala::ssa::DefUse
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getUses(int) in line 101
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable uses defined in com::ibm::wala::ssa::DefUse
   function DefUse(final IR) in line 54
      protection public
      33 lines of code
      1 parameters
      9 conditional paths
      uses function getSymbolTable() defined in com::ibm::wala::ssa::IR
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::IR
      uses variable allInstructions defined in com::ibm::wala::ssa::DefUse
      uses variable defs defined in com::ibm::wala::ssa::DefUse
      uses function getMaxValueNumber() defined in com::ibm::wala::ssa::SymbolTable
      uses variable uses defined in com::ibm::wala::ssa::DefUse
      uses function getNumberOfDefs() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getDef() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
   variable allInstructions in line 47
   variable defs in line 36
   variable uses in line 42
module com::ibm::wala::ssa::DefUse::UseIterator
   inherits from java::util::Iterator
   function hasNext() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function next() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allInstructions defined in com::ibm::wala::ssa::DefUse
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
   function remove() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/IR.java
module com::ibm::wala::ssa::IR
   abstract class
   function getBasicBlockForCatch(SSAGetCaughtExceptionInstruction) in line 611
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getBasicBlockNumber() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses function getBasicBlock(int) defined in com::ibm::wala::ssa::SSACFG
   function getBasicBlocksForCall(CallSiteReference) in line 546
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable callSiteMapping defined in com::ibm::wala::ssa::IR
      uses function getRelated(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function getBlockForInstruction(int) defined in com::ibm::wala::ssa::SSACFG
   function getCallInstructionIndices(CallSiteReference) in line 478
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callSiteMapping defined in com::ibm::wala::ssa::IR
      uses function getRelated(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function getCalls(CallSiteReference) in line 463
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable callSiteMapping defined in com::ibm::wala::ssa::IR
      uses function getRelated(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function getControlFlowGraph() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::IR
   function getExitBlock() in line 455
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses variable exit defined in com::ibm::wala::ssa::SSACFG
   function getInstructions() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function getLocalMap() in line 84
      1 lines of code
      0 parameters
      1 conditional paths
   function getLocalNames(int,int) in line 584
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getLocalMap() defined in com::ibm::wala::ssa::IR
      uses function getLocalNames(int,int) defined in com::ibm::wala::ssa::IR::SSA2LocalMap
   function getMethod() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::IR
   function getNew(NewSiteReference) in line 486
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable newSiteMapping defined in com::ibm::wala::ssa::IR
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function getNewInstructionIndex(NewSiteReference) in line 495
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable newSiteMapping defined in com::ibm::wala::ssa::IR
   function getNumberOfParameters() in line 319
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::IR
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
   function getOptions() in line 619
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::ssa::IR
   function getParameter(int) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ssa::IR
      uses function getParameter(int) defined in com::ibm::wala::ssa::SymbolTable
   function getParameterType(int) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::IR
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
   function getParameterValueNumbers() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ssa::IR
      uses function getParameterValueNumbers() defined in com::ibm::wala::ssa::SymbolTable
   function getPEI(ProgramCounter) in line 505
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable peiMapping defined in com::ibm::wala::ssa::IR
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function getSymbolTable() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable symbolTable defined in com::ibm::wala::ssa::IR
   function isEmptyIR() in line 563
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function iterateAllInstructions() in line 447
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function iterateNormalInstructions() defined in com::ibm::wala::ssa::IR
      uses function iterateCatchInstructions() defined in com::ibm::wala::ssa::IR
      uses function iteratePhis() defined in com::ibm::wala::ssa::IR
      uses function iteratePis() defined in com::ibm::wala::ssa::IR
   function iterateCallSites() in line 510
      protection public
      30 lines of code
      0 parameters
      2 conditional paths
      uses variable callSiteMapping defined in com::ibm::wala::ssa::IR
      uses function maxKeyValue() defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getRelatedCount(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function hasNext() defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
      uses function next() defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
      uses function getRelated(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function max() defined in com::ibm::wala::util::intset::IntSet
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function iterateCatchInstructions() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateNormalInstructions() in line 406
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iteratePhis() in line 219
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function iteratePis() in line 230
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function setupLocationMap() in line 110
      16 lines of code
      0 parameters
      6 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::IR
      uses variable callSiteMapping defined in com::ibm::wala::ssa::IR
      uses function add(int,int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable newSiteMapping defined in com::ibm::wala::ssa::IR
      uses function isPEI() defined in com::ibm::wala::ssa::SSAInstruction
      uses variable peiMapping defined in com::ibm::wala::ssa::IR
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses function getProgramCounter(int) defined in com::ibm::wala::ssa::SSACFG
   function toString() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(ValueDecorator) in line 142
      protection public
      46 lines of code
      1 parameters
      11 conditional paths
      uses variable method defined in com::ibm::wala::ssa::IR
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses function toString() defined in com::ibm::wala::ssa::SSACFG
      uses function getMaxNumber() defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function getNumber() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses variable symbolTable defined in com::ibm::wala::ssa::IR
      uses function getCatchInstruction() defined in com::ibm::wala::ssa::SSACFG::ExceptionHandlerBasicBlock
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses variable instructions defined in com::ibm::wala::ssa::IR
      uses function toString() defined in com::ibm::wala::ssa::IR
   function visitAllInstructions(SSAInstruction.Visitor) in line 397
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function iterateAllInstructions() defined in com::ibm::wala::ssa::IR
   function visitNormalInstructions(SSAInstruction.Visitor) in line 385
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function iterateNormalInstructions() defined in com::ibm::wala::ssa::IR
   function IR(IMethod,SSAInstruction[],SymbolTable,SSACFG,SSAOptions) in line 99
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::IR
      uses variable instructions defined in com::ibm::wala::ssa::IR
      uses variable symbolTable defined in com::ibm::wala::ssa::IR
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses variable options defined in com::ibm::wala::ssa::IR
   variable callSiteMapping in line 68
   variable cfg in line 53
   variable instructions in line 58
   variable method in line 43
   variable newSiteMapping in line 73
   variable options in line 48
   variable peiMapping in line 78
   variable symbolTable in line 63
module com::ibm::wala::ssa::IR::DerivedNodeIterator
   inherits from java::util::Iterator
   abstract class
   function advanceBlock() in line 272
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable currentBlockIndex defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses function getMaxNumber() defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses variable currentBlockIterator defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
   function hasNext() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentBlockIndex defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
   function next() in line 260
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable currentBlockIterator defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
      uses function advanceBlock() defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
   function remove() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable currentBlockIndex in line 243
   variable currentBlockIterator in line 241
module com::ibm::wala::ssa::IR::CatchIterator
   inherits from java::util::Iterator
   function advanceBlock() in line 368
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable currentBlockIndex defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses function getMaxNumber() defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
   function hasCatch(Object) in line 342
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable currentBlockIndex defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function advanceBlock() defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
   function hasNext() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentBlockIndex defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
   function next() in line 357
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::IR
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses variable currentBlockIndex defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
      uses function getCatchInstruction() defined in com::ibm::wala::ssa::SSACFG::ExceptionHandlerBasicBlock
      uses function advanceBlock() defined in com::ibm::wala::ssa::IR::DerivedNodeIterator
   function remove() in line 364
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable currentBlockIndex in line 340
module com::ibm::wala::ssa::IR::NormalIterator
   inherits from java::util::Iterator
   function advanceIndex(int) in line 419
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function hasNext() in line 429
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 437
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::IR
   function remove() in line 433
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::ssa::IR::SSA2LocalMap
   function getLocalNames(int,int) in line 607
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/IRFactory.java
module com::ibm::wala::ssa::IRFactory
   function makeCFG(IMethod,Context,ClassHierarchy,WarningSet) in line 35
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function makeIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) in line 33
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/ISSABasicBlock.java
module com::ibm::wala::ssa::ISSABasicBlock
   inherits from com::ibm::wala::cfg::IBasicBlock
   function getLastInstruction() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isCatchBlock() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isEntryBlock() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isExitBlock() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iteratePhis() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iteratePis() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/PhiValue.java
module com::ibm::wala::ssa::PhiValue
   inherits from com::ibm::wala::ssa::Value
   function getPhiInstruction() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable phi defined in com::ibm::wala::ssa::PhiValue
   function isNullConstant() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStringConstant() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable phi defined in com::ibm::wala::ssa::PhiValue
      uses function getDef() defined in com::ibm::wala::ssa::SSAPhiInstruction
   variable phi in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/ReflectiveInvokeInstruction.java
module com::ibm::wala::ssa::ReflectiveInvokeInstruction
   inherits from com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   abstract class
   function getFunction() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ReflectiveInvokeInstruction(int,int,int,CallSiteReference) in line 26
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   variable function in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/ReflectiveJavaMemberAccess.java
module com::ibm::wala::ssa::ReflectiveJavaMemberAccess
   inherits from com::ibm::wala::ssa::ReflectiveMemberAccess
   abstract class
   function getExceptionTypes() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/ReflectiveMemberAccess.java
module com::ibm::wala::ssa::ReflectiveMemberAccess
   inherits from com::ibm::wala::ssa::SSAInstruction
   abstract class
   function getMemberRef() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
   function getObjectRef() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable objectRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
   function getUse(int) in line 48
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable objectRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
      uses variable memberRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
   function hashCode() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
      uses variable objectRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
   function isFallThrough() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable objectRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
      uses variable memberRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
   function ReflectiveMemberAccess(int,int) in line 29
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable objectRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
      uses variable memberRef defined in com::ibm::wala::ssa::ReflectiveMemberAccess
   variable memberRef in line 23
   variable objectRef in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAAbstractInvokeInstruction.java
module com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   inherits from com::ibm::wala::shrikeBT::IInvokeInstruction
   abstract class
   function getCallSite() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function getDeclaredResultType() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
   function getDeclaredTarget() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
   function getDef() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function getDef(int) in line 88
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function getException() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function getInvocationCode() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
   function getNumberOfDefs() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getNumberOfParameters() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function getNumberOfParameters() in line 101
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProgramCounter() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
   function getReceiver() in line 76
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
   function getSite() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function hasDef() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function isDispatch() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function isDispatch() defined in com::ibm::wala::classLoader::CallSiteReference
   function isFallThrough() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function isStatic() defined in com::ibm::wala::classLoader::CallSiteReference
   function toString(SymbolTable,ValueDecorator) in line 144
      protection public
      28 lines of code
      2 parameters
      5 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getInvocationString(IInvokeInstruction.IDispatch) defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function toString() defined in com::ibm::wala::types::MethodReference
      uses function getNumberOfParameters() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAInstruction
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function SSAAbstractInvokeInstruction(int,int,CallSiteReference) in line 43
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   variable exception in line 35
   variable result in line 29
   variable site in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAAbstractThrowInstruction.java
module com::ibm::wala::ssa::SSAAbstractThrowInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   abstract class
   function getException() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
   function getNumberOfUses() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 42
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
   function hashCode() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
   function isFallThrough() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
   function SSAAbstractThrowInstruction(int) in line 23
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
   variable exception in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAAbstractUnaryInstruction.java
module com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   abstract class
   function getDef() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function getDef(int) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function getNumberOfDefs() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 61
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function hasDef() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function isFallThrough() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SSAAbstractUnaryInstruction(int,int) in line 25
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   variable result in line 22
   variable val in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAArrayLengthInstruction.java
module com::ibm::wala::ssa::SSAArrayLengthInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function SSAArrayLengthInstruction(int,int) defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function getArrayRef() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function getDef() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function getDef(int) in line 59
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function getExceptionTypes() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 82
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function hasDef() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function isFallThrough() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   function visit(IVisitor) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitArrayLength(SSAArrayLengthInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAArrayLengthInstruction(int,int) in line 27
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayLengthInstruction
   variable arrayref in line 25
   variable result in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAArrayLoadInstruction.java
module com::ibm::wala::ssa::SSAArrayLoadInstruction
   inherits from com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function copyForSSA(int[],int[]) in line 31
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getIndex() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getDeclaredType() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function getDef() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
   function getDef(int) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
   function getExceptionTypes() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasDef() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getIndex() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function toString(SymbolTable,ValueDecorator) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAArrayLoadInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getIndex() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function visit(IVisitor) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitArrayLoad(SSAArrayLoadInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable result in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAArrayReferenceInstruction.java
module com::ibm::wala::ssa::SSAArrayReferenceInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   abstract class
   function getArrayRef() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function getDeclaredType() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredType defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function getIndex() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function getNumberOfUses() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 44
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable index defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function isFallThrough() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function typeIsPrimitive() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredType defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   variable arrayref in line 22
   variable declaredType in line 26
   variable index in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAArrayStoreInstruction.java
module com::ibm::wala::ssa::SSAArrayStoreInstruction
   inherits from com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function copyForSSA(int[],int[]) in line 31
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function SSAArrayStoreInstruction(int,int,int,TypeReference) defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getIndex() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable value defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
      uses function getDeclaredType() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function getExceptionTypes() in line 84
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function typeIsPrimitive() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function getNumberOfDefs() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 68
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
   function getValue() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
   function hashCode() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getIndex() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
   function toString(SymbolTable,ValueDecorator) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses function getArrayRef() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses function getIndex() defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable value defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
   function visit(IVisitor) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitArrayStore(SSAArrayStoreInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAArrayStoreInstruction(int,int,int,TypeReference) in line 26
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable arrayref defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable index defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable declaredType defined in com::ibm::wala::ssa::SSAArrayReferenceInstruction
      uses variable value defined in com::ibm::wala::ssa::SSAArrayStoreInstruction
   variable value in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSABinaryOpInstruction.java
module com::ibm::wala::ssa::SSABinaryOpInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSABinaryOpInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
   function getDef() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSABinaryOpInstruction
   function getDef(int) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSABinaryOpInstruction
   function getExceptionTypes() in line 132
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function isPEI() defined in com::ibm::wala::ssa::SSABinaryOpInstruction
   function getNumberOfDefs() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOperator() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 99
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable val1 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
   function hasDef() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSABinaryOpInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
   function isFallThrough() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DIV defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
      uses variable REM defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
   function toString(SymbolTable,ValueDecorator) in line 47
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSABinaryOpInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSABinaryOpInstruction
   function visit(IVisitor) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitBinaryOp(SSABinaryOpInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable operator in line 31
   variable result in line 25
   variable val1 in line 27
   variable val2 in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSABuilder.java
module com::ibm::wala::ssa::SSABuilder
   inherits from com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function build() in line 752
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function solve() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable localMap defined in com::ibm::wala::ssa::SSABuilder
      uses function finishLocalMap(SSABuilder) defined in com::ibm::wala::ssa::SSABuilder::SSA2LocalMap
   function getLocalMap() in line 759
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable localMap defined in com::ibm::wala::ssa::SSABuilder
   function initializeVariables() in line 230
      31 lines of code
      0 parameters
      4 conditional paths
      uses function getEntryState() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable method defined in com::ibm::wala::ssa::SSABuilder
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
      uses function getParameter(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function setLocal(int,int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Double defined in com::ibm::wala::types::TypeReference
      uses variable Long defined in com::ibm::wala::types::TypeReference
      uses function push(int) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
      uses function newSymbol() defined in com::ibm::wala::ssa::SymbolTable
   function SSABuilder(ShrikeCTMethodWrapper,ClassHierarchy,SSACFG,ShrikeCFG,SSAInstruction[],SymbolTable,boolean,boolean,WarningSet) in line 78
      protection public
      12 lines of code
      9 parameters
      2 conditional paths
      uses variable localMap defined in com::ibm::wala::ssa::SSABuilder
      uses variable cfg defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getNumberOfNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable maxLocals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function init(Meeter,final FlowProvider) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable symbolTable defined in com::ibm::wala::ssa::SSABuilder
      uses variable method defined in com::ibm::wala::ssa::SSABuilder
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable localMap in line 76
   variable method in line 65
   variable symbolTable in line 70
module com::ibm::wala::ssa::SSABuilder::SymbolTableMeeter
   inherits from com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::Meeter
   function allTheSame(int[]) in line 192
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function meetLocal(int,int[],BasicBlock) in line 151
      protection public
      33 lines of code
      3 parameters
      6 conditional paths
      uses function allTheSame(int[]) defined in com::ibm::wala::ssa::SSABuilder::SymbolTableMeeter
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function isExitBlock() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses function newPhi(int[]) defined in com::ibm::wala::ssa::SymbolTable
      uses function getPhiValue(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getPhiInstruction() defined in com::ibm::wala::ssa::PhiValue
      uses function getDef() defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function setValues(int[]) defined in com::ibm::wala::ssa::SSAPhiInstruction
   function meetStack(int,int[],BasicBlock) in line 108
      protection public
      38 lines of code
      3 parameters
      7 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isExitBlock() defined in com::ibm::wala::cfg::ShrikeCFG::BasicBlock
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function allTheSame(int[]) defined in com::ibm::wala::ssa::SSABuilder::SymbolTableMeeter
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function newPhi(int[]) defined in com::ibm::wala::ssa::SymbolTable
      uses function getPhiValue(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getPhiInstruction() defined in com::ibm::wala::ssa::PhiValue
      uses function getDef() defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function setValues(int[]) defined in com::ibm::wala::ssa::SSAPhiInstruction
   function meetStackAtCatchBlock(BasicBlock) in line 213
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function newSymbol() defined in com::ibm::wala::ssa::SymbolTable
      uses function getException() defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
module com::ibm::wala::ssa::SSABuilder::SymbolicPropagator
   inherits from BasicStackFlowProvider
   function emitInstruction(SSAInstruction) in line 311
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getNumberOfDefs() defined in com::ibm::wala::ssa::SSAInstruction
      uses function getDef() defined in com::ibm::wala::ssa::SSAInstruction
   function getCurrentInstruction() in line 324
      3 lines of code
      0 parameters
      1 conditional paths
   function getInstructions() in line 738
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
   function maybeInsertPi(SSAInstruction,int) in line 696
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function maybeInsertPi(SSAInstruction,int,int) in line 709
      10 lines of code
      3 parameters
      4 conditional paths
      uses function isBooleanConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function isNullConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function isIntegerConstant(int) defined in com::ibm::wala::ssa::SymbolTable
   function needsEdgeFlow() in line 307
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function reuseOrCreateDef() in line 332
      7 lines of code
      0 parameters
      2 conditional paths
      uses function newSymbol() defined in com::ibm::wala::ssa::SymbolTable
   function reuseOrCreateException() in line 345
      14 lines of code
      0 parameters
      20 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function newSymbol() defined in com::ibm::wala::ssa::SymbolTable
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Null defined in com::ibm::wala::types::TypeReference
      uses function getNullConstant() defined in com::ibm::wala::ssa::SymbolTable
      uses variable Int defined in com::ibm::wala::types::TypeReference
      uses function getConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable Long defined in com::ibm::wala::types::TypeReference
      uses variable Float defined in com::ibm::wala::types::TypeReference
      uses variable Double defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangString defined in com::ibm::wala::types::TypeReference
      uses variable JavaLangClass defined in com::ibm::wala::types::TypeReference
      uses variable localMap defined in com::ibm::wala::ssa::SSABuilder
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function getType() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getDimensionality() defined in com::ibm::wala::types::TypeReference
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::StoreInstruction
   function reuseOrCreatePi(SSAInstruction,int) in line 680
      15 lines of code
      2 parameters
      2 conditional paths
      uses function getBlockForInstruction(int) defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function newSymbol() defined in com::ibm::wala::ssa::SymbolTable
   function SymbolicPropagator(ShrikeCFG,SSAInstruction[],SymbolTable,SSA2LocalMap,SSACFG,boolean,boolean,boolean,boolean) in line 289
      protection public
      17 lines of code
      9 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses variable localMap defined in com::ibm::wala::ssa::SSABuilder
      uses function init(Meeter,final FlowProvider) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   variable addPiForDispatchSelect in line 273
   variable addPiForFieldSelect in line 271
   variable addPiForInstanceOf in line 267
   variable addPiForNullCheck in line 269
   variable creators in line 285
module com::ibm::wala::ssa::SSABuilder::SymbolicPropagator::NodeVisitor
   inherits from BasicStackMachineVisitor
   function visitArrayLength(com.ibm.wala.shrikeBT.ArrayLengthInstruction) in line 368
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitArrayLoad(com.ibm.wala.shrikeBT.ArrayLoadInstruction) in line 380
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function visitArrayStore(com.ibm.wala.shrikeBT.ArrayStoreInstruction) in line 393
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitBinaryOp(com.ibm.wala.shrikeBT.BinaryOpInstruction) in line 405
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitCheckCast(com.ibm.wala.shrikeBT.CheckCastInstruction) in line 417
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitComparison(com.ibm.wala.shrikeBT.ComparisonInstruction) in line 429
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalBranch(com.ibm.wala.shrikeBT.ConditionalBranchInstruction) in line 441
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function visitConstant(com.ibm.wala.shrikeBT.ConstantInstruction) in line 452
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
   function visitConversion(com.ibm.wala.shrikeBT.ConversionInstruction) in line 486
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function visitGet(com.ibm.wala.shrikeBT.GetInstruction) in line 501
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function visitGoto(com.ibm.wala.shrikeBT.GotoInstruction) in line 519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceof(com.ibm.wala.shrikeBT.InstanceofInstruction) in line 526
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitInvoke(com.ibm.wala.shrikeBT.InvokeInstruction) in line 538
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function visitLocalStore(StoreInstruction) in line 563
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitMonitor(com.ibm.wala.shrikeBT.MonitorInstruction) in line 573
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitNew(com.ibm.wala.shrikeBT.NewInstruction) in line 582
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function visitPut(com.ibm.wala.shrikeBT.PutInstruction) in line 605
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function visitReturn(com.ibm.wala.shrikeBT.ReturnInstruction) in line 622
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function visitShift(com.ibm.wala.shrikeBT.ShiftInstruction) in line 635
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(com.ibm.wala.shrikeBT.SwitchInstruction) in line 646
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitThrow(com.ibm.wala.shrikeBT.ThrowInstruction) in line 656
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function visitUnaryOp(com.ibm.wala.shrikeBT.UnaryOpInstruction) in line 667
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::ssa::SSABuilder::SymbolicPropagator::EdgeVisitor
   inherits from com::ibm::wala::shrikeBT::Instruction::Visitor
   function visitConditionalBranch(com.ibm.wala.shrikeBT.ConditionalBranchInstruction) in line 730
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(com.ibm.wala.shrikeBT.SwitchInstruction) in line 725
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::ssa::SSABuilder::SSA2LocalMap
   inherits from com::ibm::wala::ssa::IR::SSA2LocalMap
   function allocateNewLocalsArray() in line 895
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable maxLocals defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable OPTIMISTIC defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses variable BOTTOM defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function extractIndices(int[],int) in line 906
      20 lines of code
      2 parameters
      6 conditional paths
   function findLocalsForValueNumber(int,int) in line 876
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ShrikeCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses function allocateNewLocalsArray() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getY() defined in com::ibm::wala::util::intset::IntPair
      uses function getX() defined in com::ibm::wala::util::intset::IntPair
   function finishLocalMap(SSABuilder) in line 828
      8 lines of code
      1 parameters
      2 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getIn(ShrikeCFG.BasicBlock) defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
      uses function getLocals() defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine::MachineState
   function getLocalNames(int,int) in line 843
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getMethod() defined in com::ibm::wala::cfg::AbstractCFG
      uses function hasLocalVariableTable() defined in com::ibm::wala::classLoader::IMethod
      uses function getLocalVariableName(int,int) defined in com::ibm::wala::classLoader::ShrikeCTMethodWrapper
      uses function getBytecodeIndex(int) defined in com::ibm::wala::classLoader::ShrikeBTMethodWrapper
   variable block2LocalState in line 783
   variable localStoreMap in line 777
   variable maxLocals in line 788
   variable shrikeCFG in line 771
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSACache.java
module com::ibm::wala::ssa::SSACache
   function findOrCreateDU(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) in line 93
      protection public
      14 lines of code
      5 parameters
      3 conditional paths
      uses function isAbstract() defined in com::ibm::wala::classLoader::IMethod
      uses function isNative() defined in com::ibm::wala::classLoader::IMethod
      uses variable duCache defined in com::ibm::wala::ssa::SSACache
      uses function find(IMethod,Context,SSAOptions) defined in com::ibm::wala::ssa::AuxiliaryCache
      uses function findOrCreateIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::SSACache
      uses function cache(IMethod,Context,SSAOptions,Object) defined in com::ibm::wala::ssa::AuxiliaryCache
   function findOrCreateDU(IR,Context) in line 111
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable duCache defined in com::ibm::wala::ssa::SSACache
      uses function find(IMethod,Context,SSAOptions) defined in com::ibm::wala::ssa::AuxiliaryCache
      uses function getMethod() defined in com::ibm::wala::ssa::IR
      uses function getOptions() defined in com::ibm::wala::ssa::IR
      uses function cache(IMethod,Context,SSAOptions,Object) defined in com::ibm::wala::ssa::AuxiliaryCache
   function findOrCreateIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) in line 66
      protection public
      17 lines of code
      5 parameters
      4 conditional paths
      uses function isAbstract() defined in com::ibm::wala::classLoader::IMethod
      uses function isNative() defined in com::ibm::wala::classLoader::IMethod
      uses variable DISABLE defined in com::ibm::wala::ssa::SSACache
      uses variable factory defined in com::ibm::wala::ssa::SSACache
      uses function makeIR(IMethod,Context,ClassHierarchy,SSAOptions,WarningSet) defined in com::ibm::wala::ssa::IRFactory
      uses variable irCache defined in com::ibm::wala::ssa::SSACache
      uses function find(IMethod,Context,SSAOptions) defined in com::ibm::wala::ssa::AuxiliaryCache
      uses function cache(IMethod,Context,SSAOptions,Object) defined in com::ibm::wala::ssa::AuxiliaryCache
   function invalidate(IMethod,Context) in line 137
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function invalidateIR(IMethod,Context) defined in com::ibm::wala::ssa::SSACache
      uses function invalidateDU(IMethod,Context) defined in com::ibm::wala::ssa::SSACache
   function invalidateDU(IMethod,Context) in line 133
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable duCache defined in com::ibm::wala::ssa::SSACache
      uses function invalidate(IMethod,Context) defined in com::ibm::wala::ssa::AuxiliaryCache
   function invalidateIR(IMethod,Context) in line 129
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable irCache defined in com::ibm::wala::ssa::SSACache
      uses function invalidate(IMethod,Context) defined in com::ibm::wala::ssa::AuxiliaryCache
   function wipe() in line 124
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable irCache defined in com::ibm::wala::ssa::SSACache
      uses function wipe() defined in com::ibm::wala::ssa::AuxiliaryCache
      uses variable duCache defined in com::ibm::wala::ssa::SSACache
   function SSACache(IRFactory) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in com::ibm::wala::ssa::SSACache
   variable DISABLE in line 32
   variable duCache in line 47
   variable factory in line 37
   variable irCache in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSACFG.java
module com::ibm::wala::ssa::SSACFG
   inherits from com::ibm::wala::cfg::ControlFlowGraph
   function addEdge(IBasicBlock,IBasicBlock) in line 882
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addNode(IBasicBlock) in line 872
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsNode(IBasicBlock) in line 938
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
   function createBasicBlocks(AbstractCFG) in line 152
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
      uses function getNumberOfNodes() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getMaxNumber() defined in com::ibm::wala::cfg::AbstractCFG
      uses function getCatchBlocks() defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
      uses function exit() defined in com::ibm::wala::ssa::SSACFG
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable exit defined in com::ibm::wala::cfg::AbstractCFG
   function entry() in line 734
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function equals(Object) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function equals(Object) defined in com::ibm::wala::cfg::AbstractCFG
   function exit() in line 743
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBasicBlock(int) in line 1121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function getBlockForInstruction(int) in line 169
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getBlockForInstruction(int) defined in com::ibm::wala::cfg::ControlFlowGraph
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function getCatchBlocks() in line 716
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getCatchBlocks() defined in com::ibm::wala::cfg::AbstractCFG
   function getExceptionalPredecessors(IBasicBlock) in line 976
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getExceptionalPredecessors(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getExceptionalSuccessors(IBasicBlock) in line 960
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getExceptionalSuccessors(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getSuccNodeCount(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getInstructions() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::SSACFG
   function getMaxNumber() in line 771
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function getMethod() in line 951
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::SSACFG
   function getNode(int) in line 762
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function getNormalPredecessors(IBasicBlock) in line 1029
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getNormalPredecessors(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getPredNodeCount(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getNormalSuccessors(IBasicBlock) in line 1013
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getNormalSuccessors(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getSuccNodeCount(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getNumber(IBasicBlock) in line 752
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function getNumberOfNodes() in line 789
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNumberOfNodes() defined in com::ibm::wala::cfg::AbstractCFG
   function getPredNodeCount(IBasicBlock) in line 824
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getPredNodeCount(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getPredNodeNumbers(IBasicBlock) in line 1085
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(IBasicBlock) in line 798
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getPredNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function getProgramCounter(int) in line 928
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getProgramCounter(int) defined in com::ibm::wala::cfg::ControlFlowGraph
   function getSuccNodeCount(IBasicBlock) in line 861
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getSuccNodeCount(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getSuccNodeNumbers(IBasicBlock) in line 1079
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getSuccNodeNumbers(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function getSuccNodes(IBasicBlock) in line 835
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function hasEdge(IBasicBlock,IBasicBlock) in line 1069
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function hasExceptionalEdge(IBasicBlock,IBasicBlock) in line 989
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function isExitBlock() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable src defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getExceptionalToExit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function hasExceptionalEdge(IBasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function hashCode() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function hashCode() defined in com::ibm::wala::cfg::AbstractCFG
   function hasNormalEdge(IBasicBlock,IBasicBlock) in line 1000
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function isExitBlock() defined in com::ibm::wala::cfg::IBasicBlock
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable src defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNormalToExit() defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function hasNormalEdge(IBasicBlock,IBasicBlock) defined in com::ibm::wala::cfg::AbstractCFG
   function isCatchBlock(int) in line 725
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function isCatchBlock(int) defined in com::ibm::wala::cfg::AbstractCFG
   function iterateNodes() in line 780
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
   function iterateNodes(IntSet) in line 1045
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function recordExceptionTypes(Set< ExceptionHandler >,IClassLoader) in line 122
      29 lines of code
      2 parameters
      6 conditional paths
      uses function getCatchClass() defined in com::ibm::wala::shrikeBT::ExceptionHandler
      uses variable JavaLangThrowable defined in com::ibm::wala::types::TypeReference
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function lookupClass(TypeName) defined in com::ibm::wala::classLoader::IClassLoader
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses variable warnings defined in com::ibm::wala::ssa::SSACFG
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeReference,IMethod) defined in com::ibm::wala::ssa::SSACFG::ExceptionLoadFailure
      uses variable method defined in com::ibm::wala::ssa::SSACFG
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getHandler() defined in com::ibm::wala::shrikeBT::ExceptionHandler
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getBlockForInstruction(int) defined in com::ibm::wala::ssa::SSACFG
      uses function addCaughtExceptionType(TypeReference) defined in com::ibm::wala::ssa::SSACFG::ExceptionHandlerBasicBlock
   function removeAllIncidentEdges(IBasicBlock) in line 897
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(IBasicBlock,IBasicBlock) in line 887
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(IBasicBlock) in line 1053
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeNode(IBasicBlock) in line 918
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(IBasicBlock) in line 907
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(IBasicBlock) in line 1063
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 701
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function exit() defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::ssa::SSACFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getSuccNodes(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
   function SSACFG(SSACFG) in line 73
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable warnings defined in com::ibm::wala::ssa::SSACFG
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses variable method defined in com::ibm::wala::ssa::SSACFG
      uses variable basicBlocks defined in com::ibm::wala::ssa::SSACFG
      uses variable instructions defined in com::ibm::wala::ssa::SSACFG
   function SSACFG(IMethod,AbstractCFG,SSAInstruction[],WarningSet) in line 86
      protection public
      22 lines of code
      4 parameters
      5 conditional paths
      uses variable warnings defined in com::ibm::wala::ssa::SSACFG
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses variable DEBUG defined in com::ibm::wala::ssa::SSACFG
      uses variable method defined in com::ibm::wala::ssa::SSACFG
      uses function toString() defined in com::ibm::wala::cfg::AbstractCFG
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function createBasicBlocks(AbstractCFG) defined in com::ibm::wala::ssa::SSACFG
      uses function recordExceptionTypes(Set< ExceptionHandler >,IClassLoader) defined in com::ibm::wala::ssa::SSACFG
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses variable instructions defined in com::ibm::wala::ssa::SSACFG
   variable basicBlocks in line 58
   variable cfg in line 66
   variable DEBUG in line 56
   variable exit in line 71
   variable instructions in line 60
   variable method in line 62
   variable piInstructions in line 184
   variable warnings in line 64
module com::ibm::wala::ssa::SSACFG::RefPathKey
   function equals(Object) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable src defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable path defined in com::ibm::wala::ssa::SSACFG::RefPathKey
   function hashCode() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable path defined in com::ibm::wala::ssa::SSACFG::RefPathKey
   variable n in line 187
   variable path in line 191
   variable src in line 189
module com::ibm::wala::ssa::SSACFG::BasicBlock
   inherits from com::ibm::wala::ssa::ISSABasicBlock
   function addPhiForLocal(int,SSAPhiInstruction) in line 343
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
   function addPhiForStackSlot(int,SSAPhiInstruction) in line 325
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
   function compressPhis() in line 451
      32 lines of code
      0 parameters
      9 conditional paths
   function countNonNull(SSAPhiInstruction[]) in line 484
      9 lines of code
      1 parameters
      3 conditional paths
   function equals(Object) in line 540
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getMethod() defined in com::ibm::wala::ssa::SSACFG
      uses function getMethod() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function equals(Object) defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getGraph() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function getAllInstructions() in line 429
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::SSACFG
   function getFirstInstructionIndex() in line 239
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getFirstInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
   function getGraph() in line 531
      3 lines of code
      0 parameters
      1 conditional paths
   function getGraphNodeId() in line 510
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLastInstruction() in line 588
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::ssa::SSACFG
   function getLastInstructionIndex() in line 256
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getLastInstructionIndex() defined in com::ibm::wala::cfg::IBasicBlock
   function getMethod() in line 557
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::SSACFG
   function getNumber() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPhiForLocal(int) in line 307
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
   function getPhiForStackSlot(int) in line 289
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function hashCode() in line 566
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getNode(int) defined in com::ibm::wala::cfg::AbstractCFG
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
   function hasPhi() in line 501
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isCatchBlock() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in com::ibm::wala::ssa::SSACFG
      uses function getCatchBlocks() defined in com::ibm::wala::cfg::AbstractCFG
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
   function isEntryBlock() in line 584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function entry() defined in com::ibm::wala::ssa::SSACFG
   function isExitBlock() in line 575
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exit defined in com::ibm::wala::ssa::SSACFG
   function iterateAllInstructions() in line 494
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iteratePhis() in line 266
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
   function iteratePis() in line 422
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function removePhis(Set< SSAPhiInstruction >) in line 360
      protection public
      50 lines of code
      1 parameters
      15 conditional paths
      uses variable n defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable path defined in com::ibm::wala::ssa::SSACFG::RefPathKey
      uses variable piInstructions defined in com::ibm::wala::ssa::SSACFG
   function setGraphNodeId(int) in line 519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 526
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable method defined in com::ibm::wala::ssa::SSACFG
      uses function getSignature() defined in com::ibm::wala::classLoader::IMethod
   function BasicBlock(int) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable blockPiInstructions in line 415
   variable initialCapacity in line 226
   variable localPhis in line 224
   variable number in line 217
   variable stackSlotPhis in line 222
module com::ibm::wala::ssa::SSACFG::ExceptionHandlerBasicBlock
   inherits from com::ibm::wala::ssa::SSACFG::BasicBlock
   function addCaughtExceptionType(TypeReference) in line 672
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function getAllInstructions() in line 690
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getCatchInstruction() in line 622
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCaughtExceptionTypes() in line 641
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function setCatchInstruction(SSAGetCaughtExceptionInstruction) in line 632
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 662
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumber(IBasicBlock) defined in com::ibm::wala::ssa::SSACFG
      uses variable method defined in com::ibm::wala::ssa::SSACFG
      uses function getSignature() defined in com::ibm::wala::classLoader::IMethod
   function ExceptionHandlerBasicBlock(int) in line 613
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable catchInstruction in line 611
   variable exceptionTypes in line 602
   variable initialCapacity in line 604
   variable nExceptionTypes in line 606
module com::ibm::wala::ssa::SSACFG::ExceptionLoadFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeReference,IMethod) in line 1112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::SSACFG
   function getMsg() in line 1108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ssa::SSACFG
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSACheckCastInstruction.java
module com::ibm::wala::ssa::SSACheckCastInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses variable val defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses variable declaredResultType defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function getDeclaredResultType() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredResultType defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function getDef() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function getDef(int) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function getExceptionTypes() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResult() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function getUse(int) in line 83
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable val defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function getVal() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function hasDef() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses variable val defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function isFallThrough() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSACheckCastInstruction
      uses variable val defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function toString() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredResultType defined in com::ibm::wala::ssa::SSACheckCastInstruction
   function visit(IVisitor) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitCheckCast(SSACheckCastInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable declaredResultType in line 29
   variable result in line 25
   variable val in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAComparisonInstruction.java
module com::ibm::wala::ssa::SSAComparisonInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable opcode defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAComparisonInstruction
   function getDef() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAComparisonInstruction
   function getDef(int) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAComparisonInstruction
   function getExceptionTypes() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOpcode() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable opcode defined in com::ibm::wala::ssa::SSAComparisonInstruction
   function getUse(int) in line 85
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable val1 defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAComparisonInstruction
   function hasDef() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAComparisonInstruction
   function isFallThrough() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAComparisonInstruction
      uses variable opcode defined in com::ibm::wala::ssa::SSAComparisonInstruction
   function visit(IVisitor) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitComparison(SSAComparisonInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable opcode in line 28
   variable result in line 22
   variable val1 in line 24
   variable val2 in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAConditionalBranchInstruction.java
module com::ibm::wala::ssa::SSAConditionalBranchInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
   function equals(Object) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExceptionTypes() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOperator() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 83
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable val1 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
   function hashCode() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable val1 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
   function isFallThrough() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isIntegerComparison() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable Int defined in com::ibm::wala::types::TypeReference
   function isObjectComparison() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
   function toString(SymbolTable,ValueDecorator) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable val1 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
      uses variable val2 defined in com::ibm::wala::ssa::SSAConditionalBranchInstruction
   function visit(IVisitor) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitConditionalBranch(SSAConditionalBranchInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable operator in line 24
   variable type in line 30
   variable val1 in line 26
   variable val2 in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAConversionInstruction.java
module com::ibm::wala::ssa::SSAConversionInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAConversionInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAConversionInstruction
      uses variable fromType defined in com::ibm::wala::ssa::SSAConversionInstruction
      uses variable toType defined in com::ibm::wala::ssa::SSAConversionInstruction
   function getDef() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAConversionInstruction
   function getDef(int) in line 65
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAConversionInstruction
   function getExceptionTypes() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFromType() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fromType defined in com::ibm::wala::ssa::SSAConversionInstruction
   function getNumberOfDefs() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getToType() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable toType defined in com::ibm::wala::ssa::SSAConversionInstruction
   function getUse(int) in line 92
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable val defined in com::ibm::wala::ssa::SSAConversionInstruction
   function hasDef() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAConversionInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAConversionInstruction
   function isFallThrough() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAConversionInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAConversionInstruction
   function visit(IVisitor) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitConversion(SSAConversionInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable fromType in line 27
   variable result in line 23
   variable toType in line 29
   variable val in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAFieldAccessInstruction.java
module com::ibm::wala::ssa::SSAFieldAccessInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   abstract class
   function getDeclaredField() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function getDeclaredFieldType() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
   function getRef() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function isPEI() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function SSAFieldAccessInstruction(FieldReference,int) in line 27
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable ref defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   variable field in line 25
   variable ref in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAGetCaughtExceptionInstruction.java
module com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 30
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable bbNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses variable exceptionValueNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function getBasicBlockNumber() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bbNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function getDef() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionValueNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function getDef(int) in line 69
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionValueNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function getException() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionValueNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function getExceptionTypes() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasDef() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionValueNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function isFallThrough() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 37
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable exceptionValueNumber defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
   function visit(IVisitor) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitGetCaughtException(SSAGetCaughtExceptionInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable bbNumber in line 24
   variable exceptionValueNumber in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAGetInstruction.java
module com::ibm::wala::ssa::SSAGetInstruction
   inherits from com::ibm::wala::ssa::SSAFieldAccessInstruction
   function copyForSSA(int[],int[]) in line 34
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function SSAGetInstruction(int,int,FieldReference) defined in com::ibm::wala::ssa::SSAGetInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAGetInstruction
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function getDef() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAGetInstruction
   function getDef(int) in line 72
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAGetInstruction
   function getExceptionTypes() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function getUse(int) in line 91
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function hasDef() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAGetInstruction
   function isFallThrough() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 48
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAGetInstruction
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function visit(IVisitor) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitGet(SSAGetInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAGetInstruction(int,int,FieldReference) in line 26
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable ref defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAGetInstruction
   function SSAGetInstruction(int,FieldReference) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAGetInstruction
   variable result in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAGotoInstruction.java
module com::ibm::wala::ssa::SSAGotoInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getExceptionTypes() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFallThrough() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visit(IVisitor) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitGoto(SSAGotoInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAInstanceofInstruction.java
module com::ibm::wala::ssa::SSAInstanceofInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 32
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAInstanceofInstruction
      uses variable ref defined in com::ibm::wala::ssa::SSAInstanceofInstruction
      uses variable checkedType defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function getCheckedType() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checkedType defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function getDef() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function getDef(int) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function getExceptionTypes() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function getUse(int) in line 83
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable ref defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function hasDef() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in com::ibm::wala::ssa::SSAInstanceofInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function isFallThrough() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAInstanceofInstruction
      uses variable ref defined in com::ibm::wala::ssa::SSAInstanceofInstruction
      uses variable checkedType defined in com::ibm::wala::ssa::SSAInstanceofInstruction
   function visit(IVisitor) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInstanceof(SSAInstanceofInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable checkedType in line 25
   variable ref in line 24
   variable result in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAInstruction.java
module com::ibm::wala::ssa::SSAInstruction
   inherits from com::ibm::wala::shrikeBT::IInstruction
   abstract class
   function copyForSSA(int[],int[]) in line 33
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function equals(Object) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDef() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef(int) in line 187
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getExceptionTypes() in line 230
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 212
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::ssa::SSAInstruction
   function getValueString(SymbolTable,ValueDecorator,int) in line 52
      11 lines of code
      3 parameters
      3 conditional paths
      uses function getValueString(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function getValueString(int) defined in com::ibm::wala::ssa::ValueDecorator
      uses function visit(IVisitor) defined in com::ibm::wala::ssa::SSAInstruction
   function hasDef() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 217
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFallThrough() in line 235
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getExceptionTypes() defined in com::ibm::wala::ssa::SSAInstruction
      uses function isFallThrough() defined in com::ibm::wala::ssa::SSAInstruction
   function toString(SymbolTable,ValueDecorator) in line 41
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(IVisitor) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function SSAInstruction() in line 30
      2 lines of code
      0 parameters
      1 conditional paths
      uses function copyForSSA(int[],int[]) defined in com::ibm::wala::ssa::SSAInstruction
      uses function toString() defined in com::ibm::wala::ssa::SSAInstruction
module com::ibm::wala::ssa::SSAInstruction::IVisitor
   function visitArrayLength(SSAArrayLengthInstruction) in line 89
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitArrayLoad(SSAArrayLoadInstruction) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitArrayStore(SSAArrayStoreInstruction) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitBinaryOp(SSABinaryOpInstruction) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitCheckCast(SSACheckCastInstruction) in line 92
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitComparison(SSAComparisonInstruction) in line 81
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalBranch(SSAConditionalBranchInstruction) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitConversion(SSAConversionInstruction) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitGet(SSAGetInstruction) in line 85
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitGetCaughtException(SSAGetCaughtExceptionInstruction) in line 96
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitGoto(SSAGotoInstruction) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceof(SSAInstanceofInstruction) in line 93
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitInvoke(SSAInvokeInstruction) in line 87
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitLoadClass(SSALoadClassInstruction) in line 97
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitMonitor(SSAMonitorInstruction) in line 91
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitNew(SSANewInstruction) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitPhi(SSAPhiInstruction) in line 94
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitPi(SSAPiInstruction) in line 95
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitPut(SSAPutInstruction) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitReturn(SSAReturnInstruction) in line 84
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(SSASwitchInstruction) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitThrow(SSAThrowInstruction) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitUnaryOp(SSAUnaryOpInstruction) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::ssa::SSAInstruction::Visitor
   inherits from com::ibm::wala::ssa::SSAInstruction::IVisitor
   abstract class
   function visitArrayLength(SSAArrayLengthInstruction) in line 146
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayLoad(SSAArrayLoadInstruction) in line 107
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayStore(SSAArrayStoreInstruction) in line 110
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitBinaryOp(SSABinaryOpInstruction) in line 113
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCheckCast(SSACheckCastInstruction) in line 155
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitComparison(SSAComparisonInstruction) in line 122
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalBranch(SSAConditionalBranchInstruction) in line 125
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConversion(SSAConversionInstruction) in line 119
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitGet(SSAGetInstruction) in line 134
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitGetCaughtException(SSAGetCaughtExceptionInstruction) in line 167
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitGoto(SSAGotoInstruction) in line 104
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceof(SSAInstanceofInstruction) in line 158
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitInvoke(SSAInvokeInstruction) in line 140
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLoadClass(SSALoadClassInstruction) in line 169
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitMonitor(SSAMonitorInstruction) in line 152
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitNew(SSANewInstruction) in line 143
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPhi(SSAPhiInstruction) in line 161
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPi(SSAPiInstruction) in line 164
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPut(SSAPutInstruction) in line 137
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitReturn(SSAReturnInstruction) in line 131
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(SSASwitchInstruction) in line 128
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitThrow(SSAThrowInstruction) in line 149
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitUnaryOp(SSAUnaryOpInstruction) in line 116
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAInstructionFactory.java
module com::ibm::wala::ssa::SSAInstructionFactory
   function ArrayLengthInstruction(int,int) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ArrayLoadInstruction(int,int,int,TypeReference) in line 37
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function ArrayStoreInstruction(int,int,int,TypeReference) in line 40
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function BinaryOpInstruction(BinaryOpInstruction.IOperator,int,int,int) in line 43
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function CheckCastInstruction(int,int,TypeReference) in line 46
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function ComparisonInstruction(short,int,int,int) in line 49
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function ConditionalBranchInstruction(ConditionalBranchInstruction.IOperator,TypeReference,int,int) in line 52
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function ConversionInstruction(int,int,TypeReference,TypeReference) in line 55
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function GetCaughtExceptionInstruction(int,int) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function GetInstruction(int,FieldReference) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function GetInstruction(int,int,FieldReference) in line 64
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function GotoInstruction() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstanceofInstruction(int,int,TypeReference) in line 70
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function InvokeInstruction(int,int[],int,CallSiteReference) in line 73
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function InvokeInstruction(int[],int,CallSiteReference) in line 76
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function MonitorInstruction(int,boolean) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function NewInstruction(int,NewSiteReference) in line 82
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function PhiInstruction(int,int[]) in line 85
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function PutInstruction(int,int,FieldReference) in line 88
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function PutInstruction(int,FieldReference) in line 91
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ReturnInstruction() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ReturnInstruction(int,boolean) in line 97
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function SwitchInstruction(int,int,int[]) in line 100
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function ThrowInstruction(int) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function UnaryOpInstruction(UnaryOpInstruction.IOperator,int,int) in line 106
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function SSAInstructionFactory() in line 32
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAInvokeInstruction.java
module com::ibm::wala::ssa::SSAInvokeInstruction
   inherits from com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function assertParamsKosher(int,int[],CallSiteReference) in line 56
      protection public
      23 lines of code
      3 parameters
      7 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function isStatic() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
      uses variable params defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function copyForSSA(int[],int[]) in line 49
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function SSAInvokeInstruction(int,int[],int,CallSiteReference) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable params defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function equals(Object) in line 140
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function SSAInvokeInstruction(int,int[],int,CallSiteReference) defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function getExceptionTypes() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfParameters() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumberOfUses() defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function getNumberOfUses() in line 90
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable params defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function getInvocationCode() defined in com::ibm::wala::classLoader::CallSiteReference
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
   function getUse(int) in line 110
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable params defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function hashCode() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses function hashCode() defined in com::ibm::wala::classLoader::ProgramCounter
   function visit(IVisitor) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInvoke(SSAInvokeInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAInvokeInstruction(int,int[],int,CallSiteReference) in line 34
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable params defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function assertParamsKosher(int,int[],CallSiteReference) defined in com::ibm::wala::ssa::SSAInvokeInstruction
   function SSAInvokeInstruction(int[],int,CallSiteReference) in line 45
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable params defined in com::ibm::wala::ssa::SSAInvokeInstruction
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
      uses variable site defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   variable params in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSALoadClassInstruction.java
module com::ibm::wala::ssa::SSALoadClassInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function SSALoadClassInstruction(int,TypeReference) defined in com::ibm::wala::ssa::SSALoadClassInstruction
      uses variable lval defined in com::ibm::wala::ssa::SSALoadClassInstruction
      uses variable typeRef defined in com::ibm::wala::ssa::SSALoadClassInstruction
   function getDef() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lval defined in com::ibm::wala::ssa::SSALoadClassInstruction
   function getDef(int) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable lval defined in com::ibm::wala::ssa::SSALoadClassInstruction
   function getExceptionTypes() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadClassExceptions defined in com::ibm::wala::ssa::SSALoadClassInstruction
   function getLoadedClass() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeRef defined in com::ibm::wala::ssa::SSALoadClassInstruction
   function getNumberOfDefs() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeRef defined in com::ibm::wala::ssa::SSALoadClassInstruction
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
      uses variable lval defined in com::ibm::wala::ssa::SSALoadClassInstruction
   function isFallThrough() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable lval defined in com::ibm::wala::ssa::SSALoadClassInstruction
      uses variable typeRef defined in com::ibm::wala::ssa::SSALoadClassInstruction
   function visit(IVisitor) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitLoadClass(SSALoadClassInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSALoadClassInstruction(int,TypeReference) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable lval defined in com::ibm::wala::ssa::SSALoadClassInstruction
      uses variable typeRef defined in com::ibm::wala::ssa::SSALoadClassInstruction
   variable loadClassExceptions in line 21
   variable lval in line 23
   variable typeRef in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAMonitorInstruction.java
module com::ibm::wala::ssa::SSAMonitorInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 30
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable ref defined in com::ibm::wala::ssa::SSAMonitorInstruction
      uses variable isEnter defined in com::ibm::wala::ssa::SSAMonitorInstruction
   function getExceptionTypes() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in com::ibm::wala::ssa::SSAMonitorInstruction
   function getUse(int) in line 56
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable ref defined in com::ibm::wala::ssa::SSAMonitorInstruction
   function hashCode() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in com::ibm::wala::ssa::SSAMonitorInstruction
   function isFallThrough() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isMonitorEnter() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isEnter defined in com::ibm::wala::ssa::SSAMonitorInstruction
   function isPEI() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable ref defined in com::ibm::wala::ssa::SSAMonitorInstruction
   function visit(IVisitor) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitMonitor(SSAMonitorInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable isEnter in line 24
   variable ref in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSANewInstruction.java
module com::ibm::wala::ssa::SSANewInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 62
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable params defined in com::ibm::wala::ssa::SSANewInstruction
      uses function SSANewInstruction(int,NewSiteReference) defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
   function equals(Object) in line 164
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function SSANewInstruction(int,NewSiteReference) defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
      uses function equals(Object) defined in com::ibm::wala::classLoader::ProgramCounter
   function getConcreteType() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
   function getDef() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
   function getDef(int) in line 94
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
   function getExceptionTypes() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
   function getNewSite() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
   function getNumberOfDefs() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable params defined in com::ibm::wala::ssa::SSANewInstruction
   function getUse(int) in line 124
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable params defined in com::ibm::wala::ssa::SSANewInstruction
   function hasDef() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
   function isFallThrough() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 72
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses function getProgramCounter() defined in com::ibm::wala::classLoader::ProgramCounter
      uses variable params defined in com::ibm::wala::ssa::SSANewInstruction
   function visit(IVisitor) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitNew(SSANewInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSANewInstruction(int,NewSiteReference) in line 38
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
   function SSANewInstruction(int,NewSiteReference,int[]) in line 51
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable site defined in com::ibm::wala::ssa::SSANewInstruction
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses variable result defined in com::ibm::wala::ssa::SSANewInstruction
      uses variable params defined in com::ibm::wala::ssa::SSANewInstruction
   variable params in line 33
   variable result in line 24
   variable site in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAOptions.java
module com::ibm::wala::ssa::SSAOptions
   function defaultOptions() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 96
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable usePiNodes defined in com::ibm::wala::ssa::SSAOptions
   function getDefaultValues() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultValues defined in com::ibm::wala::ssa::SSAOptions
   function getPreserveNames() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable conversionPreservesNames defined in com::ibm::wala::ssa::SSAOptions
   function getUsePiNodes() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable usePiNodes defined in com::ibm::wala::ssa::SSAOptions
   function hashCode() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable usePiNodes defined in com::ibm::wala::ssa::SSAOptions
   function setDefaultValues(DefaultValues) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultValues defined in com::ibm::wala::ssa::SSAOptions
   function setPreserveNames(boolean) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable conversionPreservesNames defined in com::ibm::wala::ssa::SSAOptions
   function setUsePiNodes(boolean) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable conversionPreservesNames in line 42
   variable defaultOptions in line 45
   variable defaultValues in line 43
   variable usePiNodes in line 41
module com::ibm::wala::ssa::SSAOptions::DefaultValues
   function getDefaultValue(SymbolTable,int) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAPhiInstruction.java
module com::ibm::wala::ssa::SSAPhiInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function SSAPhiInstruction(int,int[]) defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses variable params defined in com::ibm::wala::ssa::SSAPhiInstruction
   function getDef() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAPhiInstruction
   function getDef(int) in line 67
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAPhiInstruction
   function getExceptionTypes() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfDefs() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable params defined in com::ibm::wala::ssa::SSAPhiInstruction
   function getUse(int) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable params defined in com::ibm::wala::ssa::SSAPhiInstruction
   function getValueString(SymbolTable,ValueDecorator,int) in line 103
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable TOP defined in com::ibm::wala::analysis::stackMachine::AbstractIntStackMachine
   function hasDef() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAPhiInstruction
   function isFallThrough() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setValues(int[]) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 37
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses variable params defined in com::ibm::wala::ssa::SSAPhiInstruction
   function visit(IVisitor) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitPhi(SSAPhiInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAPhiInstruction(int,int[]) in line 27
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses variable params defined in com::ibm::wala::ssa::SSAPhiInstruction
   variable params in line 25
   variable result in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAPiInstruction.java
module com::ibm::wala::ssa::SSAPiInstruction
   inherits from com::ibm::wala::ssa::SSAUnaryOpInstruction
   function copyForSSA(int[],int[]) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable successorBlock defined in com::ibm::wala::ssa::SSAPiInstruction
      uses variable cause defined in com::ibm::wala::ssa::SSAPiInstruction
   function getCause() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cause defined in com::ibm::wala::ssa::SSAPiInstruction
   function getSuccessor() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable successorBlock defined in com::ibm::wala::ssa::SSAPiInstruction
   function getVal() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUse(int) defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function toString(SymbolTable,ValueDecorator) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable successorBlock defined in com::ibm::wala::ssa::SSAPiInstruction
   function visit(IVisitor) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitPi(SSAPiInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable cause in line 49
   variable successorBlock in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAPutInstruction.java
module com::ibm::wala::ssa::SSAPutInstruction
   inherits from com::ibm::wala::ssa::SSAFieldAccessInstruction
   function copyForSSA(int[],int[]) in line 37
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function SSAPutInstruction(int,int,FieldReference) defined in com::ibm::wala::ssa::SSAPutInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAPutInstruction
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function getExceptionTypes() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function getUse(int) in line 70
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAPutInstruction
   function getVal() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::ssa::SSAPutInstruction
   function hashCode() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::ssa::SSAPutInstruction
   function isFallThrough() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 44
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function isStatic() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAPutInstruction
      uses function getDeclaredField() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses function getRef() defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
   function visit(IVisitor) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitPut(SSAPutInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAPutInstruction(int,int,FieldReference) in line 27
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable ref defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAPutInstruction
   function SSAPutInstruction(int,FieldReference) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable field defined in com::ibm::wala::ssa::SSAFieldAccessInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAPutInstruction
   variable val in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAReturnInstruction.java
module com::ibm::wala::ssa::SSAReturnInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 40
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses function SSAReturnInstruction() defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses variable isPrimitive defined in com::ibm::wala::ssa::SSAReturnInstruction
   function getExceptionTypes() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
   function getResult() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
   function getUse(int) in line 74
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
   function hashCode() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
   function isFallThrough() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function returnsPrimitiveType() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isPrimitive defined in com::ibm::wala::ssa::SSAReturnInstruction
   function returnsVoid() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
   function toString(SymbolTable,ValueDecorator) in line 51
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
   function visit(IVisitor) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitReturn(SSAReturnInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAReturnInstruction(int,boolean) in line 30
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAReturnInstruction
      uses variable isPrimitive defined in com::ibm::wala::ssa::SSAReturnInstruction
   function SSAReturnInstruction() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable isPrimitive in line 29
   variable result in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSASwitchInstruction.java
module com::ibm::wala::ssa::SSASwitchInstruction
   inherits from com::ibm::wala::ssa::SSAInstruction
   function copyForSSA(int[],int[]) in line 32
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::ssa::SSASwitchInstruction
      uses variable defaultLabel defined in com::ibm::wala::ssa::SSASwitchInstruction
      uses variable casesAndLabels defined in com::ibm::wala::ssa::SSASwitchInstruction
   function getCasesAndLabels() in line 82
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable casesAndLabels defined in com::ibm::wala::ssa::SSASwitchInstruction
   function getDefault() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultLabel defined in com::ibm::wala::ssa::SSASwitchInstruction
   function getExceptionTypes() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfUses() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTarget(int) in line 72
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable casesAndLabels defined in com::ibm::wala::ssa::SSASwitchInstruction
      uses variable defaultLabel defined in com::ibm::wala::ssa::SSASwitchInstruction
   function getTargets() in line 66
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getUse(int) in line 60
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable val defined in com::ibm::wala::ssa::SSASwitchInstruction
   function hashCode() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::ssa::SSASwitchInstruction
   function isFallThrough() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable val defined in com::ibm::wala::ssa::SSASwitchInstruction
   function visit(IVisitor) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitSwitch(SSASwitchInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   variable casesAndLabels in line 25
   variable defaultLabel in line 24
   variable val in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAThrowInstruction.java
module com::ibm::wala::ssa::SSAThrowInstruction
   inherits from com::ibm::wala::ssa::SSAAbstractThrowInstruction
   function copyForSSA(int[],int[]) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function SSAThrowInstruction(int) defined in com::ibm::wala::ssa::SSAThrowInstruction
      uses function getException() defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
   function getExceptionTypes() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(IVisitor) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitThrow(SSAThrowInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAThrowInstruction(int) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exception defined in com::ibm::wala::ssa::SSAAbstractThrowInstruction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SSAUnaryOpInstruction.java
module com::ibm::wala::ssa::SSAUnaryOpInstruction
   inherits from com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function copyForSSA(int[],int[]) in line 30
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function SSAUnaryOpInstruction(UnaryOpInstruction.IOperator,int,int) defined in com::ibm::wala::ssa::SSAUnaryOpInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function getExceptionTypes() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOpcode() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(SymbolTable,ValueDecorator) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValueString(SymbolTable,ValueDecorator,int) defined in com::ibm::wala::ssa::SSAInstruction
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   function visit(IVisitor) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitUnaryOp(SSAUnaryOpInstruction) defined in com::ibm::wala::ssa::SSAInstruction::IVisitor
   function SSAUnaryOpInstruction(UnaryOpInstruction.IOperator,int,int) in line 25
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable result defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
      uses variable val defined in com::ibm::wala::ssa::SSAAbstractUnaryInstruction
   variable operator in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/SymbolTable.java
module com::ibm::wala::ssa::SymbolTable
   function ensureSymbol(int) in line 181
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
      uses variable nextFreeValueNumber defined in com::ibm::wala::ssa::SymbolTable
      uses function expandForNewValueNumber(int) defined in com::ibm::wala::ssa::SymbolTable
   function expandForNewValueNumber(int) in line 160
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function findOrCreateConstant(Object) in line 74
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable constants defined in com::ibm::wala::ssa::SymbolTable
      uses function getNewValueNumber() defined in com::ibm::wala::ssa::SymbolTable
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function getConstant(int) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateConstant(Object) defined in com::ibm::wala::ssa::SymbolTable
   function getConstant(long) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateConstant(Object) defined in com::ibm::wala::ssa::SymbolTable
   function getConstant(float) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateConstant(Object) defined in com::ibm::wala::ssa::SymbolTable
   function getConstant(double) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateConstant(Object) defined in com::ibm::wala::ssa::SymbolTable
   function getConstant(String) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateConstant(Object) defined in com::ibm::wala::ssa::SymbolTable
   function getConstantValue(int) in line 287
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function getDoubleValue(int) in line 280
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isNumberConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
      uses function getValue(int) defined in com::ibm::wala::ssa::SymbolTable
   function getMaxValueNumber() in line 260
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable nextFreeValueNumber defined in com::ibm::wala::ssa::SymbolTable
   function getNewValueNumber() in line 168
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable nextFreeValueNumber defined in com::ibm::wala::ssa::SymbolTable
      uses function expandForNewValueNumber(int) defined in com::ibm::wala::ssa::SymbolTable
   function getNullConstant() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findOrCreateConstant(Object) defined in com::ibm::wala::ssa::SymbolTable
   function getNumberOfParameters() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in com::ibm::wala::ssa::SymbolTable
   function getParameter(int) in line 152
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable parameters defined in com::ibm::wala::ssa::SymbolTable
   function getParameterValueNumbers() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in com::ibm::wala::ssa::SymbolTable
   function getPhiValue(int) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function getStringValue(int) in line 273
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isStringConstant(int) defined in com::ibm::wala::ssa::SymbolTable
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function getValue(int) in line 303
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function getValueString(int) in line 192
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getMaxValueNumber() defined in com::ibm::wala::ssa::SymbolTable
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isBooleanConstant(int) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isOne(int) defined in com::ibm::wala::ssa::SymbolTable
      uses function isZero(int) defined in com::ibm::wala::ssa::SymbolTable
   function isConstant(int) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isDoubleConstant(int) in line 224
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isFloatConstant(int) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isIntegerConstant(int) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isNullConstant(int) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isNumberConstant(int) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isOne(int) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isParameter(int) in line 317
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNumberOfParameters() defined in com::ibm::wala::ssa::SymbolTable
   function isStringConstant(int) in line 232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function isZero(int) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function newPhi(int[]) in line 246
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getNewValueNumber() defined in com::ibm::wala::ssa::SymbolTable
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function newSymbol() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNewValueNumber() defined in com::ibm::wala::ssa::SymbolTable
   function setConstantValue(int,ConstantValue) in line 87
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::ssa::SymbolTable
   function SymbolTable(int) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable parameters defined in com::ibm::wala::ssa::SymbolTable
      uses function getNewValueNumber() defined in com::ibm::wala::ssa::SymbolTable
   variable constants in line 35
   variable nextFreeValueNumber in line 56
   variable parameters in line 30
   variable values in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/Value.java
module com::ibm::wala::ssa::Value
   function isNullConstant() in line 20
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStringConstant() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/ssa/ValueDecorator.java
module com::ibm::wala::ssa::ValueDecorator
   function getValueString(int) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/ClassLoaderReference.java
module com::ibm::wala::types::ClassLoaderReference
   function equals(Object) in line 83
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function ClassLoaderReference(Atom) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable name defined in com::ibm::wala::types::ClassLoaderReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
   function getName() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::ClassLoaderReference
   function getParent() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in com::ibm::wala::types::ClassLoaderReference
   function hashCode() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::ClassLoaderReference
      uses function hashCode() defined in com::ibm::wala::util::Atom
   function setParent(ClassLoaderReference) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in com::ibm::wala::types::ClassLoaderReference
   function toString() in line 105
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::ClassLoaderReference
      uses function toString() defined in com::ibm::wala::util::Atom
   function ClassLoaderReference(Atom) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::ClassLoaderReference
   variable Application in line 38
      protection public
   variable Extension in line 33
      protection public
   variable name in line 43
   variable parent in line 48
   variable Primordial in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/Descriptor.java
module com::ibm::wala::types::Descriptor
   function equals(Object) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function findOrCreate(TypeName[],TypeName) in line 46
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable map defined in com::ibm::wala::types::Descriptor
      uses function Descriptor(Key) defined in com::ibm::wala::types::Descriptor
   function findOrCreate(ImmutableByteArray) in line 60
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in com::ibm::wala::types::Descriptor
      uses function Descriptor(Key) defined in com::ibm::wala::types::Descriptor
   function findOrCreateUTF8(String) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreate(TypeName[],TypeName) defined in com::ibm::wala::types::Descriptor
   function getNumberOfParameters() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::Descriptor
      uses variable parameters defined in com::ibm::wala::types::Descriptor::Key
   function getParameters() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::Descriptor
      uses variable parameters defined in com::ibm::wala::types::Descriptor::Key
   function getReturnType() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::Descriptor
      uses variable returnType defined in com::ibm::wala::types::Descriptor::Key
   function hashCode() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::Descriptor
      uses variable hashCode defined in com::ibm::wala::types::Descriptor::Key
   function toString() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::Descriptor
      uses function toString() defined in com::ibm::wala::types::Descriptor::Key
   function toUnicodeString() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::Descriptor
      uses function toUnicodeString() defined in com::ibm::wala::types::Descriptor::Key
   function Descriptor(Key) in line 83
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::Descriptor
   variable key in line 39
   variable map in line 34
module com::ibm::wala::types::Descriptor::Key
   function appendSemicolonIfNeeded(StringBuffer,TypeName) in line 221
      10 lines of code
      2 parameters
      4 conditional paths
      uses function isArrayType() defined in com::ibm::wala::types::TypeName
      uses function getInnermostElementType() defined in com::ibm::wala::types::TypeName
      uses function isClassType() defined in com::ibm::wala::types::TypeName
   function computeHashCode() in line 156
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable returnType defined in com::ibm::wala::types::Descriptor::Key
      uses function hashCode() defined in com::ibm::wala::types::TypeName
      uses variable parameters defined in com::ibm::wala::types::Descriptor::Key
   function equals(Object) in line 165
      protection public
      24 lines of code
      1 parameters
      8 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable returnType defined in com::ibm::wala::types::Descriptor::Key
      uses function equals(Object) defined in com::ibm::wala::types::TypeName
      uses variable parameters defined in com::ibm::wala::types::Descriptor::Key
   function hashCode() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 189
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable parameters defined in com::ibm::wala::types::Descriptor::Key
      uses function appendSemicolonIfNeeded(StringBuffer,TypeName) defined in com::ibm::wala::types::Descriptor::Key
      uses variable returnType defined in com::ibm::wala::types::Descriptor::Key
   function toUnicodeString() in line 205
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable parameters defined in com::ibm::wala::types::Descriptor::Key
      uses function toUnicodeString() defined in com::ibm::wala::types::TypeName
      uses function appendSemicolonIfNeeded(StringBuffer,TypeName) defined in com::ibm::wala::types::Descriptor::Key
      uses variable returnType defined in com::ibm::wala::types::Descriptor::Key
   variable hashCode in line 144
   variable parameters in line 143
   variable returnType in line 142
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/FieldReference.java
module com::ibm::wala::types::FieldReference
   inherits from com::ibm::wala::types::MemberReference
   function findOrCreate(TypeReference,Atom,TypeReference) in line 53
      protection public
      13 lines of code
      3 parameters
      2 conditional paths
      uses variable fieldType defined in com::ibm::wala::types::FieldReference
      uses variable dictionary defined in com::ibm::wala::types::FieldReference
      uses function FieldReference(Key,TypeReference) defined in com::ibm::wala::types::FieldReference
   function getFieldType() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldType defined in com::ibm::wala::types::FieldReference
   function getSignature() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::types::MemberReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
   function toString() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredClass defined in com::ibm::wala::types::MemberReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::ClassLoaderReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::MemberReference
      uses variable fieldType defined in com::ibm::wala::types::FieldReference
   function FieldReference(Key,TypeReference) in line 67
      14 lines of code
      2 parameters
      6 conditional paths
      uses function hashCode() defined in com::ibm::wala::types::FieldReference::Key
      uses variable fieldType defined in com::ibm::wala::types::FieldReference
      uses variable DEBUG defined in com::ibm::wala::types::FieldReference
      uses variable name defined in com::ibm::wala::types::MemberReference
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function toString() defined in com::ibm::wala::types::TypeReference
   variable DEBUG in line 29
   variable dictionary in line 34
   variable fieldType in line 36
module com::ibm::wala::types::FieldReference::Key
   function equals(Object) in line 118
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable fieldType defined in com::ibm::wala::types::FieldReference::Key
   function hashCode() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
      uses function hashCode() defined in com::ibm::wala::util::Atom
   variable fieldType in line 106
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/MemberReference.java
module com::ibm::wala::types::MemberReference
   abstract class
   function equals(Object) in line 73
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getName() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::MemberReference
      uses function getSignature() defined in com::ibm::wala::types::MemberReference
   function getSignature() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 47
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable declaredClass defined in com::ibm::wala::types::MemberReference
   function hashCode() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::types::MemberReference
   function MemberReference(TypeReference,Atom,int) in line 38
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::MemberReference
      uses variable hash defined in com::ibm::wala::types::MemberReference
   variable declaredClass in line 21
   variable hash in line 31
   variable name in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/MethodReference.java
module com::ibm::wala::types::MethodReference
   inherits from com::ibm::wala::types::MemberReference
   function findOrCreate(TypeReference,Atom,Descriptor) in line 81
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable dictionary defined in com::ibm::wala::types::MethodReference
   function findOrCreate(TypeReference,Selector) in line 98
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreate(TypeReference,Atom,Descriptor) defined in com::ibm::wala::types::MethodReference
      uses variable selector defined in com::ibm::wala::types::MethodReference
      uses function getName() defined in com::ibm::wala::types::Selector
      uses function getDescriptor() defined in com::ibm::wala::types::Selector
   function findOrCreate(TypeReference,String,String) in line 219
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable descriptor defined in com::ibm::wala::types::MethodReference::Key
      uses function findOrCreate(TypeReference,Atom,Descriptor) defined in com::ibm::wala::types::MethodReference
   function getDeclaringClass() in line 155
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getType() defined in com::ibm::wala::types::MemberReference
   function getDescriptor() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selector defined in com::ibm::wala::types::MethodReference
      uses function getDescriptor() defined in com::ibm::wala::types::Selector
   function getNumberOfParameters() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameterTypes defined in com::ibm::wala::types::MethodReference
   function getParameterType(int) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parameterTypes defined in com::ibm::wala::types::MethodReference
   function getReturnType() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable returnType defined in com::ibm::wala::types::MethodReference
   function getSelector() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selector defined in com::ibm::wala::types::MethodReference
   function getSignature() in line 167
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::types::MemberReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
   function isInit() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable initAtom defined in com::ibm::wala::types::MethodReference
   function toString() in line 109
      protection public
      3 lines of code
      0 parameters
      4 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::ClassLoaderReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses variable selector defined in com::ibm::wala::types::MethodReference
      uses variable type defined in com::ibm::wala::types::MethodReference::Key
      uses variable name defined in com::ibm::wala::types::MethodReference::Key
      uses function hashCode() defined in com::ibm::wala::types::MethodReference::Key
      uses variable descriptor defined in com::ibm::wala::types::MethodReference::Key
      uses function getParameters() defined in com::ibm::wala::types::Descriptor
      uses variable parameterTypes defined in com::ibm::wala::types::MethodReference
      uses function getReturnType() defined in com::ibm::wala::types::Descriptor
      uses variable returnType defined in com::ibm::wala::types::MethodReference
   variable clinitName in line 53
      protection public
   variable clinitSelector in line 54
      protection public
   variable ctorNewInstanceAtom in line 39
   variable ctorNewInstanceDesc in line 40
   variable defaultInitDesc in line 49
      protection public
   variable dictionary in line 32
   variable forNameAtom in line 44
      protection public
   variable forNameDesc in line 45
   variable initAtom in line 48
      protection public
   variable initSelector in line 51
      protection public
   variable JavaLangClassForName in line 46
      protection public
   variable JavaLangClassNewInstance in line 36
      protection public
   variable JavaLangReflectCtorNewInstance in line 41
      protection public
   variable newInstanceAtom in line 34
      protection public
   variable newInstanceDesc in line 35
   variable parameterTypes in line 63
   variable returnType in line 68
   variable runAtom in line 56
      protection public
   variable runDesc in line 57
      protection public
   variable runSelector in line 58
      protection public
   variable selector in line 73
module com::ibm::wala::types::MethodReference::Key
   function equals(Object) in line 208
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable type defined in com::ibm::wala::types::MethodReference::Key
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::MethodReference::Key
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable descriptor defined in com::ibm::wala::types::MethodReference::Key
      uses function equals(Object) defined in com::ibm::wala::types::Descriptor
   function hashCode() in line 203
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::types::MethodReference::Key
      uses function hashCode() defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::MethodReference::Key
      uses function hashCode() defined in com::ibm::wala::util::Atom
      uses variable descriptor defined in com::ibm::wala::types::MethodReference::Key
      uses function hashCode() defined in com::ibm::wala::types::Descriptor
   variable descriptor in line 197
   variable name in line 196
   variable type in line 195
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/Selector.java
module com::ibm::wala::types::Selector
   function equals(Object) in line 39
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function Selector(Atom,Descriptor) defined in com::ibm::wala::types::Selector
      uses variable name defined in com::ibm::wala::types::Selector
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable descriptor defined in com::ibm::wala::types::Selector
      uses function equals(Object) defined in com::ibm::wala::types::Descriptor
   function getDescriptor() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in com::ibm::wala::types::Selector
   function getName() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::Selector
   function hashCode() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::Selector
      uses function hashCode() defined in com::ibm::wala::util::Atom
      uses variable descriptor defined in com::ibm::wala::types::Selector
      uses function hashCode() defined in com::ibm::wala::types::Descriptor
   function toString() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::Selector
      uses function toString() defined in com::ibm::wala::util::Atom
      uses variable descriptor defined in com::ibm::wala::types::Selector
      uses function toString() defined in com::ibm::wala::types::Descriptor
   function Selector(Atom,Descriptor) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::Selector
      uses variable descriptor defined in com::ibm::wala::types::Selector
   variable descriptor in line 29
   variable name in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/TypeName.java
module com::ibm::wala::types::TypeName
   function equals(Object) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function findOrCreate(TypeNameKey) in line 39
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in com::ibm::wala::types::TypeName
      uses function TypeName(TypeNameKey) defined in com::ibm::wala::types::TypeName
   function findOrCreate(ImmutableByteArray,int,int) in line 54
      protection public
      13 lines of code
      3 parameters
      2 conditional paths
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
   function findOrCreate(ImmutableByteArray) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   function findOrCreate(Atom,Atom,short,boolean) in line 80
      5 lines of code
      4 parameters
      1 conditional paths
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
   function findOrCreateClass(Atom,Atom) in line 72
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
   function findOrCreateClassName(String,String) in line 140
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateClass(Atom,Atom) defined in com::ibm::wala::types::TypeName
   function getArrayTypeForElementType() in line 161
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
   function getDimensionality() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
   function getInnermostElementType() in line 202
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
   function getPackage() in line 336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
   function hashCode() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses function hashCode() defined in com::ibm::wala::types::TypeName::TypeNameKey
   function isArrayType() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
   function isClassType() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
   function isPrimitiveType() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
   function parseForArrayElementName() in line 149
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
   function string2TypeName(String) in line 134
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreate(TypeNameKey) defined in com::ibm::wala::types::TypeName
   function toString() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses function toString() defined in com::ibm::wala::types::TypeName::TypeNameKey
   function toUnicodeString() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
      uses function toUnicodeString() defined in com::ibm::wala::types::TypeName::TypeNameKey
   function TypeName(TypeNameKey) in line 89
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable key defined in com::ibm::wala::types::TypeName
   variable key in line 52
   variable map in line 37
module com::ibm::wala::types::TypeName::TypeNameKey
   function equals(Object) in line 259
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function TypeNameKey(Atom,Atom,short,boolean) defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
   function hashCode() in line 274
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses function hashCode() defined in com::ibm::wala::util::Atom
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
   function toString() in line 287
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses function toString() defined in com::ibm::wala::util::Atom
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
   function toUnicodeString() in line 309
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses function toUnicodeString() defined in com::ibm::wala::util::Atom
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
   function TypeNameKey(Atom,Atom,short,boolean) in line 242
      11 lines of code
      4 parameters
      1 conditional paths
      uses variable packageName defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable className defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable dim defined in com::ibm::wala::types::TypeName::TypeNameKey
      uses variable innermostPrimitive defined in com::ibm::wala::types::TypeName::TypeNameKey
   variable className in line 222
   variable dim in line 227
   variable innermostPrimitive in line 232
   variable packageName in line 217
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/types/TypeReference.java
module com::ibm::wala::types::TypeReference
   function equals(Object) in line 466
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function findOrCreate(ClassLoaderReference,TypeName) in line 315
      protection public
      29 lines of code
      2 parameters
      6 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable primitiveMap defined in com::ibm::wala::types::TypeReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeName
      uses function getInnermostElementType() defined in com::ibm::wala::types::TypeName
      uses function isPrimitiveType() defined in com::ibm::wala::types::TypeName
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses variable dictionary defined in com::ibm::wala::types::TypeReference
      uses function TypeReference(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
   function findOrCreate(ClassLoaderReference,String) in line 351
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreate(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
   function findOrCreateArrayOf(TypeReference) in line 355
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function isPrimitiveType(TypeName) defined in com::ibm::wala::types::TypeReference
      uses function findOrCreate(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses function getArrayTypeForElementType() defined in com::ibm::wala::types::TypeName
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
   function findOrCreateClass(ClassLoaderReference,String,String) in line 474
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function findOrCreate(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
   function getArrayElementType() in line 396
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference
      uses function parseForArrayElementName() defined in com::ibm::wala::types::TypeName
      uses function findOrCreate(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
      uses variable classloader defined in com::ibm::wala::types::TypeReference
   function getArrayTypeForElementType() in line 405
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findOrCreate(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
      uses variable classloader defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::TypeReference
      uses function getArrayTypeForElementType() defined in com::ibm::wala::types::TypeName
   function getClassLoader() in line 381
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classloader defined in com::ibm::wala::types::TypeReference
   function getDimensionality() in line 414
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference
      uses function getDimensionality() defined in com::ibm::wala::types::TypeName
   function getInnermostElementType() in line 421
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findOrCreate(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
      uses variable classloader defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::TypeReference
      uses function getInnermostElementType() defined in com::ibm::wala::types::TypeName
   function getName() in line 388
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference
   function hashCode() in line 453
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference
      uses function hashCode() defined in com::ibm::wala::types::TypeName
   function isArrayType() in line 435
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference
      uses function isArrayType() defined in com::ibm::wala::types::TypeName
   function isClassType() in line 428
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function isPrimitiveType() defined in com::ibm::wala::types::TypeReference
   function isPrimitiveType(TypeName) in line 295
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable primitiveMap defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::TypeReference
   function isPrimitiveType() in line 442
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference
   function isReferenceType() in line 449
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isPrimitiveType() defined in com::ibm::wala::types::TypeReference
   function makePrimitive(TypeName) in line 286
      5 lines of code
      1 parameters
      1 conditional paths
      uses function TypeReference(ClassLoaderReference,TypeName) defined in com::ibm::wala::types::TypeReference
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses variable primitiveMap defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::TypeReference
   function toString() in line 470
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classloader defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::ClassLoaderReference
      uses variable name defined in com::ibm::wala::types::TypeReference
   function TypeReference(ClassLoaderReference,TypeName) in line 373
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classloader defined in com::ibm::wala::types::TypeReference
      uses variable name defined in com::ibm::wala::types::TypeReference
   variable array_interfaces in line 270
      protection public
   variable ArrayTypeCode in line 274
      protection public
   variable Boolean in line 60
      protection public
   variable BooleanArray in line 114
      protection public
   variable BooleanName in line 56
      protection public
   variable BooleanTypeCode in line 58
      protection public
   variable Byte in line 66
      protection public
   variable ByteArray in line 116
      protection public
   variable ByteName in line 62
      protection public
   variable ByteTypeCode in line 64
      protection public
   variable Char in line 72
      protection public
   variable CharArray in line 118
      protection public
   variable CharName in line 68
      protection public
   variable CharTypeCode in line 70
      protection public
   variable classloader in line 302
   variable ClassTypeCode in line 272
      protection public
   variable dictionary in line 50
   variable Double in line 78
      protection public
   variable DoubleArray in line 120
      protection public
   variable DoubleName in line 74
      protection public
   variable DoubleTypeCode in line 76
      protection public
   variable Float in line 84
      protection public
   variable FloatArray in line 122
      protection public
   variable FloatName in line 80
      protection public
   variable FloatTypeCode in line 82
      protection public
   variable Int in line 90
      protection public
   variable IntArray in line 124
      protection public
   variable IntName in line 86
      protection public
   variable IntTypeCode in line 88
      protection public
   variable JavaIoSerializable in line 235
      protection public
   variable JavaIoSerializableName in line 233
   variable JavaLangArithmeticException in line 136
      protection public
   variable JavaLangArithmeticExceptionName in line 134
   variable JavaLangArrayIndexOutOfBoundsException in line 147
      protection public
   variable JavaLangArrayIndexOutOfBoundsExceptionName in line 144
   variable JavaLangArrayStoreException in line 141
      protection public
   variable JavaLangArrayStoreExceptionName in line 139
   variable JavaLangClass in line 152
      protection public
   variable JavaLangClassCastException in line 156
      protection public
   variable JavaLangClassCastExceptionName in line 154
   variable JavaLangClassName in line 150
   variable JavaLangClassNotFoundException in line 194
      protection public
   variable JavaLangClassNotFoundExceptionName in line 192
   variable JavaLangCloneable in line 231
      protection public
   variable JavaLangCloneableName in line 229
   variable JavaLangComparable in line 161
      protection public
   variable JavaLangComparableName in line 159
   variable JavaLangError in line 170
      protection public
   variable JavaLangErrorName in line 168
   variable JavaLangException in line 174
      protection public
   variable JavaLangExceptionInInitializerError in line 205
      protection public
   variable JavaLangExceptionInInitializerErrorName in line 202
   variable JavaLangExceptionName in line 172
   variable JavaLangNegativeArraySizeException in line 179
      protection public
   variable JavaLangNegativeArraySizeExceptionName in line 176
   variable JavaLangNullPointerException in line 184
      protection public
   variable JavaLangNullPointerExceptionName in line 182
   variable JavaLangObject in line 210
      protection public
   variable JavaLangObjectName in line 208
   variable JavaLangOutOfMemoryError in line 199
      protection public
   variable JavaLangOutOfMemoryErrorName in line 197
   variable JavaLangReflectConstructor in line 165
      protection public
   variable JavaLangReflectConstructorName in line 163
   variable JavaLangRuntimeException in line 189
      protection public
   variable JavaLangRuntimeExceptionName in line 187
   variable JavaLangStackTraceElement in line 214
      protection public
   variable JavaLangStackTraceElementName in line 212
   variable JavaLangString in line 219
      protection public
   variable JavaLangStringName in line 217
   variable JavaLangThread in line 223
      protection public
   variable JavaLangThreadName in line 221
   variable JavaLangThrowable in line 227
      protection public
   variable JavaLangThrowableName in line 225
   variable JavaUtilCollection in line 239
      protection public
   variable JavaUtilCollectionName in line 237
   variable JavaUtilEnum in line 255
      protection public
   variable JavaUtilEnumName in line 253
   variable JavaUtilHashSet in line 247
      protection public
   variable JavaUtilHashSetName in line 245
   variable JavaUtilIterator in line 259
      protection public
   variable JavaUtilIteratorName in line 257
   variable JavaUtilMap in line 243
      protection public
   variable JavaUtilMapName in line 241
   variable JavaUtilSet in line 251
      protection public
   variable JavaUtilSetName in line 249
   variable JavaUtilVector in line 263
      protection public
   variable JavaUtilVectorName in line 261
   variable Long in line 96
      protection public
   variable LongArray in line 126
      protection public
   variable LongName in line 92
      protection public
   variable LongTypeCode in line 94
      protection public
   variable name in line 307
   variable Null in line 279
      protection public
   variable primitiveMap in line 45
   variable Short in line 102
      protection public
   variable ShortArray in line 128
      protection public
   variable ShortName in line 98
      protection public
   variable ShortTypeCode in line 100
      protection public
   variable Unknown in line 284
      protection public
   variable Void in line 108
      protection public
   variable VoidName in line 104
      protection public
   variable VoidTypeCode in line 106
      protection public
module com::ibm::wala::types::TypeReference::Key
   function equals(Object) in line 499
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference::Key
      uses function equals(Object) defined in com::ibm::wala::types::TypeName
      uses variable classloader defined in com::ibm::wala::types::TypeReference::Key
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
   function hashCode() in line 495
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::types::TypeReference::Key
      uses function hashCode() defined in com::ibm::wala::types::TypeName
   variable classloader in line 483
   variable name in line 488
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/ArrayNonNullIterator.java
module com::ibm::wala::util::ArrayNonNullIterator
   inherits from com::ibm::wala::util::collections::ArrayIterator
   function hasNext() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable _cnt defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable _elts defined in com::ibm::wala::util::collections::ArrayIterator
   function next() in line 39
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable _elts defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable _cnt defined in com::ibm::wala::util::collections::ArrayIterator
   function ArrayNonNullIterator(T[]) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ArrayNonNullIterator(T[],int) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/Atom.java
module com::ibm::wala::util::Atom
   function arrayDescriptorFromElementDescriptor() in line 136
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function concat(byte,byte[]) in line 319
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::util::Atom::AtomKey
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function concat(byte,ImmutableByteArray) in line 326
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function concat(byte,byte[]) defined in com::ibm::wala::util::Atom
   function contains(byte) in line 310
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable val defined in com::ibm::wala::util::Atom::AtomKey
   function equals(Object) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function findOrCreate(byte,int,int) in line 90
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
   function findOrCreate(byte[]) in line 97
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable dictionary defined in com::ibm::wala::util::Atom
      uses function Atom(AtomKey) defined in com::ibm::wala::util::Atom
   function findOrCreate(ImmutableByteArray) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function findOrCreate(ImmutableByteArray,int,int) in line 111
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
      uses function length() defined in com::ibm::wala::util::Atom
   function findOrCreateAsciiAtom(String) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function findOrCreateUnicodeAtom(String) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function findOrCreateUtf8Atom(byte[]) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function getVal(int) in line 303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::util::Atom::AtomKey
   function hashCode() in line 290
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::util::Atom::AtomKey
   function isArrayDescriptor() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isArrayDescriptor(ImmutableByteArray) in line 330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function get(int) defined in com::ibm::wala::util::ImmutableByteArray
   function isClassDescriptor() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isMethodDescriptor() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReservedMemberName() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function length() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parseForArrayDimensionality() in line 204
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
   function parseForArrayElementDescriptor() in line 192
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function parseForInnermostArrayElementDescriptor() in line 214
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function findOrCreate(byte,int,int) defined in com::ibm::wala::util::Atom
   function toString() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toUnicodeString() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Atom(AtomKey) in line 181
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::util::Atom::AtomKey
      uses variable hash defined in com::ibm::wala::util::Atom::AtomKey
   variable dictionary in line 42
   variable hash in line 52
module com::ibm::wala::util::Atom::AtomKey
   function equals(Object) in line 249
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function AtomKey(byte) defined in com::ibm::wala::util::Atom::AtomKey
      uses variable hash defined in com::ibm::wala::util::Atom::AtomKey
      uses variable val defined in com::ibm::wala::util::Atom::AtomKey
   function hashCode() in line 281
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::util::Atom::AtomKey
   function toString() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable val defined in com::ibm::wala::util::Atom::AtomKey
   function AtomKey(byte) in line 238
      7 lines of code
      1 parameters
      2 conditional paths
   variable hash in line 233
   variable val in line 228
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/bytecode/BytecodeStream.java
module com::ibm::wala::util::bytecode::BytecodeStream
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   function alignInvokeInterface() in line 434
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function alignSwitch() in line 268
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function computeLookupSwitchOffset(int,int) in line 401
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses function getSignedInt(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function computeTableSwitchOffset(int,int,int) in line 336
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
      uses function getSignedInt(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function declaringClass() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getArrayDimension() in line 509
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readUnsignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getArrayElementType() in line 453
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readUnsignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getBranchOffset() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedShort() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getByteValue() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getConstantIndex() in line 533
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readUnsignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getConstantType(int) in line 557
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getDefaultSwitchOffset() in line 279
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedInt() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getHighSwitchValue() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedInt() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getIncrement() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getIntConstant(int) in line 571
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getLocalNumber() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readUnsignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getLookupSwitchOffset(int) in line 372
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSignedInt(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getLookupSwitchValue(int) in line 385
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSignedInt(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getLowSwitchValue() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedInt() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getOpcode() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable opcode defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getShortValue() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedShort() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getSignedInt(int) in line 712
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function index() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getSwitchLength() in line 348
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedInt() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getTableSwitchOffset(int) in line 321
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSignedInt(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getUnsignedByte(int) in line 691
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function index() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getWideBranchOffset() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedInt() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getWideConstantIndex() in line 545
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readUnsignedShort() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getWideIncrement() in line 240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readSignedShort() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getWideLocalNumber() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readUnsignedShort() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function getWideOpcode() in line 520
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable opcode defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function readUnsignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function hasMoreBytecodes() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcLength defined in com::ibm::wala::util::bytecode::BytecodeStream
   function index() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function isWide() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable wide defined in com::ibm::wala::util::bytecode::BytecodeStream
   function length() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bcLength defined in com::ibm::wala::util::bytecode::BytecodeStream
   function method() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function nextInstruction() in line 122
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable opcode defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function readUnsignedByte() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable wide defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable JBC_wide defined in com::ibm::wala::shrikeBT::BytecodeConstants
   function peekNextOpcode() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUnsignedByte(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function readSignedByte() in line 685
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function readSignedInt() in line 705
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function readSignedShort() in line 695
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function readUnsignedByte() in line 688
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function readUnsignedShort() in line 700
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function reset() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function reset(int) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function index() defined in com::ibm::wala::util::bytecode::BytecodeStream
   function skipInstruction() in line 154
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable JBC_length defined in com::ibm::wala::shrikeBT::BytecodeConstants
      uses variable opcode defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable wide defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function skipSpecialInstruction(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
   function skipInstruction(int,boolean) in line 172
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable JBC_length defined in com::ibm::wala::shrikeBT::BytecodeConstants
      uses variable opcode defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable wide defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function skipSpecialInstruction(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
   function skipLookupSwitchPairs(int) in line 359
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function skipSpecialInstruction(int) in line 653
      30 lines of code
      1 parameters
      4 conditional paths
      uses variable opcode defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable JBC_tableswitch defined in com::ibm::wala::shrikeBT::BytecodeConstants
      uses function alignSwitch() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function getDefaultSwitchOffset() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function getLowSwitchValue() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function getHighSwitchValue() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function skipTableSwitchOffsets(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable JBC_lookupswitch defined in com::ibm::wala::shrikeBT::BytecodeConstants
      uses function getSwitchLength() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function skipLookupSwitchPairs(int) defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable JBC_wide defined in com::ibm::wala::shrikeBT::BytecodeConstants
      uses function getWideOpcode() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable JBC_length defined in com::ibm::wala::shrikeBT::BytecodeConstants
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function skipTableSwitchOffsets(int) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   function BytecodeStream(IMethod,byte[]) in line 39
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function method() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function declaringClass() defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses variable bcodes defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcLength defined in com::ibm::wala::util::bytecode::BytecodeStream
      uses variable bcIndex defined in com::ibm::wala::util::bytecode::BytecodeStream
   variable bcIndex in line 31
   variable bcLength in line 29
   variable bcodes in line 30
   variable declaringClass in line 28
   variable method in line 27
   variable opcode in line 32
   variable wide in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/CacheReference.java
module com::ibm::wala::util::CacheReference
   function get(final Object) in line 49
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable choice defined in com::ibm::wala::util::CacheReference
      uses variable SOFT defined in com::ibm::wala::util::CacheReference
      uses variable WEAK defined in com::ibm::wala::util::CacheReference
      uses variable HARD defined in com::ibm::wala::util::CacheReference
   function make(final Object) in line 34
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable choice defined in com::ibm::wala::util::CacheReference
      uses variable SOFT defined in com::ibm::wala::util::CacheReference
      uses variable WEAK defined in com::ibm::wala::util::CacheReference
      uses variable HARD defined in com::ibm::wala::util::CacheReference
   variable choice in line 32
   variable HARD in line 29
   variable SOFT in line 27
   variable WEAK in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/CollectionFilter.java
module com::ibm::wala::util::CollectionFilter
   inherits from com::ibm::wala::util::collections::Filter
   function accepts(Object) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable S defined in com::ibm::wala::util::CollectionFilter
   function CollectionFilter(Collection<?extends Object >) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable S defined in com::ibm::wala::util::CollectionFilter
   variable S in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/ArrayIterator.java
module com::ibm::wala::util::collections::ArrayIterator
   inherits from java::util::Iterator
   function hasNext() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable _cnt defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable last defined in com::ibm::wala::util::collections::ArrayIterator
   function next() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable _elts defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable _cnt defined in com::ibm::wala::util::collections::ArrayIterator
   function remove() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ArrayIterator(T[]) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ArrayIterator(T[],int) in line 50
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable _elts defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable _cnt defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable last defined in com::ibm::wala::util::collections::ArrayIterator
   function ArrayIterator(T[],int,int) in line 60
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable _elts defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable _cnt defined in com::ibm::wala::util::collections::ArrayIterator
      uses variable last defined in com::ibm::wala::util::collections::ArrayIterator
   variable _cnt in line 26
   variable _elts in line 36
   variable last in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/BimodalMap.java
module com::ibm::wala::util::collections::BimodalMap
   inherits from java::util::Map
   function clear() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function containsKey(Object) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function containsValue(Object) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function entrySet() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function get(Object) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function isEmpty() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function keySet() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function put(K,V) in line 100
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
      uses variable cutOff defined in com::ibm::wala::util::collections::BimodalMap
      uses function transferBackingStore() defined in com::ibm::wala::util::collections::BimodalMap
   function putAll(Map<?extends K,?extends V >) in line 149
      protection public
      28 lines of code
      1 parameters
      6 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
      uses function size() defined in com::ibm::wala::util::collections::BimodalMap
      uses variable cutOff defined in com::ibm::wala::util::collections::BimodalMap
      uses function transferBackingStore() defined in com::ibm::wala::util::collections::BimodalMap
   function remove(Object) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function size() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function transferBackingStore() in line 121
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
      uses function size() defined in com::ibm::wala::util::collections::SmallMap
      uses function keySet() defined in com::ibm::wala::util::collections::SmallMap
      uses function get(Object) defined in com::ibm::wala::util::collections::SmallMap
   function values() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::BimodalMap
   function BimodalMap(int) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable backingStore in line 39
   variable cutOff in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/ComposedIterator.java
module com::ibm::wala::util::collections::ComposedIterator
   inherits from java::util::Iterator
   abstract class
   function advanceOuter() in line 32
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable outer defined in com::ibm::wala::util::collections::ComposedIterator
      uses variable inner defined in com::ibm::wala::util::collections::ComposedIterator
      uses function makeInner(O) defined in com::ibm::wala::util::collections::ComposedIterator
   function hasNext() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inner defined in com::ibm::wala::util::collections::ComposedIterator
   function makeInner(O) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function next() in line 54
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable inner defined in com::ibm::wala::util::collections::ComposedIterator
      uses function advanceOuter() defined in com::ibm::wala::util::collections::ComposedIterator
   function remove() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ComposedIterator(Iterator< O >) in line 27
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable outer defined in com::ibm::wala::util::collections::ComposedIterator
      uses function advanceOuter() defined in com::ibm::wala::util::collections::ComposedIterator
   variable inner in line 26
   variable outer in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/CompoundIntIterator.java
module com::ibm::wala::util::collections::CompoundIntIterator
   inherits from com::ibm::wala::util::intset::IntIterator
   function hashCode() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function hasNext() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function next() in line 48
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
   function CompoundIntIterator(IntIterator,IntIterator) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/EmptyIntIterator.java
module com::ibm::wala::util::collections::EmptyIntIterator
   inherits from com::ibm::wala::util::intset::IntIterator
   function hasNext() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EMPTY defined in com::ibm::wala::util::collections::EmptyIntIterator
   function next() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function EmptyIntIterator() in line 34
      2 lines of code
      0 parameters
      1 conditional paths
   variable EMPTY in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/EmptyIterator.java
module com::ibm::wala::util::collections::EmptyIterator
   inherits from java::util::Iterator
   function hasNext() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EMPTY defined in com::ibm::wala::util::collections::EmptyIterator
   function next() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EmptyIterator() in line 36
      2 lines of code
      0 parameters
      1 conditional paths
   variable EMPTY in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/FifoQueue.java
module com::ibm::wala::util::collections::FifoQueue
   function contains(T) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function peek() in line 175
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::collections::FifoQueue
   function pop() in line 151
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::collections::FifoQueue
   function push(T) in line 113
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function push(Iterator<?extends T >) in line 134
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function size() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FifoQueue() in line 41
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function FifoQueue(T) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function push(T) defined in com::ibm::wala::util::collections::FifoQueue
   function FifoQueue(Collection< T >) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function push(T) defined in com::ibm::wala::util::collections::FifoQueue
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/FifoQueueNoDuplicates.java
module com::ibm::wala::util::collections::FifoQueueNoDuplicates
   inherits from com::ibm::wala::util::collections::FifoQueue
   function everContained(T) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable wasInQueue defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
   function getPushedNodes() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable wasInQueue defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
   function push(T) in line 54
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable wasInQueue defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
   function push(Iterator<?extends T >) in line 74
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable wasInQueue defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
   function queuedSet() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable wasInQueue defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
   variable wasInQueue in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/Filter.java
module com::ibm::wala::util::collections::Filter
   function accepts(Object) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/FilterIterator.java
module com::ibm::wala::util::collections::FilterIterator
   inherits from java::util::Iterator
   function advance() in line 45
      10 lines of code
      0 parameters
      3 conditional paths
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses function next() defined in com::ibm::wala::util::collections::FilterIterator
      uses variable done defined in com::ibm::wala::util::collections::FilterIterator
   function hasNext() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable done defined in com::ibm::wala::util::collections::FilterIterator
   function next() in line 60
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable done defined in com::ibm::wala::util::collections::FilterIterator
      uses function advance() defined in com::ibm::wala::util::collections::FilterIterator
   function remove() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilterIterator(Iterator<?>,Filter) in line 34
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function advance() defined in com::ibm::wala::util::collections::FilterIterator
   variable done in line 28
   variable next in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/Filtersection.java
module com::ibm::wala::util::collections::Filtersection
   inherits from com::ibm::wala::util::collections::Filter
   function accepts(Object) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable a defined in com::ibm::wala::util::collections::Filtersection
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses variable b defined in com::ibm::wala::util::collections::Filtersection
   function Filtersection(Filter,Filter) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable a defined in com::ibm::wala::util::collections::Filtersection
      uses variable b defined in com::ibm::wala::util::collections::Filtersection
   variable a in line 21
   variable b in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/HashCodeComparator.java
module com::ibm::wala::util::collections::HashCodeComparator
   inherits from java::util::Comparator
   function compare(T,T) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function instance() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in com::ibm::wala::util::collections::HashCodeComparator
   variable INSTANCE in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/HashMapFactory.java
module com::ibm::wala::util::collections::HashMapFactory
   function make(int) in line 29
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::collections::HashSetFactory
   function make() in line 40
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::collections::HashSetFactory
   function make(Map< K, V >) in line 53
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::collections::HashSetFactory
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/HashSetFactory.java
module com::ibm::wala::util::collections::HashSetFactory
   function make(int) in line 33
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::collections::HashSetFactory
   function make() in line 44
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::collections::HashSetFactory
   function make(Set< T >) in line 57
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::collections::HashSetFactory
   variable DEBUG in line 27
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/Heap.java
module com::ibm::wala::util::collections::Heap
   abstract class
   function bubbleUp(Object,int) in line 144
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::Heap
      uses function heapParent(int) defined in com::ibm::wala::util::collections::Heap
      uses function compareElements(Object,Object) defined in com::ibm::wala::util::collections::Heap
   function compareElements(Object,Object) in line 29
      1 lines of code
      2 parameters
      1 conditional paths
   function ensureCapacity(int) in line 90
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable backingStore defined in com::ibm::wala::util::collections::Heap
   function heapLeftChild(int) in line 79
      3 lines of code
      1 parameters
      1 conditional paths
   function heapParent(int) in line 75
      3 lines of code
      1 parameters
      1 conditional paths
   function heapRightChild(int) in line 83
      3 lines of code
      1 parameters
      1 conditional paths
   function insert(Object) in line 57
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function ensureCapacity(int) defined in com::ibm::wala::util::collections::Heap
      uses variable numberOfElements defined in com::ibm::wala::util::collections::Heap
      uses function bubbleUp(Object,int) defined in com::ibm::wala::util::collections::Heap
   function isEmpty() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numberOfElements defined in com::ibm::wala::util::collections::Heap
   function removeElement(int) in line 104
      32 lines of code
      1 parameters
      6 conditional paths
      uses variable numberOfElements defined in com::ibm::wala::util::collections::Heap
      uses variable backingStore defined in com::ibm::wala::util::collections::Heap
      uses function heapLeftChild(int) defined in com::ibm::wala::util::collections::Heap
      uses function heapRightChild(int) defined in com::ibm::wala::util::collections::Heap
      uses function compareElements(Object,Object) defined in com::ibm::wala::util::collections::Heap
      uses function bubbleUp(Object,int) defined in com::ibm::wala::util::collections::Heap
   function size() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numberOfElements defined in com::ibm::wala::util::collections::Heap
   function take() in line 66
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable numberOfElements defined in com::ibm::wala::util::collections::Heap
      uses variable backingStore defined in com::ibm::wala::util::collections::Heap
      uses function removeElement(int) defined in com::ibm::wala::util::collections::Heap
   function Heap(int) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numberOfElements defined in com::ibm::wala::util::collections::Heap
      uses variable backingStore defined in com::ibm::wala::util::collections::Heap
   variable backingStore in line 33
   variable numberOfElements in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/IntStack.java
module com::ibm::wala::util::collections::IntStack
   function isEmpty() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable top defined in com::ibm::wala::util::collections::IntStack
   function peek() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::collections::IntStack
      uses variable state defined in com::ibm::wala::util::collections::IntStack
      uses variable top defined in com::ibm::wala::util::collections::IntStack
   function pop() in line 57
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::collections::IntStack
      uses variable state defined in com::ibm::wala::util::collections::IntStack
      uses variable top defined in com::ibm::wala::util::collections::IntStack
   function push(int) in line 35
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable state defined in com::ibm::wala::util::collections::IntStack
      uses variable top defined in com::ibm::wala::util::collections::IntStack
   variable state in line 30
   variable top in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/Iterator2Collection.java
module com::ibm::wala::util::collections::Iterator2Collection
   inherits from java::util::Collection
   function add(T) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function addAll(Collection<?extends T >) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function clear() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function contains(Object) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function containsAll(Collection) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function isEmpty() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function iterator() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
      uses function toArray() defined in com::ibm::wala::util::collections::Iterator2Collection
   function remove(Object) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function removeAll(Collection) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function retainAll(Collection) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function size() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function toArray() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   function Iterator2Collection(Iterator<?extends T >) in line 30
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable delegate defined in com::ibm::wala::util::collections::Iterator2Collection
   variable delegate in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/IteratorUtil.java
module com::ibm::wala::util::collections::IteratorUtil
   function contains(Iterator<?extends T >,T) in line 29
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
   function count(Iterator< T >) in line 38
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/MapUtil.java
module com::ibm::wala::util::collections::MapUtil
   function findOrCreateMap(Map< K, Map< K2, V >>,K) in line 46
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function findOrCreateSet(Map< K, Set< T >>,K) in line 31
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function findOrCreateWeakHashMap(Map< Object, WeakHashMap< K, V >>,Object) in line 61
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function groupKeysByValue(Map< K, V >) in line 90
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function findOrCreateSet(Map< K, Set< T >>,K) defined in com::ibm::wala::util::collections::MapUtil
   function inverseMap(Map< K, Set< V >>) in line 75
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function findOrCreateSet(Map< K, Set< T >>,K) defined in com::ibm::wala::util::collections::MapUtil
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/NonNullSingletonIterator.java
module com::ibm::wala::util::collections::NonNullSingletonIterator
   inherits from java::util::Iterator
   function hasNext() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable it defined in com::ibm::wala::util::collections::NonNullSingletonIterator
   function next() in line 50
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable it defined in com::ibm::wala::util::collections::NonNullSingletonIterator
   function remove() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NonNullSingletonIterator(T) in line 33
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   variable it in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/ObjectArrayMapping.java
module com::ibm::wala::util::collections::ObjectArrayMapping
   inherits from com::ibm::wala::util::intset::OrdinalSetMapping
   function add(Object) in line 92
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMappedIndex(Object) in line 55
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable map defined in com::ibm::wala::util::collections::ObjectArrayMapping
   function getMappedObject(int) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable array defined in com::ibm::wala::util::collections::ObjectArrayMapping
   function getMappingSize() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable array defined in com::ibm::wala::util::collections::ObjectArrayMapping
   function hasMappedIndex(Object) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::util::collections::ObjectArrayMapping
   function iterator() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::util::collections::ObjectArrayMapping
   function makeSingleton(int) in line 85
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function ObjectArrayMapping(final T[]) in line 38
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable array defined in com::ibm::wala::util::collections::ObjectArrayMapping
      uses variable map defined in com::ibm::wala::util::collections::ObjectArrayMapping
   variable array in line 29
   variable map in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/Pair.java
module com::ibm::wala::util::collections::Pair
   function check(Object,Object) in line 27
      3 lines of code
      2 parameters
      1 conditional paths
   function equals(Object) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function check(Object,Object) defined in com::ibm::wala::util::collections::Pair
      uses variable fst defined in com::ibm::wala::util::collections::Pair
      uses variable snd defined in com::ibm::wala::util::collections::Pair
   function hashCode() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hc(Object) defined in com::ibm::wala::util::collections::Pair
      uses variable fst defined in com::ibm::wala::util::collections::Pair
      uses variable snd defined in com::ibm::wala::util::collections::Pair
   function hc(Object) in line 35
      3 lines of code
      1 parameters
      1 conditional paths
   function iterator() in line 43
      protection public
      26 lines of code
      0 parameters
      3 conditional paths
      uses variable fst defined in com::ibm::wala::util::collections::Pair
      uses variable snd defined in com::ibm::wala::util::collections::Pair
   function toString() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fst defined in com::ibm::wala::util::collections::Pair
      uses variable snd defined in com::ibm::wala::util::collections::Pair
   function Pair(T,U) in line 22
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fst defined in com::ibm::wala::util::collections::Pair
      uses variable snd defined in com::ibm::wala::util::collections::Pair
   variable fst in line 19
      protection public
   variable snd in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/ParanoidHashMap.java
module com::ibm::wala::util::collections::ParanoidHashMap
   inherits from java::util::HashMap
   function put(K,V) in line 58
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function putAll(Map<?extends K,?extends V >) in line 70
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function put(K,V) defined in com::ibm::wala::util::collections::ParanoidHashMap
   function ParanoidHashMap(Map< K, V >) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function putAll(Map<?extends K,?extends V >) defined in com::ibm::wala::util::collections::ParanoidHashMap
   function ParanoidHashMap(int) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ParanoidHashMap() in line 49
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/ParanoidHashSet.java
module com::ibm::wala::util::collections::ParanoidHashSet
   inherits from java::util::HashSet
   function add(T) in line 77
      protection public
      27 lines of code
      1 parameters
      6 conditional paths
      uses variable nAdded defined in com::ibm::wala::util::collections::ParanoidHashSet
      uses variable hcFreq defined in com::ibm::wala::util::collections::ParanoidHashSet
      uses variable BAD_HC defined in com::ibm::wala::util::collections::ParanoidHashSet
   function ParanoidHashSet(Set< T >) in line 48
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable hcFreq defined in com::ibm::wala::util::collections::ParanoidHashSet
      uses function add(T) defined in com::ibm::wala::util::collections::ParanoidHashSet
   function ParanoidHashSet() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable hcFreq defined in com::ibm::wala::util::collections::ParanoidHashSet
   function ParanoidHashSet(int) in line 67
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable hcFreq defined in com::ibm::wala::util::collections::ParanoidHashSet
   variable BAD_HC in line 43
   variable hcFreq in line 35
   variable nAdded in line 37
   variable serialVersionUID in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/Queue.java
module com::ibm::wala::util::collections::Queue
   function dequeue() in line 67
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::collections::Queue
      uses variable items defined in com::ibm::wala::util::collections::Queue
      uses variable first defined in com::ibm::wala::util::collections::Queue
      uses function inc(int) defined in com::ibm::wala::util::collections::Queue
      uses variable free defined in com::ibm::wala::util::collections::Queue
   function enqueue(T) in line 53
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function isFull() defined in com::ibm::wala::util::collections::Queue
      uses function resize() defined in com::ibm::wala::util::collections::Queue
      uses variable items defined in com::ibm::wala::util::collections::Queue
      uses variable free defined in com::ibm::wala::util::collections::Queue
      uses variable first defined in com::ibm::wala::util::collections::Queue
      uses function inc(int) defined in com::ibm::wala::util::collections::Queue
   function inc(int) in line 36
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable items defined in com::ibm::wala::util::collections::Queue
   function isEmpty() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in com::ibm::wala::util::collections::Queue
   function isFull() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in com::ibm::wala::util::collections::Queue
      uses variable free defined in com::ibm::wala::util::collections::Queue
   function resize() in line 44
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable items defined in com::ibm::wala::util::collections::Queue
      uses variable first defined in com::ibm::wala::util::collections::Queue
      uses variable free defined in com::ibm::wala::util::collections::Queue
   function Queue(int) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable items defined in com::ibm::wala::util::collections::Queue
   function Queue() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable first in line 24
   variable free in line 26
   variable items in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/ReverseIterator.java
module com::ibm::wala::util::collections::ReverseIterator
   inherits from java::util::Iterator
   function hasNext() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ReverseIterator(Iterator< T >) in line 33
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/SmallMap.java
module com::ibm::wala::util::collections::SmallMap
   inherits from java::util::Map
   function clear() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function containsKey(Object) in line 86
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function containsValue(Object) in line 100
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function entrySet() in line 229
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function get(Object) in line 115
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getKey(int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getValue(int) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function growByOne() in line 124
      12 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function keySet() in line 197
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function put(Object,Object) in line 143
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
   function putAll(Map<?extends K,?extends V >) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function remove(Object) in line 168
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function size() in line 44
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function values() in line 212
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_MAX_SIZE in line 32
   variable DEBUG_USAGE in line 30
   variable keysAndValues in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/collections/ToStringComparator.java
module com::ibm::wala::util::collections::ToStringComparator
   inherits from java::util::Comparator
   function compare(T,T) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function instance() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in com::ibm::wala::util::collections::ToStringComparator
   function ToStringComparator() in line 25
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/CompoundIterator.java
module com::ibm::wala::util::CompoundIterator
   inherits from java::util::Iterator
   function hasNext() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 43
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function remove() in line 54
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function CompoundIterator(Iterator<?extends T >,Iterator<?extends T >) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/config/FileProvider.java
module com::ibm::wala::util::config::FileProvider
   function filePathFromURL(URL) in line 187
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function getFile(String) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFileFromClassLoader(String) defined in com::ibm::wala::util::config::FileProvider
      uses function getFileFromPlugin(String) defined in com::ibm::wala::util::config::FileProvider
   function getFileFromClassLoader(String) in line 137
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::util::config::FileProvider
      uses function filePathFromURL(URL) defined in com::ibm::wala::util::config::FileProvider
   function getFileFromPlugin(String) in line 98
      14 lines of code
      1 parameters
      3 conditional paths
      uses function filePathFromURL(URL) defined in com::ibm::wala::util::config::FileProvider
   function getFromPlugin(String) in line 118
      15 lines of code
      1 parameters
      3 conditional paths
      uses function filePathFromURL(URL) defined in com::ibm::wala::util::config::FileProvider
   function getJarFileFromClassLoader(String) in line 155
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG_LEVEL defined in com::ibm::wala::util::config::FileProvider
      uses function filePathFromURL(URL) defined in com::ibm::wala::util::config::FileProvider
   function getJarFileModule(String) in line 60
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses function getJarFileFromClassLoader(String) defined in com::ibm::wala::util::config::FileProvider
      uses function getFromPlugin(String) defined in com::ibm::wala::util::config::FileProvider
   function getWorkspace() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FileProvider() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_LEVEL in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/config/SimpleXMLHandler.java
module com::ibm::wala::util::config::SimpleXMLHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   abstract class
   function element(String) in line 42
      1 lines of code
      1 parameters
      1 conditional paths
   function getAtom(String) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getString(String) defined in com::ibm::wala::util::config::SimpleXMLHandler
   function getInteger(String) in line 58
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getString(String) defined in com::ibm::wala::util::config::SimpleXMLHandler
      uses function LN() defined in com::ibm::wala::util::config::SimpleXMLHandler
   function getString(String) in line 49
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable atts defined in com::ibm::wala::util::config::SimpleXMLHandler
      uses function LN() defined in com::ibm::wala::util::config::SimpleXMLHandler
   function go(File) in line 76
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable filename defined in com::ibm::wala::util::config::SimpleXMLHandler
      uses function parse(InputStream) defined in com::ibm::wala::util::config::SimpleXMLHandler
   function go(String) in line 86
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable filename defined in com::ibm::wala::util::config::SimpleXMLHandler
      uses function parse(InputStream) defined in com::ibm::wala::util::config::SimpleXMLHandler
   function LN() in line 65
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locator defined in com::ibm::wala::util::config::SimpleXMLHandler
   function parse(InputStream) in line 98
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable filename defined in com::ibm::wala::util::config::SimpleXMLHandler
   function setDocumentLocator(Locator) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable locator defined in com::ibm::wala::util::config::SimpleXMLHandler
      uses function element(String) defined in com::ibm::wala::util::config::SimpleXMLHandler
   function startElement(String,String,String,Attributes) in line 44
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable atts defined in com::ibm::wala::util::config::SimpleXMLHandler
      uses function element(String) defined in com::ibm::wala::util::config::SimpleXMLHandler
   variable atts in line 36
   variable filename in line 71
   variable locator in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/config/XMLSetOfClasses.java
module com::ibm::wala::util::config::XMLSetOfClasses
   inherits from com::ibm::wala::ipa::callgraph::impl::SetOfClasses
   function add(IClass) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable regex defined in com::ibm::wala::util::config::XMLSetOfClasses
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
      uses variable needsCompile defined in com::ibm::wala::util::config::XMLSetOfClasses
   function compile() in line 46
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in com::ibm::wala::util::config::XMLSetOfClasses
      uses variable regex defined in com::ibm::wala::util::config::XMLSetOfClasses
      uses variable needsCompile defined in com::ibm::wala::util::config::XMLSetOfClasses
   function contains(TypeReference) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
   function contains(String) in line 60
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable needsCompile defined in com::ibm::wala::util::config::XMLSetOfClasses
      uses function compile() defined in com::ibm::wala::util::config::XMLSetOfClasses
      uses variable pattern defined in com::ibm::wala::util::config::XMLSetOfClasses
      uses variable DEBUG defined in com::ibm::wala::util::config::XMLSetOfClasses
   function XMLSetOfClasses(String,ClassLoader) in line 37
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable regex defined in com::ibm::wala::util::config::XMLSetOfClasses
      uses variable needsCompile defined in com::ibm::wala::util::config::XMLSetOfClasses
   variable DEBUG in line 31
   variable needsCompile in line 35
   variable pattern in line 33
   variable regex in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/debug/Assertions.java
module com::ibm::wala::util::debug::Assertions
   function _assert(boolean) in line 35
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function checkGuard() defined in com::ibm::wala::util::debug::Assertions
   function _assert(boolean,String) in line 46
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function checkGuard() defined in com::ibm::wala::util::debug::Assertions
   function checkGuard() in line 20
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function postcondition(boolean) in line 119
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function checkGuard() defined in com::ibm::wala::util::debug::Assertions
   function postcondition(boolean,String) in line 132
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function checkGuard() defined in com::ibm::wala::util::debug::Assertions
   function precondition(boolean) in line 94
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function checkGuard() defined in com::ibm::wala::util::debug::Assertions
   function precondition(boolean,String) in line 107
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function checkGuard() defined in com::ibm::wala::util::debug::Assertions
   function productionAssertion(boolean,String) in line 58
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
   function productionAssertion(boolean) in line 68
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function UNREACHABLE() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function UNREACHABLE(String) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable verifyAssertions in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/debug/Trace.java
module com::ibm::wala::util::debug::Trace
   function getTraceFile() in line 160
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function setTraceFile() defined in com::ibm::wala::util::debug::Trace
      uses variable traceFile defined in com::ibm::wala::util::debug::Trace
   function guardedPrint(String,String) in line 132
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function print(String) defined in com::ibm::wala::util::debug::Trace
   function guardedPrintln(String,String) in line 116
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function println(String) defined in com::ibm::wala::util::debug::Trace
   function print(String) in line 103
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function setTraceFile() defined in com::ibm::wala::util::debug::Trace
      uses variable out defined in com::ibm::wala::util::debug::Trace
   function printCollection(String,Collection) in line 145
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function println(String) defined in com::ibm::wala::util::debug::Trace
   function println(String) in line 87
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function setTraceFile() defined in com::ibm::wala::util::debug::Trace
      uses variable out defined in com::ibm::wala::util::debug::Trace
   function println(Object) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function println(String) defined in com::ibm::wala::util::debug::Trace
   function setTraceFile(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TRACEFILE_KEY defined in com::ibm::wala::util::debug::Trace
   function setTraceFile() in line 43
      38 lines of code
      0 parameters
      8 conditional paths
      uses variable TRACEFILE_KEY defined in com::ibm::wala::util::debug::Trace
      uses variable traceFile defined in com::ibm::wala::util::debug::Trace
      uses variable out defined in com::ibm::wala::util::debug::Trace
   variable out in line 34
   variable traceFile in line 33
   variable TRACEFILE_KEY in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/debug/UnimplementedError.java
module com::ibm::wala::util::debug::UnimplementedError
   inherits from Error
   function UnimplementedError() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function UnimplementedError(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/debug/VerboseAction.java
module com::ibm::wala::util::debug::VerboseAction
   function performVerboseAction() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/DeterministicHashCode.java
module com::ibm::wala::util::DeterministicHashCode
   function get() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in com::ibm::wala::util::DeterministicHashCode
   variable r in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/Exceptions.java
module com::ibm::wala::util::Exceptions
   inherits from com::ibm::wala::shrikeBT::Constants
   function getAaStoreExceptions() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable aaStoreExceptions defined in com::ibm::wala::util::Exceptions
   function getArithmeticException() in line 281
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arithmeticException defined in com::ibm::wala::util::Exceptions
   function getArrayAccessExceptions() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayAccessExceptions defined in com::ibm::wala::util::Exceptions
   function getClassCastException() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classCastException defined in com::ibm::wala::util::Exceptions
   function getClassNotFoundException() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classNotFoundException defined in com::ibm::wala::util::Exceptions
   function getExceptionTypes(ClassLoaderReference,Instruction,ClassHierarchy,WarningSet) in line 82
      protection public
      18 lines of code
      4 parameters
      6 conditional paths
      uses function getOpcode() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses function inferInvokeExceptions(MethodReference,ClassHierarchy,WarningSet) defined in com::ibm::wala::util::Exceptions
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable OP_athrow defined in com::ibm::wala::shrikeBT::Constants
      uses function getIndependentExceptionTypes(Instruction) defined in com::ibm::wala::util::Exceptions
   function getIndependentExceptionTypes(Instruction) in line 173
      protection public
      57 lines of code
      1 parameters
      35 conditional paths
      uses function getOpcode() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable OP_iaload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_laload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_faload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_daload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_aaload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_baload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_caload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_saload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_bastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_castore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_sastore defined in com::ibm::wala::shrikeBT::Constants
      uses function getArrayAccessExceptions() defined in com::ibm::wala::util::Exceptions
      uses variable OP_aastore defined in com::ibm::wala::shrikeBT::Constants
      uses function getAaStoreExceptions() defined in com::ibm::wala::util::Exceptions
      uses variable OP_getfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_putfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses function getNullPointerException() defined in com::ibm::wala::util::Exceptions
      uses variable OP_idiv defined in com::ibm::wala::shrikeBT::Constants
      uses function getArithmeticException() defined in com::ibm::wala::util::Exceptions
      uses variable OP_new defined in com::ibm::wala::shrikeBT::Constants
      uses variable newScalarExceptions defined in com::ibm::wala::util::Exceptions
      uses variable OP_newarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_anewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_multianewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable newArrayExceptions defined in com::ibm::wala::util::Exceptions
      uses variable OP_arraylength defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_athrow defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_checkcast defined in com::ibm::wala::shrikeBT::Constants
      uses function getClassCastException() defined in com::ibm::wala::util::Exceptions
      uses variable OP_monitorenter defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_monitorexit defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ldc_w defined in com::ibm::wala::shrikeBT::Constants
      uses function equals(Object) defined in com::ibm::wala::util::warnings::Warning
      uses variable TYPE_Class defined in com::ibm::wala::shrikeBT::Constants
      uses function getClassNotFoundException() defined in com::ibm::wala::util::Exceptions
   function getNewArrayExceptions() in line 297
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable newArrayExceptions defined in com::ibm::wala::util::Exceptions
   function getNewScalarExceptions() in line 301
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable newScalarExceptions defined in com::ibm::wala::util::Exceptions
   function getNullPointerException() in line 305
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nullPointerException defined in com::ibm::wala::util::Exceptions
   function getRuntimeExceptions() in line 309
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runtimeExceptions defined in com::ibm::wala::util::Exceptions
   function inferInvokeExceptions(MethodReference,ClassHierarchy,WarningSet) in line 105
      protection public
      21 lines of code
      3 parameters
      5 conditional paths
      uses variable runtimeExceptions defined in com::ibm::wala::util::Exceptions
      uses function getJavaLangErrorTypes() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function moderate(MethodReference) defined in com::ibm::wala::util::Exceptions::MethodResolutionFailure
      uses function getMethod(Selector) defined in com::ibm::wala::classLoader::IClass
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function severe(MethodReference) defined in com::ibm::wala::util::Exceptions::MethodResolutionFailure
      uses function getDeclaredExceptions() defined in com::ibm::wala::classLoader::IMethod
   function isPEI(Instruction) in line 235
      protection public
      41 lines of code
      1 parameters
      34 conditional paths
      uses function getOpcode() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable OP_iaload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_laload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_faload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_daload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_aaload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_baload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_caload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_saload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_aastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_bastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_castore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_sastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_getfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_putfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_idiv defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_new defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_newarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_anewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_arraylength defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_athrow defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_checkcast defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_monitorenter defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_monitorexit defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_multianewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ldc_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_Class defined in com::ibm::wala::shrikeBT::Constants
   variable aaStoreExceptions in line 43
   variable arithmeticException in line 55
   variable arrayAccessExceptions in line 40
   variable classCastException in line 57
   variable classNotFoundException in line 59
   variable newArrayExceptions in line 50
   variable newScalarExceptions in line 47
   variable nullPointerException in line 53
   variable runtimeExceptions in line 61
module com::ibm::wala::util::Exceptions::MethodResolutionFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function getMsg() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function moderate(MethodReference) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable MODERATE defined in com::ibm::wala::util::warnings::Warning
   function severe(MethodReference) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/Function.java
module com::ibm::wala::util::Function
   function apply(X) in line 19
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/AbstractGraph.java
module com::ibm::wala::util::graph::AbstractGraph
   inherits from com::ibm::wala::util::graph::Graph
   abstract class
   function addEdge(T,T) in line 93
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addNode(T) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsNode(T) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getEdgeManager() in line 30
      1 lines of code
      0 parameters
      1 conditional paths
   function getNodeManager() in line 25
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfNodes() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPredNodeCount(T) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(T) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeCount(T) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(T) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hasEdge(T,T) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function iterateNodes() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function removeAllIncidentEdges(T) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(T,T) in line 97
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(T) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNode(T) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNodeAndEdges(T) in line 140
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(T) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 159
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/AbstractNumberedGraph.java
module com::ibm::wala::util::graph::AbstractNumberedGraph
   inherits from com::ibm::wala::util::graph::AbstractGraph
   inherits from com::ibm::wala::util::graph::NumberedGraph
   abstract class
   function getMaxNumber() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNode(int) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumber(T) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPredNodeNumbers(T) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeNumbers(T) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterateNodes(final IntSet) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/DominanceFrontiers.java
module com::ibm::wala::util::graph::DominanceFrontiers
   inherits from com::ibm::wala::util::graph::Dominators
   function analyze() in line 47
      28 lines of code
      0 parameters
      7 conditional paths
      uses function dominatorTree() defined in com::ibm::wala::util::graph::Dominators
      uses variable root defined in com::ibm::wala::util::graph::Dominators
      uses variable DF defined in com::ibm::wala::util::graph::DominanceFrontiers
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses function getIdom(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getDominanceFrontier(T) defined in com::ibm::wala::util::graph::DominanceFrontiers
   function getDominanceFrontier(T) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DF defined in com::ibm::wala::util::graph::DominanceFrontiers
   function DominanceFrontiers(Graph< T >,T) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses variable root defined in com::ibm::wala::util::graph::Dominators
      uses function analyze() defined in com::ibm::wala::util::graph::DominanceFrontiers
   variable DF in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/Dominators.java
module com::ibm::wala::util::graph::Dominators
   function addToBucket(T,T) in line 486
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable bucket defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function analyze() in line 201
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses function step1() defined in com::ibm::wala::util::graph::Dominators
      uses function step2() defined in com::ibm::wala::util::graph::Dominators
      uses function step3() defined in com::ibm::wala::util::graph::Dominators
      uses function printResults(Graph< T >) defined in com::ibm::wala::util::graph::Dominators
   function compress(T) in line 347
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getAncestor(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getSemi(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getLabel(T) defined in com::ibm::wala::util::graph::Dominators
      uses function setLabel(T,T) defined in com::ibm::wala::util::graph::Dominators
      uses function setAncestor(T,T) defined in com::ibm::wala::util::graph::Dominators
   function dominators(final T) in line 88
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses function getIdom(T) defined in com::ibm::wala::util::graph::Dominators
   function dominatorTree() in line 110
      protection public
      83 lines of code
      0 parameters
      7 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses variable root defined in com::ibm::wala::util::graph::Dominators
      uses function getIdom(T) defined in com::ibm::wala::util::graph::Dominators
   function EVAL(T) in line 325
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getAncestor(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getLabel(T) defined in com::ibm::wala::util::graph::Dominators
      uses function compress(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getSemi(T) defined in com::ibm::wala::util::graph::Dominators
   function getAncestor(T) in line 506
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable ancestor defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function getChild(T) in line 536
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable child defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function getDominator(T) in line 490
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable dominator defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function getIdom(T) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable dominator defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function getInfo(T) in line 476
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable infoMap defined in com::ibm::wala::util::graph::Dominators
   function getLabel(T) in line 514
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable label defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function getParent(T) in line 498
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable parent defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function getSemi(T) in line 544
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable semiDominator defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function getSize(T) in line 525
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable size defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function isDominatedBy(T,T) in line 76
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getIdom(T) defined in com::ibm::wala::util::graph::Dominators
   function iterateBucket(T) in line 482
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable bucket defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function LINK(T,T) in line 368
      30 lines of code
      2 parameters
      7 conditional paths
      uses function getSemi(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getLabel(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getChild(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getSize(T) defined in com::ibm::wala::util::graph::Dominators
      uses function setAncestor(T,T) defined in com::ibm::wala::util::graph::Dominators
      uses function setChild(T,T) defined in com::ibm::wala::util::graph::Dominators
      uses function setSize(T,int) defined in com::ibm::wala::util::graph::Dominators
      uses function setLabel(T,T) defined in com::ibm::wala::util::graph::Dominators
   function printResults(Graph< T >) in line 558
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses function dominators(final T) defined in com::ibm::wala::util::graph::Dominators
   function setAncestor(T,T) in line 510
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable ancestor defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function setChild(T,T) in line 540
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable child defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function setDominator(T,T) in line 494
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable dominator defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function setLabel(T,T) in line 521
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable label defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function setParent(T,T) in line 502
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable parent defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function setSemi(T,int) in line 551
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable semiDominator defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function setSize(T,int) in line 532
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInfo(T) defined in com::ibm::wala::util::graph::Dominators
      uses variable size defined in com::ibm::wala::util::graph::Dominators::DominatorInfo
   function step1() in line 224
      21 lines of code
      0 parameters
      4 conditional paths
      uses variable reachableNodeCount defined in com::ibm::wala::util::graph::Dominators
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses variable root defined in com::ibm::wala::util::graph::Dominators
      uses function setParent(T,T) defined in com::ibm::wala::util::graph::Dominators
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function next() defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses variable vertex defined in com::ibm::wala::util::graph::Dominators
      uses function setSemi(T,int) defined in com::ibm::wala::util::graph::Dominators
   function step2() in line 250
      61 lines of code
      0 parameters
      9 conditional paths
      uses variable reachableNodeCount defined in com::ibm::wala::util::graph::Dominators
      uses variable vertex defined in com::ibm::wala::util::graph::Dominators
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses function EVAL(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getSemi(T) defined in com::ibm::wala::util::graph::Dominators
      uses function setSemi(T,int) defined in com::ibm::wala::util::graph::Dominators
      uses function addToBucket(T,T) defined in com::ibm::wala::util::graph::Dominators
      uses function LINK(T,T) defined in com::ibm::wala::util::graph::Dominators
      uses function getParent(T) defined in com::ibm::wala::util::graph::Dominators
      uses function iterateBucket(T) defined in com::ibm::wala::util::graph::Dominators
      uses function setDominator(T,T) defined in com::ibm::wala::util::graph::Dominators
   function step3() in line 402
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable reachableNodeCount defined in com::ibm::wala::util::graph::Dominators
      uses variable vertex defined in com::ibm::wala::util::graph::Dominators
      uses function getDominator(T) defined in com::ibm::wala::util::graph::Dominators
      uses function getSemi(T) defined in com::ibm::wala::util::graph::Dominators
      uses function setDominator(T,T) defined in com::ibm::wala::util::graph::Dominators
   function Dominators(Graph< T >,T) in line 68
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::Dominators
      uses variable root defined in com::ibm::wala::util::graph::Dominators
      uses variable infoMap defined in com::ibm::wala::util::graph::Dominators
      uses function analyze() defined in com::ibm::wala::util::graph::Dominators
   variable G in line 49
   variable infoMap in line 474
   variable reachableNodeCount in line 59
   variable root in line 54
   variable vertex in line 44
module com::ibm::wala::util::graph::Dominators::DominatorInfo
   variable ancestor in line 447
   variable bucket in line 437
   variable child in line 457
   variable dominator in line 422
   variable label in line 442
   variable parent in line 427
   variable semiDominator in line 432
   variable size in line 452
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/EdgeManager.java
module com::ibm::wala::util::graph::EdgeManager
   function addEdge(T,T) in line 68
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getPredNodeCount(T) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(T) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeCount(T) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(T) in line 57
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hasEdge(T,T) in line 74
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function removeAllIncidentEdges(T) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(T,T) in line 69
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(T) in line 71
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(T) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/Graph.java
module com::ibm::wala::util::graph::Graph
   inherits from com::ibm::wala::util::graph::NodeManager
   inherits from com::ibm::wala::util::graph::EdgeManager
   function removeNodeAndEdges(T) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/GraphIntegrity.java
module com::ibm::wala::util::graph::GraphIntegrity
   function check(Graph< T >) in line 39
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function checkNodeCount(Graph< T >) defined in com::ibm::wala::util::graph::GraphIntegrity
      uses function checkEdges(Graph< T >) defined in com::ibm::wala::util::graph::GraphIntegrity
      uses function checkEdgeCounts(Graph< T >) defined in com::ibm::wala::util::graph::GraphIntegrity
   function checkEdgeCounts(Graph< T >) in line 48
      24 lines of code
      1 parameters
      6 conditional paths
   function checkEdges(Graph< T >) in line 76
      39 lines of code
      1 parameters
      11 conditional paths
   function checkNodeCount(Graph< T >) in line 119
      49 lines of code
      1 parameters
      11 conditional paths
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::BFSIterator
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function setDiffException(String,Iterator<?extends T >,Iterator< T >) defined in com::ibm::wala::util::graph::GraphIntegrity
   function setDiffException(String,Iterator<?extends T >,Iterator< T >) in line 169
      37 lines of code
      3 parameters
      7 conditional paths
module com::ibm::wala::util::graph::GraphIntegrity::UnsoundGraphException
   inherits from Exception
   function UnsoundGraphException() in line 211
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function UnsoundGraphException(String) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 209
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/GraphPrint.java
module com::ibm::wala::util::graph::GraphPrint
   function genericToString(Graph< T >) in line 25
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function addNode(T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function addEdge(T,T) defined in com::ibm::wala::util::graph::AbstractGraph
      uses function toString() defined in com::ibm::wala::util::graph::AbstractGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/GraphReachability.java
module com::ibm::wala::util::graph::GraphReachability
   function getReachableSet(Object) in line 74
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable solver defined in com::ibm::wala::util::graph::GraphReachability
      uses function getOut(Object) defined in com::ibm::wala::dataflow::graph::DataflowSolver
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getValue() defined in com::ibm::wala::fixpoint::BitVectorVariable
   function solve() in line 92
      protection public
      50 lines of code
      0 parameters
      2 conditional paths
      uses function getMappedIndex(T) defined in com::ibm::wala::util::intset::OrdinalSetMapping
      uses variable g defined in com::ibm::wala::util::graph::GraphReachability
      uses variable solver defined in com::ibm::wala::util::graph::GraphReachability
      uses function solve() defined in com::ibm::wala::fixedpoint::impl::AbstractFixedPointSolver
   function GraphReachability(Graph< T >,Filter) in line 64
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable g defined in com::ibm::wala::util::graph::GraphReachability
   variable g in line 46
   variable solver in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/GraphSlicer.java
module com::ibm::wala::util::graph::GraphSlicer
   function prune(final Graph< T >,final Filter) in line 53
      protection public
      87 lines of code
      2 parameters
      2 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses function containsNode(T) defined in com::ibm::wala::util::graph::NodeManager
      uses function getPredNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function hasEdge(T,T) defined in com::ibm::wala::util::graph::EdgeManager
   function slice(Graph< T >,Filter) in line 33
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/BasicNodeManager.java
module com::ibm::wala::util::graph::impl::BasicNodeManager
   inherits from com::ibm::wala::util::graph::NodeManager
   function addNode(T) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::util::graph::impl::BasicNodeManager
   function containsNode(T) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::util::graph::impl::BasicNodeManager
   function getNumberOfNodes() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::util::graph::impl::BasicNodeManager
   function iterateNodes() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::util::graph::impl::BasicNodeManager
   function removeNode(T) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::util::graph::impl::BasicNodeManager
   variable nodes in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/DelegatingEdgeManager.java
module com::ibm::wala::util::graph::impl::DelegatingEdgeManager
   inherits from com::ibm::wala::util::graph::EdgeManager
   function addEdge(Object,Object) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getPredNodeCount(Object) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(Object) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeCount(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(Object) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hasEdge(Object,Object) in line 93
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function removeAllIncidentEdges(Object) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function removeAllIncidentEdges() defined in com::ibm::wala::util::graph::INodeWithEdges
   function removeEdge(Object,Object) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(Object) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function removeIncomingEdges() defined in com::ibm::wala::util::graph::INodeWithEdges
   function removeOutgoingEdges(Object) in line 86
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function removeOutgoingEdges() defined in com::ibm::wala::util::graph::INodeWithEdges
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/DelegatingGraph.java
module com::ibm::wala::util::graph::impl::DelegatingGraph
   inherits from com::ibm::wala::util::graph::Graph
   function addEdge(T,T) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function addNode(T) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function containsNode(T) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function getNumberOfNodes() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function getPredNodeCount(T) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function getPredNodes(T) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function getSuccNodeCount(T) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function getSuccNodes(T) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function hasEdge(T,T) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function iterateNodes() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function removeAllIncidentEdges(T) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function removeEdge(T,T) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function removeIncomingEdges(T) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function removeNode(T) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function removeNodeAndEdges(T) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function removeOutgoingEdges(T) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   function DelegatingGraph(Graph< T >) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingGraph
   variable delegate in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/DelegatingNumberedEdgeManager.java
module com::ibm::wala::util::graph::impl::DelegatingNumberedEdgeManager
   inherits from com::ibm::wala::util::graph::EdgeManager
   function addEdge(Object,Object) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getPredNodeCount(Object) in line 84
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getPredNumbers() defined in com::ibm::wala::util::graph::INodeWithNumberedEdges
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getPredNodes(Object) in line 75
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getPredNumbers() defined in com::ibm::wala::util::graph::INodeWithNumberedEdges
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
   function getSuccNodeCount(Object) in line 101
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSuccNumbers() defined in com::ibm::wala::util::graph::INodeWithNumberedEdges
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function getSuccNodes(Object) in line 92
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getSuccNumbers() defined in com::ibm::wala::util::graph::INodeWithNumberedEdges
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
   function hasEdge(Object,Object) in line 152
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function removeAllIncidentEdges(Object) in line 119
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function removeAllIncidentEdges() defined in com::ibm::wala::util::graph::INodeWithNumberedEdges
   function removeEdge(Object,Object) in line 112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(Object) in line 127
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function removeIncomingEdges() defined in com::ibm::wala::util::graph::INodeWithNumberedEdges
   function removeOutgoingEdges(Object) in line 136
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function removeOutgoingEdges() defined in com::ibm::wala::util::graph::INodeWithNumberedEdges
   function toString() in line 144
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function DelegatingNumberedEdgeManager(DelegatingNumberedNodeManager) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::util::graph::impl::DelegatingNumberedEdgeManager
   variable nodeManager in line 31
module com::ibm::wala::util::graph::impl::DelegatingNumberedEdgeManager::IntSetNodeIterator
   inherits from java::util::Iterator
   function hasNext() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingNumberedEdgeManager::IntSetNodeIterator
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function next() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::util::graph::impl::DelegatingNumberedEdgeManager
      uses function getNode(int) defined in com::ibm::wala::util::graph::impl::DelegatingNumberedNodeManager
      uses variable delegate defined in com::ibm::wala::util::graph::impl::DelegatingNumberedEdgeManager::IntSetNodeIterator
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
   function remove() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable delegate in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/DelegatingNumberedGraph.java
module com::ibm::wala::util::graph::impl::DelegatingNumberedGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function getEdgeManager() in line 36
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeManager defined in com::ibm::wala::util::graph::impl::DelegatingNumberedGraph
   function getNodeManager() in line 29
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::util::graph::impl::DelegatingNumberedGraph
   variable edgeManager in line 24
   variable nodeManager in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/DelegatingNumberedNodeManager.java
module com::ibm::wala::util::graph::impl::DelegatingNumberedNodeManager
   inherits from com::ibm::wala::util::graph::NumberedNodeManager
   function addNode(T) in line 128
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
   function containsNode(T) in line 198
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function ensureCapacity(int) in line 153
      8 lines of code
      1 parameters
      1 conditional paths
   function getMaxNumber() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNode(int) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumber(T) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfNodes() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateNodes() in line 74
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
   function iterateNodes(IntSet) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNode(T) in line 167
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 181
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   variable BUFFER_FACTOR in line 32
   variable maxNumber in line 36
   variable nodes in line 34
   variable numberOfNodes in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/ExplicitEdge.java
module com::ibm::wala::util::graph::impl::ExplicitEdge
   function equals(Object) in line 34
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ExplicitEdge(Object,Object) defined in com::ibm::wala::util::graph::impl::ExplicitEdge
      uses variable src defined in com::ibm::wala::util::graph::impl::ExplicitEdge
      uses variable dest defined in com::ibm::wala::util::graph::impl::ExplicitEdge
   function hashCode() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::util::graph::impl::ExplicitEdge
      uses variable dest defined in com::ibm::wala::util::graph::impl::ExplicitEdge
   function toString() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::util::graph::impl::ExplicitEdge
      uses variable dest defined in com::ibm::wala::util::graph::impl::ExplicitEdge
   function ExplicitEdge(Object,Object) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in com::ibm::wala::util::graph::impl::ExplicitEdge
      uses variable dest defined in com::ibm::wala::util::graph::impl::ExplicitEdge
   variable dest in line 22
   variable src in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/GraphInverter.java
module com::ibm::wala::util::graph::impl::GraphInverter
   function invert(final Graph< T >) in line 28
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/InvertedGraph.java
module com::ibm::wala::util::graph::impl::InvertedGraph
   inherits from com::ibm::wala::util::graph::AbstractGraph
   function getEdgeManager() in line 32
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edges defined in com::ibm::wala::util::graph::impl::InvertedGraph
      uses variable nodes defined in com::ibm::wala::util::graph::impl::InvertedGraph
   function getNodeManager() in line 26
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::util::graph::impl::InvertedGraph
   variable edges in line 30
   variable nodes in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/InvertedNumberedGraph.java
module com::ibm::wala::util::graph::impl::InvertedNumberedGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function getEdgeManager() in line 34
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edges defined in com::ibm::wala::util::graph::impl::InvertedNumberedGraph
      uses variable nodes defined in com::ibm::wala::util::graph::impl::InvertedNumberedGraph
   function getNodeManager() in line 30
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::util::graph::impl::InvertedNumberedGraph
   variable edges in line 28
   variable nodes in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/InvertingEdgeManager.java
module com::ibm::wala::util::graph::impl::InvertingEdgeManager
   inherits from com::ibm::wala::util::graph::EdgeManager
   function addEdge(T,T) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function getPredNodeCount(T) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function getPredNodes(T) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function getSuccNodeCount(T) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function getSuccNodes(T) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function hasEdge(T,T) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function removeAllIncidentEdges(T) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function removeEdge(T,T) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function removeIncomingEdges(T) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function removeOutgoingEdges(T) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   function InvertingEdgeManager(EdgeManager< T >) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingEdgeManager
   variable original in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/InvertingNumberedEdgeManager.java
module com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   inherits from com::ibm::wala::util::graph::NumberedEdgeManager
   function addEdge(T,T) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function getPredNodeCount(T) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function getPredNodeNumbers(T) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function getPredNodes(T) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function getSuccNodeCount(T) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function getSuccNodeNumbers(T) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function getSuccNodes(T) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function hasEdge(T,T) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function removeAllIncidentEdges(T) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function removeEdge(T,T) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function removeIncomingEdges(T) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function removeOutgoingEdges(T) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   function InvertingNumberedEdgeManager(NumberedEdgeManager< T >) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable original defined in com::ibm::wala::util::graph::impl::InvertingNumberedEdgeManager
   variable original in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/NodeWithNumber.java
module com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::util::graph::INodeWithNumber
   function getGraphNodeId() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable number defined in com::ibm::wala::util::graph::impl::NodeWithNumber
   function setGraphNodeId(int) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable number defined in com::ibm::wala::util::graph::impl::NodeWithNumber
   variable number in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/NodeWithNumberedEdges.java
module com::ibm::wala::util::graph::impl::NodeWithNumberedEdges
   inherits from com::ibm::wala::util::graph::impl::NodeWithNumber
   inherits from com::ibm::wala::util::graph::INodeWithNumberedEdges
   function addPred(int) in line 60
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable predNumbers defined in com::ibm::wala::util::graph::impl::NodeWithNumberedEdges
      uses function add(int) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function addSucc(int) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable succNumbers defined in com::ibm::wala::util::graph::impl::NodeWithNumberedEdges
      uses function add(int) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function deletePred(int) in line 89
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable predNumbers defined in com::ibm::wala::util::graph::impl::NodeWithNumberedEdges
      uses function remove(int) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function size() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function deleteSucc(int) in line 75
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable succNumbers defined in com::ibm::wala::util::graph::impl::NodeWithNumberedEdges
      uses function remove(int) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function size() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function getPredNumbers() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable predNumbers defined in com::ibm::wala::util::graph::impl::NodeWithNumberedEdges
   function getSuccNumbers() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable succNumbers defined in com::ibm::wala::util::graph::impl::NodeWithNumberedEdges
   function removeAllIncidentEdges() in line 102
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function removeIncomingEdges() in line 110
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function removeOutgoingEdges() in line 119
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable predNumbers in line 23
   variable succNumbers in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/NumberedNodeIterator.java
module com::ibm::wala::util::graph::impl::NumberedNodeIterator
   inherits from java::util::Iterator
   function hasNext() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 47
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getNode(int) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function remove() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NumberedNodeIterator(IntSet,NumberedNodeManager< T >) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/SlowNumberedNodeManager.java
module com::ibm::wala::util::graph::impl::SlowNumberedNodeManager
   inherits from com::ibm::wala::util::graph::NumberedNodeManager
   function addNode(T) in line 87
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function containsNode(T) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMaxNumber() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNode(int) in line 47
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getNumber(Object) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfNodes() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateNodes() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateNodes(IntSet) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeNode(T) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 108
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   variable map in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/SlowSparseNumberedGraph.java
module com::ibm::wala::util::graph::impl::SlowSparseNumberedGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function duplicate(Graph< T >) in line 71
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function getEdgeManager() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNodeManager() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SlowSparseNumberedGraph() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SlowSparseNumberedGraph(int) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable edgeManager in line 31
   variable nodeManager in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/SparseNumberedEdgeManager.java
module com::ibm::wala::util::graph::impl::SparseNumberedEdgeManager
   inherits from com::ibm::wala::util::graph::NumberedEdgeManager
   function addEdge(T,T) in line 165
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function getPredNodeCount(T) in line 95
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getPredNodeNumbers(T) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPredNodes(T) in line 78
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeCount(T) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeCount(int) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeNumbers(T) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(T) in line 105
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodes(int) in line 120
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function hasAnySuccessor(int) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hasEdge(T,T) in line 176
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function removeAllIncidentEdges(T) in line 187
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(T,T) in line 234
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function removeIncomingEdges(T) in line 218
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function removeOutgoingEdges(T) in line 249
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SparseNumberedEdgeManager(NumberedNodeManager< T >) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SparseNumberedEdgeManager(NumberedNodeManager< T >,int,byte) in line 53
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
   variable defaultImpl in line 69
   variable hasSuccessor in line 38
   variable nodeManager in line 33
   variable predecessors in line 71
   variable successors in line 70
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/impl/SparseNumberedGraph.java
module com::ibm::wala::util::graph::impl::SparseNumberedGraph
   inherits from com::ibm::wala::util::graph::AbstractNumberedGraph
   function getEdgeManager() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
   function getNodeManager() in line 60
      3 lines of code
      0 parameters
      1 conditional paths
   function SparseNumberedGraph() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeManager defined in com::ibm::wala::util::graph::impl::SparseNumberedGraph
      uses variable edgeManager defined in com::ibm::wala::util::graph::impl::SparseNumberedGraph
   function SparseNumberedGraph(int) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function SparseNumberedGraph(DelegatingNumberedNodeManager< T >,SparseNumberedEdgeManager< T >) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable edgeManager in line 27
   variable nodeManager in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/InferGraphRootsImpl.java
module com::ibm::wala::util::graph::InferGraphRootsImpl
   function inferRoots(Graph< T >) in line 28
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/INodeWithEdges.java
module com::ibm::wala::util::graph::INodeWithEdges
   function getPredNodeCount() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPredNodes() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSuccNodeCount() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSuccNodes() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeAllIncidentEdges() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeIncomingEdges() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeOutgoingEdges() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/INodeWithNumber.java
module com::ibm::wala::util::graph::INodeWithNumber
   function getGraphNodeId() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setGraphNodeId(int) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/INodeWithNumberedEdges.java
module com::ibm::wala::util::graph::INodeWithNumberedEdges
   inherits from com::ibm::wala::util::graph::INodeWithNumber
   function addPred(int) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addSucc(int) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPredNumbers() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSuccNumbers() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeAllIncidentEdges() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeIncomingEdges() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeOutgoingEdges() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/NodeDecorator.java
module com::ibm::wala::util::graph::NodeDecorator
   function getLabel(Object) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable DEFAULT in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/NodeManager.java
module com::ibm::wala::util::graph::NodeManager
   function addNode(T) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsNode(T) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumberOfNodes() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iterateNodes() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeNode(T) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/NumberedEdgeManager.java
module com::ibm::wala::util::graph::NumberedEdgeManager
   inherits from com::ibm::wala::util::graph::EdgeManager
   function getPredNodeNumbers(T) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSuccNodeNumbers(T) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/NumberedGraph.java
module com::ibm::wala::util::graph::NumberedGraph
   inherits from com::ibm::wala::util::graph::Graph
   inherits from com::ibm::wala::util::graph::NumberedNodeManager
   inherits from com::ibm::wala::util::graph::NumberedEdgeManager
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/NumberedNodeManager.java
module com::ibm::wala::util::graph::NumberedNodeManager
   inherits from com::ibm::wala::util::graph::NodeManager
   function getMaxNumber() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNode(int) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumber(T) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function iterateNodes(IntSet) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/BFSIterator.java
module com::ibm::wala::util::graph::traverse::BFSIterator
   inherits from java::util::Iterator
   function getConnected(T) in line 140
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::BFSIterator
   function hashCode() in line 150
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function hasNext() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::util::graph::traverse::BFSIterator
   function init(Graph< T >,Iterator<?extends T >) in line 82
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::BFSIterator
      uses variable index defined in com::ibm::wala::util::graph::traverse::BFSIterator
      uses function visitChildren(T) defined in com::ibm::wala::util::graph::traverse::BFSIterator
   function next() in line 123
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable index defined in com::ibm::wala::util::graph::traverse::BFSIterator
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::BFSIterator
      uses function visitChildren(T) defined in com::ibm::wala::util::graph::traverse::BFSIterator
   function remove() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitChildren(T) in line 99
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getConnected(T) defined in com::ibm::wala::util::graph::traverse::BFSIterator
   function BFSIterator(Graph< T >,T) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(Graph< T >,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::BFSIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::BFSIterator
   function BFSIterator(Graph< T >,Iterator<?extends T >) in line 70
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(Graph< T >,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::BFSIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::BFSIterator
   function BFSIterator(Graph< T >) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::BFSIterator
   variable G in line 51
   variable index in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/BFSPathFinder.java
module com::ibm::wala::util::graph::traverse::BFSPathFinder
   function find() in line 148
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
   function getConnected(T) in line 203
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 207
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function makePath(T,Map< Object, T >) in line 180
      14 lines of code
      2 parameters
      1 conditional paths
   function BFSPathFinder(Graph< T >,T,Filter) in line 67
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function BFSPathFinder(Graph< T >,T,final T) in line 80
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
   function BFSPathFinder(Graph< T >,T,Iterator< T >) in line 98
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
   function BFSPathFinder(Graph< T >,Iterator< T >,final T) in line 121
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
   function BFSPathFinder(Graph< T >,Iterator< T >,Filter) in line 138
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable DEBUG in line 43
   variable filter in line 53
   variable G in line 48
   variable roots in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/BoundedBFSIterator.java
module com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   inherits from java::util::Iterator
   function getConnected(T) in line 167
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   function hashCode() in line 178
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function hasNext() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   function init(Graph< T >,Iterator<?extends T >) in line 99
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable index defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses function visitChildren(T) defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   function next() in line 146
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable index defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable currentHops defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable k defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable boundary defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses function visitChildren(T) defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   function remove() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitChildren(T) in line 116
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable currentHops defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable k defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable boundary defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses function getConnected(T) defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   function BoundedBFSIterator(Graph< T >,T,int) in line 77
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable k defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable boundary defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses function init(Graph< T >,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   function BoundedBFSIterator(Graph< T >,Iterator<?extends T >,int) in line 92
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable k defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable boundary defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses function init(Graph< T >,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::BoundedBFSIterator
   variable boundary in line 63
   variable currentHops in line 68
   variable G in line 52
   variable index in line 47
   variable k in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/DFS.java
module com::ibm::wala::util::graph::traverse::DFS
   function getReachableNodes(final Graph< T >,Collection<?extends T >,final Filter) in line 49
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
   function getReachableNodes(Graph< T >,Collection<?extends T >) in line 68
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function iterateFinishTime(Graph< T >) defined in com::ibm::wala::util::graph::traverse::DFS
   function getReachableNodes(Graph< T >) in line 103
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function iterateFinishTime(Graph< T >) defined in com::ibm::wala::util::graph::traverse::DFS
   function hashCode() in line 164
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function iterateDiscoverTime(Graph< T >) in line 173
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function iterateDiscoverTime(Graph< T >,Iterator< T >) in line 187
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function iterateDiscoverTime(Graph< T >,T) in line 201
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function iterateFinishTime(Graph< T >) in line 213
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function iterateFinishTime(Graph< T >,Iterator<?extends T >) in line 227
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function sortByDepthFirstOrder(Graph< T >,T) in line 122
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function iterateFinishTime(Graph< T >) defined in com::ibm::wala::util::graph::traverse::DFS
module com::ibm::wala::util::graph::traverse::DFS::DFSComparator
   inherits from java::util::Comparator
   function compare(T,T) in line 147
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   variable order in line 141
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/DFSDiscoverTimeIterator.java
module com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   inherits from java::util::Stack
   inherits from java::util::Iterator
   abstract class
   function getConnected(T) in line 143
      1 lines of code
      1 parameters
      1 conditional paths
   function getPendingChildren(T) in line 73
      1 lines of code
      1 parameters
      1 conditional paths
   function hasNext() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPendingChildren(T) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function setPendingChildren(T,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function init(Iterator<?extends T >) in line 42
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable roots defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function setPendingChildren(T,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function getConnected(T) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function init(T) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
      uses function init(Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function next() in line 88
      protection public
      46 lines of code
      0 parameters
      8 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getPendingChildren(T) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function visitEdge(T,T) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function setPendingChildren(T,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function getConnected(T) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses variable roots defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function remove() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setPendingChildren(T,Iterator<?extends T >) in line 81
      1 lines of code
      2 parameters
      1 conditional paths
   function visitEdge(T,T) in line 152
      3 lines of code
      2 parameters
      1 conditional paths
   variable roots in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/DFSFinishTimeIterator.java
module com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   inherits from java::util::Stack
   inherits from java::util::Iterator
   abstract class
   function getConnected(T) in line 132
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   function hasNext() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theNextElement defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   function init(Graph< T >,Iterator<?extends T >) in line 52
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
      uses variable roots defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
      uses variable theNextElement defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   function next() in line 89
      protection public
      34 lines of code
      0 parameters
      7 conditional paths
      uses variable theNextElement defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
      uses function getConnected(T) defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable roots defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   function remove() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable G in line 44
   variable roots in line 39
   variable theNextElement in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/DFSPathFinder.java
module com::ibm::wala::util::graph::traverse::DFSPathFinder
   inherits from java::util::Stack
   function advance() in line 143
      37 lines of code
      0 parameters
      7 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getPendingChildren(T) defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses function setPendingChildren(T,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses function getConnected(T) defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses variable roots defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
   function currentPath() in line 107
      7 lines of code
      0 parameters
      2 conditional paths
   function find() in line 90
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable roots defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses function setPendingChildren(T,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses function getConnected(T) defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses function hasNext() defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses variable filter defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses function currentPath() defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
      uses function advance() defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
   function getConnected(T) in line 188
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
   function getPendingChildren(T) in line 128
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
   function hasNext() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setPendingChildren(T,Iterator<?extends T >) in line 136
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
   function DFSPathFinder(Graph< T >,T,Filter) in line 66
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
   function DFSPathFinder(Graph< T >,Iterator< T >,Filter) in line 79
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSPathFinder
   variable filter in line 48
   variable G in line 43
   variable pendingChildren in line 58
   variable roots in line 53
   variable serialVersionUID in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/DFSVisit.java
module com::ibm::wala::util::graph::traverse::DFSVisit
   function DFS(Graph< T >,T,SimpleMap< T, Iterator<?extends T >>,Visitor) in line 155
      43 lines of code
      4 parameters
      6 conditional paths
      uses function visit(Object,Object) defined in com::ibm::wala::util::graph::traverse::DFSVisit::Visitor
      uses function getConnectedTo(Graph< T >,T) defined in com::ibm::wala::util::graph::traverse::DFSVisit
      uses function visitEdge(Object,Object) defined in com::ibm::wala::util::graph::traverse::DFSVisit::Visitor
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function leave(Object) defined in com::ibm::wala::util::graph::traverse::DFSVisit::Visitor
   function DFS(Graph< T >,Iterator<?extends T >,Visitor,SimpleMap< T, Iterator<?extends T >>) in line 217
      protection public
      8 lines of code
      4 parameters
      3 conditional paths
      uses function DFS(Graph< T >,T,SimpleMap< T, Iterator<?extends T >>,Visitor) defined in com::ibm::wala::util::graph::traverse::DFSVisit
   function DFS(Graph< T >,Iterator<?extends T >,Visitor) in line 238
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function DFS(Graph< T >,T,SimpleMap< T, Iterator<?extends T >>,Visitor) defined in com::ibm::wala::util::graph::traverse::DFSVisit
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
   function DFS(Graph< T >,Visitor) in line 257
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function DFS(Graph< T >,T,SimpleMap< T, Iterator<?extends T >>,Visitor) defined in com::ibm::wala::util::graph::traverse::DFSVisit
      uses function iterateNodes() defined in com::ibm::wala::util::graph::NodeManager
   function getConnectedTo(Graph< T >,T) in line 199
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   variable EMPTY_ITERATOR in line 38
      protection public
module com::ibm::wala::util::graph::traverse::DFSVisit::SimpleMap
   function clear() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function get(Object) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function put(K,V) in line 58
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::ibm::wala::util::graph::traverse::DFSVisit::NumberedSimpleMap
   inherits from com::ibm::wala::util::graph::traverse::DFSVisit::SimpleMap
   function clear() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get(Object) in line 84
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function put(K,V) in line 91
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function NumberedSimpleMap(int) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::util::graph::traverse::DFSVisit::DefaultSimpleMap
   inherits from java::util::HashMap
   inherits from com::ibm::wala::util::graph::traverse::DFSVisit::SimpleMap
   function DefaultSimpleMap(int) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DefaultSimpleMap() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DefaultSimpleMap(int,float) in line 130
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 111
module com::ibm::wala::util::graph::traverse::DFSVisit::Visitor
   abstract class
   function leave(Object) in line 144
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visit(Object,Object) in line 142
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitEdge(Object,Object) in line 146
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/GraphDFSDiscoverTimeIterator.java
module com::ibm::wala::util::graph::traverse::GraphDFSDiscoverTimeIterator
   inherits from com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   abstract class
   function getConnected(T) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
   function init(Graph< T >,Iterator<?extends T >) in line 24
      4 lines of code
      2 parameters
      1 conditional paths
   variable G in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/NumberedDFSDiscoverTimeIterator.java
module com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
   inherits from com::ibm::wala::util::graph::traverse::GraphDFSDiscoverTimeIterator
   inherits from java::util::Iterator
   function getPendingChildren(T) in line 81
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
   function setPendingChildren(T,Iterator<?extends T >) in line 89
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
   function NumberedDFSDiscoverTimeIterator(NumberedGraph< T >,T) in line 48
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
      uses function init(Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function NumberedDFSDiscoverTimeIterator(NumberedGraph< T >,Iterator<?extends T >) in line 63
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
      uses function init(Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function NumberedDFSDiscoverTimeIterator(NumberedGraph< T >) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::NumberedDFSDiscoverTimeIterator
   variable G in line 39
   variable pendingChildren in line 34
   variable serialVersionUID in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/NumberedDFSFinishTimeIterator.java
module com::ibm::wala::util::graph::traverse::NumberedDFSFinishTimeIterator
   inherits from com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   inherits from java::util::Iterator
   variable G in line 39
   variable pendingChildren in line 34
   variable serialVersionUID in line 29
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/SCCIterator.java
module com::ibm::wala::util::graph::traverse::SCCIterator
   inherits from java::util::Iterator
   function hasNext() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rev defined in com::ibm::wala::util::graph::traverse::SCCIterator
   function next() in line 69
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable rev defined in com::ibm::wala::util::graph::traverse::SCCIterator
   function remove() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SCCIterator(Graph< T >) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SCCIterator(Graph< T >,Iterator< T >) in line 53
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable rev defined in com::ibm::wala::util::graph::traverse::SCCIterator
   variable rev in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/SlowDFSDiscoverTimeIterator.java
module com::ibm::wala::util::graph::traverse::SlowDFSDiscoverTimeIterator
   inherits from com::ibm::wala::util::graph::traverse::GraphDFSDiscoverTimeIterator
   inherits from java::util::Iterator
   function getPendingChildren(Object) in line 75
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::SlowDFSDiscoverTimeIterator
   function setPendingChildren(T,Iterator<?extends T >) in line 83
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::SlowDFSDiscoverTimeIterator
   function SlowDFSDiscoverTimeIterator() in line 41
      2 lines of code
      0 parameters
      1 conditional paths
   function SlowDFSDiscoverTimeIterator(Graph< T >,T) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function SlowDFSDiscoverTimeIterator(Graph< T >,Iterator< T >) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
   function SlowDFSDiscoverTimeIterator(Graph< T >) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function init(Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSDiscoverTimeIterator
      uses function iterateNodes() defined in com::ibm::wala::util::graph::NodeManager
   variable pendingChildren in line 36
   variable serialVersionUID in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/graph/traverse/SlowDFSFinishTimeIterator.java
module com::ibm::wala::util::graph::traverse::SlowDFSFinishTimeIterator
   inherits from com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   function SlowDFSFinishTimeIterator(Graph< T >,T) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(Graph< T >,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   function SlowDFSFinishTimeIterator(Graph< T >,Iterator<?extends T >) in line 56
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(Graph< T >,Iterator<?extends T >) defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
   function SlowDFSFinishTimeIterator(Graph< T >) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable G defined in com::ibm::wala::util::graph::traverse::DFSFinishTimeIterator
      uses variable pendingChildren defined in com::ibm::wala::util::graph::traverse::SlowDFSFinishTimeIterator
   variable pendingChildren in line 36
   variable serialVersionUID in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/heapTrace/HeapTracer.java
module com::ibm::wala::util::heapTrace::HeapTracer
   function analyzeLeaks() in line 530
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function analyzeLeaks(boolean) in line 540
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses variable traceStatics defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function perform() defined in com::ibm::wala::util::heapTrace::HeapTracer
   function computeSizeOf(Object) in line 241
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable BYTES_IN_HEADER defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function sizeOfSlot(Class) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function getAllInstanceFields(Class) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function drainWorkLists(Field,Result,IdentityHashMap< Object, Object >) in line 340
      17 lines of code
      3 parameters
      5 conditional paths
      uses variable scalarWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable arrayWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function traverseScalar(Field,Object,Object,Result,IdentityHashMap< Object, Object >) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable snd defined in com::ibm::wala::util::collections::Pair
      uses variable fst defined in com::ibm::wala::util::collections::Pair
      uses function traverseArray(Field,Object,Object,Result,IdentityHashMap< Object, Object >) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function extractBinDirectories(String) in line 195
      11 lines of code
      1 parameters
      3 conditional paths
   function findClassNames(String,File) in line 171
      19 lines of code
      2 parameters
      4 conditional paths
   function generateRootClassesFromWorkspace() in line 142
      16 lines of code
      0 parameters
      3 conditional paths
      uses function extractBinDirectories(String) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function findClassNames(String,File) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function getAllInstanceFields(Class) in line 478
      14 lines of code
      1 parameters
      4 conditional paths
      uses function isStatic(Field) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function getAllReferenceInstanceFields(Class) in line 498
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable allReferenceFieldsCache defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function isStatic(Field) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function isInBadPackage(Class) in line 407
      26 lines of code
      1 parameters
      7 conditional paths
      uses variable packageStatus defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable OK defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable BAD defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable DEBUG defined in com::ibm::wala::util::heapTrace::HeapTracer
   function isStatic(Field) in line 526
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 130
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function perform() defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function toString() defined in com::ibm::wala::util::heapTrace::HeapTracer::Result
   function perform() in line 210
      protection public
      26 lines of code
      0 parameters
      7 conditional paths
      uses variable traceStatics defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable rootClasses defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function isStatic(Field) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function traverse(Field,Result,IdentityHashMap< Object, Object >) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable rootInstances defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function getAllInstanceFields(Class) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function sizeOf(Object) in line 264
      13 lines of code
      1 parameters
      3 conditional paths
      uses function computeSizeOf(Object) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable sizeMap defined in com::ibm::wala::util::heapTrace::HeapTracer
   function sizeOfSlot(Class) in line 282
      17 lines of code
      1 parameters
      6 conditional paths
   function traceHeap(Collection,boolean) in line 571
      protection public
      24 lines of code
      2 parameters
      3 conditional paths
      uses variable traceStatics defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function perform() defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function sizeOf(Object) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function traverse(Field,Result,IdentityHashMap< Object, Object >) in line 307
      24 lines of code
      3 parameters
      5 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable DUMMY defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable arrayWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable internalClasses defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable scalarWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function drainWorkLists(Field,Result,IdentityHashMap< Object, Object >) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function traverse(Field,Object,Result,IdentityHashMap< Object, Object >) in line 332
      6 lines of code
      4 parameters
      1 conditional paths
      uses function traverseFieldOfScalar(Field,Field,Object,Object,IdentityHashMap< Object, Object >,Result) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function drainWorkLists(Field,Result,IdentityHashMap< Object, Object >) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function traverseArray(Field,Object,Object,Result,IdentityHashMap< Object, Object >) in line 358
      29 lines of code
      5 parameters
      6 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable DUMMY defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable arrayWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable scalarWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
   function traverseFieldOfScalar(Field,Field,Object,Object,IdentityHashMap< Object, Object >,Result) in line 444
      33 lines of code
      6 parameters
      7 conditional paths
      uses function isInBadPackage(Class) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable DUMMY defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable arrayWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable internalClasses defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable scalarWorkList defined in com::ibm::wala::util::heapTrace::HeapTracer
   function traverseScalar(Field,Object,Object,Result,IdentityHashMap< Object, Object >) in line 388
      12 lines of code
      5 parameters
      3 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function getAllReferenceInstanceFields(Class) defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses function traverseFieldOfScalar(Field,Field,Object,Object,IdentityHashMap< Object, Object >,Result) defined in com::ibm::wala::util::heapTrace::HeapTracer
   function HeapTracer(Collection,boolean) in line 122
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable rootInstances defined in com::ibm::wala::util::heapTrace::HeapTracer
      uses variable traceStatics defined in com::ibm::wala::util::heapTrace::HeapTracer
   variable allReferenceFieldsCache in line 493
   variable arrayWorkList in line 61
   variable BAD in line 403
   variable BYTES_IN_HEADER in line 66
   variable DEBUG in line 41
   variable DUMMY in line 78
   variable internalClasses in line 84
   variable OK in line 401
   variable packageStatus in line 405
   variable rootClasses in line 46
   variable rootInstances in line 51
   variable scalarWorkList in line 56
   variable sizeMap in line 76
   variable traceStatics in line 71
module com::ibm::wala::util::heapTrace::HeapTracer::Demographics
   function getTotalInstances() in line 692
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTotalSize() in line 685
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function registerObject(Object,Object) in line 628
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 646
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   variable instanceCount in line 605
   variable sizeCount in line 610
   variable totalInstances in line 615
   variable totalSize in line 620
module com::ibm::wala::util::heapTrace::HeapTracer::Demographics::SizeComparator
   inherits from java::util::Comparator
   function compare(Object,Object) in line 675
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
module com::ibm::wala::util::heapTrace::HeapTracer::Result
   function findOrCreateDemographics(Field) in line 713
      8 lines of code
      1 parameters
      2 conditional paths
   function getTotalSize() in line 727
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function registerReachedFrom(Field,Object,Object) in line 722
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function toString() in line 741
      protection public
      26 lines of code
      0 parameters
      4 conditional paths
      uses variable BYTES_IN_HEADER defined in com::ibm::wala::util::heapTrace::HeapTracer
   variable roots in line 707
module com::ibm::wala::util::heapTrace::HeapTracer::Result::SizeComparator
   inherits from java::util::Comparator
   function compare(Field,Field) in line 780
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/ImmutableByteArray.java
module com::ibm::wala::util::ImmutableByteArray
   function concat(byte,ImmutableByteArray) in line 52
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
      uses function ImmutableByteArray(byte[]) defined in com::ibm::wala::util::ImmutableByteArray
   function get(int) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function length() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ImmutableByteArray(byte[]) defined in com::ibm::wala::util::ImmutableByteArray
   function substring(int,int) in line 46
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   function toString() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ImmutableByteArray(byte[]) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ImmutableByteArray(byte[],int,int) in line 30
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/IndiscriminateFilter.java
module com::ibm::wala::util::IndiscriminateFilter
   inherits from com::ibm::wala::util::collections::Filter
   function accepts(Object) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function singleton() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in com::ibm::wala::util::IndiscriminateFilter
   variable INSTANCE in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/IntensionalSetOfStrings.java
module com::ibm::wala::util::IntensionalSetOfStrings
   function compile() in line 45
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in com::ibm::wala::util::IntensionalSetOfStrings
      uses variable regex defined in com::ibm::wala::util::IntensionalSetOfStrings
      uses variable needsCompile defined in com::ibm::wala::util::IntensionalSetOfStrings
   function contains(String) in line 50
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable needsCompile defined in com::ibm::wala::util::IntensionalSetOfStrings
      uses function compile() defined in com::ibm::wala::util::IntensionalSetOfStrings
      uses variable pattern defined in com::ibm::wala::util::IntensionalSetOfStrings
      uses variable DEBUG defined in com::ibm::wala::util::IntensionalSetOfStrings
   function IntensionalSetOfStrings(String,ClassLoader) in line 36
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable regex defined in com::ibm::wala::util::IntensionalSetOfStrings
      uses variable needsCompile defined in com::ibm::wala::util::IntensionalSetOfStrings
   variable DEBUG in line 30
   variable needsCompile in line 34
   variable pattern in line 32
   variable regex in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/internationalization/GenericStringBundle.java
module com::ibm::wala::util::internationalization::GenericStringBundle
   inherits from com::ibm::wala::util::internationalization::IStringBundle
   function concat(final Class,final String) in line 51
      3 lines of code
      2 parameters
      1 conditional paths
      uses function shortName(final String) defined in com::ibm::wala::util::internationalization::GenericStringBundle
   function get(final String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable resourceBundle defined in com::ibm::wala::util::internationalization::GenericStringBundle
   function get(final String,final Object) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function get(final String,final Object[]) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function get(final Class,final String) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function concat(final Class,final String) defined in com::ibm::wala::util::internationalization::GenericStringBundle
   function get(final Class,final String,final Object) in line 41
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function concat(final Class,final String) defined in com::ibm::wala::util::internationalization::GenericStringBundle
   function get(final Class,final String,final Object[]) in line 45
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function concat(final Class,final String) defined in com::ibm::wala::util::internationalization::GenericStringBundle
   function shortName(final String) in line 55
      4 lines of code
      1 parameters
      1 conditional paths
   function GenericStringBundle(final String,final ClassLoader) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable resourceBundle defined in com::ibm::wala::util::internationalization::GenericStringBundle
   variable resourceBundle in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/internationalization/IStringBundle.java
module com::ibm::wala::util::internationalization::IStringBundle
   function get(final String) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function get(final String,final Object) in line 33
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function get(final String,final Object[]) in line 41
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function get(final Class,final String) in line 53
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function get(final Class,final String,final Object) in line 67
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function get(final Class,final String,final Object[]) in line 81
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/internationalization/StringBundle.java
module com::ibm::wala::util::internationalization::StringBundle
   function getInstance() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in com::ibm::wala::util::internationalization::StringBundle
   function StringBundle() in line 37
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/IntFunction.java
module com::ibm::wala::util::IntFunction
   function apply(int) in line 19
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/IntMapIterator.java
module com::ibm::wala::util::IntMapIterator
   inherits from java::util::Iterator
   function hasNext() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function apply(int) defined in com::ibm::wala::util::IntFunction
   function remove() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IntMapIterator(IntIterator,IntFunction< T >) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BasicNonNegativeIntRelation.java
module com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   inherits from com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   function add(int,int) in line 131
      protection public
      48 lines of code
      2 parameters
      11 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable maxX defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function get(int) defined in com::ibm::wala::util::intset::IntVector
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function set(int,T) defined in com::ibm::wala::util::intset::IVector
      uses function set(int,int) defined in com::ibm::wala::util::intset::IntVector
      uses variable DELEGATE_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function anyRelationWithX(int) in line 291
      3 lines of code
      1 parameters
      1 conditional paths
      uses function get(int) defined in com::ibm::wala::util::intset::IntVector
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function contains(int,int) in line 450
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function usingDelegate(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getDelegate(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function countPairs() in line 435
      8 lines of code
      0 parameters
      2 conditional paths
      uses function iterator() defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function getDelegate(int) in line 283
      3 lines of code
      1 parameters
      1 conditional paths
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
   function getRelated(int) in line 300
      protection public
      39 lines of code
      1 parameters
      10 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function get(int) defined in com::ibm::wala::util::intset::IntVector
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable DELEGATE_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getDelegate(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function getRelatedCount(int) in line 345
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function anyRelationWithX(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function usingDelegate(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getDelegate(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function iterator() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function maxKeyValue() in line 467
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxX defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function performVerboseAction() in line 417
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable VERBOSE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function countPairs() defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function performVerboseAction() defined in com::ibm::wala::util::intset::IVector
      uses function performVerboseAction() defined in com::ibm::wala::util::debug::VerboseAction
   function remove(int,int) in line 373
      protection public
      26 lines of code
      2 parameters
      8 conditional paths
      uses function usingDelegate(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function set(int,T) defined in com::ibm::wala::util::intset::IVector
      uses function set(int,int) defined in com::ibm::wala::util::intset::IntVector
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function removeAll(int) in line 405
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function set(int,int) defined in com::ibm::wala::util::intset::IntVector
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function set(int,T) defined in com::ibm::wala::util::intset::IVector
   function toString() in line 476
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable maxX defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function getRelated(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function usingDelegate(int) in line 180
      3 lines of code
      1 parameters
      1 conditional paths
      uses function get(int) defined in com::ibm::wala::util::intset::IntVector
      uses variable DELEGATE_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function BasicNonNegativeIntRelation(byte[],byte) in line 77
      protection public
      31 lines of code
      2 parameters
      7 conditional paths
      uses variable SIMPLE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable TWO_LEVEL defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable SIMPLE_SPACE_STINGY defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function BasicNonNegativeIntRelation() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SIMPLE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable TWO_LEVEL defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   variable DEBUG in line 32
   variable DELEGATE_CODE in line 45
   variable EMPTY_CODE in line 43
   variable maxX in line 119
   variable SIMPLE in line 37
      protection public
   variable SIMPLE_SPACE_STINGY in line 41
      protection public
   variable TWO_LEVEL in line 39
      protection public
   variable VERBOSE in line 30
module com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
   inherits from java::util::Iterator
   function advanceX() in line 210
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable delegateIterator defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses variable nextX defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses variable maxX defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses function anyRelationWithX(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
      uses variable nextIndex defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses function getFirstIndex(int) defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
   function getFirstIndex(int) in line 229
      9 lines of code
      1 parameters
      2 conditional paths
   function hasNext() in line 244
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nextX defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
   function next() in line 253
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable nextIndex defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses variable delegateIterator defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses function next() defined in com::ibm::wala::util::intset::IntIterator
      uses variable nextX defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function advanceX() defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation::TotalIterator
      uses function get(int) defined in com::ibm::wala::util::intset::IntVector
      uses variable EMPTY_CODE defined in com::ibm::wala::util::intset::BasicNonNegativeIntRelation
   function remove() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable delegateIterator in line 204
   variable nextIndex in line 202
   variable nextX in line 196
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BimodalMutableIntSet.java
module com::ibm::wala::util::intset::BimodalMutableIntSet
   inherits from com::ibm::wala::util::intset::MutableIntSet
   function add(int) in line 140
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function maybeChangeRepresentation() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function addAll(IntSet) in line 68
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function maybeChangeRepresentation() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function addAllInIntersection(IntSet,IntSet) in line 85
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function addAllInIntersection(IntSet,IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function maybeChangeRepresentation() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function contains(int) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
   function containsAll(BimodalMutableIntSet) in line 372
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function contains(int) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function containsAny(IntSet) in line 343
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function BimodalMutableIntSet() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function containsAny(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function copySet(IntSet) in line 31
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses function sameRepresentation(IntSet,IntSet) defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function foreach(IntSetAction) in line 231
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   function foreachExcluding(IntSet,IntSetAction) in line 241
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   function getBackingStore() in line 325
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function intersection(IntSet) in line 187
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function BimodalMutableIntSet() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function intersection(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function intersectWith(IntSet) in line 164
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BimodalMutableIntSet() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableIntSet
   function intIterator() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
   function isEmpty() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::intset::IntSet
   function isSubset(IntSet) in line 311
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function BimodalMutableIntSet() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function makeCopy(IntSet) in line 254
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function BimodalMutableIntSet() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function max() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function max() defined in com::ibm::wala::util::intset::IntSet
   function maybeChangeRepresentation() in line 105
      29 lines of code
      0 parameters
      8 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function max() defined in com::ibm::wala::util::intset::IntSet
   function remove(int) in line 153
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableIntSet
      uses function maybeChangeRepresentation() defined in com::ibm::wala::util::intset::BimodalMutableIntSet
   function removeAll(IntSet) in line 360
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function sameRepresentation(IntSet,IntSet) in line 56
      6 lines of code
      2 parameters
      1 conditional paths
   function sameValue(IntSet) in line 302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function size() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::IntSet
   function toString() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BimodalMutableIntSet() in line 279
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BimodalMutableIntSet(int,float) in line 283
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function BimodalMutableIntSet(BimodalMutableIntSet) in line 290
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BimodalMutableIntSetFactory.java
module com::ibm::wala::util::intset::BimodalMutableIntSetFactory
   inherits from com::ibm::wala::util::intset::MutableIntSetFactory
   function make(int[]) in line 26
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in com::ibm::wala::util::intset::BimodalMutableIntSetFactory
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableSparseIntSetFactory
   function make() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCopy(IntSet) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function parse(String) in line 35
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in com::ibm::wala::util::intset::BimodalMutableIntSetFactory
      uses function parse(String) defined in com::ibm::wala::util::intset::MutableSparseIntSetFactory
   variable factory in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/Bits.java
module com::ibm::wala::util::intset::Bits
   function fits(int,int) in line 66
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function lower16(int) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lower32(long) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lower8(int) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function populationCount(int) in line 75
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function upper16(int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function upper24(int) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function upper32(long) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BitSet.java
module com::ibm::wala::util::intset::BitSet
   function add(T) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::util::intset::BitSet
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
   function addAll(BitSet) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function or(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function addAll(BitVector) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function or(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function clear(T) in line 75
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::util::intset::BitSet
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function clear(int) defined in com::ibm::wala::util::intset::BitVector
   function clearAll() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function clearAll() defined in com::ibm::wala::util::intset::BitVector
   function contains(T) in line 83
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::util::intset::BitSet
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
   function copyBits(BitSet< T >) in line 99
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function copyBits(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses variable map defined in com::ibm::wala::util::intset::BitSet
   function difference(BitSet) in line 189
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function and(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses function not() defined in com::ibm::wala::util::intset::BitVector
   function intersect(BitSet) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function and(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function isEmpty() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::BitSet
   function iterator() in line 119
      protection public
      31 lines of code
      0 parameters
      5 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function length() defined in com::ibm::wala::util::intset::BitVector
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
      uses variable map defined in com::ibm::wala::util::intset::BitSet
   function length() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function length() defined in com::ibm::wala::util::intset::BitVector
   function sameBits(BitSet) in line 107
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function equals(Object) defined in com::ibm::wala::util::intset::BitVector
   function setAll() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function setAll() defined in com::ibm::wala::util::intset::BitVector
   function size() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function populationCount() defined in com::ibm::wala::util::intset::BitVector
   function toString() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
      uses function toString() defined in com::ibm::wala::util::intset::BitVector
   function BitSet(OrdinalSetMapping< T >) in line 38
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function length() defined in com::ibm::wala::util::intset::BitSet
      uses variable map defined in com::ibm::wala::util::intset::BitSet
      uses variable vector defined in com::ibm::wala::util::intset::BitSet
   function BitSet(BitSet< T >) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::util::intset::BitSet
      uses function addAll(BitSet) defined in com::ibm::wala::util::intset::BitSet
   variable map in line 33
   variable vector in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BitVector.java
module com::ibm::wala::util::intset::BitVector
   inherits from Cloneable
   inherits from java::io::Serializable
   function and(BitVector) in line 171
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
   function and(BitVector,BitVector) in line 188
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function BitVector() defined in com::ibm::wala::util::intset::BitVector
      uses function and(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function andNot(BitVector) in line 523
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function andNot(BitVector,BitVector) in line 534
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function BitVector() defined in com::ibm::wala::util::intset::BitVector
      uses function andNot(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function clear(int) in line 120
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function subscript(int) defined in com::ibm::wala::util::intset::BitVector
      uses variable LOW_MASK defined in com::ibm::wala::util::intset::BitVector
   function clearAll() in line 108
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function clone() in line 400
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function BitVector() defined in com::ibm::wala::util::intset::BitVector
      uses function clone() defined in com::ibm::wala::util::intset::BitVector
   function contains(int) in line 440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function copyBits(BitVector) in line 296
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function ensureCapacity(BitVector) in line 215
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable BITS_PER_UNIT defined in com::ibm::wala::util::intset::BitVector
   function equals(Object) in line 376
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function BitVector() defined in com::ibm::wala::util::intset::BitVector
      uses function sameBits(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function get(int) in line 135
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::intset::BitVector
      uses function subscript(int) defined in com::ibm::wala::util::intset::BitVector
      uses variable LOW_MASK defined in com::ibm::wala::util::intset::BitVector
   function hashCode() in line 309
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function intersectionEmpty(BitVector) in line 279
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function isSubset(BitVector) in line 502
      protection public
      17 lines of code
      1 parameters
      6 conditional paths
   function isZero() in line 387
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
   function length() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable LOG_BITS_PER_UNIT defined in com::ibm::wala::util::intset::BitVector
   function max() in line 452
      protection public
      19 lines of code
      0 parameters
      3 conditional paths
      uses variable BITS_PER_UNIT defined in com::ibm::wala::util::intset::BitVector
      uses variable masks defined in com::ibm::wala::util::intset::BitVector
   function nextSetBit(int) in line 476
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function subscript(int) defined in com::ibm::wala::util::intset::BitVector
      uses variable LOW_MASK defined in com::ibm::wala::util::intset::BitVector
      uses variable BITS_PER_UNIT defined in com::ibm::wala::util::intset::BitVector
   function not() in line 150
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable MASK defined in com::ibm::wala::util::intset::BitVector
   function not(BitVector) in line 159
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function BitVector() defined in com::ibm::wala::util::intset::BitVector
      uses function not() defined in com::ibm::wala::util::intset::BitVector
   function or(BitVector) in line 200
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function ensureCapacity(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function or(BitVector,BitVector) in line 252
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function BitVector() defined in com::ibm::wala::util::intset::BitVector
      uses function or(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function orWithDelta(BitVector) in line 229
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses function ensureCapacity(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function populationCount() in line 321
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function sameBits(BitVector) in line 344
      protection public
      24 lines of code
      1 parameters
      10 conditional paths
   function set(int) in line 90
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable LOW_MASK defined in com::ibm::wala::util::intset::BitVector
      uses function subscript(int) defined in com::ibm::wala::util::intset::BitVector
   function setAll() in line 78
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable MASK defined in com::ibm::wala::util::intset::BitVector
   function subscript(int) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable LOG_BITS_PER_UNIT defined in com::ibm::wala::util::intset::BitVector
   function toString() in line 416
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses function length() defined in com::ibm::wala::util::intset::BitVector
   function xor(BitVector) in line 264
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ensureCapacity(BitVector) defined in com::ibm::wala::util::intset::BitVector
   function BitVector() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BitVector(int) in line 49
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses function subscript(int) defined in com::ibm::wala::util::intset::BitVector
   function BitVector(BitVector) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function copyBits(BitVector) defined in com::ibm::wala::util::intset::BitVector
   variable BITS_PER_UNIT in line 25
   variable DEBUG in line 30
   variable LOG_BITS_PER_UNIT in line 24
   variable LOW_MASK in line 27
   variable MASK in line 26
   variable masks in line 444
   variable serialVersionUID in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BitVectorIntSet.java
module com::ibm::wala::util::intset::BitVectorIntSet
   inherits from com::ibm::wala::util::intset::MutableIntSet
   function actOnWord(IntSetAction,int,int) in line 297
      14 lines of code
      3 parameters
      5 conditional paths
      uses function act(int) defined in com::ibm::wala::util::intset::IntSetAction
   function add(int) in line 131
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
   function addAll(IntSet) in line 96
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function orWithDelta(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
   function addAllInIntersection(IntSet,IntSet) in line 477
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function addAllOblivious(IntSet) in line 115
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function or(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
   function contains(int) in line 335
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function get(int) defined in com::ibm::wala::util::intset::BitVector
   function containsAll(BitVectorIntSet) in line 483
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function containsAny(IntSet) in line 456
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function intersectionEmpty(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses function intIterator() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function copySet(IntSet) in line 59
      protection public
      33 lines of code
      1 parameters
      8 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses function max() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function set(int) defined in com::ibm::wala::util::intset::BitVector
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function clearAll() defined in com::ibm::wala::util::intset::BitVector
      uses function intIterator() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function equals(Object) in line 317
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function fastForeachExcluding(BitVectorIntSet,IntSetAction) in line 281
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function actOnWord(IntSetAction,int,int) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function foreach(IntSetAction) in line 230
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function nextSetBit(int) defined in com::ibm::wala::util::intset::BitVector
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function populationCount() defined in com::ibm::wala::util::intset::BitVector
      uses function act(int) defined in com::ibm::wala::util::intset::IntSetAction
   function foreachExcluding(IntSet,IntSetAction) in line 255
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function fastForeachExcluding(BitVectorIntSet,IntSetAction) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function slowForeachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function getBitVector() in line 425
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
   function hashCode() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in com::ibm::wala::util::intset::BitVectorIntSet
   function intersection(IntSet) in line 177
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function intersectWith(IntSet) in line 163
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function and(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
   function intIterator() in line 206
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function populationCount() defined in com::ibm::wala::util::intset::BitVector
      uses function nextSetBit(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function isEmpty() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::BitVectorIntSet
   function isSubset(IntSet) in line 405
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function isSubset(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses function isSubsetInternal(SparseIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function isSubsetInternal(SparseIntSet) in line 419
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toSparseIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
   function makeSparseCopy() in line 239
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function populationCount() defined in com::ibm::wala::util::intset::BitVector
      uses function nextSetBit(int) defined in com::ibm::wala::util::intset::BitVector
   function max() in line 342
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function max() defined in com::ibm::wala::util::intset::BitVector
   function nextSetBit(int) in line 359
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function nextSetBit(int) defined in com::ibm::wala::util::intset::BitVector
   function remove(int) in line 147
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function clear(int) defined in com::ibm::wala::util::intset::BitVector
   function removeAll(BitVectorIntSet) in line 444
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function andNot(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
   function sameValue(IntSet) in line 368
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function BitVectorIntSet() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function sameBits(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::IntSet
      uses function sameValueInternal(SparseIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function sameValueInternal(SparseIntSet) in line 386
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function populationCount() defined in com::ibm::wala::util::intset::BitVector
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses function elementAt(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVector
   function size() in line 198
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function populationCount() defined in com::ibm::wala::util::intset::BitVector
   function slowForeachExcluding(IntSet,IntSetAction) in line 263
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function populationCount() defined in com::ibm::wala::util::intset::BitVector
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function act(int) defined in com::ibm::wala::util::intset::IntSetAction
   function toSparseIntSet() in line 433
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function toString() in line 351
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function toString() defined in com::ibm::wala::util::intset::BitVector
   function BitVectorIntSet() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BitVectorIntSet(BitVector) in line 40
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bitVector defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function or(BitVector) defined in com::ibm::wala::util::intset::BitVector
      uses variable populationCount defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable UNDEFINED defined in com::ibm::wala::util::intset::BitVectorIntSet
   function BitVectorIntSet(IntSet) in line 46
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   variable bitVector in line 31
   variable hash in line 33
   variable populationCount in line 27
   variable UNDEFINED in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BitVectorIntSetFactory.java
module com::ibm::wala::util::intset::BitVectorIntSetFactory
   inherits from com::ibm::wala::util::intset::MutableIntSetFactory
   function make(int[]) in line 24
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function add(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function make() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCopy(IntSet) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function parse(String) in line 45
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function add(int) defined in com::ibm::wala::util::intset::MutableIntSet
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/BitVectorRepository.java
module com::ibm::wala::util::intset::BitVectorRepository
   function countEntries() in line 91
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable buckets defined in com::ibm::wala::util::intset::BitVectorRepository
   function findOrCreateSharedSubset(BitVectorIntSet) in line 50
      protection public
      29 lines of code
      1 parameters
      8 conditional paths
      uses variable STATS defined in com::ibm::wala::util::intset::BitVectorRepository
      uses variable queries defined in com::ibm::wala::util::intset::BitVectorRepository
      uses variable STATS_WINDOW defined in com::ibm::wala::util::intset::BitVectorRepository
      uses function reportStats() defined in com::ibm::wala::util::intset::BitVectorRepository
      uses function size() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable SUBSET_DELTA defined in com::ibm::wala::util::intset::BitVectorRepository
      uses variable buckets defined in com::ibm::wala::util::intset::BitVectorRepository
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable hits defined in com::ibm::wala::util::intset::BitVectorRepository
   function reportStats() in line 83
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable hits defined in com::ibm::wala::util::intset::BitVectorRepository
      uses variable queries defined in com::ibm::wala::util::intset::BitVectorRepository
      uses function countEntries() defined in com::ibm::wala::util::intset::BitVectorRepository
   variable buckets in line 42
   variable hits in line 35
   variable queries in line 33
   variable STATS in line 29
   variable STATS_WINDOW in line 31
   variable SUBSET_DELTA in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/DebuggingMutableIntSet.java
module com::ibm::wala::util::intset::DebuggingMutableIntSet
   inherits from com::ibm::wala::util::intset::MutableIntSet
   function add(int) in line 79
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function addAll(IntSet) in line 199
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
   function addAllInIntersection(IntSet,IntSet) in line 244
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
   function assertEquiv() in line 36
      3 lines of code
      0 parameters
      1 conditional paths
   function contains(int) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsAny(IntSet) in line 103
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function copySet(IntSet) in line 181
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function foreach(IntSetAction) in line 287
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function foreachExcluding(IntSet,IntSetAction) in line 311
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
   function intersection(IntSet) in line 124
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function intersectWith(IntSet) in line 226
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function intIterator() in line 265
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 51
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function isSubset(IntSet) in line 161
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function max() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function remove(int) in line 93
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function sameValue(IntSet) in line 143
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function size() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 330
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/DebuggingMutableIntSetFactory.java
module com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
   inherits from com::ibm::wala::util::intset::MutableIntSetFactory
   function make(int[]) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable primary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses variable secondary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
   function make() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable primary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses variable secondary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
   function makeCopy(IntSet) in line 51
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable primary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses variable secondary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function parse(String) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function make() defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
   function setPrimaryFactory(MutableIntSetFactory) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable primary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
   function setSecondaryFactory(MutableIntSetFactory) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable secondary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
   function DebuggingMutableIntSetFactory(MutableIntSetFactory,MutableIntSetFactory) in line 30
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable primary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
      uses variable secondary defined in com::ibm::wala::util::intset::DebuggingMutableIntSetFactory
   function DebuggingMutableIntSetFactory() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable primary in line 26
   variable secondary in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/FixedSizeBitVector.java
module com::ibm::wala::util::intset::FixedSizeBitVector
   inherits from Cloneable
   inherits from java::io::Serializable
   function and(FixedSizeBitVector) in line 117
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function and(FixedSizeBitVector,FixedSizeBitVector) in line 129
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function FixedSizeBitVector(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function and(FixedSizeBitVector) defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function clear(int) in line 81
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable LOW_MASK defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function subscript(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function clearAll() in line 71
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function clone() in line 262
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function FixedSizeBitVector(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function clone() defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function copyBits(FixedSizeBitVector) in line 189
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function equals(Object) in line 231
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses function FixedSizeBitVector(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function get(int) in line 90
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable LOW_MASK defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function subscript(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function hashCode() in line 199
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function intersectionEmpty(FixedSizeBitVector) in line 176
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function isZero() in line 250
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function length() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable LOG_BITS_PER_UNIT defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function not() in line 99
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable MASK defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function not(FixedSizeBitVector) in line 107
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function FixedSizeBitVector(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function not() defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function or(FixedSizeBitVector) in line 141
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function or(FixedSizeBitVector,FixedSizeBitVector) in line 153
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function FixedSizeBitVector(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function or(FixedSizeBitVector) defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function populationCount() in line 210
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function set(int) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable LOW_MASK defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function subscript(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function setAll() in line 53
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable MASK defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function subscript(int) in line 26
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable LOG_BITS_PER_UNIT defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function toString() in line 278
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable nbits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function xor(FixedSizeBitVector) in line 165
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function FixedSizeBitVector(int) in line 34
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function subscript(int) defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable nbits defined in com::ibm::wala::util::intset::FixedSizeBitVector
   function FixedSizeBitVector(FixedSizeBitVector) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses variable nbits defined in com::ibm::wala::util::intset::FixedSizeBitVector
      uses function copyBits(FixedSizeBitVector) defined in com::ibm::wala::util::intset::FixedSizeBitVector
   variable bits in line 20
   variable LOG_BITS_PER_UNIT in line 17
   variable LOW_MASK in line 19
   variable MASK in line 18
   variable nbits in line 21
   variable serialVersionUID in line 15
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IBinaryNonNegativeIntRelation.java
module com::ibm::wala::util::intset::IBinaryNonNegativeIntRelation
   inherits from com::ibm::wala::util::debug::VerboseAction
   inherits from Iterable
   function add(int,int) in line 28
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function contains(int,int) in line 57
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getRelated(int) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getRelatedCount(int) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function maxKeyValue() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function remove(int,int) in line 46
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function removeAll(int) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IntegerUnionFind.java
module com::ibm::wala::util::intset::IntegerUnionFind
   function find(int) in line 92
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses function findInternal(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
   function findInternal(int) in line 108
      14 lines of code
      1 parameters
      3 conditional paths
   function grow(int) in line 82
      5 lines of code
      1 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::IntegerUnionFind
   function size() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function union(int,int) in line 55
      protection public
      26 lines of code
      2 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses function grow(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
      uses function findInternal(int) defined in com::ibm::wala::util::intset::IntegerUnionFind
   function IntegerUnionFind() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_SIZE defined in com::ibm::wala::util::intset::IntegerUnionFind
   function IntegerUnionFind(int) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::IntegerUnionFind
   variable DEFAULT_SIZE in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IntIterator.java
module com::ibm::wala::util::intset::IntIterator
   function hasNext() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function next() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IntPair.java
module com::ibm::wala::util::intset::IntPair
   function equals(Object) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function IntPair(int,int) defined in com::ibm::wala::util::intset::IntPair
      uses function getX() defined in com::ibm::wala::util::intset::IntPair
      uses function getY() defined in com::ibm::wala::util::intset::IntPair
   function getX() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getY() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IntPair(int,int) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IntSet.java
module com::ibm::wala::util::intset::IntSet
   function contains(int) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsAny(IntSet) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function foreach(IntSetAction) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function foreachExcluding(IntSet,IntSetAction) in line 66
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function intersection(IntSet) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function intIterator() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSubset(IntSet) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function max() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sameValue(IntSet) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function size() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IntSetAction.java
module com::ibm::wala::util::intset::IntSetAction
   function act(int) in line 16
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IntSetUtil.java
module com::ibm::wala::util::intset::IntSetUtil
   function add(IntSet,int) in line 135
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
   function binarySearch(int[],int,int,int) in line 104
      protection public
      14 lines of code
      4 parameters
      4 conditional paths
   function diff(IntSet,IntSet) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getDefaultIntSetFactory() defined in com::ibm::wala::util::intset::IntSetUtil
   function diff(IntSet,IntSet,MutableIntSetFactory) in line 68
      protection public
      28 lines of code
      3 parameters
      8 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::intset::IntSetUtil
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableIntSetFactory
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableIntSet
   function getDefaultIntSetFactory() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultIntSetFactory defined in com::ibm::wala::util::intset::IntSetUtil
   function make() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultIntSetFactory defined in com::ibm::wala::util::intset::IntSetUtil
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableIntSetFactory
   function makeMutableCopy(IntSet) in line 38
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
   function setDefaultIntSetFactory(MutableIntSetFactory) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultIntSetFactory defined in com::ibm::wala::util::intset::IntSetUtil
   variable DEBUG in line 29
   variable defaultIntSetFactory in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IntVector.java
module com::ibm::wala::util::intset::IntVector
   inherits from com::ibm::wala::util::debug::VerboseAction
   function get(int) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function set(int,int) in line 32
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/IVector.java
module com::ibm::wala::util::intset::IVector
   inherits from Iterable
   function get(int) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMaxIndex() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function performVerboseAction() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function set(int,T) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/LongSet.java
module com::ibm::wala::util::intset::LongSet
   function contains(long) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsAny(LongSet) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function intersection(LongSet) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSubset(LongSet) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function max() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sameValue(LongSet) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function size() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/LongSetUtil.java
module com::ibm::wala::util::intset::LongSetUtil
   function binarySearch(long[],long,int,int) in line 30
      protection public
      14 lines of code
      4 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableIntSet.java
module com::ibm::wala::util::intset::MutableIntSet
   inherits from com::ibm::wala::util::intset::IntSet
   function add(int) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addAll(IntSet) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addAllInIntersection(IntSet,IntSet) in line 62
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function copySet(IntSet) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function intersectWith(IntSet) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function remove(int) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableIntSetFactory.java
module com::ibm::wala::util::intset::MutableIntSetFactory
   function make(int[]) in line 23
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function make() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeCopy(IntSet) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function parse(String) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableLongSet.java
module com::ibm::wala::util::intset::MutableLongSet
   inherits from com::ibm::wala::util::intset::LongSet
   function add(long) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addAll(LongSet) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function copySet(LongSet) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function intersectWith(LongSet) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function remove(long) in line 47
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableMapping.java
module com::ibm::wala::util::intset::MutableMapping
   inherits from com::ibm::wala::util::intset::OrdinalSetMapping
   function add(T) in line 94
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function deleteMappedObject(Object) in line 138
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getMappedIndex(Object) in line 70
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getMappedObject(int) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMappingSize() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjects() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasMappedIndex(Object) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterator() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeSingleton(int) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function replace(T,T) in line 150
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 113
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function MutableMapping(final Object[]) in line 43
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function MutableMapping() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable array in line 31
   variable INITIAL_CAPACITY in line 29
   variable nextIndex in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableSharedBitVectorIntSet.java
module com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   inherits from com::ibm::wala::util::intset::MutableIntSet
   function add(int) in line 771
      protection public
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function checkOverflow() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAll(IntSet) in line 598
      protection public
      31 lines of code
      1 parameters
      9 conditional paths
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function addAllInternal(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAll(MutableSharedBitVectorIntSet) in line 694
      71 lines of code
      1 parameters
      14 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function addAllInternal(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function sameSharedPart(MutableSharedBitVectorIntSet,MutableSharedBitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function copyValue(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAllInIntersection(IntSet,IntSet) in line 1005
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addAllInIntersectionInternal(MutableSharedBitVectorIntSet,IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function addAllInIntersectionGeneral(IntSet,IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAllInIntersectionGeneral(IntSet,IntSet) in line 1014
      5 lines of code
      2 parameters
      1 conditional paths
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAllInIntersectionInternal(MutableSharedBitVectorIntSet,IntSet) in line 1022
      24 lines of code
      2 parameters
      5 conditional paths
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function MutableSharedBitVectorIntSet() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAllInIntersectionInternal(SparseIntSet,IntSet) in line 1051
      33 lines of code
      2 parameters
      5 conditional paths
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses function checkOverflow() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function addAllInIntersection(IntSet,IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function addAllInternal(BitVectorIntSet) in line 633
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function copyValue(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function addAllInternal(SparseIntSet) in line 653
      37 lines of code
      1 parameters
      6 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkOverflow() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
   function checkIntegrity() in line 110
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function intersection(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::IntSet
   function checkOverflow() in line 121
      32 lines of code
      0 parameters
      7 conditional paths
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable OVERFLOW defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function clear() in line 1085
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function contains(int) in line 159
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function containsAny(IntSet) in line 972
      protection public
      26 lines of code
      1 parameters
      8 conditional paths
      uses function MutableSharedBitVectorIntSet() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function containsAny(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function containsAny(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
   function copySet(IntSet) in line 575
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function MutableSharedBitVectorIntSet() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function copyValue(BitVectorIntSet) in line 81
      25 lines of code
      1 parameters
      6 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable OVERFLOW defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function foreach(IntSetAction) in line 244
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function foreachExcluding(IntSet,IntSetAction) in line 259
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function foreachExcludingInternal(MutableSharedBitVectorIntSet,IntSetAction) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function foreachExcludingGeneral(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function foreachExcludingGeneral(IntSet,IntSetAction) in line 299
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function foreachExcludingInternal(MutableSharedBitVectorIntSet,IntSetAction) in line 273
      19 lines of code
      2 parameters
      6 conditional paths
      uses function sameSharedPart(MutableSharedBitVectorIntSet,MutableSharedBitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function foreachExcluding(IntSet,IntSetAction) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function hasSharedPart() in line 963
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function intersection(IntSet) in line 174
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function MutableSharedBitVectorIntSet() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function intersection(MutableSharedBitVectorIntSet) in line 194
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function MutableSharedBitVectorIntSet() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function intersectWith(IntSet) in line 838
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses function intersectWithInternal(MutableSharedBitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function MutableSharedBitVectorIntSet() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable DEBUG defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function intersection(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::IntSet
   function intersectWithInternal(MutableSharedBitVectorIntSet) in line 855
      52 lines of code
      1 parameters
      12 conditional paths
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function sameSharedPart(MutableSharedBitVectorIntSet,MutableSharedBitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function checkOverflow() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function copyValue(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function intIterator() in line 230
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::SparseIntSet
   function isEmpty() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function isSubset(IntSet) in line 462
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function isSubset(MutableSharedBitVectorIntSet) in line 479
      90 lines of code
      1 parameters
      17 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function isSubset(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function removeAll(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function max() in line 313
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses function max() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function max() defined in com::ibm::wala::util::intset::BitVectorIntSet
   function remove(int) in line 808
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function remove(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function checkOverflow() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function sameSharedPart(MutableSharedBitVectorIntSet,MutableSharedBitVectorIntSet) in line 908
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function sameValue(IntSet) in line 329
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function sameValue(SparseIntSet) in line 349
      15 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
   function sameValue(BitVectorIntSet) in line 365
      19 lines of code
      1 parameters
      5 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function size() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function makeSparseCopy() defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function sameValue(MutableSharedBitVectorIntSet) in line 390
      66 lines of code
      1 parameters
      13 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function addAllOblivious(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function size() in line 218
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function size() defined in com::ibm::wala::util::intset::BitVectorIntSet
   function toString() in line 917
      protection public
      3 lines of code
      0 parameters
      7 conditional paths
      uses function toString() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable sharedPart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function makeCopy(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSetFactory
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function addAllOblivious(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
   function MutableSharedBitVectorIntSet() in line 39
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function MutableSharedBitVectorIntSet(MutableSharedBitVectorIntSet) in line 45
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable privatePart defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function MutableSharedBitVectorIntSet(SparseIntSet) in line 55
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses function checkOverflow() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   function MutableSharedBitVectorIntSet(BitVectorIntSet) in line 70
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function copyValue(BitVectorIntSet) defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses variable PARANOID defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
      uses function checkIntegrity() defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSet
   variable DEBUG in line 26
   variable OVERFLOW in line 30
   variable PARANOID in line 28
   variable privatePart in line 32
   variable sharedPart in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableSharedBitVectorIntSetFactory.java
module com::ibm::wala::util::intset::MutableSharedBitVectorIntSetFactory
   inherits from com::ibm::wala::util::intset::MutableIntSetFactory
   function make(int[]) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sparseFactory defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSetFactory
      uses function make(int[]) defined in com::ibm::wala::util::intset::MutableSparseIntSetFactory
   function make() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCopy(IntSet) in line 50
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
   function parse(String) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sparseFactory defined in com::ibm::wala::util::intset::MutableSharedBitVectorIntSetFactory
      uses function parse(String) defined in com::ibm::wala::util::intset::MutableSparseIntSetFactory
   variable sparseFactory in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableSparseIntSet.java
module com::ibm::wala::util::intset::MutableSparseIntSet
   inherits from com::ibm::wala::util::intset::SparseIntSet
   inherits from com::ibm::wala::util::intset::MutableIntSet
   function add(int) in line 121
      protection public
      54 lines of code
      1 parameters
      13 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function getInitialNonEmptySize() defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function max() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable DEBUG_LARGE defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable TRAP_SIZE defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function getExpansionFactor() defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function addAll(IntSet) in line 301
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable DEBUG_LARGE defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable TRAP_SIZE defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function addAll(SparseIntSet) in line 330
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function addAll(int[],int) in line 352
      65 lines of code
      2 parameters
      13 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable DEBUG_LARGE defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable TRAP_SIZE defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function addAllInIntersection(IntSet,IntSet) in line 448
      protection public
      26 lines of code
      2 parameters
      7 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function intIterator() defined in com::ibm::wala::util::intset::IntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses function addAll(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function copySet(IntSet) in line 178
      protection public
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function SparseIntSet() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
      uses variable DEBUG_LARGE defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses variable TRAP_SIZE defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function getExpansionFactor() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EXPANSION_FACTOR defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function getInitialNonEmptySize() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INITIAL_NONEMPTY_SIZE defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function intersectWith(IntSet) in line 207
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function intersectWith(SparseIntSet) in line 222
      protection public
      73 lines of code
      1 parameters
      14 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function getInitialNonEmptySize() defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function remove(int) in line 80
      protection public
      26 lines of code
      1 parameters
      8 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
   function removeAll(BitVectorIntSet) in line 421
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::BitVectorIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function removeAll(MutableSparseIntSet) in line 436
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function intIterator() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function hasNext() defined in com::ibm::wala::util::intset::IntIterator
   function MutableSparseIntSet(IntSet) in line 49
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function copySet(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function MutableSparseIntSet(int[]) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MutableSparseIntSet(int) in line 63
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function MutableSparseIntSet() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_LARGE in line 42
   variable EXPANSION_FACTOR in line 32
   variable INITIAL_NONEMPTY_SIZE in line 37
   variable TRAP_SIZE in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableSparseIntSetFactory.java
module com::ibm::wala::util::intset::MutableSparseIntSetFactory
   inherits from com::ibm::wala::util::intset::MutableIntSetFactory
   function make(int[]) in line 27
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
   function make() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCopy(IntSet) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function parse(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/MutableSparseLongSet.java
module com::ibm::wala::util::intset::MutableSparseLongSet
   inherits from com::ibm::wala::util::intset::SparseLongSet
   inherits from com::ibm::wala::util::intset::MutableLongSet
   function add(long) in line 99
      protection public
      48 lines of code
      1 parameters
      11 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable INITIAL_NONEMPTY_SIZE defined in com::ibm::wala::util::intset::MutableSparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function max() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable EXPANSION_FACTOR defined in com::ibm::wala::util::intset::MutableSparseLongSet
   function addAll(LongSet) in line 259
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function addAll(SparseLongSet) in line 274
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function copySet(LongSet) defined in com::ibm::wala::util::intset::MutableSparseLongSet
      uses variable size defined in com::ibm::wala::util::intset::SparseLongSet
      uses function add(long) defined in com::ibm::wala::util::intset::MutableSparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function addAll(LongSet) defined in com::ibm::wala::util::intset::MutableSparseLongSet
   function addAll(long[],int) in line 296
      62 lines of code
      2 parameters
      12 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function copySet(LongSet) in line 150
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function SparseLongSet() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function intersectWith(LongSet) in line 165
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function contains(long) defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function intersectWith(SparseLongSet) in line 180
      protection public
      73 lines of code
      1 parameters
      14 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function contains(long) defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable INITIAL_NONEMPTY_SIZE defined in com::ibm::wala::util::intset::MutableSparseLongSet
   function remove(long) in line 70
      protection public
      24 lines of code
      1 parameters
      8 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function removeAll(MutableSparseLongSet) in line 365
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MutableSparseLongSet(LongSet) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function copySet(LongSet) defined in com::ibm::wala::util::intset::MutableSparseLongSet
   function MutableSparseLongSet(long[]) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MutableSparseLongSet(int) in line 56
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function MutableSparseLongSet() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable EXPANSION_FACTOR in line 32
   variable INITIAL_NONEMPTY_SIZE in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/OrdinalSet.java
module com::ibm::wala::util::intset::OrdinalSet
   inherits from Iterable
   function contains(T) in line 134
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function containsAny(OrdinalSet< T >) in line 53
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function empty() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBackingSet() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMapping() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function intersect(OrdinalSet< T >,OrdinalSet< T >) in line 94
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function isEmpty() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 68
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
   function makeSparseCopy() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function size() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toCollection(OrdinalSet< T >) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toOrdinalSet(Collection< T >,OrdinalSetMapping< T >) in line 157
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function OrdinalSet() in line 39
      4 lines of code
      0 parameters
      1 conditional paths
   function OrdinalSet(IntSet,OrdinalSetMapping< T >) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable EMPTY in line 32
   variable mapping in line 30
   variable S in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/OrdinalSetMapping.java
module com::ibm::wala::util::intset::OrdinalSetMapping
   inherits from Iterable
   function add(T) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMappedIndex(T) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMappedObject(int) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMappingSize() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasMappedIndex(T) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function makeSingleton(int) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/SimpleIntVector.java
module com::ibm::wala::util::intset::SimpleIntVector
   inherits from com::ibm::wala::util::intset::IntVector
   function computeOccupancy() in line 129
      9 lines of code
      0 parameters
      3 conditional paths
   function ensureCapacity(int) in line 109
      8 lines of code
      1 parameters
      2 conditional paths
   function get(int) in line 69
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function performVerboseAction() in line 121
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function computeOccupancy() defined in com::ibm::wala::util::intset::SimpleIntVector
   function set(int,int) in line 85
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function ensureCapacity(int) defined in com::ibm::wala::util::intset::SimpleIntVector
   function SimpleIntVector(int) in line 36
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function SimpleIntVector(int,int) in line 46
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable INITIAL_SIZE defined in com::ibm::wala::util::intset::SimpleIntVector
      uses variable GROWTH_FACTOR defined in com::ibm::wala::util::intset::SimpleIntVector
   variable GROWTH_FACTOR in line 26
   variable INITIAL_SIZE in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/SimpleVector.java
module com::ibm::wala::util::intset::SimpleVector
   inherits from com::ibm::wala::util::intset::IVector
   function computeOccupancy() in line 102
      9 lines of code
      0 parameters
      3 conditional paths
   function ensureCapacity(int) in line 81
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable GROWTH_FACTOR defined in com::ibm::wala::util::intset::SimpleVector
   function get(int) in line 45
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function getMaxIndex() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function performVerboseAction() in line 94
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function computeOccupancy() defined in com::ibm::wala::util::intset::SimpleVector
   function set(int,Object) in line 61
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function ensureCapacity(int) defined in com::ibm::wala::util::intset::SimpleVector
   function SimpleVector() in line 36
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable GROWTH_FACTOR in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/SparseIntSet.java
module com::ibm::wala::util::intset::SparseIntSet
   inherits from com::ibm::wala::util::intset::IntSet
   function add(SparseIntSet,int) in line 439
      protection public
      22 lines of code
      2 parameters
      5 conditional paths
      uses function SparseIntSet() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function cloneState(SparseIntSet) in line 88
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
   function contains(int) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
   function containsAny(IntSet) in line 492
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function containsAny(SparseIntSet) in line 507
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function diff(SparseIntSet,SparseIntSet) in line 242
      protection public
      54 lines of code
      2 parameters
      10 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function SparseIntSet() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
   function elementAt(int) in line 152
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function foreach(IntSetAction) in line 416
      protection public
      4 lines of code
      1 parameters
      3 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function act(int) defined in com::ibm::wala::util::intset::IntSetAction
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function foreachExcluding(IntSet,IntSetAction) in line 426
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::IntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function act(int) defined in com::ibm::wala::util::intset::IntSetAction
   function getIndex(int) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
   function intersection(IntSet) in line 363
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function intersectWith(IntSet) defined in com::ibm::wala::util::intset::MutableSparseIntSet
   function intIterator() in line 389
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function isEmpty() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
   function isSubset(IntSet) in line 467
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function isSubsetInternal(SparseIntSet) defined in com::ibm::wala::util::intset::SparseIntSet
   function isSubsetInternal(SparseIntSet) in line 199
      38 lines of code
      1 parameters
      9 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
   function isSubsetInternal(BitVectorIntSet) in line 478
      8 lines of code
      1 parameters
      3 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function contains(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function max() in line 407
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
   function pair(int,int) in line 347
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function SparseIntSet() defined in com::ibm::wala::util::intset::SparseIntSet
   function parseIntArray(String) in line 318
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
   function sameValue(IntSet) in line 179
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses function sameValueInternal(SparseIntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function sameValue(IntSet) defined in com::ibm::wala::util::intset::IntSet
   function sameValueInternal(SparseIntSet) in line 162
      12 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function singleton(int) in line 339
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable SINGLETON_CACHE_SIZE defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable singletonCache defined in com::ibm::wala::util::intset::SparseIntSet
      uses function SparseIntSet() defined in com::ibm::wala::util::intset::SparseIntSet
   function size() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toIntArray() in line 526
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function toString() in line 302
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function SparseIntSet(int) in line 57
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
   function SparseIntSet(int[]) in line 68
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function SparseIntSet() in line 76
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
   function SparseIntSet(SparseIntSet) in line 81
      3 lines of code
      1 parameters
      1 conditional paths
      uses function cloneState(SparseIntSet) defined in com::ibm::wala::util::intset::SparseIntSet
   function SparseIntSet(IntSet) in line 100
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function cloneState(SparseIntSet) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseIntSet
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseIntSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   variable elements in line 43
   variable SINGLETON_CACHE_SIZE in line 28
   variable singletonCache in line 30
   variable size in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/SparseIntVector.java
module com::ibm::wala::util::intset::SparseIntVector
   inherits from com::ibm::wala::util::intset::IntVector
   function ensureCapacity(int) in line 74
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::SparseIntVector
      uses variable EXPANSION defined in com::ibm::wala::util::intset::SparseIntVector
   function get(int) in line 47
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable indices defined in com::ibm::wala::util::intset::SparseIntVector
      uses function getIndex(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable defaultValue defined in com::ibm::wala::util::intset::SparseIntVector
      uses variable data defined in com::ibm::wala::util::intset::SparseIntVector
   function performVerboseAction() in line 87
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::SparseIntVector
      uses variable indices defined in com::ibm::wala::util::intset::SparseIntVector
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
   function set(int,int) in line 61
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable indices defined in com::ibm::wala::util::intset::SparseIntVector
      uses function getIndex(int) defined in com::ibm::wala::util::intset::SparseIntSet
      uses function add(int) defined in com::ibm::wala::util::intset::MutableSparseIntSet
      uses function ensureCapacity(int) defined in com::ibm::wala::util::intset::SparseIntVector
      uses variable size defined in com::ibm::wala::util::intset::SparseIntSet
      uses variable data defined in com::ibm::wala::util::intset::SparseIntVector
   variable data in line 34
   variable defaultValue in line 36
   variable EXPANSION in line 28
   variable indices in line 33
   variable INITIAL_SIZE in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/SparseLongIntVector.java
module com::ibm::wala::util::intset::SparseLongIntVector
   function ensureCapacity(int) in line 76
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses variable EXPANSION defined in com::ibm::wala::util::intset::SparseLongIntVector
   function get(long) in line 49
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable indices defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses function getIndex(long) defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable defaultValue defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses variable data defined in com::ibm::wala::util::intset::SparseLongIntVector
   function performVerboseAction() in line 89
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses variable indices defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses variable size defined in com::ibm::wala::util::intset::SparseLongSet
   function set(long,int) in line 63
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable indices defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses function getIndex(long) defined in com::ibm::wala::util::intset::SparseLongSet
      uses function add(long) defined in com::ibm::wala::util::intset::MutableSparseLongSet
      uses function ensureCapacity(int) defined in com::ibm::wala::util::intset::SparseLongIntVector
      uses variable size defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable data defined in com::ibm::wala::util::intset::SparseLongIntVector
   function SparseLongIntVector(int) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultValue defined in com::ibm::wala::util::intset::SparseLongIntVector
   variable data in line 36
   variable defaultValue in line 38
   variable EXPANSION in line 30
   variable indices in line 35
   variable INITIAL_SIZE in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/SparseLongSet.java
module com::ibm::wala::util::intset::SparseLongSet
   inherits from com::ibm::wala::util::intset::LongSet
   function add(SparseLongSet,int) in line 367
      protection public
      22 lines of code
      2 parameters
      5 conditional paths
      uses function SparseLongSet() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable size defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function cloneState(SparseLongSet) in line 88
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable size defined in com::ibm::wala::util::intset::SparseLongSet
   function contains(long) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function containsAny(LongSet) in line 409
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function contains(long) defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function containsAny(SparseLongSet) in line 422
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function diff(SparseLongSet,SparseLongSet) in line 225
      protection public
      54 lines of code
      2 parameters
      10 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isEmpty() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function SparseLongSet() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function sameValue(LongSet) defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable size defined in com::ibm::wala::util::intset::SparseLongSet
   function elementAt(int) in line 145
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function getIndex(long) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function intersection(LongSet) in line 344
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function intersectWith(LongSet) defined in com::ibm::wala::util::intset::MutableSparseLongSet
   function isEmpty() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function isSubset(LongSet) in line 395
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isSubsetInternal(SparseLongSet) defined in com::ibm::wala::util::intset::SparseLongSet
   function isSubsetInternal(SparseLongSet) in line 183
      38 lines of code
      1 parameters
      9 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function sameValue(LongSet) defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function max() in line 358
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function pair(long,long) in line 331
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function SparseLongSet() defined in com::ibm::wala::util::intset::SparseLongSet
   function parseLongArray(String) in line 301
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
   function sameValue(LongSet) in line 169
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function sameValueInternal(SparseLongSet) defined in com::ibm::wala::util::intset::SparseLongSet
   function sameValueInternal(SparseLongSet) in line 152
      12 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function singleton(int) in line 323
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable SINGLETON_CACHE_SIZE defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable singletonCache defined in com::ibm::wala::util::intset::SparseLongSet
      uses function SparseLongSet() defined in com::ibm::wala::util::intset::SparseLongSet
   function size() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 285
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function SparseLongSet(int) in line 57
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
   function SparseLongSet(long[]) in line 68
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function SparseLongSet() in line 76
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
   function SparseLongSet(SparseLongSet) in line 81
      3 lines of code
      1 parameters
      1 conditional paths
      uses function cloneState(SparseLongSet) defined in com::ibm::wala::util::intset::SparseLongSet
   function SparseLongSet(IntSet) in line 96
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function cloneState(SparseLongSet) defined in com::ibm::wala::util::intset::SparseLongSet
      uses variable elements defined in com::ibm::wala::util::intset::SparseLongSet
      uses function size() defined in com::ibm::wala::util::intset::IntSet
      uses function size() defined in com::ibm::wala::util::intset::SparseLongSet
      uses function foreach(IntSetAction) defined in com::ibm::wala::util::intset::IntSet
   variable elements in line 43
   variable SINGLETON_CACHE_SIZE in line 28
   variable singletonCache in line 30
   variable size in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/SparseVector.java
module com::ibm::wala::util::intset::SparseVector
   inherits from com::ibm::wala::util::intset::IVector
   function clear() in line 155
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function ensureCapacity(int) in line 88
      7 lines of code
      1 parameters
      1 conditional paths
   function get(int) in line 61
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getMaxIndex() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateIndices() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 111
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function performVerboseAction() in line 101
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function remove(int) in line 160
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function safeIterateIndices() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function set(int,T) in line 75
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function size() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SparseVector() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function SparseVector(int,float) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable data in line 36
   variable DEF_INITIAL_SIZE in line 30
   variable indices in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/TunedMutableSparseIntSet.java
module com::ibm::wala::util::intset::TunedMutableSparseIntSet
   inherits from com::ibm::wala::util::intset::MutableSparseIntSet
   function getExpansionFactor() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expansion defined in com::ibm::wala::util::intset::TunedMutableSparseIntSet
   function getInitialNonEmptySize() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable initialSize defined in com::ibm::wala::util::intset::TunedMutableSparseIntSet
   function TunedMutableSparseIntSet(int,float) in line 22
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable initialSize defined in com::ibm::wala::util::intset::TunedMutableSparseIntSet
      uses variable expansion defined in com::ibm::wala::util::intset::TunedMutableSparseIntSet
   variable expansion in line 20
   variable initialSize in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/TunedSimpleIntVector.java
module com::ibm::wala::util::intset::TunedSimpleIntVector
   inherits from com::ibm::wala::util::intset::SimpleIntVector
   variable expansion in line 23
   variable initialSize in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/TwoLevelIntVector.java
module com::ibm::wala::util::intset::TwoLevelIntVector
   inherits from com::ibm::wala::util::intset::IntVector
   function findOrCreatePage(int) in line 82
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses variable defaultValue defined in com::ibm::wala::util::intset::TwoLevelIntVector
   function get(int) in line 45
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getPageNumber(int) defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses variable data defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses variable defaultValue defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses function toLocalIndex(int,int) defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses function get(int) defined in com::ibm::wala::util::intset::IntVector
   function getFirstIndexOnPage(int) in line 62
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable LOG_PAGE_SIZE defined in com::ibm::wala::util::intset::TwoLevelIntVector
   function getPageNumber(int) in line 66
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable LOG_PAGE_SIZE defined in com::ibm::wala::util::intset::TwoLevelIntVector
   function performVerboseAction() in line 101
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::TwoLevelIntVector
   function set(int,int) in line 75
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getPageNumber(int) defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses function findOrCreatePage(int) defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses function toLocalIndex(int,int) defined in com::ibm::wala::util::intset::TwoLevelIntVector
      uses function set(int,int) defined in com::ibm::wala::util::intset::IntVector
   function toLocalIndex(int,int) in line 58
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getFirstIndexOnPage(int) defined in com::ibm::wala::util::intset::TwoLevelIntVector
   variable data in line 32
   variable defaultValue in line 34
   variable LOG_PAGE_SIZE in line 26
   variable PAGE_SIZE in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/intset/TwoLevelVector.java
module com::ibm::wala::util::intset::TwoLevelVector
   inherits from com::ibm::wala::util::intset::IVector
   function findOrCreatePage(int) in line 80
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::TwoLevelVector
      uses variable maxPage defined in com::ibm::wala::util::intset::TwoLevelVector
   function get(int) in line 43
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getPageNumber(int) defined in com::ibm::wala::util::intset::TwoLevelVector
      uses variable data defined in com::ibm::wala::util::intset::TwoLevelVector
      uses function getFirstIndexOnPage(int) defined in com::ibm::wala::util::intset::TwoLevelVector
      uses function get(int) defined in com::ibm::wala::util::intset::IVector
   function getFirstIndexOnPage(int) in line 56
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable LOG_PAGE_SIZE defined in com::ibm::wala::util::intset::TwoLevelVector
   function getMaxIndex() in line 157
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable maxPage defined in com::ibm::wala::util::intset::TwoLevelVector
      uses variable data defined in com::ibm::wala::util::intset::TwoLevelVector
      uses function getMaxIndex() defined in com::ibm::wala::util::intset::IVector
      uses variable PAGE_SIZE defined in com::ibm::wala::util::intset::TwoLevelVector
   function getPageNumber(int) in line 60
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable LOG_PAGE_SIZE defined in com::ibm::wala::util::intset::TwoLevelVector
   function iterator() in line 112
      protection public
      44 lines of code
      0 parameters
      7 conditional paths
      uses variable data defined in com::ibm::wala::util::intset::TwoLevelVector
   function performVerboseAction() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function set(int,T) in line 69
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getPageNumber(int) defined in com::ibm::wala::util::intset::TwoLevelVector
      uses function findOrCreatePage(int) defined in com::ibm::wala::util::intset::TwoLevelVector
      uses function toLocalIndex(int,int) defined in com::ibm::wala::util::intset::TwoLevelVector
      uses function set(int,T) defined in com::ibm::wala::util::intset::IVector
   function toLocalIndex(int,int) in line 76
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getFirstIndexOnPage(int) defined in com::ibm::wala::util::intset::TwoLevelVector
   variable data in line 34
   variable LOG_PAGE_SIZE in line 28
   variable maxPage in line 36
   variable PAGE_SIZE in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/io/CommandLine.java
module com::ibm::wala::util::io::CommandLine
   function parse(String[]) in line 28
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function parseForKey(String) defined in com::ibm::wala::util::io::CommandLine
   function parseForKey(String) in line 44
      7 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/io/FileSuffixes.java
module com::ibm::wala::util::io::FileSuffixes
   function isClassFile(String) in line 33
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable CLASS_SUFFIX defined in com::ibm::wala::util::io::FileSuffixes
      uses variable CLASSPATH defined in com::ibm::wala::util::io::FileSuffixes
   function isJarFile(String) in line 65
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable JAR_SUFFIX defined in com::ibm::wala::util::io::FileSuffixes
   function isSourceFile(String) in line 49
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable CLASSPATH defined in com::ibm::wala::util::io::FileSuffixes
   function isWarFile(String) in line 81
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable WAR_SUFFIX defined in com::ibm::wala::util::io::FileSuffixes
   function stripSuffix(String) in line 98
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable CLASS_SUFFIX defined in com::ibm::wala::util::io::FileSuffixes
   variable CLASS_SUFFIX in line 21
   variable CLASSPATH in line 24
   variable JAR_SUFFIX in line 22
   variable WAR_SUFFIX in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/io/FileUtil.java
module com::ibm::wala::util::io::FileUtil
   function listFiles(String,String,boolean) in line 29
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
   function listFiles(File,boolean,Pattern) in line 38
      16 lines of code
      3 parameters
      5 conditional paths
      uses function listFiles(String,String,boolean) defined in com::ibm::wala::util::io::FileUtil
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/io/Streams.java
module com::ibm::wala::util::io::Streams
   function inputStream2ByteArray(InputStream) in line 30
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/IteratorPlusOne.java
module com::ibm::wala::util::IteratorPlusOne
   inherits from java::util::Iterator
   function hasNext() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable it defined in com::ibm::wala::util::IteratorPlusOne
      uses variable xtra defined in com::ibm::wala::util::IteratorPlusOne
   function next() in line 44
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable it defined in com::ibm::wala::util::IteratorPlusOne
      uses variable xtra defined in com::ibm::wala::util::IteratorPlusOne
   function remove() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IteratorPlusOne(Iterator<?extends T >,T) in line 29
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable it defined in com::ibm::wala::util::IteratorPlusOne
      uses variable xtra defined in com::ibm::wala::util::IteratorPlusOne
   variable it in line 24
   variable xtra in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/IteratorPlusTwo.java
module com::ibm::wala::util::IteratorPlusTwo
   inherits from java::util::Iterator
   function hasNext() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable it defined in com::ibm::wala::util::IteratorPlusTwo
      uses variable xtra1 defined in com::ibm::wala::util::IteratorPlusTwo
      uses variable xtra2 defined in com::ibm::wala::util::IteratorPlusTwo
   function next() in line 40
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable it defined in com::ibm::wala::util::IteratorPlusTwo
      uses variable xtra1 defined in com::ibm::wala::util::IteratorPlusTwo
      uses variable xtra2 defined in com::ibm::wala::util::IteratorPlusTwo
   function remove() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IteratorPlusTwo(Iterator< T >,T,T) in line 24
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable it defined in com::ibm::wala::util::IteratorPlusTwo
      uses variable xtra1 defined in com::ibm::wala::util::IteratorPlusTwo
      uses variable xtra2 defined in com::ibm::wala::util::IteratorPlusTwo
   variable it in line 18
   variable xtra1 in line 21
   variable xtra2 in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/logging/SimplifiedFormatter.java
module com::ibm::wala::util::logging::SimplifiedFormatter
   inherits from java::util::logging::Formatter
   function format(final LogRecord) in line 44
      protection public
      23 lines of code
      1 parameters
      3 conditional paths
      uses variable ROOT_LOGGER_NAME defined in com::ibm::wala::util::logging::SimplifiedFormatter
      uses function get(final String) defined in com::ibm::wala::util::internationalization::IStringBundle
      uses function getStackStrace(final Throwable) defined in com::ibm::wala::util::logging::SimplifiedFormatter
   function getStackStrace(final Throwable) in line 70
      7 lines of code
      1 parameters
      1 conditional paths
   variable ROOT_LOGGER_NAME in line 78
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/MapIterator.java
module com::ibm::wala::util::MapIterator
   inherits from java::util::Iterator
   function hasNext() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function apply(X) defined in com::ibm::wala::util::Function
   function remove() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MapIterator(Iterator<?extends X >,Function< X, Y >) in line 29
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/math/Logs.java
module com::ibm::wala::util::math::Logs
   function isPowerOf2(int) in line 28
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function log2(int) in line 39
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isPowerOf2(int) defined in com::ibm::wala::util::math::Logs
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/math/LongUtil.java
module com::ibm::wala::util::math::LongUtil
   function pack(int,int) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/NormalCGNodeFilter.java
module com::ibm::wala::util::NormalCGNodeFilter
   inherits from com::ibm::wala::util::collections::Filter
   function accepts(Object) in line 37
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function isNative() defined in com::ibm::wala::classLoader::IMethod
   function instance() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable singleton defined in com::ibm::wala::util::NormalCGNodeFilter
   function NormalCGNodeFilter() in line 31
      2 lines of code
      0 parameters
      1 conditional paths
   variable singleton in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/PatternSetUtil.java
module com::ibm::wala::util::PatternSetUtil
   function composeRegularExpression(EContainer) in line 29
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getContents() defined in com::ibm::wala::ecore::common::ECollection
      uses function getPattern() defined in com::ibm::wala::ecore::regex::EPattern
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/perf/EngineTimings.java
module com::ibm::wala::util::perf::EngineTimings
   function addUnaccountedFor(EObjectGraphImpl) in line 207
      23 lines of code
      1 parameters
      5 conditional paths
      uses function iterateNodes() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getSuccNodeCount(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function getMillis() defined in com::ibm::wala::ecore::perf::EPhaseTiming
      uses function getSuccNodes(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfFactory
      uses function createEPhaseTiming() defined in com::ibm::wala::ecore::perf::PerfFactory
      uses function setMillis(long) defined in com::ibm::wala::ecore::perf::EPhaseTiming
      uses function setName(String) defined in com::ibm::wala::ecore::perf::EPhaseTiming
      uses function setOrder(int) defined in com::ibm::wala::ecore::perf::EPhaseTiming
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function collateTimings(ArrayList< Record >) in line 259
      30 lines of code
      1 parameters
      4 conditional paths
   function finishVirtual(String) in line 76
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getMyBuffer() defined in com::ibm::wala::util::perf::EngineTimings
      uses variable MAX_EVENTS defined in com::ibm::wala::util::perf::EngineTimings
   function getMyBuffer() in line 85
      8 lines of code
      0 parameters
      2 conditional paths
   function make(Phase) in line 235
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfFactory
      uses function createEPhaseTiming() defined in com::ibm::wala::ecore::perf::PerfFactory
      uses function setMillis(long) defined in com::ibm::wala::ecore::perf::EPhaseTiming
      uses function setName(String) defined in com::ibm::wala::ecore::perf::EPhaseTiming
   function makePadding(int) in line 246
      7 lines of code
      1 parameters
      2 conditional paths
   function makePhaseTree(List< Phase >) in line 161
      45 lines of code
      1 parameters
      4 conditional paths
      uses function make(Phase) defined in com::ibm::wala::util::perf::EngineTimings
      uses function addNode(EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function setOrder(int) defined in com::ibm::wala::ecore::perf::EPhaseTiming
      uses function addEdge(EObject,EObject) defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
      uses function addUnaccountedFor(EObjectGraphImpl) defined in com::ibm::wala::util::perf::EngineTimings
      uses function export() defined in com::ibm::wala::emf::wrappers::EObjectGraphImpl
   function report() in line 116
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses function getMyBuffer() defined in com::ibm::wala::util::perf::EngineTimings
      uses variable MAX_EVENTS defined in com::ibm::wala::util::perf::EngineTimings
      uses function collateTimings(ArrayList< Record >) defined in com::ibm::wala::util::perf::EngineTimings
      uses function makePadding(int) defined in com::ibm::wala::util::perf::EngineTimings
   function reportToFile() in line 136
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function getMyBuffer() defined in com::ibm::wala::util::perf::EngineTimings
      uses variable MAX_EVENTS defined in com::ibm::wala::util::perf::EngineTimings
      uses function collateTimings(ArrayList< Record >) defined in com::ibm::wala::util::perf::EngineTimings
      uses function makePhaseTree(List< Phase >) defined in com::ibm::wala::util::perf::EngineTimings
      uses function saveToFile(EGraph) defined in com::ibm::wala::util::perf::EngineTimings
   function saveToFile(EGraph) in line 149
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable FILENAME defined in com::ibm::wala::util::perf::EngineTimings
   function startVirtual(String) in line 60
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getMyBuffer() defined in com::ibm::wala::util::perf::EngineTimings
      uses variable MAX_EVENTS defined in com::ibm::wala::util::perf::EngineTimings
   variable FILENAME in line 51
   variable MAX_EVENTS in line 43
module com::ibm::wala::util::perf::EngineTimings::Record
module com::ibm::wala::util::perf::EngineTimings::Phase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/perf/Stopwatch.java
module com::ibm::wala::util::perf::Stopwatch
   function getCount() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable count defined in com::ibm::wala::util::perf::Stopwatch
   function getElapsedMillis() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable elapsedTime defined in com::ibm::wala::util::perf::Stopwatch
   function start() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startTime defined in com::ibm::wala::util::perf::Stopwatch
   function stop() in line 43
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable count defined in com::ibm::wala::util::perf::Stopwatch
      uses variable elapsedTime defined in com::ibm::wala::util::perf::Stopwatch
      uses variable startTime defined in com::ibm::wala::util::perf::Stopwatch
   function Stopwatch() in line 30
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable count in line 21
   variable elapsedTime in line 23
   variable startTime in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/Stopwatch.java
module com::ibm::wala::util::Stopwatch
   inherits from com::ibm::wala::util::perf::Stopwatch
   function getEndMemory() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endMemory defined in com::ibm::wala::util::Stopwatch
   function getFootprint() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getEndMemory() defined in com::ibm::wala::util::Stopwatch
      uses function getStartMemory() defined in com::ibm::wala::util::Stopwatch
   function getName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::util::Stopwatch
   function getStartMemory() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startMemory defined in com::ibm::wala::util::Stopwatch
   function report() in line 47
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses function getCount() defined in com::ibm::wala::util::perf::Stopwatch
      uses variable name defined in com::ibm::wala::util::Stopwatch
      uses function getElapsedMillis() defined in com::ibm::wala::util::perf::Stopwatch
      uses variable startMemory defined in com::ibm::wala::util::Stopwatch
      uses variable endMemory defined in com::ibm::wala::util::Stopwatch
   function start() in line 33
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable startMemory defined in com::ibm::wala::util::Stopwatch
   function stop() in line 40
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable endMemory defined in com::ibm::wala::util::Stopwatch
   function Stopwatch(String) in line 28
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::util::Stopwatch
   variable endMemory in line 26
   variable name in line 22
   variable startMemory in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/ReferenceCleanser.java
module com::ibm::wala::util::ReferenceCleanser
   function clearSoftCaches() in line 70
      protection public
      27 lines of code
      0 parameters
      7 conditional paths
      uses function getAnalysisOptions() defined in com::ibm::wala::util::ReferenceCleanser
      uses function getSSACache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function wipe() defined in com::ibm::wala::ssa::SSACache
      uses function getCFGCache() defined in com::ibm::wala::ipa::callgraph::AnalysisOptions
      uses function wipe() defined in com::ibm::wala::cfg::CFGCache
      uses variable cha defined in com::ibm::wala::util::ReferenceCleanser
      uses function getClassHierarchy() defined in com::ibm::wala::util::ReferenceCleanser
      uses function clearSoftCaches() defined in com::ibm::wala::classLoader::ShrikeCTClassWrapper
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
   function getAnalysisOptions() in line 59
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable options defined in com::ibm::wala::util::ReferenceCleanser
   function getClassHierarchy() in line 44
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable cha defined in com::ibm::wala::util::ReferenceCleanser
   function registerAnalysisOptions(AnalysisOptions) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable options defined in com::ibm::wala::util::ReferenceCleanser
   function registerClassHierarchy(ClassHierarchy) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::util::ReferenceCleanser
   variable cha in line 36
   variable options in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/scope/EclipseAnalysisScope.java
module com::ibm::wala::util::scope::EclipseAnalysisScope
   inherits from com::ibm::wala::ipa::callgraph::AnalysisScope
   function addClassFileToScope(ClassLoaderReference,File) in line 528
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function addClassFileToScope(ClassLoaderReference,File) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function addSourceFileToScope(ClassLoaderReference,File,String) in line 532
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function addSourceFileToScope(ClassLoaderReference,File,String) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function addToScope(ClassLoaderReference,JarFile) in line 536
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function addToScope(ClassLoaderReference,Module) in line 540
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function buildDelegate(File) in line 118
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable pluginIds defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function findPluginDirOrJAR(String,String,File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginsDirName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function findRequiredPluginsFragmentsAndBundles(File,File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getContributingFragments(File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function createScope(Collection< JarFile >) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function createScope(Collection< JarFile >) in line 135
      10 lines of code
      1 parameters
      3 conditional paths
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
      uses variable DEBUG defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function printConfigurationInformation(AnalysisScope) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function equals(Object) in line 544
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function findJars(File) in line 294
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses function push(T) defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
      uses function isEmpty() defined in com::ibm::wala::util::collections::FifoQueue
      uses function pop() defined in com::ibm::wala::util::collections::FifoQueue
   function findManifests(String) in line 398
      21 lines of code
      1 parameters
      5 conditional paths
      uses function push(T) defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
      uses function isEmpty() defined in com::ibm::wala::util::collections::FifoQueue
      uses function pop() defined in com::ibm::wala::util::collections::FifoQueue
   function findMethod(Atom,String,Atom,ImmutableByteArray) in line 548
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function findMethod(Atom,String,Atom,ImmutableByteArray) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function findPluginDirOrJAR(String,String,File) in line 268
      protection public
      16 lines of code
      3 parameters
      4 conditional paths
      uses variable pluginsDirName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function findRequiredBundles(Manifest,String,File) in line 346
      45 lines of code
      3 parameters
      10 conditional paths
      uses function parseFragmentHost(String) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginIds defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable version defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable subversion defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function findPluginDirOrJAR(String,String,File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function findRequiredPluginsFragmentsAndBundles(File,File) in line 216
      37 lines of code
      2 parameters
      7 conditional paths
      uses function push(T) defined in com::ibm::wala::util::collections::FifoQueueNoDuplicates
      uses function isEmpty() defined in com::ibm::wala::util::collections::FifoQueue
      uses function pop() defined in com::ibm::wala::util::collections::FifoQueue
      uses function findJars(File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getInputStream(String) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function findRequiredBundles(Manifest,String,File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginsDirName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function getApplicationLoader() in line 552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getArrayClassLoader() in line 556
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getArrayClassLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getContributingFragment(String,String,String,File) in line 451
      56 lines of code
      4 parameters
      12 conditional paths
      uses function getInputStream(String) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function parseFragmentHost(String) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function findPluginDirOrJAR(String,String,File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginsDirName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function findJars(File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function getContributingFragments(File) in line 425
      14 lines of code
      1 parameters
      3 conditional paths
      uses function findManifests(String) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginsDirName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable pluginIds defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getContributingFragment(String,String,String,File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function getExclusions() in line 560
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getExclusions() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getExtensionLoader() in line 564
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getExtensionLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getInputStream(String) in line 518
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function getJavaLibraryVersion() in line 568
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getJavaLibraryVersion() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getLoader(Atom) in line 572
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getLoaderImpl(ClassLoaderReference) in line 576
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getLoaderImpl(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getLoaders() in line 580
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getLoaders() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getModules(ClassLoaderReference) in line 584
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getModules(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getNumberOfLoaders() in line 588
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getNumberOfLoaders() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getPluginName() in line 620
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function getPluginsDirName() in line 624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginsDirName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function getPrimordialLoader() in line 592
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getPrimordialLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function getSyntheticLoader() in line 596
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function getSyntheticLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function hashCode() in line 600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function initVersionInfo(File) in line 149
      36 lines of code
      1 parameters
      6 conditional paths
      uses variable ECLIPSE_PRODUCT_NAME defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable version defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable subversion defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   function isJava14Libraries() in line 604
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function isJava14Libraries() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function isJava15Libraries() in line 608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function isJava15Libraries() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function parseFragmentHost(String) in line 327
      7 lines of code
      1 parameters
      2 conditional paths
   function printConfigurationInformation(AnalysisScope) in line 194
      13 lines of code
      1 parameters
      1 conditional paths
      uses function getModules(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Extension defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
   function setExclusions(SetOfClasses) in line 612
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function setExclusions(SetOfClasses) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function toString() in line 616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function toString() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function EclipseAnalysisScope(String) in line 103
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable pluginName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses variable ECLIPSE_PLUGINS_DIR defined in com::ibm::wala::properties::WalaProperties
      uses variable pluginsDirName defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function initVersionInfo(File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
      uses function buildDelegate(File) defined in com::ibm::wala::util::scope::EclipseAnalysisScope
   variable DEBUG in line 61
      protection public
   variable delegate in line 68
   variable ECLIPSE_PRODUCT_NAME in line 63
   variable pluginIds in line 85
   variable pluginName in line 90
   variable pluginsDirName in line 95
   variable subversion in line 79
   variable version in line 73
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/scope/EclipseEntrypoints.java
module com::ibm::wala::util::scope::EclipseEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   function computePackageName(String) in line 111
      7 lines of code
      1 parameters
      2 conditional paths
   function findBundleRootJars(String,Set< JarFile >) in line 238
      42 lines of code
      2 parameters
      9 conditional paths
      uses function parseFragmentHost(String) defined in com::ibm::wala::util::scope::EclipseEntrypoints
   function findRootJars(String,String) in line 133
      33 lines of code
      2 parameters
      5 conditional paths
      uses function findBundleRootJars(String,Set< JarFile >) defined in com::ibm::wala::util::scope::EclipseEntrypoints
   function findRootPackages(boolean,Set< JarFile >) in line 177
      46 lines of code
      2 parameters
      10 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::scope::EclipseEntrypoints
   function isApplicationClass(AnalysisScope,IClass) in line 107
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
   function parseFragmentHost(String) in line 292
      7 lines of code
      1 parameters
      2 conditional paths
   function EclipseEntrypoints(EclipseAnalysisScope,final ClassHierarchy,boolean) in line 63
      protection public
      33 lines of code
      3 parameters
      9 conditional paths
      uses function findRootJars(String,String) defined in com::ibm::wala::util::scope::EclipseEntrypoints
      uses function findRootPackages(boolean,Set< JarFile >) defined in com::ibm::wala::util::scope::EclipseEntrypoints
      uses function getName() defined in com::ibm::wala::classLoader::IClass
      uses function toString() defined in com::ibm::wala::types::TypeName
      uses function computePackageName(String) defined in com::ibm::wala::util::scope::EclipseEntrypoints
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses function isApplicationClass(AnalysisScope,IClass) defined in com::ibm::wala::util::scope::EclipseEntrypoints
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
      uses function isAbstract() defined in com::ibm::wala::classLoader::IMethod
      uses function isPublic() defined in com::ibm::wala::classLoader::IMethod
      uses function isProtected() defined in com::ibm::wala::classLoader::IMethod
      uses function add(Entrypoint) defined in com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
      uses variable DEBUG defined in com::ibm::wala::util::scope::EclipseEntrypoints
      uses function size() defined in com::ibm::wala::ipa::callgraph::impl::BasicEntrypoints
   variable DEBUG in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/scope/JUnitEntryPoints.java
module com::ibm::wala::util::scope::JUnitEntryPoints
   function getSetUpTearDownMethods(IClass) in line 169
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses function isClinit() defined in com::ibm::wala::classLoader::IMethod
      uses function isInit() defined in com::ibm::wala::classLoader::IMethod
   function isJUnitMethod(IMethod) in line 160
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function toString() defined in com::ibm::wala::util::Atom
   function isJUnitTestCase(IClass) in line 137
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
      uses function getName() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeName
   function make(ClassHierarchy) in line 38
      protection public
      38 lines of code
      1 parameters
      7 conditional paths
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
      uses function isJUnitTestCase(IClass) defined in com::ibm::wala::util::scope::JUnitEntryPoints
      uses function getAllMethods() defined in com::ibm::wala::classLoader::IClass
      uses function isJUnitMethod(IMethod) defined in com::ibm::wala::util::scope::JUnitEntryPoints
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function iterator() defined in com::ibm::wala::ipa::callgraph::Entrypoints
   function makeOne(ClassHierarchy,String,String,String) in line 80
      protection public
      52 lines of code
      4 parameters
      9 conditional paths
      uses variable DEBUG defined in com::ibm::wala::util::scope::JUnitEntryPoints
      uses function iterateAllClasses() defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getName() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeName
      uses function isJUnitTestCase(IClass) defined in com::ibm::wala::util::scope::JUnitEntryPoints
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function getSetUpTearDownMethods(IClass) defined in com::ibm::wala::util::scope::JUnitEntryPoints
      uses function iterator() defined in com::ibm::wala::ipa::callgraph::Entrypoints
   variable DEBUG in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/ShrikeClassReaderHandle.java
module com::ibm::wala::util::ShrikeClassReaderHandle
   function clear() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reader defined in com::ibm::wala::util::ShrikeClassReaderHandle
   function get() in line 57
      protection public
      28 lines of code
      0 parameters
      6 conditional paths
      uses variable reader defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses variable hydrateCount defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses variable DEBUG defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses variable entry defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getInputStream() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function readBytes(InputStream,ByteArrayOutputStream) defined in com::ibm::wala::util::ShrikeClassReaderHandle
   function getFileName() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entry defined in com::ibm::wala::util::ShrikeClassReaderHandle
      uses function getName() defined in com::ibm::wala::classLoader::ModuleEntry
   function readBytes(InputStream,ByteArrayOutputStream) in line 93
      10 lines of code
      2 parameters
      3 conditional paths
   function ShrikeClassReaderHandle(ModuleEntry) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entry defined in com::ibm::wala::util::ShrikeClassReaderHandle
   variable DEBUG in line 35
   variable entry in line 39
   variable hydrateCount in line 46
   variable reader in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/ShrikeUtil.java
module com::ibm::wala::util::ShrikeUtil
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   function getInvocationCode(InvokeInstruction) in line 57
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getInvocationMode() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function makeFieldReference(ClassLoaderReference,String,String,String) in line 100
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function makeTypeReference(ClassLoaderReference,String) defined in com::ibm::wala::util::ShrikeUtil
   function makeMethodReference(ClassLoaderReference,String,String,String) in line 107
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function makeTypeReference(ClassLoaderReference,String) defined in com::ibm::wala::util::ShrikeUtil
   function makeTypeReference(ClassLoaderReference,String) in line 77
      protection public
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable primitiveMap defined in com::ibm::wala::util::ShrikeUtil
      uses function get(int) defined in com::ibm::wala::util::ImmutableByteArray
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   variable primitiveMap in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/StringStuff.java
module com::ibm::wala::util::StringStuff
   function classIsPrimitive(ImmutableByteArray,int,int) in line 390
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
   function deployment2CanonicalDescriptorTypeString(String) in line 95
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable primitiveClassNames defined in com::ibm::wala::util::StringStuff
   function deployment2CanonicalTypeString(String) in line 64
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable primitiveClassNames defined in com::ibm::wala::util::StringStuff
   function jvmToReadableType(String) in line 420
      protection public
      45 lines of code
      1 parameters
      13 conditional paths
      uses function slashToDot(String) defined in com::ibm::wala::util::StringStuff
   function makeMethodReference(String) in line 402
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function deployment2CanonicalTypeString(String) defined in com::ibm::wala::util::StringStuff
      uses variable Application defined in com::ibm::wala::types::ClassLoaderReference
   function padWithSpaces(StringBuffer,int) in line 47
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
   function parseForArrayDimensionality(ImmutableByteArray,int,int) in line 345
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
   function parseForClass(ImmutableByteArray,int,int) in line 305
      protection public
      22 lines of code
      3 parameters
      6 conditional paths
      uses function parseForPackage(ImmutableByteArray,int,int) defined in com::ibm::wala::util::StringStuff
   function parseForClass(ImmutableByteArray) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseForClass(ImmutableByteArray,int,int) defined in com::ibm::wala::util::StringStuff
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   function parseForInnermostArrayElementDescriptor(ImmutableByteArray,int,int) in line 362
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
   function parseForInnermostArrayElementDescriptor(Atom) in line 379
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function parseForInnermostArrayElementDescriptor(ImmutableByteArray,int,int) defined in com::ibm::wala::util::StringStuff
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   function parseForPackage(ImmutableByteArray,int,int) in line 268
      protection public
      13 lines of code
      3 parameters
      4 conditional paths
      uses function parseForArrayDimensionality(ImmutableByteArray,int,int) defined in com::ibm::wala::util::StringStuff
   function parseForPackage(ImmutableByteArray) in line 289
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseForPackage(ImmutableByteArray,int,int) defined in com::ibm::wala::util::StringStuff
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   function parseForParameterNames(ImmutableByteArray) in line 174
      protection public
      83 lines of code
      1 parameters
      23 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function get(int) defined in com::ibm::wala::util::ImmutableByteArray
      uses variable VoidTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable VoidName defined in com::ibm::wala::types::TypeReference
      uses variable BooleanTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable BooleanName defined in com::ibm::wala::types::TypeReference
      uses variable ByteTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable ByteName defined in com::ibm::wala::types::TypeReference
      uses variable ShortTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable ShortName defined in com::ibm::wala::types::TypeReference
      uses variable IntTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable IntName defined in com::ibm::wala::types::TypeReference
      uses variable LongTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable LongName defined in com::ibm::wala::types::TypeReference
      uses variable FloatTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable FloatName defined in com::ibm::wala::types::TypeReference
      uses variable DoubleTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable DoubleName defined in com::ibm::wala::types::TypeReference
      uses variable CharTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable CharName defined in com::ibm::wala::types::TypeReference
      uses variable ClassTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable ArrayTypeCode defined in com::ibm::wala::types::TypeReference
   function parseForReturnTypeName(ImmutableByteArray) in line 125
      protection public
      43 lines of code
      1 parameters
      17 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function get(int) defined in com::ibm::wala::util::ImmutableByteArray
      uses variable VoidTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses variable BooleanTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Boolean defined in com::ibm::wala::types::TypeReference
      uses variable ByteTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Byte defined in com::ibm::wala::types::TypeReference
      uses variable ShortTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Short defined in com::ibm::wala::types::TypeReference
      uses variable IntTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Int defined in com::ibm::wala::types::TypeReference
      uses variable LongTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Long defined in com::ibm::wala::types::TypeReference
      uses variable FloatTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Float defined in com::ibm::wala::types::TypeReference
      uses variable DoubleTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Double defined in com::ibm::wala::types::TypeReference
      uses variable CharTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable Char defined in com::ibm::wala::types::TypeReference
      uses variable ClassTypeCode defined in com::ibm::wala::types::TypeReference
      uses variable ArrayTypeCode defined in com::ibm::wala::types::TypeReference
      uses function length() defined in com::ibm::wala::util::ImmutableByteArray
   function slashToDot(String) in line 475
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   variable primitiveClassNames in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/system/Environment.java
module com::ibm::wala::util::system::Environment
   function parseOutput(byte[]) in line 48
      18 lines of code
      1 parameters
      3 conditional paths
   function readEnv() in line 33
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function setCmd(String) defined in com::ibm::wala::dynamic::BasicLauncher
      uses function setCaptureOutput(boolean) defined in com::ibm::wala::dynamic::Launcher
      uses function launch() defined in com::ibm::wala::dynamic::BasicLauncher
      uses function parseOutput(byte[]) defined in com::ibm::wala::util::system::Environment
      uses function getOutput() defined in com::ibm::wala::dynamic::Launcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/UTF8Convert.java
module com::ibm::wala::util::UTF8Convert
   abstract class
   function check(byte[]) in line 165
      protection public
      37 lines of code
      1 parameters
      13 conditional paths
   function fromUTF8(byte[]) in line 64
      protection public
      47 lines of code
      1 parameters
      15 conditional paths
   function fromUTF8(ImmutableByteArray) in line 203
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function fromUTF8(byte[]) defined in com::ibm::wala::util::UTF8Convert
   function toUTF8(String) in line 121
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function utfLength(String) defined in com::ibm::wala::util::UTF8Convert
   function utfLength(String) in line 145
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/warnings/CallGraphWarnings.java
module com::ibm::wala::util::warnings::CallGraphWarnings
   function addWarningsForNode(WarningSet,CGNode,RTAContextInterpreter) in line 120
      32 lines of code
      3 parameters
      10 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function isSynthetic() defined in com::ibm::wala::classLoader::IMethod
      uses function hasPoison() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getPoisonLevel() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function isFactoryMethod() defined in com::ibm::wala::classLoader::SyntheticMethod
      uses function iterateNewSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function isNative() defined in com::ibm::wala::classLoader::IMethod
      uses function iterateCallSites(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::rta::RTAContextInterpreter
      uses function getPossibleTargets(CallSiteReference) defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function canIgnore(MethodReference) defined in com::ibm::wala::util::warnings::CallGraphWarnings
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
   function canIgnore(MethodReference) in line 80
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getPackage() defined in com::ibm::wala::types::TypeName
      uses variable ignoredPackages defined in com::ibm::wala::util::warnings::CallGraphWarnings
      uses variable ignoredTypes defined in com::ibm::wala::util::warnings::CallGraphWarnings
   function getWarnings(CallGraph) in line 92
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses variable INSTANCE defined in com::ibm::wala::util::warnings::CallGraphWarnings::NoEntrypointsFailure
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function addWarningsForNode(WarningSet,CGNode,RTAContextInterpreter) defined in com::ibm::wala::util::warnings::CallGraphWarnings
   function ignorePackage(Atom) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoredPackages defined in com::ibm::wala::util::warnings::CallGraphWarnings
   variable ignoredPackages in line 66
   variable ignoredTypeArray in line 39
   variable ignoredTypes in line 55
module com::ibm::wala::util::warnings::CallGraphWarnings::NoEntrypointsFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function getMsg() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 111
module com::ibm::wala::util::warnings::CallGraphWarnings::PoisonWarning
   inherits from com::ibm::wala::util::warnings::MethodWarning
   function getMsg() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PoisonWarning(byte,CGNode) in line 160
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable level defined in com::ibm::wala::util::warnings::Warning
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
module com::ibm::wala::util::warnings::CallGraphWarnings::NativeWarning
   inherits from com::ibm::wala::util::warnings::MethodWarning
   function getMsg() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NativeWarning(CGNode) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
module com::ibm::wala::util::warnings::CallGraphWarnings::NoCalleeWarning
   inherits from com::ibm::wala::util::warnings::MethodWarning
   function getMsg() in line 224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function severityString() in line 233
      3 lines of code
      0 parameters
      1 conditional paths
   function NoCalleeWarning(CGNode,CallSiteReference) in line 206
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses function setLevel(byte) defined in com::ibm::wala::util::warnings::Warning
      uses variable CLIENT_MILD defined in com::ibm::wala::util::warnings::Warning
      uses variable Extension defined in com::ibm::wala::types::ClassLoaderReference
      uses variable CLIENT_MODERATE defined in com::ibm::wala::util::warnings::Warning
      uses variable CLIENT_SEVERE defined in com::ibm::wala::util::warnings::Warning
   variable site in line 201
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/warnings/MethodWarning.java
module com::ibm::wala::util::warnings::MethodWarning
   inherits from com::ibm::wala::util::warnings::Warning
   abstract class
   function getMethod() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::util::warnings::MethodWarning
   function MethodWarning(byte,MethodReference) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable level defined in com::ibm::wala::util::warnings::Warning
      uses variable method defined in com::ibm::wala::util::warnings::MethodWarning
   function MethodWarning(MethodReference) in line 32
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::util::warnings::MethodWarning
   variable method in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/warnings/ResolutionFailure.java
module com::ibm::wala::util::warnings::ResolutionFailure
   inherits from com::ibm::wala::util::warnings::MethodWarning
   function create(CGNode,Object) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function ResolutionFailure(CGNode,Object,String) defined in com::ibm::wala::util::warnings::ResolutionFailure
   function create(CGNode,Object,String) in line 56
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function ResolutionFailure(CGNode,Object,String) defined in com::ibm::wala::util::warnings::ResolutionFailure
   function equals(Object) in line 63
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ResolutionFailure(CGNode,Object,String) defined in com::ibm::wala::util::warnings::ResolutionFailure
      uses function getMethod() defined in com::ibm::wala::util::warnings::MethodWarning
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses function getLevel() defined in com::ibm::wala::util::warnings::Warning
   function getMsg() in line 44
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::util::warnings::MethodWarning
   function hashCode() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::util::warnings::MethodWarning
      uses function hashCode() defined in com::ibm::wala::types::MemberReference
      uses function getLevel() defined in com::ibm::wala::util::warnings::Warning
   function ResolutionFailure(CGNode,Object,String) in line 31
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function ResolutionFailure(CGNode,Object) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/warnings/WalaException.java
module com::ibm::wala::util::warnings::WalaException
   inherits from Exception
   function WalaException(String,Throwable) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function WalaException(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/warnings/Warning.java
module com::ibm::wala::util::warnings::Warning
   inherits from Comparable
   abstract class
   function compareTo(Object) in line 53
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function Warning() defined in com::ibm::wala::util::warnings::Warning
      uses variable level defined in com::ibm::wala::util::warnings::Warning
      uses function getMsg() defined in com::ibm::wala::util::warnings::Warning
   function equals(Object) in line 72
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function Warning() defined in com::ibm::wala::util::warnings::Warning
      uses function getMsg() defined in com::ibm::wala::util::warnings::Warning
      uses function getLevel() defined in com::ibm::wala::util::warnings::Warning
   function getLevel() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable level defined in com::ibm::wala::util::warnings::Warning
      uses function getMsg() defined in com::ibm::wala::util::warnings::Warning
   function getMsg() in line 129
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMsg() defined in com::ibm::wala::util::warnings::Warning
      uses function getLevel() defined in com::ibm::wala::util::warnings::Warning
   function setLevel(byte) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable level defined in com::ibm::wala::util::warnings::Warning
   function severityString() in line 101
      19 lines of code
      0 parameters
      7 conditional paths
      uses variable level defined in com::ibm::wala::util::warnings::Warning
      uses variable MILD defined in com::ibm::wala::util::warnings::Warning
      uses variable MODERATE defined in com::ibm::wala::util::warnings::Warning
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
      uses variable CLIENT_MILD defined in com::ibm::wala::util::warnings::Warning
      uses variable CLIENT_MODERATE defined in com::ibm::wala::util::warnings::Warning
      uses variable CLIENT_SEVERE defined in com::ibm::wala::util::warnings::Warning
   function toString() in line 94
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function severityString() defined in com::ibm::wala::util::warnings::Warning
      uses function getMsg() defined in com::ibm::wala::util::warnings::Warning
   function Warning(byte) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable level defined in com::ibm::wala::util::warnings::Warning
   function Warning() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MILD defined in com::ibm::wala::util::warnings::Warning
   variable CLIENT_MILD in line 30
      protection public
   variable CLIENT_MODERATE in line 32
      protection public
   variable CLIENT_SEVERE in line 34
      protection public
   variable level in line 38
   variable MILD in line 24
      protection public
   variable MODERATE in line 26
      protection public
   variable N_LEVELS in line 36
      protection public
   variable SEVERE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/util/warnings/WarningSet.java
module com::ibm::wala::util::warnings::WarningSet
   inherits from java::util::HashSet
   function add(Warning) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function dump(CallGraph,PrintStream) in line 108
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses function getLevel() defined in com::ibm::wala::util::warnings::Warning
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses function find() defined in com::ibm::wala::util::graph::traverse::BFSPathFinder
   function toString() in line 50
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
   function toString(CallGraph) in line 67
      protection public
      39 lines of code
      1 parameters
      7 conditional paths
      uses function getLevel() defined in com::ibm::wala::util::warnings::Warning
      uses variable SEVERE defined in com::ibm::wala::util::warnings::Warning
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable MAX_PATHS defined in com::ibm::wala::util::warnings::WarningSet
      uses function find() defined in com::ibm::wala::util::graph::traverse::BFSPathFinder
   variable MAX_PATHS in line 43
   variable serialVersionUID in line 33
      protection public
module com::ibm::wala::util::warnings::WarningSet::DescendingComparator
   inherits from java::util::Comparator
   function compare(Warning,Warning) in line 152
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getLevel() defined in com::ibm::wala::util::warnings::Warning
      uses function getMsg() defined in com::ibm::wala::util::warnings::Warning
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/BasicBlockDecorator.java
module com::ibm::wala::viz::BasicBlockDecorator
   inherits from com::ibm::wala::util::graph::NodeDecorator
   abstract class
   function getCurrentNode() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentNode defined in com::ibm::wala::viz::BasicBlockDecorator
   function setCurrentNode(CGNode) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable currentNode defined in com::ibm::wala::viz::BasicBlockDecorator
   function BasicBlockDecorator() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable currentNode in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/DotUtil.java
module com::ibm::wala::viz::DotUtil
   function computeDotNodes(Graph< T >) in line 202
      9 lines of code
      1 parameters
      1 conditional paths
   function decorateNode(Object,NodeDecorator) in line 231
      25 lines of code
      2 parameters
      1 conditional paths
   function dotify(Graph< T >,NodeDecorator,String,String,String) in line 39
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function writeDotFile(Graph< T >,NodeDecorator,String) defined in com::ibm::wala::viz::DotUtil
      uses function spawnDot(String,String,File) defined in com::ibm::wala::viz::DotUtil
   function dotOutput(Graph< T >,NodeDecorator) in line 117
      60 lines of code
      2 parameters
      4 conditional paths
      uses function getRankDir() defined in com::ibm::wala::viz::DotUtil
      uses function computeDotNodes(Graph< T >) defined in com::ibm::wala::viz::DotUtil
      uses function outputNodes(NodeDecorator,StringBuffer,Collection) defined in com::ibm::wala::viz::DotUtil
      uses function getPort(Object,NodeDecorator) defined in com::ibm::wala::viz::DotUtil
   function getLabel(Object,NodeDecorator) in line 281
      8 lines of code
      2 parameters
      2 conditional paths
   function getPort(Object,NodeDecorator) in line 290
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getLabel(Object,NodeDecorator) defined in com::ibm::wala::viz::DotUtil
   function getRankDir() in line 217
      13 lines of code
      0 parameters
      1 conditional paths
   function outputNode(NodeDecorator,StringBuffer,Object) in line 190
      7 lines of code
      3 parameters
      1 conditional paths
      uses function getLabel(Object,NodeDecorator) defined in com::ibm::wala::viz::DotUtil
      uses function decorateNode(Object,NodeDecorator) defined in com::ibm::wala::viz::DotUtil
   function outputNodes(NodeDecorator,StringBuffer,Collection) in line 184
      5 lines of code
      3 parameters
      2 conditional paths
      uses function outputNode(NodeDecorator,StringBuffer,Object) defined in com::ibm::wala::viz::DotUtil
   function spawnDot(String,String,File) in line 48
      protection public
      40 lines of code
      3 parameters
      7 conditional paths
   function writeDotFile(Graph< T >,NodeDecorator,String) in line 93
      protection public
      19 lines of code
      3 parameters
      3 conditional paths
      uses function dotOutput(Graph< T >,NodeDecorator) defined in com::ibm::wala::viz::DotUtil
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/EJfaceApplicationRunner.java
module com::ibm::wala::viz::EJfaceApplicationRunner
   abstract class
   function getApplicationWindow() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationWindow defined in com::ibm::wala::viz::EJfaceApplicationRunner
   function isBlockInput() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable blockInput defined in com::ibm::wala::viz::EJfaceApplicationRunner
   function setApplicationWindow(ApplicationWindow) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applicationWindow defined in com::ibm::wala::viz::EJfaceApplicationRunner
   function setBlockInput(boolean) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable blockInput defined in com::ibm::wala::viz::EJfaceApplicationRunner
   function toString() in line 120
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationWindow defined in com::ibm::wala::viz::EJfaceApplicationRunner
      uses variable blockInput defined in com::ibm::wala::viz::EJfaceApplicationRunner
   function EJfaceApplicationRunner() in line 75
      3 lines of code
      0 parameters
      1 conditional paths
   variable APPLICATION_WINDOW_EDEFAULT in line 38
   variable applicationWindow in line 48
   variable BLOCK_INPUT_EDEFAULT in line 58
   variable blockInput in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/GhostviewUtil.java
module com::ibm::wala::viz::GhostviewUtil
   function getNodeLabel(IR,BasicBlock) in line 110
      47 lines of code
      2 parameters
      12 conditional paths
      uses function getFirstInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getLastInstructionIndex() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function getNumber() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function isEntryBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function isExitBlock() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function iteratePhis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAPhiInstruction
      uses function getCatchInstruction() defined in com::ibm::wala::ssa::SSACFG::ExceptionHandlerBasicBlock
      uses function toString(SymbolTable,ValueDecorator) defined in com::ibm::wala::ssa::SSAGetCaughtExceptionInstruction
      uses function getInstructions() defined in com::ibm::wala::ssa::IR
      uses function iteratePis() defined in com::ibm::wala::ssa::SSACFG::BasicBlock
   function ghostviewIR(ClassHierarchy,IR,boolean,String,String,String,String) in line 47
      protection public
      4 lines of code
      7 parameters
      1 conditional paths
   function ghostviewIR(ClassHierarchy,IR,boolean,String,String,String,String,NodeDecorator) in line 60
      protection public
      16 lines of code
      8 parameters
      2 conditional paths
      uses function makeIRDecorator(IR) defined in com::ibm::wala::viz::GhostviewUtil
   function makeIRDecorator(IR) in line 77
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
      uses function iterateNodes() defined in com::ibm::wala::ssa::SSACFG
      uses function getNodeLabel(IR,BasicBlock) defined in com::ibm::wala::viz::GhostviewUtil
module com::ibm::wala::viz::GhostviewUtil::ConcatenatingNodeDecorator
   inherits from com::ibm::wala::util::graph::NodeDecorator
   function getLabel(Object) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable A defined in com::ibm::wala::viz::GhostviewUtil::ConcatenatingNodeDecorator
      uses function getLabel(Object) defined in com::ibm::wala::util::graph::NodeDecorator
      uses variable B defined in com::ibm::wala::viz::GhostviewUtil::ConcatenatingNodeDecorator
   variable A in line 97
   variable B in line 98
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/GSViewLauncherImpl.java
module com::ibm::wala::viz::GSViewLauncherImpl
   function getDescription() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in com::ibm::wala::viz::GSViewLauncherImpl
   function getException() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGvExe() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable gvExe defined in com::ibm::wala::viz::GSViewLauncherImpl
   function getProcess() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable process defined in com::ibm::wala::viz::GSViewLauncherImpl
   function getPsfile() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable psfile defined in com::ibm::wala::viz::GSViewLauncherImpl
   function getVendor() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vendor defined in com::ibm::wala::viz::GSViewLauncherImpl
   function getVersion() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in com::ibm::wala::viz::GSViewLauncherImpl
   function run() in line 237
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getGvExe() defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses function getPsfile() defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses function setProcess(Process) defined in com::ibm::wala::viz::GSViewLauncherImpl
   function setGvExe(String) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable gvExe defined in com::ibm::wala::viz::GSViewLauncherImpl
   function setProcess(Process) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable process defined in com::ibm::wala::viz::GSViewLauncherImpl
   function setPsfile(String) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable psfile defined in com::ibm::wala::viz::GSViewLauncherImpl
   function toString() in line 216
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses variable vendor defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses variable version defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses variable psfile defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses variable gvExe defined in com::ibm::wala::viz::GSViewLauncherImpl
   function GSViewLauncherImpl() in line 144
      3 lines of code
      0 parameters
      1 conditional paths
   variable description in line 57
   variable DESCRIPTION_EDEFAULT in line 47
   variable GV_EXE_EDEFAULT in line 127
   variable gvExe in line 137
   variable process in line 37
   variable psfile in line 117
   variable PSFILE_EDEFAULT in line 107
   variable vendor in line 77
   variable VENDOR_EDEFAULT in line 67
   variable version in line 97
   variable VERSION_EDEFAULT in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/GVUtil.java
module com::ibm::wala::viz::GVUtil
   function launchGV(String,String) in line 27
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function setGvExe(String) defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses function setPsfile(String) defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses function run() defined in com::ibm::wala::viz::GSViewLauncherImpl
      uses function getProcess() defined in com::ibm::wala::viz::GSViewLauncherImpl
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/IFDSExplorerImpl.java
module com::ibm::wala::viz::IFDSExplorerImpl
   function setDotExe(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dotExe defined in com::ibm::wala::viz::IFDSExplorerImpl
   function setGvExe(String) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable gvExe defined in com::ibm::wala::viz::IFDSExplorerImpl
   function viewIFDS(CallGraph,TabulationResult) in line 64
      protection public
      27 lines of code
      2 parameters
      2 conditional paths
      uses variable gvExe defined in com::ibm::wala::viz::IFDSExplorerImpl
      uses variable dotExe defined in com::ibm::wala::viz::IFDSExplorerImpl
      uses variable OUTPUT_DIR defined in com::ibm::wala::properties::WalaProperties
      uses function setGraphInput(Graph) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function setBlockInput(boolean) defined in com::ibm::wala::viz::EJfaceApplicationRunner
      uses function setRootsInput(Collection<?extends Object >) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getPopUpActions() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function run() defined in com::ibm::wala::viz::SWTTreeViewer
   variable dotExe in line 40
   variable gvExe in line 46
module com::ibm::wala::viz::IFDSExplorerImpl::IFDSAnnotator
   inherits from com::ibm::wala::viz::BasicBlockDecorator
   function getLabel(Object) in line 98
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getCurrentNode() defined in com::ibm::wala::viz::BasicBlockDecorator
      uses variable r defined in com::ibm::wala::viz::IFDSExplorerImpl::IFDSAnnotator
      uses function getResult(T) defined in com::ibm::wala::dataflow::IFDS::TabulationResult
   function IFDSAnnotator(TabulationResult) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable r defined in com::ibm::wala::viz::IFDSExplorerImpl::IFDSAnnotator
   variable r in line 93
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/SWTTreeViewer.java
module com::ibm::wala::viz::SWTTreeViewer
   inherits from com::ibm::wala::viz::EJfaceApplicationRunner
   function getGraphInput() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable graphInput defined in com::ibm::wala::viz::SWTTreeViewer
   function getNodeDecoratorInput() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeDecoratorInput defined in com::ibm::wala::viz::SWTTreeViewer
   function getPopUpActions() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable popUpActions defined in com::ibm::wala::viz::SWTTreeViewer
   function getRootsInput() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootsInput defined in com::ibm::wala::viz::SWTTreeViewer
   function getSelection() in line 189
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getApplicationWindow() defined in com::ibm::wala::viz::EJfaceApplicationRunner
      uses variable viewer defined in com::ibm::wala::viz::SWTTreeViewer::GraphViewer
   function run() in line 157
      protection public
      25 lines of code
      0 parameters
      4 conditional paths
      uses function getRootsInput() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getGraphInput() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function setApplicationWindow(ApplicationWindow) defined in com::ibm::wala::viz::EJfaceApplicationRunner
      uses function isBlockInput() defined in com::ibm::wala::viz::EJfaceApplicationRunner
   function setGraphInput(Graph) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graphInput defined in com::ibm::wala::viz::SWTTreeViewer
   function setNodeDecoratorInput(NodeDecorator) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeDecoratorInput defined in com::ibm::wala::viz::SWTTreeViewer
   function setRootsInput(Collection<?extends Object >) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rootsInput defined in com::ibm::wala::viz::SWTTreeViewer
   function toString() in line 143
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable graphInput defined in com::ibm::wala::viz::SWTTreeViewer
      uses variable rootsInput defined in com::ibm::wala::viz::SWTTreeViewer
      uses variable nodeDecoratorInput defined in com::ibm::wala::viz::SWTTreeViewer
      uses variable popUpActions defined in com::ibm::wala::viz::SWTTreeViewer
   function SWTTreeViewer() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable graphInput in line 44
   variable nodeDecoratorInput in line 64
   variable popUpActions in line 73
   variable rootsInput in line 54
module com::ibm::wala::viz::SWTTreeViewer::GraphViewer
   inherits from org::eclipse::jface::window::ApplicationWindow
   function createContents(Composite) in line 227
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable viewer defined in com::ibm::wala::viz::SWTTreeViewer::GraphViewer
      uses function getGraphInput() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getPopUpActions() defined in com::ibm::wala::viz::SWTTreeViewer
   function GraphViewer(Graph) in line 214
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable graph defined in com::ibm::wala::viz::SWTTreeViewer::GraphViewer
   variable graph in line 204
   variable viewer in line 209
module com::ibm::wala::viz::SWTTreeViewer::GraphViewer::GraphContentProvider
   inherits from org::eclipse::jface::viewers::ITreeContentProvider
   function dispose() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChildren(Object) in line 278
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable graph defined in com::ibm::wala::viz::SWTTreeViewer::GraphViewer
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function getElements(Object) in line 314
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getRootsInput() defined in com::ibm::wala::viz::SWTTreeViewer
   function getParent(Object) in line 293
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function hasChildren(Object) in line 305
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::viz::SWTTreeViewer::GraphViewer
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
   function inputChanged(Viewer,Object,Object) in line 268
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
module com::ibm::wala::viz::SWTTreeViewer::GraphViewer::GraphLabelProvider
   inherits from org::eclipse::jface::viewers::LabelProvider
   function getText(Object) in line 331
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getLabel(Object) defined in com::ibm::wala::util::graph::NodeDecorator
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/ViewAnnotatedIRAction.java
module com::ibm::wala::viz::ViewAnnotatedIRAction
   inherits from com::ibm::wala::viz::ViewIRAction
   function run() in line 41
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getIRForSelection() defined in com::ibm::wala::viz::ViewIRAction
      uses function getMethod() defined in com::ibm::wala::ssa::IR
      uses variable dec defined in com::ibm::wala::viz::ViewAnnotatedIRAction
      uses function setCurrentNode(CGNode) defined in com::ibm::wala::viz::BasicBlockDecorator
      uses function getNodeForSelection() defined in com::ibm::wala::viz::ViewIRAction
      uses function getCg() defined in com::ibm::wala::viz::ViewIRAction
      uses function getPsFile() defined in com::ibm::wala::viz::ViewIRAction
      uses function getDotFile() defined in com::ibm::wala::viz::ViewIRAction
      uses function getDotExe() defined in com::ibm::wala::viz::ViewIRAction
      uses function getGvExe() defined in com::ibm::wala::viz::ViewIRAction
   function ViewAnnotatedIRAction(SWTTreeViewer,CallGraph,String,String,String,String,BasicBlockDecorator) in line 33
      protection public
      4 lines of code
      7 parameters
      1 conditional paths
      uses variable viewer defined in com::ibm::wala::viz::ViewIRAction
      uses variable cg defined in com::ibm::wala::viz::ViewIRAction
      uses variable psFile defined in com::ibm::wala::viz::ViewIRAction
      uses variable dotFile defined in com::ibm::wala::viz::ViewIRAction
      uses variable dotExe defined in com::ibm::wala::viz::ViewIRAction
      uses variable gvExe defined in com::ibm::wala::viz::ViewIRAction
      uses variable dec defined in com::ibm::wala::viz::ViewAnnotatedIRAction
   variable dec in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.core/src/com/ibm/wala/viz/ViewIRAction.java
module com::ibm::wala::viz::ViewIRAction
   inherits from org::eclipse::jface::action::Action
   function getCg() in line 121
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cg defined in com::ibm::wala::viz::ViewIRAction
   function getDotExe() in line 125
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dotExe defined in com::ibm::wala::viz::ViewIRAction
   function getDotFile() in line 129
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dotFile defined in com::ibm::wala::viz::ViewIRAction
   function getGvExe() in line 133
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable gvExe defined in com::ibm::wala::viz::ViewIRAction
   function getIRForSelection() in line 94
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable viewer defined in com::ibm::wala::viz::ViewIRAction
      uses function getSelection() defined in com::ibm::wala::viz::SWTTreeViewer
      uses variable cg defined in com::ibm::wala::viz::ViewIRAction
      uses function getInterpreter(CGNode) defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getIR(CGNode,WarningSet) defined in com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function getNodeForSelection() in line 107
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable viewer defined in com::ibm::wala::viz::ViewIRAction
      uses function getSelection() defined in com::ibm::wala::viz::SWTTreeViewer
   function getPsFile() in line 137
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable psFile defined in com::ibm::wala::viz::ViewIRAction
   function getViewer() in line 117
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable viewer defined in com::ibm::wala::viz::ViewIRAction
   function run() in line 82
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getIRForSelection() defined in com::ibm::wala::viz::ViewIRAction
      uses function getMethod() defined in com::ibm::wala::ssa::IR
      uses variable cg defined in com::ibm::wala::viz::ViewIRAction
      uses function getClassHierarchy() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses variable psFile defined in com::ibm::wala::viz::ViewIRAction
      uses variable dotFile defined in com::ibm::wala::viz::ViewIRAction
      uses variable dotExe defined in com::ibm::wala::viz::ViewIRAction
      uses variable gvExe defined in com::ibm::wala::viz::ViewIRAction
   function ViewIRAction(SWTTreeViewer,CallGraph,String,String,String,String) in line 67
      protection public
      9 lines of code
      6 parameters
      1 conditional paths
      uses variable viewer defined in com::ibm::wala::viz::ViewIRAction
      uses variable cg defined in com::ibm::wala::viz::ViewIRAction
      uses variable psFile defined in com::ibm::wala::viz::ViewIRAction
      uses variable dotFile defined in com::ibm::wala::viz::ViewIRAction
      uses variable dotExe defined in com::ibm::wala::viz::ViewIRAction
      uses variable gvExe defined in com::ibm::wala::viz::ViewIRAction
   variable cg in line 39
   variable dotExe in line 54
   variable dotFile in line 49
   variable gvExe in line 59
   variable psFile in line 44
   variable viewer in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse.tests/src/com/ibm/wala/eclipse/tests/EclipseTestUtil.java
module com::ibm::wala::eclipse::tests::EclipseTestUtil
   function createOpenProject(String) in line 47
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getWorkspace() defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
   function getTestDataFile(String) in line 87
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable PLUGIN_ID defined in com::ibm::wala::eclipse::tests::Activator
      uses function reportException(Exception) defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
   function getWorkspace() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWorkspacePath() in line 122
      3 lines of code
      0 parameters
      1 conditional paths
   function getZipFile(String) in line 103
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getTestDataFile(String) defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
      uses function reportException(Exception) defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
   function importZipfile(ZipFile,ZipFileStructureProvider) in line 58
      27 lines of code
      2 parameters
      3 conditional paths
      uses function getWorkspacePath() defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
   function importZippedProject(String) in line 37
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getZipFile(String) defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
      uses function createOpenProject(String) defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
      uses function importZipfile(ZipFile,ZipFileStructureProvider) defined in com::ibm::wala::eclipse::tests::EclipseTestUtil
   function reportException(Exception) in line 126
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse.tests/src/com/ibm/wala/eclipse/tests/WalaCGModelTest.java
module com::ibm::wala::eclipse::tests::WalaCGModelTest
   inherits from junit::framework::TestCase
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testSmokeTest() in line 38
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function buildGraph() defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function getRoots() defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function getGraph() defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function getNumberOfNodes() defined in com::ibm::wala::util::graph::NodeManager
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/Activator.java
module com::ibm::wala::eclipse::Activator
   inherits from org::eclipse::ui::plugin::AbstractUIPlugin
   function getDefault() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::eclipse::Activator
   function start(BundleContext) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function stop(BundleContext) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::eclipse::Activator
      uses function stop(BundleContext) defined in com::ibm::wala::eclipse::Activator
   function Activator() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::eclipse::Activator
   variable plugin in line 25
   variable PLUGIN_ID in line 22
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse.tests/src/com/ibm/wala/eclipse/tests/Activator.java
module com::ibm::wala::eclipse::tests::Activator
   inherits from org::eclipse::ui::plugin::AbstractUIPlugin
   function getDefault() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::eclipse::tests::Activator
   function start(BundleContext) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function stop(BundleContext) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::eclipse::tests::Activator
      uses function stop(BundleContext) defined in com::ibm::wala::eclipse::tests::Activator
   function Activator() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in com::ibm::wala::eclipse::tests::Activator
   variable plugin in line 25
   variable PLUGIN_ID in line 22
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/cg/model/WalaCGModel.java
module com::ibm::wala::eclipse::cg::model::WalaCGModel
   abstract class
   function buildGraph() in line 48
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createAnalysisScope() defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses variable callGraph defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function createCallGraph(EMFScopeWrapper) defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses variable roots defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function inferRoots(CallGraph) defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
   function createAnalysisScope() in line 65
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable appJar defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function setExclusionFileName(String) defined in com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
      uses function createCallGraph(EMFScopeWrapper) defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function inferRoots(CallGraph) defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
   function createCallGraph(EMFScopeWrapper) in line 75
      1 lines of code
      1 parameters
      1 conditional paths
   function getGraph() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
   function getRoots() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable roots defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
   function inferRoots(CallGraph) in line 77
      1 lines of code
      1 parameters
      1 conditional paths
   function makeUI(Graph,Collection) in line 79
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function setGraphInput(Graph) defined in com::ibm::wala::viz::SWTTreeViewer
      uses function setRootsInput(Collection<?extends Object >) defined in com::ibm::wala::viz::SWTTreeViewer
      uses variable roots defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function run() defined in com::ibm::wala::viz::SWTTreeViewer
      uses function getApplicationWindow() defined in com::ibm::wala::viz::EJfaceApplicationRunner
   function WalaCGModel(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable appJar defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
   variable appJar in line 31
   variable callGraph in line 33
   variable roots in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/cg/model/WalaCGModelWithMain.java
module com::ibm::wala::eclipse::cg::model::WalaCGModelWithMain
   inherits from com::ibm::wala::eclipse::cg::model::WalaCGModel
   function createCallGraph(EMFScopeWrapper) in line 42
      17 lines of code
      1 parameters
      1 conditional paths
   function inferRoots(CallGraph) in line 64
      3 lines of code
      1 parameters
      1 conditional paths
   function WalaCGModelWithMain(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable appJar defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/cg/views/CGContentProvider.java
module com::ibm::wala::eclipse::cg::views::CGContentProvider
   inherits from org::eclipse::jface::viewers::ITreeContentProvider
   function dispose() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChildren(Object) in line 71
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable graph defined in com::ibm::wala::eclipse::cg::views::CGContentProvider
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
   function getElements(Object) in line 106
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable roots defined in com::ibm::wala::eclipse::cg::views::CGContentProvider
   function getParent(Object) in line 86
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function hasChildren(Object) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable graph defined in com::ibm::wala::eclipse::cg::views::CGContentProvider
      uses function getSuccNodeCount(T) defined in com::ibm::wala::util::graph::EdgeManager
   function inputChanged(Viewer,Object,Object) in line 62
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function CGContentProvider(Graph,Collection,Map< Integer, IJavaElement >) in line 41
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable roots defined in com::ibm::wala::eclipse::cg::views::CGContentProvider
      uses variable capaNodeIdToJavaElement defined in com::ibm::wala::eclipse::cg::views::CGContentProvider
   variable capaNodeIdToJavaElement in line 39
   variable graph in line 35
   variable roots in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/cg/views/CGJavaLabelProvider.java
module com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
   inherits from org::eclipse::jface::viewers::LabelProvider
   function getCapaImage() in line 88
      7 lines of code
      0 parameters
      1 conditional paths
   function getImage(Object) in line 70
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable capaNodeIdToJavaElement defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses function getCapaImage() defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
      uses variable javaEltProvider defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
      uses function getWarningImage() defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
   function getText(Object) in line 36
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable capaNodeIdToJavaElement defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
      uses variable javaEltProvider defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
      uses function getWalaText(CGNode) defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
   function getWalaText(CGNode) in line 48
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getName() defined in com::ibm::wala::classLoader::IClass
      uses function toString() defined in com::ibm::wala::types::TypeName
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
      uses function getName() defined in com::ibm::wala::types::TypeReference
   function getWarningImage() in line 96
      8 lines of code
      0 parameters
      1 conditional paths
   function CGJavaLabelProvider(Map< Integer, IJavaElement >) in line 22
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable capaNodeIdToJavaElement defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
      uses variable javaEltProvider defined in com::ibm::wala::eclipse::cg::views::CGJavaLabelProvider
   variable capaNodeIdToJavaElement in line 18
   variable javaEltProvider in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/cg/views/CGView.java
module com::ibm::wala::eclipse::cg::views::CGView
   inherits from org::eclipse::ui::part::ViewPart
   function createPartControl(Composite) in line 73
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getSelectedJar() defined in com::ibm::wala::eclipse::cg::views::CGView
      uses function createViewer(Composite,IFile) defined in com::ibm::wala::eclipse::cg::views::CGView
   function createViewer(Composite,IFile) in line 92
      54 lines of code
      2 parameters
      6 conditional paths
      uses function buildGraph() defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function getRoots() defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses function getGraph() defined in com::ibm::wala::eclipse::cg::model::WalaCGModel
      uses variable viewer defined in com::ibm::wala::eclipse::cg::views::CGView
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
   function getSelectedJar() in line 80
      11 lines of code
      0 parameters
      3 conditional paths
   function setFocus() in line 150
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable viewer defined in com::ibm::wala::eclipse::cg::views::CGView
   function CGView() in line 66
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable ID in line 59
      protection public
   variable viewer in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/cg/views/SelectCapaCGAction.java
module com::ibm::wala::eclipse::cg::views::SelectCapaCGAction
   inherits from org::eclipse::ui::IObjectActionDelegate
   function run(IAction) in line 43
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable currentSelection defined in com::ibm::wala::eclipse::cg::views::SelectCapaCGAction
      uses variable ID defined in com::ibm::wala::eclipse::cg::views::CGView
   function selectionChanged(IAction,ISelection) in line 66
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable currentSelection defined in com::ibm::wala::eclipse::cg::views::SelectCapaCGAction
   function setActivePart(IAction,IWorkbenchPart) in line 37
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function SelectCapaCGAction() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable currentSelection in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/util/CapaToJavaEltConverter.java
module com::ibm::wala::eclipse::util::CapaToJavaEltConverter
   function convert(Graph,IJavaProject) in line 36
      protection public
      28 lines of code
      2 parameters
      4 conditional paths
      uses function getJdtClasses(IJavaProject) defined in com::ibm::wala::eclipse::util::CapaToJavaEltConverter
      uses function getLongClassName(CGNode) defined in com::ibm::wala::eclipse::util::CapaToJavaEltConverter
      uses function getMethodName(CGNode) defined in com::ibm::wala::eclipse::util::CapaToJavaEltConverter
      uses function getParamTypes(CGNode) defined in com::ibm::wala::eclipse::util::CapaToJavaEltConverter
      uses function getGraphNodeId() defined in com::ibm::wala::util::graph::INodeWithNumber
   function getJdtClasses(IJavaProject) in line 65
      11 lines of code
      1 parameters
      3 conditional paths
   function getLongClassName(CGNode) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getName() defined in com::ibm::wala::classLoader::IClass
      uses function toString() defined in com::ibm::wala::types::TypeName
   function getLongClassName(IType) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMethodName(CGNode) in line 94
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getName() defined in com::ibm::wala::classLoader::IClass
      uses function toString() defined in com::ibm::wala::types::TypeName
   function getMethodName(IMethod) in line 104
      3 lines of code
      1 parameters
      1 conditional paths
   function getParams(CGNode) in line 158
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getNumberOfParameters() defined in com::ibm::wala::classLoader::IMethod
      uses function isStatic() defined in com::ibm::wala::classLoader::IMember
      uses function isClinit() defined in com::ibm::wala::classLoader::IMethod
      uses function getParameterType(int) defined in com::ibm::wala::classLoader::IMethod
   function getParamTypes(CGNode) in line 108
      49 lines of code
      1 parameters
      13 conditional paths
      uses function getParams(CGNode) defined in com::ibm::wala::eclipse::util::CapaToJavaEltConverter
      uses function isArrayType() defined in com::ibm::wala::types::TypeReference
      uses function getArrayElementType() defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
      uses function isClassType() defined in com::ibm::wala::types::TypeReference
      uses function getPackage() defined in com::ibm::wala::types::TypeName
      uses function length() defined in com::ibm::wala::util::Atom
   function getSimpleParamTypes(IMethod) in line 175
      8 lines of code
      1 parameters
      2 conditional paths
   function hasSameMethodName(CGNode,IMethod) in line 88
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getMethodName(CGNode) defined in com::ibm::wala::eclipse::util::CapaToJavaEltConverter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.eclipse/src/com/ibm/wala/eclipse/util/JdtUtil.java
module com::ibm::wala::eclipse::util::JdtUtil
   function createJavaElementFromJdtHandle(String) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClasses(ICompilationUnit) in line 135
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function getClassName(IType) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getFilePath(IJavaElement) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getFullyQualifiedClassName(IType) in line 62
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getPackageName(ICompilationUnit) defined in com::ibm::wala::eclipse::util::JdtUtil
   function getHelloWorldJar() in line 183
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getHelloWorldProject() defined in com::ibm::wala::eclipse::util::JdtUtil
   function getHelloWorldProject() in line 176
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getHumanReadableType(String) in line 162
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getJavaCompilationUnits(IJavaProject) in line 109
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
   function getJavaProject(IFile) in line 168
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getJdtHandleString(IJavaElement) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMethodSignature(IMethod) in line 75
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function getPackageName(ICompilationUnit) in line 46
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
   function getProject(IJavaElement) in line 145
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getProjectName(IJavaProject) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/CommonFactory.java
module com::ibm::wala::ecore::common::CommonFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createEContainer() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createENotContainer() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEObjectWithContainerId() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEPair() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createERelation() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEStringHolder() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCommonPackage() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/CommonPackage.java
module com::ibm::wala::ecore::common::CommonPackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getCommonFactory() in line 533
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getECollection() in line 343
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getECollection_Contents() in line 354
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEContainer() in line 417
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEContainer_Containees() in line 428
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEFile() in line 513
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEIterator() in line 524
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaCollection() in line 502
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getENotContainer() in line 438
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getENotContainer_Elements() in line 449
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEObjectWithContainerId() in line 480
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEObjectWithContainerId_Id() in line 491
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPair() in line 364
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPair_X() in line 375
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPair_Y() in line 386
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getERelation() in line 396
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getERelation_Name() in line 407
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEStringHolder() in line 459
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEStringHolder_Value() in line 470
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable ECOLLECTION in line 71
      protection public
   variable ECOLLECTION__CONTENTS in line 80
      protection public
   variable ECOLLECTION_FEATURE_COUNT in line 89
      protection public
   variable ECONTAINER in line 136
      protection public
   variable ECONTAINER__CONTAINEES in line 154
      protection public
   variable ECONTAINER__CONTENTS in line 145
      protection public
   variable ECONTAINER_FEATURE_COUNT in line 163
      protection public
   variable EFILE in line 322
      protection public
   variable eINSTANCE in line 61
      protection public
   variable EITERATOR in line 332
      protection public
   variable EJAVA_COLLECTION in line 312
      protection public
   variable eNAME in line 37
      protection public
   variable ENOT_CONTAINER in line 219
      protection public
   variable ENOT_CONTAINER__CONTENTS in line 228
      protection public
   variable ENOT_CONTAINER__ELEMENTS in line 237
      protection public
   variable ENOT_CONTAINER_FEATURE_COUNT in line 246
      protection public
   variable eNS_PREFIX in line 53
      protection public
   variable eNS_URI in line 45
      protection public
   variable EOBJECT_WITH_CONTAINER_ID in line 284
      protection public
   variable EOBJECT_WITH_CONTAINER_ID__ID in line 293
      protection public
   variable EOBJECT_WITH_CONTAINER_ID_FEATURE_COUNT in line 302
      protection public
   variable EPAIR in line 99
      protection public
   variable EPAIR__X in line 108
      protection public
   variable EPAIR__Y in line 117
      protection public
   variable EPAIR_FEATURE_COUNT in line 126
      protection public
   variable ERELATION in line 173
      protection public
   variable ERELATION__CONTAINEES in line 191
      protection public
   variable ERELATION__CONTENTS in line 182
      protection public
   variable ERELATION__NAME in line 200
      protection public
   variable ERELATION_FEATURE_COUNT in line 209
      protection public
   variable ESTRING_HOLDER in line 256
      protection public
   variable ESTRING_HOLDER__VALUE in line 265
      protection public
   variable ESTRING_HOLDER_FEATURE_COUNT in line 274
      protection public
module com::ibm::wala::ecore::common::CommonPackage::Literals
   variable ECOLLECTION in line 556
      protection public
   variable ECOLLECTION__CONTENTS in line 564
      protection public
   variable ECONTAINER in line 618
      protection public
   variable ECONTAINER__CONTAINEES in line 626
      protection public
   variable EFILE in line 700
      protection public
   variable EITERATOR in line 710
      protection public
   variable EJAVA_COLLECTION in line 690
      protection public
   variable ENOT_CONTAINER in line 636
      protection public
   variable ENOT_CONTAINER__ELEMENTS in line 644
      protection public
   variable EOBJECT_WITH_CONTAINER_ID in line 672
      protection public
   variable EOBJECT_WITH_CONTAINER_ID__ID in line 680
      protection public
   variable EPAIR in line 574
      protection public
   variable EPAIR__X in line 582
      protection public
   variable EPAIR__Y in line 590
      protection public
   variable ERELATION in line 600
      protection public
   variable ERELATION__NAME in line 608
      protection public
   variable ESTRING_HOLDER in line 654
      protection public
   variable ESTRING_HOLDER__VALUE in line 662
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/ECollection.java
module com::ibm::wala::ecore::common::ECollection
   inherits from org::eclipse::emf::ecore::EObject
   function getContents() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/EContainer.java
module com::ibm::wala::ecore::common::EContainer
   inherits from com::ibm::wala::ecore::common::ECollection
   function getContainees() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/ENotContainer.java
module com::ibm::wala::ecore::common::ENotContainer
   inherits from com::ibm::wala::ecore::common::ECollection
   function getElements() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/EObjectWithContainerId.java
module com::ibm::wala::ecore::common::EObjectWithContainerId
   inherits from org::eclipse::emf::ecore::EObject
   function getId() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setId(int) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/EPair.java
module com::ibm::wala::ecore::common::EPair
   inherits from org::eclipse::emf::ecore::EObject
   function getX() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getY() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setX(EObject) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setY(EObject) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/ERelation.java
module com::ibm::wala::ecore::common::ERelation
   inherits from com::ibm::wala::ecore::common::EContainer
   function getName() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setName(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/EStringHolder.java
module com::ibm::wala::ecore::common::EStringHolder
   inherits from org::eclipse::emf::ecore::EObject
   function getValue() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setValue(String) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/CommonFactoryImpl.java
module com::ibm::wala::ecore::common::impl::CommonFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::common::CommonFactory
   function convertToString(EDataType,Object) in line 91
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function create(EClass) in line 61
      protection public
      12 lines of code
      1 parameters
      7 conditional paths
      uses variable EPAIR defined in com::ibm::wala::ecore::common::CommonPackage
      uses function createEPair() defined in com::ibm::wala::ecore::common::impl::CommonFactoryImpl
      uses variable ERELATION defined in com::ibm::wala::ecore::common::CommonPackage
      uses function createERelation() defined in com::ibm::wala::ecore::common::impl::CommonFactoryImpl
      uses variable ECONTAINER defined in com::ibm::wala::ecore::common::CommonPackage
      uses function createEContainer() defined in com::ibm::wala::ecore::common::impl::CommonFactoryImpl
      uses variable ENOT_CONTAINER defined in com::ibm::wala::ecore::common::CommonPackage
      uses function createENotContainer() defined in com::ibm::wala::ecore::common::impl::CommonFactoryImpl
      uses variable ESTRING_HOLDER defined in com::ibm::wala::ecore::common::CommonPackage
      uses function createEStringHolder() defined in com::ibm::wala::ecore::common::impl::CommonFactoryImpl
      uses variable EOBJECT_WITH_CONTAINER_ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses function createEObjectWithContainerId() defined in com::ibm::wala::ecore::common::impl::CommonFactoryImpl
   function createEContainer() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createENotContainer() in line 133
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEObjectWithContainerId() in line 153
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEPair() in line 103
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createERelation() in line 113
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEStringHolder() in line 143
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createFromString(EDataType,String) in line 79
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function getCommonPackage() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
   function init() in line 33
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function CommonFactoryImpl() defined in com::ibm::wala::ecore::common::impl::CommonFactoryImpl
   function CommonFactoryImpl() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/CommonPackageImpl.java
module com::ibm::wala::ecore::common::impl::CommonPackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::common::CommonPackage
   function createPackageContents() in line 420
      protection public
      32 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eCollectionEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable ECOLLECTION defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ECOLLECTION__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ePairEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable EPAIR defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable EPAIR__X defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable EPAIR__Y defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eRelationEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable ERELATION defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ERELATION__NAME defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable ECONTAINER defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ECONTAINER__CONTAINEES defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNotContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable ENOT_CONTAINER defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ENOT_CONTAINER__ELEMENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eStringHolderEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable ESTRING_HOLDER defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ESTRING_HOLDER__VALUE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eObjectWithContainerIdEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable EOBJECT_WITH_CONTAINER_ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable EOBJECT_WITH_CONTAINER_ID__ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eJavaCollectionEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable EJAVA_COLLECTION defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eFileEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable EFILE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eIteratorEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable EITERATOR defined in com::ibm::wala::ecore::common::CommonPackage
   function getCommonFactory() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getECollection() in line 240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCollectionEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getECollection_Contents() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCollectionEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEContainer() in line 303
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEContainer_Containees() in line 312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEFile() in line 384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eFileEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEIterator() in line 393
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eIteratorEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEJavaCollection() in line 375
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaCollectionEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getENotContainer() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNotContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getENotContainer_Elements() in line 330
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNotContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEObjectWithContainerId() in line 357
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eObjectWithContainerIdEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEObjectWithContainerId_Id() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eObjectWithContainerIdEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEPair() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePairEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEPair_X() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePairEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEPair_Y() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePairEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getERelation() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eRelationEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getERelation_Name() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eRelationEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEStringHolder() in line 339
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eStringHolderEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function getEStringHolder_Value() in line 348
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eStringHolderEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function init() in line 189
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses function CommonPackageImpl() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 467
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eRelationEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getEContainer() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getECollection() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eCollectionEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getECollection_Contents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable ePairEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getEPair_X() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getEPair_Y() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getERelation_Name() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getEContainer_Containees() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eNotContainerEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getENotContainer_Elements() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eStringHolderEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getEStringHolder_Value() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eObjectWithContainerIdEClass defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function getEObjectWithContainerId_Id() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eJavaCollectionEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eFileEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses variable eIteratorEDataType defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
   function CommonPackageImpl() in line 156
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonFactory
   variable eCollectionEClass in line 76
   variable eContainerEClass in line 97
   variable eFileEDataType in line 132
   variable eIteratorEDataType in line 139
   variable eJavaCollectionEDataType in line 125
   variable eNotContainerEClass in line 104
   variable eObjectWithContainerIdEClass in line 118
   variable ePairEClass in line 83
   variable eRelationEClass in line 90
   variable eStringHolderEClass in line 111
   variable isCreated in line 411
   variable isInited in line 165
   variable isInitialized in line 458
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/EContainerImpl.java
module com::ibm::wala::ecore::common::impl::EContainerImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::common::EContainer
   function eGet(int,boolean,boolean) in line 104
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable ECONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
      uses variable ECONTAINER__CONTAINEES defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContainees() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
   function eInverseRemove(InternalEObject,int,NotificationChain) in line 91
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable ECONTAINER__CONTAINEES defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContainees() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
   function eIsSet(int) in line 155
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable ECONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
      uses variable ECONTAINER__CONTAINEES defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable containees defined in com::ibm::wala::ecore::common::impl::EContainerImpl
   function eSet(int,Object) in line 119
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable ECONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
      uses variable ECONTAINER__CONTAINEES defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContainees() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
   function eStaticClass() in line 62
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ECONTAINER defined in com::ibm::wala::ecore::common::CommonPackage::Literals
   function eUnset(int) in line 138
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable ECONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
      uses variable ECONTAINER__CONTAINEES defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContainees() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
   function getContainees() in line 79
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable containees defined in com::ibm::wala::ecore::common::impl::EContainerImpl
      uses variable ECONTAINER__CONTAINEES defined in com::ibm::wala::ecore::common::CommonPackage
   function getContents() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getContainees() defined in com::ibm::wala::ecore::common::impl::EContainerImpl
   function EContainerImpl() in line 53
      3 lines of code
      0 parameters
      1 conditional paths
   variable containees in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/ENotContainerImpl.java
module com::ibm::wala::ecore::common::impl::ENotContainerImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::common::ENotContainer
   function eGet(int,boolean,boolean) in line 89
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable ENOT_CONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
      uses variable ENOT_CONTAINER__ELEMENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getElements() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
   function eIsSet(int) in line 140
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable ENOT_CONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
      uses variable ENOT_CONTAINER__ELEMENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable elements defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
   function eSet(int,Object) in line 104
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable ENOT_CONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
      uses variable ENOT_CONTAINER__ELEMENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getElements() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
   function eStaticClass() in line 62
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ENOT_CONTAINER defined in com::ibm::wala::ecore::common::CommonPackage::Literals
   function eUnset(int) in line 123
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable ENOT_CONTAINER__CONTENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getContents() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
      uses variable ENOT_CONTAINER__ELEMENTS defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getElements() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
   function getContents() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getElements() defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
   function getElements() in line 77
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable elements defined in com::ibm::wala::ecore::common::impl::ENotContainerImpl
      uses variable ENOT_CONTAINER__ELEMENTS defined in com::ibm::wala::ecore::common::CommonPackage
   function ENotContainerImpl() in line 53
      3 lines of code
      0 parameters
      1 conditional paths
   variable elements in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/EObjectWithContainerIdImpl.java
module com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::common::EObjectWithContainerId
   function eGet(int,boolean,boolean) in line 97
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EOBJECT_WITH_CONTAINER_ID__ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getId() defined in com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   function eIsSet(int) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EOBJECT_WITH_CONTAINER_ID__ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ID_EDEFAULT defined in com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   function eSet(int,Object) in line 110
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EOBJECT_WITH_CONTAINER_ID__ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setId(int) defined in com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   function eStaticClass() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOBJECT_WITH_CONTAINER_ID defined in com::ibm::wala::ecore::common::CommonPackage::Literals
   function eUnset(int) in line 124
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EOBJECT_WITH_CONTAINER_ID__ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setId(int) defined in com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
      uses variable ID_EDEFAULT defined in com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   function getId() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   function setId(int) in line 85
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable id defined in com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
      uses variable EOBJECT_WITH_CONTAINER_ID__ID defined in com::ibm::wala::ecore::common::CommonPackage
   function toString() in line 151
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function EObjectWithContainerIdImpl() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable id in line 51
   variable ID_EDEFAULT in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/EPairImpl.java
module com::ibm::wala::ecore::common::impl::EPairImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::common::EPair
   function basicGetX() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable x defined in com::ibm::wala::ecore::common::impl::EPairImpl
   function basicGetY() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable y defined in com::ibm::wala::ecore::common::impl::EPairImpl
   function eGet(int,boolean,boolean) in line 155
      protection public
      11 lines of code
      3 parameters
      5 conditional paths
      uses variable EPAIR__X defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getX() defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses function basicGetX() defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__Y defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getY() defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses function basicGetY() defined in com::ibm::wala::ecore::common::impl::EPairImpl
   function eIsSet(int) in line 206
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable EPAIR__X defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable x defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__Y defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable y defined in com::ibm::wala::ecore::common::impl::EPairImpl
   function eSet(int,Object) in line 172
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable EPAIR__X defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__Y defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::impl::EPairImpl
   function eStaticClass() in line 70
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EPAIR defined in com::ibm::wala::ecore::common::CommonPackage::Literals
   function eUnset(int) in line 189
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable EPAIR__X defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setX(EObject) defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__Y defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setY(EObject) defined in com::ibm::wala::ecore::common::impl::EPairImpl
   function getX() in line 79
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable x defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__X defined in com::ibm::wala::ecore::common::CommonPackage
   function getY() in line 117
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable y defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__Y defined in com::ibm::wala::ecore::common::CommonPackage
   function setX(EObject) in line 105
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable x defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__X defined in com::ibm::wala::ecore::common::CommonPackage
   function setY(EObject) in line 143
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable y defined in com::ibm::wala::ecore::common::impl::EPairImpl
      uses variable EPAIR__Y defined in com::ibm::wala::ecore::common::CommonPackage
   function EPairImpl() in line 61
      3 lines of code
      0 parameters
      1 conditional paths
   variable x in line 44
   variable y in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/ERelationImpl.java
module com::ibm::wala::ecore::common::impl::ERelationImpl
   inherits from com::ibm::wala::ecore::common::impl::EContainerImpl
   inherits from com::ibm::wala::ecore::common::ERelation
   function eGet(int,boolean,boolean) in line 96
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable ERELATION__NAME defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getName() defined in com::ibm::wala::ecore::common::impl::ERelationImpl
   function eIsSet(int) in line 137
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable ERELATION__NAME defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable NAME_EDEFAULT defined in com::ibm::wala::ecore::common::impl::ERelationImpl
      uses variable name defined in com::ibm::wala::ecore::common::impl::ERelationImpl
   function eSet(int,Object) in line 109
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable ERELATION__NAME defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setName(String) defined in com::ibm::wala::ecore::common::impl::ERelationImpl
   function eStaticClass() in line 66
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ERELATION defined in com::ibm::wala::ecore::common::CommonPackage::Literals
   function eUnset(int) in line 123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ERELATION__NAME defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setName(String) defined in com::ibm::wala::ecore::common::impl::ERelationImpl
      uses variable NAME_EDEFAULT defined in com::ibm::wala::ecore::common::impl::ERelationImpl
   function getName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::ecore::common::impl::ERelationImpl
   function setName(String) in line 84
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in com::ibm::wala::ecore::common::impl::ERelationImpl
      uses variable ERELATION__NAME defined in com::ibm::wala::ecore::common::CommonPackage
   function toString() in line 150
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable name defined in com::ibm::wala::ecore::common::impl::ERelationImpl
   function ERelationImpl() in line 57
      3 lines of code
      0 parameters
      1 conditional paths
   variable name in line 50
   variable NAME_EDEFAULT in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/impl/EStringHolderImpl.java
module com::ibm::wala::ecore::common::impl::EStringHolderImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::common::EStringHolder
   function eGet(int,boolean,boolean) in line 97
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable ESTRING_HOLDER__VALUE defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getValue() defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
   function eIsSet(int) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable ESTRING_HOLDER__VALUE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable VALUE_EDEFAULT defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
      uses variable value defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
   function eSet(int,Object) in line 110
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable ESTRING_HOLDER__VALUE defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setValue(String) defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
   function eStaticClass() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ESTRING_HOLDER defined in com::ibm::wala::ecore::common::CommonPackage::Literals
   function eUnset(int) in line 124
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ESTRING_HOLDER__VALUE defined in com::ibm::wala::ecore::common::CommonPackage
      uses function setValue(String) defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
      uses variable VALUE_EDEFAULT defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
   function getValue() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
   function setValue(String) in line 85
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
      uses variable ESTRING_HOLDER__VALUE defined in com::ibm::wala::ecore::common::CommonPackage
   function toString() in line 151
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable value defined in com::ibm::wala::ecore::common::impl::EStringHolderImpl
   function EStringHolderImpl() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable value in line 51
   variable VALUE_EDEFAULT in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/util/CommonAdapterFactory.java
module com::ibm::wala::ecore::common::util::CommonAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::common::util::CommonAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::common::util::CommonSwitch
   function createECollectionAdapter() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEContainerAdapter() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createENotContainerAdapter() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectAdapter() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectWithContainerIdAdapter() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEPairAdapter() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createERelationAdapter() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEStringHolderAdapter() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 55
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::common::util::CommonAdapterFactory
   function CommonAdapterFactory() in line 41
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::common::util::CommonAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
   variable modelPackage in line 33
   variable modelSwitch in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/common/util/CommonSwitch.java
module com::ibm::wala::ecore::common::util::CommonSwitch
   function caseECollection(ECollection) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEContainer(EContainer) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseENotContainer(ENotContainer) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEObjectWithContainerId(EObjectWithContainerId) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEPair(EPair) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseERelation(ERelation) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEStringHolder(EStringHolder) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 68
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::common::util::CommonSwitch
   function doSwitch(int,EObject) in line 88
      51 lines of code
      2 parameters
      19 conditional paths
      uses variable ECOLLECTION defined in com::ibm::wala::ecore::common::CommonPackage
      uses function caseECollection(ECollection) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses variable EPAIR defined in com::ibm::wala::ecore::common::CommonPackage
      uses function caseEPair(EPair) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses variable ERELATION defined in com::ibm::wala::ecore::common::CommonPackage
      uses function caseERelation(ERelation) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses function caseEContainer(EContainer) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses variable ECONTAINER defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable ENOT_CONTAINER defined in com::ibm::wala::ecore::common::CommonPackage
      uses function caseENotContainer(ENotContainer) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses variable ESTRING_HOLDER defined in com::ibm::wala::ecore::common::CommonPackage
      uses function caseEStringHolder(EStringHolder) defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses variable EOBJECT_WITH_CONTAINER_ID defined in com::ibm::wala::ecore::common::CommonPackage
      uses function caseEObjectWithContainerId(EObjectWithContainerId) defined in com::ibm::wala::ecore::common::util::CommonSwitch
   function CommonSwitch() in line 44
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::common::util::CommonSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
   variable modelPackage in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/EGraph.java
module com::ibm::wala::ecore::graph::EGraph
   inherits from org::eclipse::emf::ecore::EObject
   function getEdges() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNodes() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setEdges(ERelation) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNodes(ECollection) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/ETree.java
module com::ibm::wala::ecore::graph::ETree
   inherits from com::ibm::wala::ecore::graph::EGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/GraphFactory.java
module com::ibm::wala::ecore::graph::GraphFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createEGraph() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createETree() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getGraphPackage() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/GraphPackage.java
module com::ibm::wala::ecore::graph::GraphPackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getEGraph() in line 144
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEGraph_Edges() in line 166
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEGraph_Nodes() in line 155
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getETree() in line 176
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getGraphFactory() in line 185
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable EGRAPH in line 69
      protection public
   variable EGRAPH__EDGES in line 87
      protection public
   variable EGRAPH__NODES in line 78
      protection public
   variable EGRAPH_FEATURE_COUNT in line 96
      protection public
   variable eINSTANCE in line 59
      protection public
   variable eNAME in line 35
      protection public
   variable eNS_PREFIX in line 51
      protection public
   variable eNS_URI in line 43
      protection public
   variable ETREE in line 106
      protection public
   variable ETREE__EDGES in line 124
      protection public
   variable ETREE__NODES in line 115
      protection public
   variable ETREE_FEATURE_COUNT in line 133
      protection public
module com::ibm::wala::ecore::graph::GraphPackage::Literals
   variable EGRAPH in line 208
      protection public
   variable EGRAPH__EDGES in line 224
      protection public
   variable EGRAPH__NODES in line 216
      protection public
   variable ETREE in line 234
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/impl/EGraphImpl.java
module com::ibm::wala::ecore::graph::impl::EGraphImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::graph::EGraph
   function basicGetNodes() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function basicSetEdges(ERelation,NotificationChain) in line 129
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable edges defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
   function eGet(int,boolean,boolean) in line 176
      protection public
      10 lines of code
      3 parameters
      4 conditional paths
      uses variable EGRAPH__NODES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function getNodes() defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses function basicGetNodes() defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function getEdges() defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function eInverseRemove(InternalEObject,int,NotificationChain) in line 163
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function basicSetEdges(ERelation,NotificationChain) defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function eIsSet(int) in line 226
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable EGRAPH__NODES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable nodes defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable edges defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function eSet(int,Object) in line 192
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable EGRAPH__NODES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function setNodes(ECollection) defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function setEdges(ERelation) defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function eStaticClass() in line 73
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EGRAPH defined in com::ibm::wala::ecore::graph::GraphPackage::Literals
   function eUnset(int) in line 209
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable EGRAPH__NODES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function setNodes(ECollection) defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function setEdges(ERelation) defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function getEdges() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edges defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function getNodes() in line 82
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable nodes defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__NODES defined in com::ibm::wala::ecore::graph::GraphPackage
   function setEdges(ERelation) in line 144
      protection public
      13 lines of code
      1 parameters
      6 conditional paths
      uses variable edges defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function basicSetEdges(ERelation,NotificationChain) defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
   function setNodes(ECollection) in line 108
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable nodes defined in com::ibm::wala::ecore::graph::impl::EGraphImpl
      uses variable EGRAPH__NODES defined in com::ibm::wala::ecore::graph::GraphPackage
   function EGraphImpl() in line 64
      3 lines of code
      0 parameters
      1 conditional paths
   variable edges in line 57
   variable nodes in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/impl/ETreeImpl.java
module com::ibm::wala::ecore::graph::impl::ETreeImpl
   inherits from com::ibm::wala::ecore::graph::impl::EGraphImpl
   inherits from com::ibm::wala::ecore::graph::ETree
   function eStaticClass() in line 38
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ETREE defined in com::ibm::wala::ecore::graph::GraphPackage::Literals
   function ETreeImpl() in line 29
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/impl/GraphFactoryImpl.java
module com::ibm::wala::ecore::graph::impl::GraphFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::graph::GraphFactory
   function create(EClass) in line 60
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable EGRAPH defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function createEGraph() defined in com::ibm::wala::ecore::graph::impl::GraphFactoryImpl
      uses variable ETREE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function createETree() defined in com::ibm::wala::ecore::graph::impl::GraphFactoryImpl
   function createEGraph() in line 74
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createETree() in line 84
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getGraphPackage() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
   function init() in line 32
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function GraphFactoryImpl() defined in com::ibm::wala::ecore::graph::impl::GraphFactoryImpl
   function GraphFactoryImpl() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/impl/GraphPackageImpl.java
module com::ibm::wala::ecore::graph::impl::GraphPackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::graph::GraphPackage
   function createPackageContents() in line 226
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses variable eGraphEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses variable EGRAPH defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable EGRAPH__NODES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable EGRAPH__EDGES defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eTreeEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses variable ETREE defined in com::ibm::wala::ecore::graph::GraphPackage
   function getEGraph() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eGraphEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
   function getEGraph_Edges() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eGraphEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
   function getEGraph_Nodes() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eGraphEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
   function getETree() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eTreeEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
   function getGraphFactory() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 121
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function GraphPackageImpl() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 252
      protection public
      25 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eTreeEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function getEGraph() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses variable eGraphEClass defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function getEGraph_Nodes() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function getECollection() defined in com::ibm::wala::ecore::common::CommonPackage
      uses function getEGraph_Edges() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function getERelation() defined in com::ibm::wala::ecore::common::CommonPackage
   function GraphPackageImpl() in line 88
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphFactory
   variable eGraphEClass in line 64
   variable eTreeEClass in line 71
   variable isCreated in line 217
   variable isInited in line 97
   variable isInitialized in line 243
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/util/GraphAdapterFactory.java
module com::ibm::wala::ecore::graph::util::GraphAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::graph::util::GraphAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::graph::util::GraphSwitch
   function createEGraphAdapter() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectAdapter() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createETreeAdapter() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 55
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::graph::util::GraphAdapterFactory
   function GraphAdapterFactory() in line 41
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::graph::util::GraphAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
   variable modelPackage in line 33
   variable modelSwitch in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/graph/util/GraphSwitch.java
module com::ibm::wala::ecore::graph::util::GraphSwitch
   function caseEGraph(EGraph) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseETree(ETree) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 68
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::graph::util::GraphSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::graph::util::GraphSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::graph::util::GraphSwitch
   function doSwitch(int,EObject) in line 88
      18 lines of code
      2 parameters
      6 conditional paths
      uses variable EGRAPH defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function caseEGraph(EGraph) defined in com::ibm::wala::ecore::graph::util::GraphSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::graph::util::GraphSwitch
      uses variable ETREE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function caseETree(ETree) defined in com::ibm::wala::ecore::graph::util::GraphSwitch
   function GraphSwitch() in line 44
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::graph::util::GraphSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
   variable modelPackage in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/EEarFile.java
module com::ibm::wala::ecore::j2ee::scope::EEarFile
   inherits from com::ibm::wala::ecore::java::scope::EJarFile
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/EJ2EEAnalysisScope.java
module com::ibm::wala::ecore::j2ee::scope::EJ2EEAnalysisScope
   inherits from com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/EWarFile.java
module com::ibm::wala::ecore::j2ee::scope::EWarFile
   inherits from com::ibm::wala::ecore::java::scope::EJarFile
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/impl/EEarFileImpl.java
module com::ibm::wala::ecore::j2ee::scope::impl::EEarFileImpl
   inherits from com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   inherits from com::ibm::wala::ecore::j2ee::scope::EEarFile
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EEAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage::Literals
   function EEarFileImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/impl/EJ2EEAnalysisScopeImpl.java
module com::ibm::wala::ecore::j2ee::scope::impl::EJ2EEAnalysisScopeImpl
   inherits from com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   inherits from com::ibm::wala::ecore::j2ee::scope::EJ2EEAnalysisScope
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EJ2EE_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage::Literals
   function EJ2EEAnalysisScopeImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/impl/EWarFileImpl.java
module com::ibm::wala::ecore::j2ee::scope::impl::EWarFileImpl
   inherits from com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   inherits from com::ibm::wala::ecore::j2ee::scope::EWarFile
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EWAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage::Literals
   function EWarFileImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/impl/J2EEScopeFactoryImpl.java
module com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopeFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::j2ee::scope::J2EEScopeFactory
   function create(EClass) in line 60
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable EJ2EE_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createEJ2EEAnalysisScope() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopeFactoryImpl
      uses variable EEAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createEEarFile() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopeFactoryImpl
      uses variable EWAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createEWarFile() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopeFactoryImpl
   function createEEarFile() in line 85
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEJ2EEAnalysisScope() in line 75
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEWarFile() in line 95
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getJ2EEScopePackage() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
   function init() in line 32
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function J2EEScopeFactoryImpl() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopeFactoryImpl
   function J2EEScopeFactoryImpl() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/impl/J2EEScopePackageImpl.java
module com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
   function createPackageContents() in line 224
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses variable ej2EEAnalysisScopeEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses variable EJ2EE_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eEarFileEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses variable EEAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eWarFileEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses variable EWAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
   function getEEarFile() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eEarFileEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function getEJ2EEAnalysisScope() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ej2EEAnalysisScopeEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function getEWarFile() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eWarFileEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function getJ2EEScopeFactory() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 128
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function J2EEScopePackageImpl() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function initializePackageContents() in line 250
      protection public
      27 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable ej2EEAnalysisScopeEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function getEJavaAnalysisScope() defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eEarFileEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function getEJarFile() defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eWarFileEClass defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function J2EEScopePackageImpl() in line 95
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopeFactory
   variable eEarFileEClass in line 71
   variable ej2EEAnalysisScopeEClass in line 64
   variable eWarFileEClass in line 78
   variable isCreated in line 215
   variable isInited in line 104
   variable isInitialized in line 241
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/J2EEScopeFactory.java
module com::ibm::wala::ecore::j2ee::scope::J2EEScopeFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createEEarFile() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEJ2EEAnalysisScope() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEWarFile() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJ2EEScopePackage() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/J2EEScopePackage.java
module com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getEEarFile() in line 174
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJ2EEAnalysisScope() in line 164
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEWarFile() in line 184
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJ2EEScopeFactory() in line 193
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable EEAR_FILE in line 107
      protection public
   variable EEAR_FILE__URL in line 116
      protection public
   variable EEAR_FILE_FEATURE_COUNT in line 125
      protection public
   variable eINSTANCE in line 60
      protection public
   variable EJ2EE_ANALYSIS_SCOPE in line 70
      protection public
   variable EJ2EE_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME in line 88
      protection public
   variable EJ2EE_ANALYSIS_SCOPE__LOADERS in line 79
      protection public
   variable EJ2EE_ANALYSIS_SCOPE_FEATURE_COUNT in line 97
      protection public
   variable eNAME in line 36
      protection public
   variable eNS_PREFIX in line 52
      protection public
   variable eNS_URI in line 44
      protection public
   variable EWAR_FILE in line 135
      protection public
   variable EWAR_FILE__URL in line 144
      protection public
   variable EWAR_FILE_FEATURE_COUNT in line 153
      protection public
module com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage::Literals
   variable EEAR_FILE in line 226
      protection public
   variable EJ2EE_ANALYSIS_SCOPE in line 216
      protection public
   variable EWAR_FILE in line 236
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/util/J2EEScopeAdapterFactory.java
module com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
   function createEEarFileAdapter() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJ2EEAnalysisScopeAdapter() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJarFileAdapter() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJavaAnalysisScopeAdapter() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEModuleAdapter() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectAdapter() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEWarFileAdapter() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 59
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeAdapterFactory
   function J2EEScopeAdapterFactory() in line 45
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
   variable modelPackage in line 37
   variable modelSwitch in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/j2ee/scope/util/J2EEScopeSwitch.java
module com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
   function caseEEarFile(EEarFile) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJ2EEAnalysisScope(EJ2EEAnalysisScope) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJarFile(EJarFile) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJavaAnalysisScope(EJavaAnalysisScope) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEModule(EModule) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEWarFile(EWarFile) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 72
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
   function doSwitch(int,EObject) in line 92
      28 lines of code
      2 parameters
      12 conditional paths
      uses variable EJ2EE_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function caseEJ2EEAnalysisScope(EJ2EEAnalysisScope) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses function caseEJavaAnalysisScope(EJavaAnalysisScope) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses variable EEAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function caseEEarFile(EEarFile) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses function caseEJarFile(EJarFile) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses function caseEModule(EModule) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses variable EWAR_FILE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function caseEWarFile(EWarFile) defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
   function J2EEScopeSwitch() in line 48
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::j2ee::scope::util::J2EEScopeSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
   variable modelPackage in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/CallGraphPackage.java
module com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getCallGraphFactory() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getECallGraph() in line 118
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getECallGraph_Entrypoints() in line 129
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable ECALL_GRAPH in line 71
      protection public
   variable ECALL_GRAPH__EDGES in line 89
      protection public
   variable ECALL_GRAPH__ENTRYPOINTS in line 98
      protection public
   variable ECALL_GRAPH__NODES in line 80
      protection public
   variable ECALL_GRAPH_FEATURE_COUNT in line 107
      protection public
   variable eINSTANCE in line 61
      protection public
   variable eNAME in line 37
      protection public
   variable eNS_PREFIX in line 53
      protection public
   variable eNS_URI in line 45
      protection public
module com::ibm::wala::ecore::java::callGraph::CallGraphPackage::Literals
   variable ECALL_GRAPH in line 161
      protection public
   variable ECALL_GRAPH__ENTRYPOINTS in line 169
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/ECallGraph.java
module com::ibm::wala::ecore::java::callGraph::ECallGraph
   inherits from com::ibm::wala::ecore::graph::EGraph
   function getEntrypoints() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/impl/CallGraphFactoryImpl.java
module com::ibm::wala::ecore::java::callGraph::impl::CallGraphFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::java::callGraph::CallGraphFactory
   function create(EClass) in line 60
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable ECALL_GRAPH defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses function createECallGraph() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphFactoryImpl
   function createECallGraph() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getCallGraphPackage() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   function init() in line 32
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function CallGraphFactoryImpl() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphFactoryImpl
   function CallGraphFactoryImpl() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/impl/CallGraphPackageImpl.java
module com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   function createPackageContents() in line 200
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses variable eCallGraphEClass defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses variable ECALL_GRAPH defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable ECALL_GRAPH__ENTRYPOINTS defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   function getCallGraphFactory() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getECallGraph() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCallGraphEClass defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
   function getECallGraph_Entrypoints() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCallGraphEClass defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
   function init() in line 113
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses function CallGraphPackageImpl() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 223
      protection public
      20 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eCallGraphEClass defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function getEGraph() defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function getECallGraph_Entrypoints() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function getEJavaMethod() defined in com::ibm::wala::ecore::java::JavaPackage
   function CallGraphPackageImpl() in line 80
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphFactory
   variable eCallGraphEClass in line 63
   variable isCreated in line 191
   variable isInited in line 89
   variable isInitialized in line 214
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/impl/ECallGraphImpl.java
module com::ibm::wala::ecore::java::callGraph::impl::ECallGraphImpl
   inherits from com::ibm::wala::ecore::graph::impl::EGraphImpl
   inherits from com::ibm::wala::ecore::java::callGraph::ECallGraph
   function eGet(int,boolean,boolean) in line 83
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable ECALL_GRAPH__ENTRYPOINTS defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses function getEntrypoints() defined in com::ibm::wala::ecore::java::callGraph::impl::ECallGraphImpl
   function eIsSet(int) in line 125
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable ECALL_GRAPH__ENTRYPOINTS defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable entrypoints defined in com::ibm::wala::ecore::java::callGraph::impl::ECallGraphImpl
   function eSet(int,Object) in line 96
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable ECALL_GRAPH__ENTRYPOINTS defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses function getEntrypoints() defined in com::ibm::wala::ecore::java::callGraph::impl::ECallGraphImpl
   function eStaticClass() in line 62
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ECALL_GRAPH defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage::Literals
   function eUnset(int) in line 111
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ECALL_GRAPH__ENTRYPOINTS defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses function getEntrypoints() defined in com::ibm::wala::ecore::java::callGraph::impl::ECallGraphImpl
   function getEntrypoints() in line 71
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable entrypoints defined in com::ibm::wala::ecore::java::callGraph::impl::ECallGraphImpl
      uses variable ECALL_GRAPH__ENTRYPOINTS defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   function ECallGraphImpl() in line 53
      3 lines of code
      0 parameters
      1 conditional paths
   variable entrypoints in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/util/CallGraphAdapterFactory.java
module com::ibm::wala::ecore::java::callGraph::util::CallGraphAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
   function createECallGraphAdapter() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEGraphAdapter() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectAdapter() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 57
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphAdapterFactory
   function CallGraphAdapterFactory() in line 43
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   variable modelPackage in line 35
   variable modelSwitch in line 73
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/callGraph/util/CallGraphSwitch.java
module com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
   function caseECallGraph(ECallGraph) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEGraph(EGraph) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 70
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
   function doSwitch(int,EObject) in line 90
      12 lines of code
      2 parameters
      4 conditional paths
      uses variable ECALL_GRAPH defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses function caseECallGraph(ECallGraph) defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
      uses function caseEGraph(EGraph) defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
   function CallGraphSwitch() in line 46
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::callGraph::util::CallGraphSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
   variable modelPackage in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/ECallSite.java
module com::ibm::wala::ecore::java::ECallSite
   inherits from com::ibm::wala::ecore::common::EObjectWithContainerId
   function getBytecodeIndex() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredTarget() in line 96
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJavaMethod() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setBytecodeIndex(int) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDeclaredTarget(EJavaMethod) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setJavaMethod(EJavaMethod) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/EClassHierarchy.java
module com::ibm::wala::ecore::java::EClassHierarchy
   inherits from com::ibm::wala::ecore::graph::ETree
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/EClassLoaderName.java
module com::ibm::wala::ecore::java::EClassLoaderName
   inherits from org::eclipse::emf::common::util::AbstractEnumerator
   function get(String) in line 127
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VALUES_ARRAY defined in com::ibm::wala::ecore::java::EClassLoaderName
   function get(int) in line 159
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses variable APPLICATION defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable APPLICATION_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable PRIMORDIAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable PRIMORDIAL_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable EXTENSION defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable EXTENSION_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
   function getByName(String) in line 143
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VALUES_ARRAY defined in com::ibm::wala::ecore::java::EClassLoaderName
   function EClassLoaderName(int,String,String) in line 174
      3 lines of code
      3 parameters
      1 conditional paths
   variable APPLICATION in line 38
      protection public
   variable APPLICATION_LITERAL in line 78
      protection public
   variable EXTENSION in line 68
      protection public
   variable EXTENSION_LITERAL in line 98
      protection public
   variable PRIMORDIAL in line 53
      protection public
   variable PRIMORDIAL_LITERAL in line 88
      protection public
   variable VALUES in line 119
      protection public
   variable VALUES_ARRAY in line 106
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/EInterfaceHierarchy.java
module com::ibm::wala::ecore::java::EInterfaceHierarchy
   inherits from com::ibm::wala::ecore::graph::EGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/EJavaClass.java
module com::ibm::wala::ecore::java::EJavaClass
   inherits from com::ibm::wala::ecore::common::EObjectWithContainerId
   function getClassName() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLoader() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setClassName(String) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setLoader(EClassLoaderName) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/EJavaMethod.java
module com::ibm::wala::ecore::java::EJavaMethod
   inherits from com::ibm::wala::ecore::common::EObjectWithContainerId
   function getDescriptor() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJavaClass() in line 97
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodName() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 122
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isClinit() in line 130
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setDescriptor(String) in line 81
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setJavaClass(EJavaClass) in line 107
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMethodName(String) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/ETypeHierarchy.java
module com::ibm::wala::ecore::java::ETypeHierarchy
   inherits from org::eclipse::emf::ecore::EObject
   function getClasses() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getImplements() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInterfaces() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setClasses(EClassHierarchy) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setImplements(ERelation) in line 108
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setInterfaces(EInterfaceHierarchy) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/ECallSiteImpl.java
module com::ibm::wala::ecore::java::impl::ECallSiteImpl
   inherits from com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   inherits from com::ibm::wala::ecore::java::ECallSite
   function basicGetDeclaredTarget() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaredTarget defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function basicGetJavaMethod() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function eGet(int,boolean,boolean) in line 183
      protection public
      13 lines of code
      3 parameters
      6 conditional paths
      uses variable ECALL_SITE__BYTECODE_INDEX defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getBytecodeIndex() defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__JAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getJavaMethod() defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses function basicGetJavaMethod() defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__DECLARED_TARGET defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getDeclaredTarget() defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses function basicGetDeclaredTarget() defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function eIsSet(int) in line 239
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable ECALL_SITE__BYTECODE_INDEX defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable bytecodeIndex defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable BYTECODE_INDEX_EDEFAULT defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__JAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable javaMethod defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__DECLARED_TARGET defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable declaredTarget defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function equals(Object) in line 265
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function ECallSiteImpl() defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable bytecodeIndex defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable javaMethod defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable declaredTarget defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function eSet(int,Object) in line 201
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable ECALL_SITE__BYTECODE_INDEX defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setBytecodeIndex(int) defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__JAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__DECLARED_TARGET defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setDeclaredTarget(EJavaMethod) defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function eStaticClass() in line 86
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ECALL_SITE defined in com::ibm::wala::ecore::java::JavaPackage::Literals
   function eUnset(int) in line 220
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable ECALL_SITE__BYTECODE_INDEX defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setBytecodeIndex(int) defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable BYTECODE_INDEX_EDEFAULT defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__JAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__DECLARED_TARGET defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setDeclaredTarget(EJavaMethod) defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function getBytecodeIndex() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeIndex defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function getDeclaredTarget() in line 148
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable declaredTarget defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__DECLARED_TARGET defined in com::ibm::wala::ecore::java::JavaPackage
   function getJavaMethod() in line 113
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__JAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
   function hashCode() in line 284
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeIndex defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable javaMethod defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable declaredTarget defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function setBytecodeIndex(int) in line 102
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bytecodeIndex defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__BYTECODE_INDEX defined in com::ibm::wala::ecore::java::JavaPackage
   function setDeclaredTarget(EJavaMethod) in line 172
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable declaredTarget defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__DECLARED_TARGET defined in com::ibm::wala::ecore::java::JavaPackage
   function setJavaMethod(EJavaMethod) in line 137
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
      uses variable ECALL_SITE__JAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
   function toString() in line 255
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable bytecodeIndex defined in com::ibm::wala::ecore::java::impl::ECallSiteImpl
   function ECallSiteImpl() in line 78
      3 lines of code
      0 parameters
      1 conditional paths
   variable BYTECODE_INDEX_EDEFAULT in line 45
   variable bytecodeIndex in line 54
   variable declaredTarget in line 72
   variable javaMethod in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/EClassHierarchyImpl.java
module com::ibm::wala::ecore::java::impl::EClassHierarchyImpl
   inherits from com::ibm::wala::ecore::graph::impl::ETreeImpl
   inherits from com::ibm::wala::ecore::java::EClassHierarchy
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ECLASS_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage::Literals
   function EClassHierarchyImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/EInterfaceHierarchyImpl.java
module com::ibm::wala::ecore::java::impl::EInterfaceHierarchyImpl
   inherits from com::ibm::wala::ecore::graph::impl::EGraphImpl
   inherits from com::ibm::wala::ecore::java::EInterfaceHierarchy
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EINTERFACE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage::Literals
   function EInterfaceHierarchyImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/EJavaClassImpl.java
module com::ibm::wala::ecore::java::impl::EJavaClassImpl
   inherits from com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   inherits from com::ibm::wala::ecore::java::EJavaClass
   function eGet(int,boolean,boolean) in line 141
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable EJAVA_CLASS__CLASS_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getClassName() defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable EJAVA_CLASS__LOADER defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getLoader() defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function eIsSet(int) in line 190
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable EJAVA_CLASS__CLASS_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable CLASS_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable className defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable EJAVA_CLASS__LOADER defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable loader defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable LOADER_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function equals(Object) in line 208
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function EJavaClassImpl() defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable loader defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable className defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function eSet(int,Object) in line 156
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable EJAVA_CLASS__CLASS_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setClassName(String) defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable EJAVA_CLASS__LOADER defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setLoader(EClassLoaderName) defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function eStaticClass() in line 90
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EJAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage::Literals
   function eUnset(int) in line 173
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable EJAVA_CLASS__CLASS_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setClassName(String) defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable CLASS_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable EJAVA_CLASS__LOADER defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setLoader(EClassLoaderName) defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable LOADER_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function getClassName() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function getLoader() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function hashCode() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loader defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable className defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function setClassName(String) in line 108
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable className defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable EJAVA_CLASS__CLASS_NAME defined in com::ibm::wala::ecore::java::JavaPackage
   function setLoader(EClassLoaderName) in line 129
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable loader defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable LOADER_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
      uses variable EJAVA_CLASS__LOADER defined in com::ibm::wala::ecore::java::JavaPackage
   function toString() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in com::ibm::wala::ecore::java::impl::EJavaClassImpl
   function EJavaClassImpl() in line 81
      3 lines of code
      0 parameters
      1 conditional paths
   variable CLASS_NAME_EDEFAULT in line 44
   variable className in line 54
   variable loader in line 74
   variable LOADER_EDEFAULT in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/EJavaMethodImpl.java
module com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   inherits from com::ibm::wala::ecore::common::impl::EObjectWithContainerIdImpl
   inherits from com::ibm::wala::ecore::java::EJavaMethod
   function basicGetJavaClass() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function eGet(int,boolean,boolean) in line 226
      protection public
      14 lines of code
      3 parameters
      6 conditional paths
      uses variable EJAVA_METHOD__METHOD_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getMethodName() defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__DESCRIPTOR defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getDescriptor() defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__JAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getJavaClass() defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses function basicGetJavaClass() defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__SIGNATURE defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getSignature() defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function eIsSet(int) in line 286
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable EJAVA_METHOD__METHOD_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable METHOD_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable methodName defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__DESCRIPTOR defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable DESCRIPTOR_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable descriptor defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__JAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable javaClass defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__SIGNATURE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable SIGNATURE_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses function getSignature() defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function equals(Object) in line 317
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function EJavaMethodImpl() defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable descriptor defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable javaClass defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable methodName defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function eSet(int,Object) in line 246
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable EJAVA_METHOD__METHOD_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setMethodName(String) defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__DESCRIPTOR defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setDescriptor(String) defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__JAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function eStaticClass() in line 115
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EJAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage::Literals
   function eUnset(int) in line 266
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable EJAVA_METHOD__METHOD_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setMethodName(String) defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable METHOD_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__DESCRIPTOR defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setDescriptor(String) defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable DESCRIPTOR_EDEFAULT defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__JAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function getDescriptor() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function getJavaClass() in line 166
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__JAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
   function getMethodName() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function getSignature() in line 204
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable javaClass defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable methodName defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function isClinit() in line 215
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setDescriptor(String) in line 154
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable descriptor defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__DESCRIPTOR defined in com::ibm::wala::ecore::java::JavaPackage
   function setJavaClass(EJavaClass) in line 192
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__JAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
   function setMethodName(String) in line 133
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable methodName defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable EJAVA_METHOD__METHOD_NAME defined in com::ibm::wala::ecore::java::JavaPackage
   function toString() in line 305
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable methodName defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
      uses variable descriptor defined in com::ibm::wala::ecore::java::impl::EJavaMethodImpl
   function EJavaMethodImpl() in line 106
      3 lines of code
      0 parameters
      1 conditional paths
   variable descriptor in line 79
   variable DESCRIPTOR_EDEFAULT in line 69
   variable javaClass in line 89
   variable METHOD_NAME_EDEFAULT in line 49
   variable methodName in line 59
   variable SIGNATURE_EDEFAULT in line 99
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/ETypeHierarchyImpl.java
module com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::ETypeHierarchy
   function basicSetClasses(EClassHierarchy,NotificationChain) in line 103
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable classes defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
   function basicSetImplements(ERelation,NotificationChain) in line 189
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable implements_ defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
   function basicSetInterfaces(EInterfaceHierarchy,NotificationChain) in line 146
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable interfaces defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
   function eGet(int,boolean,boolean) in line 240
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getClasses() defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getInterfaces() defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function getImplements() defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function eInverseRemove(InternalEObject,int,NotificationChain) in line 223
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function basicSetClasses(EClassHierarchy,NotificationChain) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function basicSetInterfaces(EInterfaceHierarchy,NotificationChain) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function basicSetImplements(ERelation,NotificationChain) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function eIsSet(int) in line 297
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable classes defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable interfaces defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable implements_ defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function eSet(int,Object) in line 257
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setClasses(EClassHierarchy) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setInterfaces(EInterfaceHierarchy) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setImplements(ERelation) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function eStaticClass() in line 85
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ETYPE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage::Literals
   function eUnset(int) in line 277
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setClasses(EClassHierarchy) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setInterfaces(EInterfaceHierarchy) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function setImplements(ERelation) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function getClasses() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classes defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function getImplements() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable implements_ defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function getInterfaces() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interfaces defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function setClasses(EClassHierarchy) in line 118
      protection public
      13 lines of code
      1 parameters
      6 conditional paths
      uses variable classes defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function basicSetClasses(EClassHierarchy,NotificationChain) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function setImplements(ERelation) in line 204
      protection public
      13 lines of code
      1 parameters
      6 conditional paths
      uses variable implements_ defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function basicSetImplements(ERelation,NotificationChain) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function setInterfaces(EInterfaceHierarchy) in line 161
      protection public
      13 lines of code
      1 parameters
      6 conditional paths
      uses variable interfaces defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
      uses function basicSetInterfaces(EInterfaceHierarchy,NotificationChain) defined in com::ibm::wala::ecore::java::impl::ETypeHierarchyImpl
   function ETypeHierarchyImpl() in line 76
      3 lines of code
      0 parameters
      1 conditional paths
   variable classes in line 49
   variable implements_ in line 69
   variable interfaces in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/JavaFactoryImpl.java
module com::ibm::wala::ecore::java::impl::JavaFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::java::JavaFactory
   function convertEClassLoaderNameToString(EDataType,Object) in line 178
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function convertToString(EDataType,Object) in line 93
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable ECLASS_LOADER_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function convertEClassLoaderNameToString(EDataType,Object) defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
   function create(EClass) in line 61
      protection public
      12 lines of code
      1 parameters
      7 conditional paths
      uses variable EJAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function createEJavaClass() defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
      uses variable EJAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses function createEJavaMethod() defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
      uses variable ECALL_SITE defined in com::ibm::wala::ecore::java::JavaPackage
      uses function createECallSite() defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
      uses variable ECLASS_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses function createEClassHierarchy() defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
      uses variable EINTERFACE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses function createEInterfaceHierarchy() defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
      uses variable ETYPE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses function createETypeHierarchy() defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
   function createECallSite() in line 127
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEClassHierarchy() in line 137
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEClassLoaderNameFromString(EDataType,String) in line 167
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function createEInterfaceHierarchy() in line 147
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEJavaClass() in line 107
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEJavaMethod() in line 117
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createETypeHierarchy() in line 157
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createFromString(EDataType,String) in line 79
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable ECLASS_LOADER_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses function createEClassLoaderNameFromString(EDataType,String) defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
   function getJavaPackage() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
   function init() in line 33
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function JavaFactoryImpl() defined in com::ibm::wala::ecore::java::impl::JavaFactoryImpl
   function JavaFactoryImpl() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/impl/JavaPackageImpl.java
module com::ibm::wala::ecore::java::impl::JavaPackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::java::JavaPackage
   function createPackageContents() in line 403
      protection public
      32 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable eJavaClassEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable EJAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable EJAVA_CLASS__CLASS_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable EJAVA_CLASS__LOADER defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eJavaMethodEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable EJAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable EJAVA_METHOD__METHOD_NAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable EJAVA_METHOD__DESCRIPTOR defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable EJAVA_METHOD__JAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable EJAVA_METHOD__SIGNATURE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eCallSiteEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable ECALL_SITE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable ECALL_SITE__BYTECODE_INDEX defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable ECALL_SITE__JAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable ECALL_SITE__DECLARED_TARGET defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eClassHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable ECLASS_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eInterfaceHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable EINTERFACE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eTypeHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable ETYPE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable ETYPE_HIERARCHY__CLASSES defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable ETYPE_HIERARCHY__INTERFACES defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable ETYPE_HIERARCHY__IMPLEMENTS defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eClassLoaderNameEEnum defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable ECLASS_LOADER_NAME defined in com::ibm::wala::ecore::java::JavaPackage
   function getECallSite() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCallSiteEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getECallSite_BytecodeIndex() in line 295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCallSiteEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getECallSite_DeclaredTarget() in line 313
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCallSiteEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getECallSite_JavaMethod() in line 304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eCallSiteEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEClassHierarchy() in line 322
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClassHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEClassLoaderName() in line 376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClassLoaderNameEEnum defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEInterfaceHierarchy() in line 331
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eInterfaceHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaClass() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaClassEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaClass_ClassName() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaClassEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaClass_Loader() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaClassEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaMethod() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaMethodEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaMethod_Descriptor() in line 259
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaMethodEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaMethod_JavaClass() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaMethodEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaMethod_MethodName() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaMethodEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getEJavaMethod_Signature() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaMethodEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getETypeHierarchy() in line 340
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eTypeHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getETypeHierarchy_Classes() in line 349
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eTypeHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getETypeHierarchy_Implements() in line 367
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eTypeHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getETypeHierarchy_Interfaces() in line 358
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eTypeHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
   function getJavaFactory() in line 385
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 163
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses function JavaPackageImpl() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 450
      protection public
      64 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eJavaClassEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEObjectWithContainerId() defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eJavaMethodEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable eCallSiteEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable eClassHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getETree() defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eInterfaceHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEGraph() defined in com::ibm::wala::ecore::graph::GraphPackage
      uses function getEJavaClass_ClassName() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEJavaClass_Loader() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEClassLoaderName() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEJavaMethod_MethodName() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEJavaMethod_Descriptor() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEJavaMethod_JavaClass() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEJavaClass() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEJavaMethod_Signature() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getECallSite_BytecodeIndex() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getECallSite_JavaMethod() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEJavaMethod() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getECallSite_DeclaredTarget() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable eTypeHierarchyEClass defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getETypeHierarchy_Classes() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEClassHierarchy() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getETypeHierarchy_Interfaces() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getEInterfaceHierarchy() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getETypeHierarchy_Implements() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function getERelation() defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eClassLoaderNameEEnum defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses variable APPLICATION_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable PRIMORDIAL_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
      uses variable EXTENSION_LITERAL defined in com::ibm::wala::ecore::java::EClassLoaderName
   function JavaPackageImpl() in line 130
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaFactory
   variable eCallSiteEClass in line 85
   variable eClassHierarchyEClass in line 92
   variable eClassLoaderNameEEnum in line 113
   variable eInterfaceHierarchyEClass in line 99
   variable eJavaClassEClass in line 71
   variable eJavaMethodEClass in line 78
   variable eTypeHierarchyEClass in line 106
   variable isCreated in line 394
   variable isInited in line 139
   variable isInitialized in line 441
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/JavaFactory.java
module com::ibm::wala::ecore::java::JavaFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createECallSite() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEClassHierarchy() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEInterfaceHierarchy() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEJavaClass() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEJavaMethod() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createETypeHierarchy() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJavaPackage() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/JavaPackage.java
module com::ibm::wala::ecore::java::JavaPackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getECallSite() in line 457
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getECallSite_BytecodeIndex() in line 468
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getECallSite_DeclaredTarget() in line 490
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getECallSite_JavaMethod() in line 479
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClassHierarchy() in line 500
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClassLoaderName() in line 563
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEInterfaceHierarchy() in line 510
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaClass() in line 371
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaClass_ClassName() in line 382
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaClass_Loader() in line 393
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaMethod() in line 403
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaMethod_Descriptor() in line 425
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaMethod_JavaClass() in line 436
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaMethod_MethodName() in line 414
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaMethod_Signature() in line 447
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getETypeHierarchy() in line 520
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getETypeHierarchy_Classes() in line 531
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getETypeHierarchy_Implements() in line 553
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getETypeHierarchy_Interfaces() in line 542
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJavaFactory() in line 572
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable ECALL_SITE in line 185
      protection public
   variable ECALL_SITE__BYTECODE_INDEX in line 203
      protection public
   variable ECALL_SITE__DECLARED_TARGET in line 221
      protection public
   variable ECALL_SITE__ID in line 194
      protection public
   variable ECALL_SITE__JAVA_METHOD in line 212
      protection public
   variable ECALL_SITE_FEATURE_COUNT in line 230
      protection public
   variable ECLASS_HIERARCHY in line 240
      protection public
   variable ECLASS_HIERARCHY__EDGES in line 258
      protection public
   variable ECLASS_HIERARCHY__NODES in line 249
      protection public
   variable ECLASS_HIERARCHY_FEATURE_COUNT in line 267
      protection public
   variable ECLASS_LOADER_NAME in line 360
      protection public
   variable eINSTANCE in line 65
      protection public
   variable EINTERFACE_HIERARCHY in line 277
      protection public
   variable EINTERFACE_HIERARCHY__EDGES in line 295
      protection public
   variable EINTERFACE_HIERARCHY__NODES in line 286
      protection public
   variable EINTERFACE_HIERARCHY_FEATURE_COUNT in line 304
      protection public
   variable EJAVA_CLASS in line 75
      protection public
   variable EJAVA_CLASS__CLASS_NAME in line 93
      protection public
   variable EJAVA_CLASS__ID in line 84
      protection public
   variable EJAVA_CLASS__LOADER in line 102
      protection public
   variable EJAVA_CLASS_FEATURE_COUNT in line 111
      protection public
   variable EJAVA_METHOD in line 121
      protection public
   variable EJAVA_METHOD__DESCRIPTOR in line 148
      protection public
   variable EJAVA_METHOD__ID in line 130
      protection public
   variable EJAVA_METHOD__JAVA_CLASS in line 157
      protection public
   variable EJAVA_METHOD__METHOD_NAME in line 139
      protection public
   variable EJAVA_METHOD__SIGNATURE in line 166
      protection public
   variable EJAVA_METHOD_FEATURE_COUNT in line 175
      protection public
   variable eNAME in line 41
      protection public
   variable eNS_PREFIX in line 57
      protection public
   variable eNS_URI in line 49
      protection public
   variable ETYPE_HIERARCHY in line 314
      protection public
   variable ETYPE_HIERARCHY__CLASSES in line 323
      protection public
   variable ETYPE_HIERARCHY__IMPLEMENTS in line 341
      protection public
   variable ETYPE_HIERARCHY__INTERFACES in line 332
      protection public
   variable ETYPE_HIERARCHY_FEATURE_COUNT in line 350
      protection public
module com::ibm::wala::ecore::java::JavaPackage::Literals
   variable ECALL_SITE in line 663
      protection public
   variable ECALL_SITE__BYTECODE_INDEX in line 671
      protection public
   variable ECALL_SITE__DECLARED_TARGET in line 687
      protection public
   variable ECALL_SITE__JAVA_METHOD in line 679
      protection public
   variable ECLASS_HIERARCHY in line 697
      protection public
   variable ECLASS_LOADER_NAME in line 751
      protection public
   variable EINTERFACE_HIERARCHY in line 707
      protection public
   variable EJAVA_CLASS in line 595
      protection public
   variable EJAVA_CLASS__CLASS_NAME in line 603
      protection public
   variable EJAVA_CLASS__LOADER in line 611
      protection public
   variable EJAVA_METHOD in line 621
      protection public
   variable EJAVA_METHOD__DESCRIPTOR in line 637
      protection public
   variable EJAVA_METHOD__JAVA_CLASS in line 645
      protection public
   variable EJAVA_METHOD__METHOD_NAME in line 629
      protection public
   variable EJAVA_METHOD__SIGNATURE in line 653
      protection public
   variable ETYPE_HIERARCHY in line 717
      protection public
   variable ETYPE_HIERARCHY__CLASSES in line 725
      protection public
   variable ETYPE_HIERARCHY__IMPLEMENTS in line 741
      protection public
   variable ETYPE_HIERARCHY__INTERFACES in line 733
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EArrayContents.java
module com::ibm::wala::ecore::java::pointerAnalysis::EArrayContents
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EPointer
   function getJavaClass() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setJavaClass(EJavaClass) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EHeapGraph.java
module com::ibm::wala::ecore::java::pointerAnalysis::EHeapGraph
   inherits from com::ibm::wala::ecore::graph::EGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EInstance.java
module com::ibm::wala::ecore::java::pointerAnalysis::EInstance
   inherits from org::eclipse::emf::ecore::EObject
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EInstanceField.java
module com::ibm::wala::ecore::java::pointerAnalysis::EInstanceField
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EPointer
   function getFieldName() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setFieldName(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EJavaClassInstance.java
module com::ibm::wala::ecore::java::pointerAnalysis::EJavaClassInstance
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EInstance
   function getJavaClass() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setJavaClass(EJavaClass) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/ELocalPointer.java
module com::ibm::wala::ecore::java::pointerAnalysis::ELocalPointer
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EPointer
   function getJavaMethod() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getValueNumber() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setJavaMethod(EJavaMethod) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setValueNumber(int) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EPointer.java
module com::ibm::wala::ecore::java::pointerAnalysis::EPointer
   inherits from org::eclipse::emf::ecore::EObject
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EReturnValuePointer.java
module com::ibm::wala::ecore::java::pointerAnalysis::EReturnValuePointer
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EPointer
   function getJavaMethod() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isIsExceptionalReturnValue() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setIsExceptionalReturnValue(boolean) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setJavaMethod(EJavaMethod) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/EStaticField.java
module com::ibm::wala::ecore::java::pointerAnalysis::EStaticField
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EPointer
   function getFieldName() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setFieldName(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EArrayContentsImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::impl::EPointerImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EArrayContents
   function basicGetJavaClass() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
   function eGet(int,boolean,boolean) in line 106
      protection public
      8 lines of code
      3 parameters
      3 conditional paths
      uses variable EARRAY_CONTENTS__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function getJavaClass() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
      uses function basicGetJavaClass() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
   function eIsSet(int) in line 148
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EARRAY_CONTENTS__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
   function eSet(int,Object) in line 120
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EARRAY_CONTENTS__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
   function eStaticClass() in line 59
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EARRAY_CONTENTS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function eUnset(int) in line 134
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EARRAY_CONTENTS__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
   function getJavaClass() in line 68
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
      uses variable EARRAY_CONTENTS__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function setJavaClass(EJavaClass) in line 94
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EArrayContentsImpl
      uses variable EARRAY_CONTENTS__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function EArrayContentsImpl() in line 50
      3 lines of code
      0 parameters
      1 conditional paths
   variable javaClass in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EHeapGraphImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EHeapGraphImpl
   inherits from com::ibm::wala::ecore::graph::impl::EGraphImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EHeapGraph
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EHEAP_GRAPH defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function EHeapGraphImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EInstanceFieldImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::impl::EPointerImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EInstanceField
   function eGet(int,boolean,boolean) in line 96
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EINSTANCE_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function getFieldName() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
   function eIsSet(int) in line 137
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EINSTANCE_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable FIELD_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
   function eSet(int,Object) in line 109
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EINSTANCE_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setFieldName(String) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
   function eStaticClass() in line 66
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EINSTANCE_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function eUnset(int) in line 123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EINSTANCE_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setFieldName(String) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
      uses variable FIELD_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
   function getFieldName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
   function setFieldName(String) in line 84
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
      uses variable EINSTANCE_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function toString() in line 150
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceFieldImpl
   function EInstanceFieldImpl() in line 57
      3 lines of code
      0 parameters
      1 conditional paths
   variable FIELD_NAME_EDEFAULT in line 40
   variable fieldName in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EInstanceImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EInstance
   abstract class
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function EInstanceImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EJavaClassInstanceImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::impl::EInstanceImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EJavaClassInstance
   function basicGetJavaClass() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
   function eGet(int,boolean,boolean) in line 106
      protection public
      8 lines of code
      3 parameters
      3 conditional paths
      uses variable EJAVA_CLASS_INSTANCE__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function getJavaClass() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
      uses function basicGetJavaClass() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
   function eIsSet(int) in line 148
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EJAVA_CLASS_INSTANCE__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
   function eSet(int,Object) in line 120
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EJAVA_CLASS_INSTANCE__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
   function eStaticClass() in line 59
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EJAVA_CLASS_INSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function eUnset(int) in line 134
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EJAVA_CLASS_INSTANCE__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
   function getJavaClass() in line 68
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
      uses variable EJAVA_CLASS_INSTANCE__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function setJavaClass(EJavaClass) in line 94
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable javaClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EJavaClassInstanceImpl
      uses variable EJAVA_CLASS_INSTANCE__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function EJavaClassInstanceImpl() in line 50
      3 lines of code
      0 parameters
      1 conditional paths
   variable javaClass in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/ELocalPointerImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::impl::EPointerImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::ELocalPointer
   function basicGetJavaMethod() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   function eGet(int,boolean,boolean) in line 148
      protection public
      10 lines of code
      3 parameters
      4 conditional paths
      uses variable ELOCAL_POINTER__VALUE_NUMBER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function getValueNumber() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable ELOCAL_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function getJavaMethod() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses function basicGetJavaMethod() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   function eIsSet(int) in line 198
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable ELOCAL_POINTER__VALUE_NUMBER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable valueNumber defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable VALUE_NUMBER_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable ELOCAL_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   function eSet(int,Object) in line 164
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable ELOCAL_POINTER__VALUE_NUMBER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setValueNumber(int) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable ELOCAL_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   function eStaticClass() in line 80
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ELOCAL_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function eUnset(int) in line 181
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable ELOCAL_POINTER__VALUE_NUMBER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setValueNumber(int) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable VALUE_NUMBER_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable ELOCAL_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   function getJavaMethod() in line 110
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable ELOCAL_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function getValueNumber() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   function setJavaMethod(EJavaMethod) in line 136
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable ELOCAL_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function setValueNumber(int) in line 98
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable valueNumber defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
      uses variable ELOCAL_POINTER__VALUE_NUMBER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function toString() in line 213
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable valueNumber defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::ELocalPointerImpl
   function ELocalPointerImpl() in line 71
      3 lines of code
      0 parameters
      1 conditional paths
   variable javaMethod in line 64
   variable VALUE_NUMBER_EDEFAULT in line 44
   variable valueNumber in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EPointerImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EPointerImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EPointer
   abstract class
   function eStaticClass() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EPOINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function EPointerImpl() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EReturnValuePointerImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::impl::EPointerImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EReturnValuePointer
   function basicGetJavaMethod() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   function eGet(int,boolean,boolean) in line 148
      protection public
      10 lines of code
      3 parameters
      4 conditional paths
      uses variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function isIsExceptionalReturnValue() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable ERETURN_VALUE_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function getJavaMethod() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses function basicGetJavaMethod() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   function eIsSet(int) in line 198
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable isExceptionalReturnValue defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable IS_EXCEPTIONAL_RETURN_VALUE_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable ERETURN_VALUE_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   function eSet(int,Object) in line 164
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setIsExceptionalReturnValue(boolean) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable ERETURN_VALUE_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   function eStaticClass() in line 80
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ERETURN_VALUE_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function eUnset(int) in line 181
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setIsExceptionalReturnValue(boolean) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable IS_EXCEPTIONAL_RETURN_VALUE_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable ERETURN_VALUE_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   function getJavaMethod() in line 110
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable ERETURN_VALUE_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function isIsExceptionalReturnValue() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isExceptionalReturnValue defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   function setIsExceptionalReturnValue(boolean) in line 98
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable isExceptionalReturnValue defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function setJavaMethod(EJavaMethod) in line 136
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable javaMethod defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
      uses variable ERETURN_VALUE_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function toString() in line 213
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable isExceptionalReturnValue defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EReturnValuePointerImpl
   function EReturnValuePointerImpl() in line 71
      3 lines of code
      0 parameters
      1 conditional paths
   variable IS_EXCEPTIONAL_RETURN_VALUE_EDEFAULT in line 44
   variable isExceptionalReturnValue in line 54
   variable javaMethod in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/EStaticFieldImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::impl::EPointerImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::EStaticField
   function eGet(int,boolean,boolean) in line 96
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable ESTATIC_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function getFieldName() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
   function eIsSet(int) in line 137
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable ESTATIC_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable FIELD_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
   function eSet(int,Object) in line 109
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable ESTATIC_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setFieldName(String) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
   function eStaticClass() in line 66
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ESTATIC_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   function eUnset(int) in line 123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ESTATIC_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function setFieldName(String) defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
      uses variable FIELD_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
   function getFieldName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
   function setFieldName(String) in line 84
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
      uses variable ESTATIC_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function toString() in line 150
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable fieldName defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::EStaticFieldImpl
   function EStaticFieldImpl() in line 57
      3 lines of code
      0 parameters
      1 conditional paths
   variable FIELD_NAME_EDEFAULT in line 40
   variable fieldName in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/PointerAnalysisFactoryImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisFactory
   function create(EClass) in line 60
      protection public
      13 lines of code
      1 parameters
      8 conditional paths
      uses variable EINSTANCE_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function createEInstanceField() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
      uses variable EARRAY_CONTENTS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function createEArrayContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
      uses variable ESTATIC_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function createEStaticField() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
      uses variable ELOCAL_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function createELocalPointer() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
      uses variable ERETURN_VALUE_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function createEReturnValuePointer() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
      uses variable EJAVA_CLASS_INSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function createEJavaClassInstance() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
      uses variable EHEAP_GRAPH defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function createEHeapGraph() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
   function createEArrayContents() in line 89
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEHeapGraph() in line 139
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEInstanceField() in line 79
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEJavaClassInstance() in line 129
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createELocalPointer() in line 109
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEReturnValuePointer() in line 119
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEStaticField() in line 99
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function getPointerAnalysisPackage() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 32
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function PointerAnalysisFactoryImpl() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisFactoryImpl
   function PointerAnalysisFactoryImpl() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/impl/PointerAnalysisPackageImpl.java
module com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function createPackageContents() in line 400
      protection public
      31 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable ePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable EPOINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eInstanceFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable EINSTANCE_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable EINSTANCE_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eArrayContentsEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable EARRAY_CONTENTS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable EARRAY_CONTENTS__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eStaticFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable ESTATIC_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable ESTATIC_FIELD__FIELD_NAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eLocalPointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable ELOCAL_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable ELOCAL_POINTER__VALUE_NUMBER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable ELOCAL_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eReturnValuePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable ERETURN_VALUE_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable ERETURN_VALUE_POINTER__JAVA_METHOD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eInstanceEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable EINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eJavaClassInstanceEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable EJAVA_CLASS_INSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable EJAVA_CLASS_INSTANCE__JAVA_CLASS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eHeapGraphEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable EHEAP_GRAPH defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   function getEArrayContents() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eArrayContentsEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEArrayContents_JavaClass() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eArrayContentsEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEHeapGraph() in line 373
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eHeapGraphEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEInstance() in line 346
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eInstanceEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEInstanceField() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eInstanceFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEInstanceField_FieldName() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eInstanceFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEJavaClassInstance() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaClassInstanceEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEJavaClassInstance_JavaClass() in line 364
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaClassInstanceEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getELocalPointer() in line 292
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eLocalPointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getELocalPointer_JavaMethod() in line 310
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eLocalPointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getELocalPointer_ValueNumber() in line 301
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eLocalPointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEPointer() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEReturnValuePointer() in line 319
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eReturnValuePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEReturnValuePointer_IsExceptionalReturnValue() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eReturnValuePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEReturnValuePointer_JavaMethod() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eReturnValuePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEStaticField() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eStaticFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getEStaticField_FieldName() in line 283
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eStaticFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function getPointerAnalysisFactory() in line 382
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 178
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function PointerAnalysisPackageImpl() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 446
      protection public
      49 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eInstanceFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEPointer() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEInstance() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEGraph() defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable ePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEInstanceField_FieldName() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eArrayContentsEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEArrayContents_JavaClass() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEJavaClass() defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eStaticFieldEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEStaticField_FieldName() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eLocalPointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getELocalPointer_ValueNumber() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getELocalPointer_JavaMethod() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEJavaMethod() defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eReturnValuePointerEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEReturnValuePointer_IsExceptionalReturnValue() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEReturnValuePointer_JavaMethod() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eInstanceEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eJavaClassInstanceEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function getEJavaClassInstance_JavaClass() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses variable eHeapGraphEClass defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
   function PointerAnalysisPackageImpl() in line 145
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisFactory
   variable eArrayContentsEClass in line 86
   variable eHeapGraphEClass in line 128
   variable eInstanceEClass in line 114
   variable eInstanceFieldEClass in line 79
   variable eJavaClassInstanceEClass in line 121
   variable eLocalPointerEClass in line 100
   variable ePointerEClass in line 72
   variable eReturnValuePointerEClass in line 107
   variable eStaticFieldEClass in line 93
   variable isCreated in line 391
   variable isInited in line 154
   variable isInitialized in line 437
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/PointerAnalysisFactory.java
module com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createEArrayContents() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEHeapGraph() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEInstanceField() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEJavaClassInstance() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createELocalPointer() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEReturnValuePointer() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEStaticField() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPointerAnalysisPackage() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/PointerAnalysisPackage.java
module com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getEArrayContents() in line 365
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEArrayContents_JavaClass() in line 376
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEHeapGraph() in line 502
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEInstance() in line 471
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEInstanceField() in line 344
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEInstanceField_FieldName() in line 355
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaClassInstance() in line 481
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaClassInstance_JavaClass() in line 492
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getELocalPointer() in line 407
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getELocalPointer_JavaMethod() in line 429
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getELocalPointer_ValueNumber() in line 418
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPointer() in line 334
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEReturnValuePointer() in line 439
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEReturnValuePointer_IsExceptionalReturnValue() in line 450
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEReturnValuePointer_JavaMethod() in line 461
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEStaticField() in line 386
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEStaticField_FieldName() in line 397
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPointerAnalysisFactory() in line 511
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable EARRAY_CONTENTS in line 119
      protection public
   variable EARRAY_CONTENTS__JAVA_CLASS in line 128
      protection public
   variable EARRAY_CONTENTS_FEATURE_COUNT in line 137
      protection public
   variable EHEAP_GRAPH in line 296
      protection public
   variable EHEAP_GRAPH__EDGES in line 314
      protection public
   variable EHEAP_GRAPH__NODES in line 305
      protection public
   variable EHEAP_GRAPH_FEATURE_COUNT in line 323
      protection public
   variable eINSTANCE in line 62
      protection public
   variable EINSTANCE in line 249
      protection public
   variable EINSTANCE_FEATURE_COUNT in line 258
      protection public
   variable EINSTANCE_FIELD in line 91
      protection public
   variable EINSTANCE_FIELD__FIELD_NAME in line 100
      protection public
   variable EINSTANCE_FIELD_FEATURE_COUNT in line 109
      protection public
   variable EJAVA_CLASS_INSTANCE in line 268
      protection public
   variable EJAVA_CLASS_INSTANCE__JAVA_CLASS in line 277
      protection public
   variable EJAVA_CLASS_INSTANCE_FEATURE_COUNT in line 286
      protection public
   variable ELOCAL_POINTER in line 175
      protection public
   variable ELOCAL_POINTER__JAVA_METHOD in line 193
      protection public
   variable ELOCAL_POINTER__VALUE_NUMBER in line 184
      protection public
   variable ELOCAL_POINTER_FEATURE_COUNT in line 202
      protection public
   variable eNAME in line 38
      protection public
   variable eNS_PREFIX in line 54
      protection public
   variable eNS_URI in line 46
      protection public
   variable EPOINTER in line 72
      protection public
   variable EPOINTER_FEATURE_COUNT in line 81
      protection public
   variable ERETURN_VALUE_POINTER in line 212
      protection public
   variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE in line 221
      protection public
   variable ERETURN_VALUE_POINTER__JAVA_METHOD in line 230
      protection public
   variable ERETURN_VALUE_POINTER_FEATURE_COUNT in line 239
      protection public
   variable ESTATIC_FIELD in line 147
      protection public
   variable ESTATIC_FIELD__FIELD_NAME in line 156
      protection public
   variable ESTATIC_FIELD_FEATURE_COUNT in line 165
      protection public
module com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage::Literals
   variable EARRAY_CONTENTS in line 562
      protection public
   variable EARRAY_CONTENTS__JAVA_CLASS in line 570
      protection public
   variable EHEAP_GRAPH in line 678
      protection public
   variable EINSTANCE in line 650
      protection public
   variable EINSTANCE_FIELD in line 544
      protection public
   variable EINSTANCE_FIELD__FIELD_NAME in line 552
      protection public
   variable EJAVA_CLASS_INSTANCE in line 660
      protection public
   variable EJAVA_CLASS_INSTANCE__JAVA_CLASS in line 668
      protection public
   variable ELOCAL_POINTER in line 598
      protection public
   variable ELOCAL_POINTER__JAVA_METHOD in line 614
      protection public
   variable ELOCAL_POINTER__VALUE_NUMBER in line 606
      protection public
   variable EPOINTER in line 534
      protection public
   variable ERETURN_VALUE_POINTER in line 624
      protection public
   variable ERETURN_VALUE_POINTER__IS_EXCEPTIONAL_RETURN_VALUE in line 632
      protection public
   variable ERETURN_VALUE_POINTER__JAVA_METHOD in line 640
      protection public
   variable ESTATIC_FIELD in line 580
      protection public
   variable ESTATIC_FIELD__FIELD_NAME in line 588
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/util/PointerAnalysisAdapterFactory.java
module com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
   function createEArrayContentsAdapter() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEGraphAdapter() in line 259
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEHeapGraphAdapter() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEInstanceAdapter() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEInstanceFieldAdapter() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJavaClassInstanceAdapter() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createELocalPointerAdapter() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectAdapter() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEPointerAdapter() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEReturnValuePointerAdapter() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEStaticFieldAdapter() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 57
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisAdapterFactory
   function PointerAnalysisAdapterFactory() in line 43
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   variable modelPackage in line 35
   variable modelSwitch in line 73
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/pointerAnalysis/util/PointerAnalysisSwitch.java
module com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
   function caseEArrayContents(EArrayContents) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEGraph(EGraph) in line 303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEHeapGraph(EHeapGraph) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEInstance(EInstance) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEInstanceField(EInstanceField) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJavaClassInstance(EJavaClassInstance) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseELocalPointer(ELocalPointer) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEPointer(EPointer) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEReturnValuePointer(EReturnValuePointer) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEStaticField(EStaticField) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 70
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
   function doSwitch(int,EObject) in line 90
      66 lines of code
      2 parameters
      26 conditional paths
      uses variable EPOINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEPointer(EPointer) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable EINSTANCE_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEInstanceField(EInstanceField) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable EARRAY_CONTENTS defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEArrayContents(EArrayContents) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable ESTATIC_FIELD defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEStaticField(EStaticField) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable ELOCAL_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseELocalPointer(ELocalPointer) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable ERETURN_VALUE_POINTER defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEReturnValuePointer(EReturnValuePointer) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable EINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEInstance(EInstance) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable EJAVA_CLASS_INSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEJavaClassInstance(EJavaClassInstance) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable EHEAP_GRAPH defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses function caseEHeapGraph(EHeapGraph) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses function caseEGraph(EGraph) defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
   function PointerAnalysisSwitch() in line 46
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::pointerAnalysis::util::PointerAnalysisSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
   variable modelPackage in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EBuiltInModule.java
module com::ibm::wala::ecore::java::scope::EBuiltInModule
   inherits from com::ibm::wala::ecore::java::scope::EModule
   function getId() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setId(EBuiltInResource) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EBuiltInResource.java
module com::ibm::wala::ecore::java::scope::EBuiltInResource
   inherits from org::eclipse::emf::common::util::AbstractEnumerator
   function get(String) in line 153
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VALUES_ARRAY defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
   function get(int) in line 185
      protection public
      9 lines of code
      1 parameters
      5 conditional paths
      uses variable DEFAULT_J2SE_LIBS defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable DEFAULT_J2SE_LIBS_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable DEFAULT_J2EE_LIBS defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable DEFAULT_J2EE_LIBS_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable PRIMORDIAL_JAR_MODEL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable PRIMORDIAL_JAR_MODEL_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable EXTENSION_JAR_MODEL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable EXTENSION_JAR_MODEL_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
   function getByName(String) in line 169
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VALUES_ARRAY defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
   function EBuiltInResource(int,String,String) in line 201
      3 lines of code
      3 parameters
      1 conditional paths
   variable DEFAULT_J2EE_LIBS in line 53
      protection public
   variable DEFAULT_J2EE_LIBS_LITERAL in line 103
      protection public
   variable DEFAULT_J2SE_LIBS in line 38
      protection public
   variable DEFAULT_J2SE_LIBS_LITERAL in line 93
      protection public
   variable EXTENSION_JAR_MODEL in line 83
      protection public
   variable EXTENSION_JAR_MODEL_LITERAL in line 123
      protection public
   variable PRIMORDIAL_JAR_MODEL in line 68
      protection public
   variable PRIMORDIAL_JAR_MODEL_LITERAL in line 113
      protection public
   variable VALUES in line 145
      protection public
   variable VALUES_ARRAY in line 131
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EClassFile.java
module com::ibm::wala::ecore::java::scope::EClassFile
   inherits from com::ibm::wala::ecore::java::scope::EFile
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EClassLoader.java
module com::ibm::wala::ecore::java::scope::EClassLoader
   inherits from org::eclipse::emf::ecore::EObject
   function getLoaderName() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getModules() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setLoaderName(String) in line 71
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EClasspath.java
module com::ibm::wala::ecore::java::scope::EClasspath
   inherits from org::eclipse::emf::ecore::EObject
   function getString() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setString(String) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EFile.java
module com::ibm::wala::ecore::java::scope::EFile
   inherits from com::ibm::wala::ecore::java::scope::EModule
   function getUrl() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setUrl(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EJarFile.java
module com::ibm::wala::ecore::java::scope::EJarFile
   inherits from com::ibm::wala::ecore::java::scope::EModule
   function getUrl() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setUrl(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EJavaAnalysisScope.java
module com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
   inherits from org::eclipse::emf::ecore::EObject
   function getExclusionFileName() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLoaders() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setExclusionFileName(String) in line 71
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EModule.java
module com::ibm::wala::ecore::java::scope::EModule
   inherits from org::eclipse::emf::ecore::EObject
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/ESourceFile.java
module com::ibm::wala::ecore::java::scope::ESourceFile
   inherits from com::ibm::wala::ecore::java::scope::EFile
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/EStandardClassLoader.java
module com::ibm::wala::ecore::java::scope::EStandardClassLoader
   inherits from org::eclipse::emf::common::util::AbstractEnumerator
   function get(String) in line 153
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VALUES_ARRAY defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
   function get(int) in line 185
      protection public
      9 lines of code
      1 parameters
      5 conditional paths
      uses variable PRIMORDIAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable PRIMORDIAL_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable EXTENSION defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable EXTENSION_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable APPLICATION defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable APPLICATION_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable SYNTHETIC defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable SYNTHETIC_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
   function getByName(String) in line 169
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VALUES_ARRAY defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
   function EStandardClassLoader(int,String,String) in line 201
      3 lines of code
      3 parameters
      1 conditional paths
   variable APPLICATION in line 68
      protection public
   variable APPLICATION_LITERAL in line 113
      protection public
   variable EXTENSION in line 53
      protection public
   variable EXTENSION_LITERAL in line 103
      protection public
   variable PRIMORDIAL in line 38
      protection public
   variable PRIMORDIAL_LITERAL in line 93
      protection public
   variable SYNTHETIC in line 83
      protection public
   variable SYNTHETIC_LITERAL in line 123
      protection public
   variable VALUES in line 145
      protection public
   variable VALUES_ARRAY in line 131
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/EBuiltInModuleImpl.java
module com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::scope::EBuiltInModule
   function eGet(int,boolean,boolean) in line 98
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EBUILT_IN_MODULE__ID defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getId() defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
   function eIsSet(int) in line 139
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EBUILT_IN_MODULE__ID defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable ID_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
   function eSet(int,Object) in line 111
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EBUILT_IN_MODULE__ID defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setId(EBuiltInResource) defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
   function eStaticClass() in line 68
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EBUILT_IN_MODULE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function eUnset(int) in line 125
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EBUILT_IN_MODULE__ID defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setId(EBuiltInResource) defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
      uses variable ID_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
   function getId() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
   function setId(EBuiltInResource) in line 86
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable id defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
      uses variable ID_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EBuiltInModuleImpl
      uses variable EBUILT_IN_MODULE__ID defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function toString() in line 152
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function EBuiltInModuleImpl() in line 59
      3 lines of code
      0 parameters
      1 conditional paths
   variable id in line 52
   variable ID_EDEFAULT in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/EClassFileImpl.java
module com::ibm::wala::ecore::java::scope::impl::EClassFileImpl
   inherits from com::ibm::wala::ecore::java::scope::impl::EFileImpl
   inherits from com::ibm::wala::ecore::java::scope::EClassFile
   function eStaticClass() in line 38
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ECLASS_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function EClassFileImpl() in line 29
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/EClassLoaderImpl.java
module com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::scope::EClassLoader
   function eGet(int,boolean,boolean) in line 143
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable ECLASS_LOADER__MODULES defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable ECLASS_LOADER__LOADER_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getLoaderName() defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   function eInverseRemove(InternalEObject,int,NotificationChain) in line 130
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable ECLASS_LOADER__MODULES defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   function eIsSet(int) in line 193
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable ECLASS_LOADER__MODULES defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable modules defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable ECLASS_LOADER__LOADER_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable LOADER_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable loaderName defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   function eSet(int,Object) in line 158
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable ECLASS_LOADER__MODULES defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable ECLASS_LOADER__LOADER_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setLoaderName(String) defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   function eStaticClass() in line 88
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ECLASS_LOADER defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function eUnset(int) in line 176
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable ECLASS_LOADER__MODULES defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getModules() defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable ECLASS_LOADER__LOADER_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setLoaderName(String) defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable LOADER_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   function getLoaderName() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loaderName defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   function getModules() in line 97
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable modules defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable ECLASS_LOADER__MODULES defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function setLoaderName(String) in line 118
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable loaderName defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
      uses variable ECLASS_LOADER__LOADER_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function toString() in line 208
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable loaderName defined in com::ibm::wala::ecore::java::scope::impl::EClassLoaderImpl
   function EClassLoaderImpl() in line 79
      3 lines of code
      0 parameters
      1 conditional paths
   variable LOADER_NAME_EDEFAULT in line 62
   variable loaderName in line 72
   variable modules in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/EClasspathImpl.java
module com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::scope::EClasspath
   function eGet(int,boolean,boolean) in line 97
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable ECLASSPATH__STRING defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getString() defined in com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
   function eIsSet(int) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable ECLASSPATH__STRING defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable STRING_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
   function eSet(int,Object) in line 110
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable ECLASSPATH__STRING defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setString(String) defined in com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
   function eStaticClass() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ECLASSPATH defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function eUnset(int) in line 124
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ECLASSPATH__STRING defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setString(String) defined in com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
      uses variable STRING_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
   function getString() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable string defined in com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
   function setString(String) in line 85
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable string defined in com::ibm::wala::ecore::java::scope::impl::EClasspathImpl
      uses variable ECLASSPATH__STRING defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function toString() in line 151
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function EClasspathImpl() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable string in line 51
   variable STRING_EDEFAULT in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/EFileImpl.java
module com::ibm::wala::ecore::java::scope::impl::EFileImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::scope::EFile
   function eGet(int,boolean,boolean) in line 97
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EFILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getUrl() defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
   function eIsSet(int) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EFILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable URL_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
   function eSet(int,Object) in line 110
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EFILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setUrl(String) defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
   function eStaticClass() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EFILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function eUnset(int) in line 124
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EFILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setUrl(String) defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
      uses variable URL_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
   function getUrl() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
   function setUrl(String) in line 85
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
      uses variable EFILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function toString() in line 151
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EFileImpl
   function EFileImpl() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable url in line 51
   variable URL_EDEFAULT in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/EJarFileImpl.java
module com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::scope::EJarFile
   function eGet(int,boolean,boolean) in line 97
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EJAR_FILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getUrl() defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   function eIsSet(int) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EJAR_FILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable URL_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   function eSet(int,Object) in line 110
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EJAR_FILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setUrl(String) defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   function eStaticClass() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EJAR_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function eUnset(int) in line 124
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EJAR_FILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setUrl(String) defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
      uses variable URL_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   function getUrl() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   function setUrl(String) in line 85
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
      uses variable EJAR_FILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function toString() in line 151
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable url defined in com::ibm::wala::ecore::java::scope::impl::EJarFileImpl
   function EJarFileImpl() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable url in line 51
   variable URL_EDEFAULT in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/EJavaAnalysisScopeImpl.java
module com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::java::scope::EJavaAnalysisScope
   function eGet(int,boolean,boolean) in line 143
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE__LOADERS defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getLoaders() defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getExclusionFileName() defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   function eInverseRemove(InternalEObject,int,NotificationChain) in line 130
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE__LOADERS defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getLoaders() defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   function eIsSet(int) in line 193
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE__LOADERS defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable loaders defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable EXCLUSION_FILE_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable exclusionFileName defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   function eSet(int,Object) in line 158
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE__LOADERS defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getLoaders() defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setExclusionFileName(String) defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   function eStaticClass() in line 88
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function eUnset(int) in line 176
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE__LOADERS defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function getLoaders() defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function setExclusionFileName(String) defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable EXCLUSION_FILE_NAME_EDEFAULT defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   function getExclusionFileName() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exclusionFileName defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   function getLoaders() in line 97
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable loaders defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable EJAVA_ANALYSIS_SCOPE__LOADERS defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function setExclusionFileName(String) in line 118
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable exclusionFileName defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
      uses variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function toString() in line 208
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable exclusionFileName defined in com::ibm::wala::ecore::java::scope::impl::EJavaAnalysisScopeImpl
   function EJavaAnalysisScopeImpl() in line 79
      3 lines of code
      0 parameters
      1 conditional paths
   variable EXCLUSION_FILE_NAME_EDEFAULT in line 62
   variable exclusionFileName in line 72
   variable loaders in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/ESourceFileImpl.java
module com::ibm::wala::ecore::java::scope::impl::ESourceFileImpl
   inherits from com::ibm::wala::ecore::java::scope::impl::EFileImpl
   inherits from com::ibm::wala::ecore::java::scope::ESourceFile
   function eStaticClass() in line 38
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ESOURCE_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   function ESourceFileImpl() in line 29
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/JavaScopeFactoryImpl.java
module com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::java::scope::JavaScopeFactory
   function convertEBuiltInResourceToString(EDataType,Object) in line 204
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function convertEStandardClassLoaderToString(EDataType,Object) in line 224
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function convertToString(EDataType,Object) in line 97
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable EBUILT_IN_RESOURCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function convertEBuiltInResourceToString(EDataType,Object) defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable ESTANDARD_CLASS_LOADER defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function convertEStandardClassLoaderToString(EDataType,Object) defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
   function create(EClass) in line 61
      protection public
      14 lines of code
      1 parameters
      9 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEJavaAnalysisScope() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable ECLASS_LOADER defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEClassLoader() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable EBUILT_IN_MODULE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEBuiltInModule() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable EJAR_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEJarFile() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable EFILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEFile() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable ECLASS_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEClassFile() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable ESOURCE_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createESourceFile() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable ECLASSPATH defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEClasspath() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
   function createEBuiltInModule() in line 133
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEBuiltInResourceFromString(EDataType,String) in line 193
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function createEClassFile() in line 163
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEClassLoader() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEClasspath() in line 183
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEFile() in line 153
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEJarFile() in line 143
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEJavaAnalysisScope() in line 113
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createESourceFile() in line 173
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createEStandardClassLoaderFromString(EDataType,String) in line 213
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function createFromString(EDataType,String) in line 81
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable EBUILT_IN_RESOURCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEBuiltInResourceFromString(EDataType,String) defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
      uses variable ESTANDARD_CLASS_LOADER defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function createEStandardClassLoaderFromString(EDataType,String) defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
   function getJavaScopePackage() in line 233
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function init() in line 33
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function JavaScopeFactoryImpl() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopeFactoryImpl
   function JavaScopeFactoryImpl() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/impl/JavaScopePackageImpl.java
module com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::java::scope::JavaScopePackage
   function createPackageContents() in line 435
      protection public
      35 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eJavaAnalysisScopeEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable EJAVA_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable EJAVA_ANALYSIS_SCOPE__LOADERS defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eClassLoaderEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable ECLASS_LOADER defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable ECLASS_LOADER__MODULES defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable ECLASS_LOADER__LOADER_NAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eModuleEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable EMODULE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eBuiltInModuleEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable EBUILT_IN_MODULE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable EBUILT_IN_MODULE__ID defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eJarFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable EJAR_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable EJAR_FILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable EFILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable EFILE__URL defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eClassFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable ECLASS_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eSourceFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable ESOURCE_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eClasspathEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable ECLASSPATH defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable ECLASSPATH__STRING defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eBuiltInResourceEEnum defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable EBUILT_IN_RESOURCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eStandardClassLoaderEEnum defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable ESTANDARD_CLASS_LOADER defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   function getEBuiltInModule() in line 309
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eBuiltInModuleEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEBuiltInModule_Id() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eBuiltInModuleEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEBuiltInResource() in line 399
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eBuiltInResourceEEnum defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEClassFile() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClassFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEClassLoader() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClassLoaderEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEClassLoader_LoaderName() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClassLoaderEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEClassLoader_Modules() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClassLoaderEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEClasspath() in line 381
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClasspathEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEClasspath_String() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eClasspathEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEFile() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEFile_Url() in line 354
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEJarFile() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJarFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEJarFile_Url() in line 336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJarFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEJavaAnalysisScope() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaAnalysisScopeEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEJavaAnalysisScope_ExclusionFileName() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaAnalysisScopeEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEJavaAnalysisScope_Loaders() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eJavaAnalysisScopeEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEModule() in line 300
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eModuleEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getESourceFile() in line 372
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eSourceFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getEStandardClassLoader() in line 408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eStandardClassLoaderEEnum defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
   function getJavaScopeFactory() in line 417
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 195
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function JavaScopePackageImpl() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 485
      protection public
      56 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eBuiltInModuleEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEModule() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEFile() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eJavaAnalysisScopeEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEJavaAnalysisScope_Loaders() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEClassLoader() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEJavaAnalysisScope_ExclusionFileName() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eClassLoaderEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEClassLoader_Modules() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEClassLoader_LoaderName() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eModuleEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEBuiltInModule_Id() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEBuiltInResource() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eJarFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEJarFile_Url() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEFile_Url() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eClassFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eSourceFileEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eClasspathEClass defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function getEClasspath_String() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable eBuiltInResourceEEnum defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable DEFAULT_J2SE_LIBS_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable DEFAULT_J2EE_LIBS_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable PRIMORDIAL_JAR_MODEL_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable EXTENSION_JAR_MODEL_LITERAL defined in com::ibm::wala::ecore::java::scope::EBuiltInResource
      uses variable eStandardClassLoaderEEnum defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses variable PRIMORDIAL_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable EXTENSION_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable APPLICATION_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
      uses variable SYNTHETIC_LITERAL defined in com::ibm::wala::ecore::java::scope::EStandardClassLoader
   function JavaScopePackageImpl() in line 162
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopeFactory
   variable eBuiltInModuleEClass in line 96
   variable eBuiltInResourceEEnum in line 138
   variable eClassFileEClass in line 117
   variable eClassLoaderEClass in line 82
   variable eClasspathEClass in line 131
   variable eFileEClass in line 110
   variable eJarFileEClass in line 103
   variable eJavaAnalysisScopeEClass in line 75
   variable eModuleEClass in line 89
   variable eSourceFileEClass in line 124
   variable eStandardClassLoaderEEnum in line 145
   variable isCreated in line 426
   variable isInited in line 171
   variable isInitialized in line 476
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/JavaScopeFactory.java
module com::ibm::wala::ecore::java::scope::JavaScopeFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createEBuiltInModule() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEClassFile() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEClassLoader() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEClasspath() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEFile() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEJarFile() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEJavaAnalysisScope() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createESourceFile() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJavaScopePackage() in line 107
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/JavaScopePackage.java
module com::ibm::wala::ecore::java::scope::JavaScopePackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getEBuiltInModule() in line 427
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEBuiltInModule_Id() in line 438
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEBuiltInResource() in line 531
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClassFile() in line 490
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClassLoader() in line 385
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClassLoader_LoaderName() in line 407
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClassLoader_Modules() in line 396
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClasspath() in line 510
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEClasspath_String() in line 521
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEFile() in line 469
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEFile_Url() in line 480
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJarFile() in line 448
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJarFile_Url() in line 459
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaAnalysisScope() in line 353
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaAnalysisScope_ExclusionFileName() in line 375
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJavaAnalysisScope_Loaders() in line 364
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEModule() in line 417
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getESourceFile() in line 500
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEStandardClassLoader() in line 541
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJavaScopeFactory() in line 550
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable EBUILT_IN_MODULE in line 164
      protection public
   variable EBUILT_IN_MODULE__ID in line 173
      protection public
   variable EBUILT_IN_MODULE_FEATURE_COUNT in line 182
      protection public
   variable EBUILT_IN_RESOURCE in line 332
      protection public
   variable ECLASS_FILE in line 248
      protection public
   variable ECLASS_FILE__URL in line 257
      protection public
   variable ECLASS_FILE_FEATURE_COUNT in line 266
      protection public
   variable ECLASS_LOADER in line 108
      protection public
   variable ECLASS_LOADER__LOADER_NAME in line 126
      protection public
   variable ECLASS_LOADER__MODULES in line 117
      protection public
   variable ECLASS_LOADER_FEATURE_COUNT in line 135
      protection public
   variable ECLASSPATH in line 304
      protection public
   variable ECLASSPATH__STRING in line 313
      protection public
   variable ECLASSPATH_FEATURE_COUNT in line 322
      protection public
   variable EFILE in line 220
      protection public
   variable EFILE__URL in line 229
      protection public
   variable EFILE_FEATURE_COUNT in line 238
      protection public
   variable eINSTANCE in line 61
      protection public
   variable EJAR_FILE in line 192
      protection public
   variable EJAR_FILE__URL in line 201
      protection public
   variable EJAR_FILE_FEATURE_COUNT in line 210
      protection public
   variable EJAVA_ANALYSIS_SCOPE in line 71
      protection public
   variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME in line 89
      protection public
   variable EJAVA_ANALYSIS_SCOPE__LOADERS in line 80
      protection public
   variable EJAVA_ANALYSIS_SCOPE_FEATURE_COUNT in line 98
      protection public
   variable EMODULE in line 145
      protection public
   variable EMODULE_FEATURE_COUNT in line 154
      protection public
   variable eNAME in line 37
      protection public
   variable eNS_PREFIX in line 53
      protection public
   variable eNS_URI in line 45
      protection public
   variable ESOURCE_FILE in line 276
      protection public
   variable ESOURCE_FILE__URL in line 285
      protection public
   variable ESOURCE_FILE_FEATURE_COUNT in line 294
      protection public
   variable ESTANDARD_CLASS_LOADER in line 342
      protection public
module com::ibm::wala::ecore::java::scope::JavaScopePackage::Literals
   variable EBUILT_IN_MODULE in line 635
      protection public
   variable EBUILT_IN_MODULE__ID in line 643
      protection public
   variable EBUILT_IN_RESOURCE in line 727
      protection public
   variable ECLASS_FILE in line 689
      protection public
   variable ECLASS_LOADER in line 599
      protection public
   variable ECLASS_LOADER__LOADER_NAME in line 615
      protection public
   variable ECLASS_LOADER__MODULES in line 607
      protection public
   variable ECLASSPATH in line 709
      protection public
   variable ECLASSPATH__STRING in line 717
      protection public
   variable EFILE in line 671
      protection public
   variable EFILE__URL in line 679
      protection public
   variable EJAR_FILE in line 653
      protection public
   variable EJAR_FILE__URL in line 661
      protection public
   variable EJAVA_ANALYSIS_SCOPE in line 573
      protection public
   variable EJAVA_ANALYSIS_SCOPE__EXCLUSION_FILE_NAME in line 589
      protection public
   variable EJAVA_ANALYSIS_SCOPE__LOADERS in line 581
      protection public
   variable EMODULE in line 625
      protection public
   variable ESOURCE_FILE in line 699
      protection public
   variable ESTANDARD_CLASS_LOADER in line 737
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/util/JavaScopeAdapterFactory.java
module com::ibm::wala::ecore::java::scope::util::JavaScopeAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::java::scope::util::JavaScopeAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
   function createEBuiltInModuleAdapter() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEClassFileAdapter() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEClassLoaderAdapter() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEClasspathAdapter() in line 240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEFileAdapter() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJarFileAdapter() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJavaAnalysisScopeAdapter() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEModuleAdapter() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectAdapter() in line 252
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createESourceFileAdapter() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 55
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::scope::util::JavaScopeAdapterFactory
   function JavaScopeAdapterFactory() in line 41
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::scope::util::JavaScopeAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   variable modelPackage in line 33
   variable modelSwitch in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/scope/util/JavaScopeSwitch.java
module com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
   function caseEBuiltInModule(EBuiltInModule) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEClassFile(EClassFile) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEClassLoader(EClassLoader) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEClasspath(EClasspath) in line 286
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEFile(EFile) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJarFile(EJarFile) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJavaAnalysisScope(EJavaAnalysisScope) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEModule(EModule) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseESourceFile(ESourceFile) in line 271
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 68
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
   function doSwitch(int,EObject) in line 88
      66 lines of code
      2 parameters
      26 conditional paths
      uses variable EJAVA_ANALYSIS_SCOPE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEJavaAnalysisScope(EJavaAnalysisScope) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable ECLASS_LOADER defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEClassLoader(EClassLoader) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable EMODULE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEModule(EModule) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable EBUILT_IN_MODULE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEBuiltInModule(EBuiltInModule) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable EJAR_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEJarFile(EJarFile) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable EFILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEFile(EFile) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable ECLASS_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEClassFile(EClassFile) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable ESOURCE_FILE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseESourceFile(ESourceFile) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable ECLASSPATH defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses function caseEClasspath(EClasspath) defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
   function JavaScopeSwitch() in line 44
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::scope::util::JavaScopeSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
   variable modelPackage in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/util/JavaAdapterFactory.java
module com::ibm::wala::ecore::java::util::JavaAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::java::util::JavaAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::util::JavaSwitch
   function createECallSiteAdapter() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEClassHierarchyAdapter() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEGraphAdapter() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEInterfaceHierarchyAdapter() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJavaClassAdapter() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEJavaMethodAdapter() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectAdapter() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEObjectWithContainerIdAdapter() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createETreeAdapter() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createETypeHierarchyAdapter() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 60
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::util::JavaAdapterFactory
   function JavaAdapterFactory() in line 46
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::util::JavaAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
   variable modelPackage in line 38
   variable modelSwitch in line 76
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/java/util/JavaSwitch.java
module com::ibm::wala::ecore::java::util::JavaSwitch
   function caseECallSite(ECallSite) in line 182
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEClassHierarchy(EClassHierarchy) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEGraph(EGraph) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEInterfaceHierarchy(EInterfaceHierarchy) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJavaClass(EJavaClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEJavaMethod(EJavaMethod) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseEObjectWithContainerId(EObjectWithContainerId) in line 242
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseETree(ETree) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function caseETypeHierarchy(ETypeHierarchy) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 73
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::util::JavaSwitch
   function doSwitch(int,EObject) in line 93
      47 lines of code
      2 parameters
      19 conditional paths
      uses variable EJAVA_CLASS defined in com::ibm::wala::ecore::java::JavaPackage
      uses function caseEJavaClass(EJavaClass) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses function caseEObjectWithContainerId(EObjectWithContainerId) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses variable EJAVA_METHOD defined in com::ibm::wala::ecore::java::JavaPackage
      uses function caseEJavaMethod(EJavaMethod) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses variable ECALL_SITE defined in com::ibm::wala::ecore::java::JavaPackage
      uses function caseECallSite(ECallSite) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses variable ECLASS_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses function caseEClassHierarchy(EClassHierarchy) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses function caseETree(ETree) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses function caseEGraph(EGraph) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses variable EINTERFACE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses function caseEInterfaceHierarchy(EInterfaceHierarchy) defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses variable ETYPE_HIERARCHY defined in com::ibm::wala::ecore::java::JavaPackage
      uses function caseETypeHierarchy(ETypeHierarchy) defined in com::ibm::wala::ecore::java::util::JavaSwitch
   function JavaSwitch() in line 49
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::java::util::JavaSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
   variable modelPackage in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/EPhaseTiming.java
module com::ibm::wala::ecore::perf::EPhaseTiming
   inherits from org::eclipse::emf::ecore::EObject
   function getMillis() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getOrder() in line 96
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setMillis(long) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setName(String) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setOrder(int) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/impl/EPhaseTimingImpl.java
module com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::perf::EPhaseTiming
   function eGet(int,boolean,boolean) in line 181
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
      uses variable EPHASE_TIMING__NAME defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function getName() defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__MILLIS defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function getMillis() defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__ORDER defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function getOrder() defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function eIsSet(int) in line 238
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable EPHASE_TIMING__NAME defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable NAME_EDEFAULT defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable name defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__MILLIS defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable millis defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable MILLIS_EDEFAULT defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__ORDER defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable order defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable ORDER_EDEFAULT defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function eSet(int,Object) in line 198
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable EPHASE_TIMING__NAME defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function setName(String) defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__MILLIS defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function setMillis(long) defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__ORDER defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function setOrder(int) defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function eStaticClass() in line 109
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EPHASE_TIMING defined in com::ibm::wala::ecore::perf::PerfPackage::Literals
   function eUnset(int) in line 218
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable EPHASE_TIMING__NAME defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function setName(String) defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable NAME_EDEFAULT defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__MILLIS defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function setMillis(long) defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable MILLIS_EDEFAULT defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__ORDER defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function setOrder(int) defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable ORDER_EDEFAULT defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function getMillis() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable millis defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function getName() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function getOrder() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable order defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function setMillis(long) in line 148
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable millis defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__MILLIS defined in com::ibm::wala::ecore::perf::PerfPackage
   function setName(String) in line 127
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__NAME defined in com::ibm::wala::ecore::perf::PerfPackage
   function setOrder(int) in line 169
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable order defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable EPHASE_TIMING__ORDER defined in com::ibm::wala::ecore::perf::PerfPackage
   function toString() in line 255
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable name defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable millis defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
      uses variable order defined in com::ibm::wala::ecore::perf::impl::EPhaseTimingImpl
   function EPhaseTimingImpl() in line 100
      3 lines of code
      0 parameters
      1 conditional paths
   variable millis in line 73
   variable MILLIS_EDEFAULT in line 63
   variable name in line 53
   variable NAME_EDEFAULT in line 43
   variable order in line 93
   variable ORDER_EDEFAULT in line 83
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/impl/PerfFactoryImpl.java
module com::ibm::wala::ecore::perf::impl::PerfFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::perf::PerfFactory
   function create(EClass) in line 60
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EPHASE_TIMING defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function createEPhaseTiming() defined in com::ibm::wala::ecore::perf::impl::PerfFactoryImpl
   function createEPhaseTiming() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
   function getPerfPackage() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 32
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function PerfFactoryImpl() defined in com::ibm::wala::ecore::perf::impl::PerfFactoryImpl
   function PerfFactoryImpl() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/impl/PerfPackageImpl.java
module com::ibm::wala::ecore::perf::impl::PerfPackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::perf::PerfPackage
   function createPackageContents() in line 218
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses variable ePhaseTimingEClass defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses variable EPHASE_TIMING defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable EPHASE_TIMING__NAME defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable EPHASE_TIMING__MILLIS defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable EPHASE_TIMING__ORDER defined in com::ibm::wala::ecore::perf::PerfPackage
   function getEPhaseTiming() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePhaseTimingEClass defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
   function getEPhaseTiming_Millis() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePhaseTimingEClass defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
   function getEPhaseTiming_Name() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePhaseTimingEClass defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
   function getEPhaseTiming_Order() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePhaseTimingEClass defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
   function getPerfFactory() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 113
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function PerfPackageImpl() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 243
      protection public
      20 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable ePhaseTimingEClass defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function getEPhaseTiming_Name() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function getEPhaseTiming_Millis() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function getEPhaseTiming_Order() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
   function PerfPackageImpl() in line 80
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfFactory
   variable ePhaseTimingEClass in line 63
   variable isCreated in line 209
   variable isInited in line 89
   variable isInitialized in line 234
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/PerfFactory.java
module com::ibm::wala::ecore::perf::PerfFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createEPhaseTiming() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPerfPackage() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/PerfPackage.java
module com::ibm::wala::ecore::perf::PerfPackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getEPhaseTiming() in line 116
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPhaseTiming_Millis() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPhaseTiming_Name() in line 127
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPhaseTiming_Order() in line 149
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPerfFactory() in line 158
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 59
      protection public
   variable eNAME in line 35
      protection public
   variable eNS_PREFIX in line 51
      protection public
   variable eNS_URI in line 43
      protection public
   variable EPHASE_TIMING in line 69
      protection public
   variable EPHASE_TIMING__MILLIS in line 87
      protection public
   variable EPHASE_TIMING__NAME in line 78
      protection public
   variable EPHASE_TIMING__ORDER in line 96
      protection public
   variable EPHASE_TIMING_FEATURE_COUNT in line 105
      protection public
module com::ibm::wala::ecore::perf::PerfPackage::Literals
   variable EPHASE_TIMING in line 181
      protection public
   variable EPHASE_TIMING__MILLIS in line 197
      protection public
   variable EPHASE_TIMING__NAME in line 189
      protection public
   variable EPHASE_TIMING__ORDER in line 205
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/util/PerfAdapterFactory.java
module com::ibm::wala::ecore::perf::util::PerfAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::perf::util::PerfAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::perf::util::PerfSwitch
   function createEObjectAdapter() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEPhaseTimingAdapter() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 55
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::perf::util::PerfAdapterFactory
   function PerfAdapterFactory() in line 41
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::perf::util::PerfAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
   variable modelPackage in line 33
   variable modelSwitch in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/perf/util/PerfSwitch.java
module com::ibm::wala::ecore::perf::util::PerfSwitch
   function caseEPhaseTiming(EPhaseTiming) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 68
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::perf::util::PerfSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::perf::util::PerfSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::perf::util::PerfSwitch
   function doSwitch(int,EObject) in line 88
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable EPHASE_TIMING defined in com::ibm::wala::ecore::perf::PerfPackage
      uses function caseEPhaseTiming(EPhaseTiming) defined in com::ibm::wala::ecore::perf::util::PerfSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::perf::util::PerfSwitch
   function PerfSwitch() in line 44
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::perf::util::PerfSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
   variable modelPackage in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/EPattern.java
module com::ibm::wala::ecore::regex::EPattern
   inherits from org::eclipse::emf::ecore::EObject
   function getPattern() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setPattern(String) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/impl/EPatternImpl.java
module com::ibm::wala::ecore::regex::impl::EPatternImpl
   inherits from org::eclipse::emf::ecore::impl::EObjectImpl
   inherits from com::ibm::wala::ecore::regex::EPattern
   function eGet(int,boolean,boolean) in line 97
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable EPATTERN__PATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
      uses function getPattern() defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
   function eIsSet(int) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EPATTERN__PATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable PATTERN_EDEFAULT defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
      uses variable pattern defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
   function eSet(int,Object) in line 110
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable EPATTERN__PATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
      uses function setPattern(String) defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
   function eStaticClass() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EPATTERN defined in com::ibm::wala::ecore::regex::RegexPackage::Literals
   function eUnset(int) in line 124
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable EPATTERN__PATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
      uses function setPattern(String) defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
      uses variable PATTERN_EDEFAULT defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
   function getPattern() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
   function setPattern(String) in line 85
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable pattern defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
      uses variable EPATTERN__PATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
   function toString() in line 151
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable pattern defined in com::ibm::wala::ecore::regex::impl::EPatternImpl
   function EPatternImpl() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable pattern in line 51
   variable PATTERN_EDEFAULT in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/impl/RegexFactoryImpl.java
module com::ibm::wala::ecore::regex::impl::RegexFactoryImpl
   inherits from org::eclipse::emf::ecore::impl::EFactoryImpl
   inherits from com::ibm::wala::ecore::regex::RegexFactory
   function create(EClass) in line 60
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EPATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
      uses function createEPattern() defined in com::ibm::wala::ecore::regex::impl::RegexFactoryImpl
   function createEPattern() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getPackage() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
   function getRegexPackage() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 32
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function RegexFactoryImpl() defined in com::ibm::wala::ecore::regex::impl::RegexFactoryImpl
   function RegexFactoryImpl() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/impl/RegexPackageImpl.java
module com::ibm::wala::ecore::regex::impl::RegexPackageImpl
   inherits from org::eclipse::emf::ecore::impl::EPackageImpl
   inherits from com::ibm::wala::ecore::regex::RegexPackage
   function createPackageContents() in line 200
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable isCreated defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses variable ePatternEClass defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses variable EPATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable EPATTERN__PATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
   function getEPattern() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePatternEClass defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
   function getEPattern_Pattern() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ePatternEClass defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
   function getRegexFactory() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 113
      protection public
      45 lines of code
      0 parameters
      2 conditional paths
      uses variable isInited defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses function RegexPackageImpl() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses variable eNS_URI defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::graph::GraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::common::CommonPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::perf::PerfPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::JavaPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::callGraph::CallGraphPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::pointerAnalysis::PointerAnalysisPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::java::scope::JavaScopePackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::j2ee::scope::J2EEScopePackage
      uses function createPackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function createPackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::graph::impl::GraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::common::impl::CommonPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::perf::impl::PerfPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::impl::JavaPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::callGraph::impl::CallGraphPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::pointerAnalysis::impl::PointerAnalysisPackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::java::scope::impl::JavaScopePackageImpl
      uses function initializePackageContents() defined in com::ibm::wala::ecore::j2ee::scope::impl::J2EEScopePackageImpl
   function initializePackageContents() in line 223
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses variable isInitialized defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses variable eNAME defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_PREFIX defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable ePatternEClass defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
      uses function getEPattern_Pattern() defined in com::ibm::wala::ecore::regex::impl::RegexPackageImpl
   function RegexPackageImpl() in line 80
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable eNS_URI defined in com::ibm::wala::ecore::regex::RegexPackage
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexFactory
   variable ePatternEClass in line 63
   variable isCreated in line 191
   variable isInited in line 89
   variable isInitialized in line 214
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/RegexFactory.java
module com::ibm::wala::ecore::regex::RegexFactory
   inherits from org::eclipse::emf::ecore::EFactory
   function createEPattern() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRegexPackage() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/RegexPackage.java
module com::ibm::wala::ecore::regex::RegexPackage
   inherits from org::eclipse::emf::ecore::EPackage
   function getEPattern() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEPattern_Pattern() in line 109
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRegexFactory() in line 118
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable eINSTANCE in line 59
      protection public
   variable eNAME in line 35
      protection public
   variable eNS_PREFIX in line 51
      protection public
   variable eNS_URI in line 43
      protection public
   variable EPATTERN in line 69
      protection public
   variable EPATTERN__PATTERN in line 78
      protection public
   variable EPATTERN_FEATURE_COUNT in line 87
      protection public
module com::ibm::wala::ecore::regex::RegexPackage::Literals
   variable EPATTERN in line 141
      protection public
   variable EPATTERN__PATTERN in line 149
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/util/RegexAdapterFactory.java
module com::ibm::wala::ecore::regex::util::RegexAdapterFactory
   inherits from org::eclipse::emf::common::notify::impl::AdapterFactoryImpl
   function createAdapter(Notifier) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modelSwitch defined in com::ibm::wala::ecore::regex::util::RegexAdapterFactory
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::regex::util::RegexSwitch
   function createEObjectAdapter() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEPatternAdapter() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFactoryForType(Object) in line 55
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::regex::util::RegexAdapterFactory
   function RegexAdapterFactory() in line 41
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::regex::util::RegexAdapterFactory
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
   variable modelPackage in line 33
   variable modelSwitch in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.emf/src/com/ibm/wala/ecore/regex/util/RegexSwitch.java
module com::ibm::wala::ecore::regex::util::RegexSwitch
   function caseEPattern(EPattern) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultCase(EObject) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EObject) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doSwitch(EClass,EObject) in line 68
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::regex::util::RegexSwitch
      uses function doSwitch(EObject) defined in com::ibm::wala::ecore::regex::util::RegexSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::regex::util::RegexSwitch
   function doSwitch(int,EObject) in line 88
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable EPATTERN defined in com::ibm::wala::ecore::regex::RegexPackage
      uses function caseEPattern(EPattern) defined in com::ibm::wala::ecore::regex::util::RegexSwitch
      uses function defaultCase(EObject) defined in com::ibm::wala::ecore::regex::util::RegexSwitch
   function RegexSwitch() in line 44
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable modelPackage defined in com::ibm::wala::ecore::regex::util::RegexSwitch
      uses variable eINSTANCE defined in com::ibm::wala::ecore::regex::RegexPackage
   variable modelPackage in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/AbstractDeclaredTransaction.java
module com::ibm::wala::j2ee::AbstractDeclaredTransaction
   inherits from Comparable
   inherits from com::ibm::wala::j2ee::IDeclaredTransaction
   abstract class
   function compareTo(IDeclaredTransaction) in line 129
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function equals(Object) defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses variable bean defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function kindString() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function getMethodReference() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function toString() defined in com::ibm::wala::types::MethodReference
      uses function AbstractDeclaredTransaction(EnterpriseBean,int,int) defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function equals(Object) in line 108
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function AbstractDeclaredTransaction(EnterpriseBean,int,int) defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses variable bean defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function getMethodReference() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable kind defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function getBean() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function getMethodElement() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function getMethodElement() in line 172
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodReference() in line 142
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses variable kind defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function getMethodReference() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function hashCode() defined in com::ibm::wala::types::MemberReference
   function isMandatory() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function isNever() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function isNotSupported() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function isRequired() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function isRequiresNew() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function isSupports() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function kindString() in line 85
      17 lines of code
      0 parameters
      6 conditional paths
      uses variable kind defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function toString() in line 56
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function kindString() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function getMethodReference() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function transactionTypeString() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function transactionTypeString() in line 65
      19 lines of code
      0 parameters
      7 conditional paths
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function AbstractDeclaredTransaction(EnterpriseBean,int,int) in line 45
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable kind defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
   variable bean in line 33
   variable kind in line 38
   variable transactionType in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/AppClientEntrypoints.java
module com::ibm::wala::j2ee::AppClientEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::Entrypoints
   function addEntrypoints(ApplicationClientFile) in line 118
      31 lines of code
      1 parameters
      7 conditional paths
      uses variable scope defined in com::ibm::wala::j2ee::AppClientEntrypoints
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable cha defined in com::ibm::wala::j2ee::AppClientEntrypoints
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::j2ee::AppClientEntrypoints
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses variable entrypoints defined in com::ibm::wala::j2ee::AppClientEntrypoints
   function addEntrypointsRecursive(TopLevelArchiveModule,ClassLoaderReference) in line 98
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable APPLICATION_CLIENT_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses function addEntrypoints(ApplicationClientFile) defined in com::ibm::wala::j2ee::AppClientEntrypoints
      uses function isModuleFile() defined in com::ibm::wala::classLoader::ModuleEntry
      uses function asModule() defined in com::ibm::wala::classLoader::ModuleEntry
   function contains(MethodReference) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::AppClientEntrypoints
   function iterator() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::AppClientEntrypoints
   function AppClientEntrypoints(J2EEAnalysisScope,ClassHierarchy,WarningSet) in line 75
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable cha defined in com::ibm::wala::j2ee::AppClientEntrypoints
      uses variable scope defined in com::ibm::wala::j2ee::AppClientEntrypoints
      uses variable warnings defined in com::ibm::wala::j2ee::AppClientEntrypoints
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getModules(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function addEntrypointsRecursive(TopLevelArchiveModule,ClassLoaderReference) defined in com::ibm::wala::j2ee::AppClientEntrypoints
   variable cha in line 58
   variable entrypoints in line 53
   variable scope in line 63
   variable warnings in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/BeanMetaData.java
module com::ibm::wala::j2ee::BeanMetaData
   function getBean() in line 142
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCMPFields() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCMRFields() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCMRGetters() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCMRSetters() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJBClass() in line 86
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEJBJar() in line 147
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getField(CMRField) in line 137
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFinders() in line 129
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getGetterMethods() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getHomeInterface() in line 152
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLocalHomeInterface() in line 157
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLocalInterface() in line 167
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPrimaryKeyType() in line 172
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRemoteInterface() in line 162
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSetterMethods() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isBeanManaged() in line 107
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isContainerManaged() in line 93
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isContainerManagedEntity() in line 100
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isMessageDrivenBean() in line 121
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSessionBean() in line 114
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/BeanMetaDataImpl.java
module com::ibm::wala::j2ee::BeanMetaDataImpl
   inherits from com::ibm::wala::j2ee::BeanMetaData
   function addCMPAttributes(ContainerManagedEntity) in line 146
      21 lines of code
      1 parameters
      5 conditional paths
      uses function createFieldReference(CMPAttribute) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable cmpFields defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function getName() defined in com::ibm::wala::types::MemberReference
   function computeCMPFields() in line 136
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable cmpFields defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function addCMPAttributes(ContainerManagedEntity) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function computeEJBInterfaces() in line 110
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable homeInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses variable localHomeInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable remoteInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable localInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function createFieldReference(CMPAttribute) in line 357
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
   function createGetterReference(CMPAttribute,String) in line 384
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function createMethodReference(Method) in line 375
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
   function createSetterReference(CMPAttribute,String) in line 397
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function extractFinders(HashSet< MethodReference >,Method[]) in line 333
      9 lines of code
      2 parameters
      3 conditional paths
      uses function isFinder(Method) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createMethodReference(Method) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getBean() in line 469
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getCMPFields() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cmpFields defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getCMRFields() in line 181
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createFieldReference(CMPAttribute) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getCMRGetters() in line 241
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createGetterReference(CMPAttribute,String) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createFieldReference(CMPAttribute) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getCMRSetters() in line 302
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createSetterReference(CMPAttribute,String) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createFieldReference(CMPAttribute) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getEJBClass() in line 408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getEJBJar() in line 521
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ejbJar defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getField(CMRField) in line 454
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cmpFields defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getFinders() in line 324
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function extractFinders(HashSet< MethodReference >,Method[]) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getGetterMethods() in line 207
      protection public
      28 lines of code
      0 parameters
      6 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable cmpFields defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createGetterReference(CMPAttribute,String) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createFieldReference(CMPAttribute) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getHomeInterface() in line 476
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable homeInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getLocalHomeInterface() in line 483
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable localHomeInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getLocalInterface() in line 497
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable localInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getPrimaryKeyType() in line 501
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
   function getRemoteInterface() in line 490
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable remoteInterface defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function getSetterMethods() in line 267
      protection public
      28 lines of code
      0 parameters
      6 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable cmpFields defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createSetterReference(CMPAttribute,String) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function createFieldReference(CMPAttribute) defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function hashCode() in line 527
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function isBeanManaged() in line 514
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function isContainerManaged() in line 415
      protection public
      14 lines of code
      0 parameters
      5 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function isContainerManagedEntity() in line 433
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function isFinder(Method) in line 348
      3 lines of code
      1 parameters
      1 conditional paths
   function isMessageDrivenBean() in line 447
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function isSessionBean() in line 440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::BeanMetaDataImpl
   function toString() in line 462
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function toString() defined in com::ibm::wala::types::TypeReference
   variable bean in line 57
   variable cmpFields in line 93
   variable ejbJar in line 62
   variable homeInterface in line 72
   variable klass in line 67
   variable localHomeInterface in line 77
   variable localInterface in line 87
   variable remoteInterface in line 82
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/IArrayContents.java
module com::ibm::wala::j2ee::client::IArrayContents
   function getDeclaredClass() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/ArrayContentsImpl.java
module com::ibm::wala::j2ee::client::impl::ArrayContentsImpl
   inherits from com::ibm::wala::j2ee::client::IArrayContents
   function equals(Object) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ArrayContentsImpl(IClass) defined in com::ibm::wala::j2ee::client::impl::ArrayContentsImpl
      uses variable klass defined in com::ibm::wala::j2ee::client::impl::ArrayContentsImpl
   function getDeclaredClass() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::client::impl::ArrayContentsImpl
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::client::impl::ArrayContentsImpl
   function toString() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::client::impl::ArrayContentsImpl
   function ArrayContentsImpl(IClass) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable klass defined in com::ibm::wala::j2ee::client::impl::ArrayContentsImpl
   variable klass in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/CallGraphBuilderFactoryFactory.java
module com::ibm::wala::j2ee::client::impl::CallGraphBuilderFactoryFactory
   function getCallGraphBuilderFactory(Properties) in line 33
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/ClassImpl.java
module com::ibm::wala::j2ee::client::impl::ClassImpl
   inherits from com::ibm::wala::j2ee::client::IClass
   function equals(Object) in line 83
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ClassImpl(com.ibm.wala.classLoader.IClass) defined in com::ibm::wala::j2ee::client::impl::ClassImpl
      uses function getName() defined in com::ibm::wala::j2ee::client::impl::ClassImpl
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::impl::ClassImpl
   function getClassLoaderName() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classLoader defined in com::ibm::wala::j2ee::client::impl::ClassImpl
   function getName() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::j2ee::client::impl::ClassImpl
   function getPackage() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pack defined in com::ibm::wala::j2ee::client::impl::ClassImpl
   function hashCode() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::impl::ClassImpl
      uses function getName() defined in com::ibm::wala::j2ee::client::impl::ClassImpl
   function toString() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::j2ee::client::impl::ClassImpl
   function ClassImpl(com.ibm.wala.classLoader.IClass) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ClassImpl(String,String) in line 42
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable classLoader defined in com::ibm::wala::j2ee::client::impl::ClassImpl
      uses variable name defined in com::ibm::wala::j2ee::client::impl::ClassImpl
      uses function toString() defined in com::ibm::wala::util::ImmutableByteArray
   variable classLoader in line 25
   variable name in line 26
   variable pack in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/MemberImpl.java
module com::ibm::wala::j2ee::client::impl::MemberImpl
   abstract class
   function equals(Object) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassLoaderName() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaringClass defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::IClass
   function getDeclaringClass() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable declaringClass defined in com::ibm::wala::j2ee::client::impl::MemberImpl
   function getName() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::j2ee::client::impl::MemberImpl
   function hashCode() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses function getName() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses function equals(Object) defined in com::ibm::wala::j2ee::client::impl::MemberImpl
   function MemberImpl(MemberReference) in line 27
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::types::MemberReference
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function toString() defined in com::ibm::wala::types::TypeName
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function getName() defined in com::ibm::wala::types::ClassLoaderReference
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function getName() defined in com::ibm::wala::types::MemberReference
   variable declaringClass in line 24
   variable name in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/MethodImpl.java
module com::ibm::wala::j2ee::client::impl::MethodImpl
   inherits from com::ibm::wala::j2ee::client::impl::MemberImpl
   inherits from com::ibm::wala::j2ee::client::IMethod
   function equals(Object) in line 65
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function MethodImpl(MethodReference) defined in com::ibm::wala::j2ee::client::impl::MethodImpl
      uses function getDeclaringClass() defined in com::ibm::wala::j2ee::client::IMethod
      uses function getDeclaringClass() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::IMethod
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses function getName() defined in com::ibm::wala::j2ee::client::IMethod
      uses function getName() defined in com::ibm::wala::j2ee::client::impl::MemberImpl
      uses variable descriptor defined in com::ibm::wala::j2ee::client::impl::MethodImpl
   function getDescriptor() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in com::ibm::wala::j2ee::client::impl::MethodImpl
   function getSelector() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::j2ee::client::IMethod
      uses variable descriptor defined in com::ibm::wala::j2ee::client::impl::MethodImpl
   function getSignature() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::j2ee::client::IMethod
      uses function getName() defined in com::ibm::wala::j2ee::client::IMethod
      uses function getDescriptor() defined in com::ibm::wala::j2ee::client::impl::MethodImpl
   function hashCode() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::j2ee::client::IMethod
      uses function getClassLoaderName() defined in com::ibm::wala::j2ee::client::IMethod
      uses function getName() defined in com::ibm::wala::j2ee::client::IMethod
      uses variable descriptor defined in com::ibm::wala::j2ee::client::impl::MethodImpl
   function toString() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in com::ibm::wala::j2ee::client::impl::MethodImpl
   function MethodImpl(MethodReference) in line 26
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable descriptor defined in com::ibm::wala::j2ee::client::impl::MethodImpl
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function toString() defined in com::ibm::wala::types::Descriptor
   variable descriptor in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/impl/ProgramLocation.java
module com::ibm::wala::j2ee::client::impl::ProgramLocation
   inherits from com::ibm::wala::j2ee::client::IProgramLocation
   function getBytecodeIndex() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeIndex defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
   function getLineNumber() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lineNumber defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
   function getMethod() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
   function toString() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
      uses variable bytecodeIndex defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
      uses variable lineNumber defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
   function ProgramLocation(IMethod,int,int) in line 27
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
      uses variable bytecodeIndex defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
      uses variable lineNumber defined in com::ibm::wala::j2ee::client::impl::ProgramLocation
   variable bytecodeIndex in line 23
   variable lineNumber in line 25
   variable method in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/IProgramLocation.java
module com::ibm::wala::j2ee::client::IProgramLocation
   function getBytecodeIndex() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLineNumber() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethod() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/client/PruneCallGraph.java
module com::ibm::wala::j2ee::client::PruneCallGraph
   function computeNodesOnPathToAccept(CallGraph,Filter) in line 61
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses function solve() defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
      uses function getFakeRootNode() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getVariable(CGNode) defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
      uses function getValue() defined in com::ibm::wala::fixpoint::BooleanVariable
      uses variable DEBUG defined in com::ibm::wala::j2ee::client::PruneCallGraph
   variable DEBUG in line 53
module com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
   function getVariable(CGNode) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable solver defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
   function solve() in line 113
      protection public
      36 lines of code
      0 parameters
      2 conditional paths
      uses variable nodes defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
      uses variable filter defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
      uses function accepts(Object) defined in com::ibm::wala::util::collections::Filter
      uses variable CG defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
      uses variable solver defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
   function OnPathSystem(CallGraph,Filter) in line 98
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable CG defined in com::ibm::wala::j2ee::client::PruneCallGraph::OnPathSystem
      uses function iterateNodes(IntSet) defined in com::ibm::wala::util::graph::NumberedNodeManager
   variable CG in line 86
   variable filter in line 88
   variable nodes in line 90
   variable solver in line 92
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/CommandInterpreter.java
module com::ibm::wala::j2ee::CommandInterpreter
   inherits from com::ibm::wala::ipa::callgraph::propagation::SSAContextInterpreter
   function findOrCreateSpecializedMethod(CGNode) in line 328
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses variable syntheticMethodCache defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable RECEIVER defined in com::ibm::wala::ipa::callgraph::ContextKey
      uses function SpecializedExecuteMethod(IMethod,final TypeAbstraction) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
   function getCaughtExceptions(CGNode,WarningSet) in line 348
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCFG(CGNode,WarningSet) in line 407
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(WarningSet) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses variable warnings defined in com::ibm::wala::j2ee::CommandInterpreter
      uses function getControlFlowGraph() defined in com::ibm::wala::ssa::IR
   function getDU(CGNode,WarningSet) in line 432
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getIR(WarningSet) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses variable warnings defined in com::ibm::wala::j2ee::CommandInterpreter
   function getInvokeStatements(CGNode) in line 148
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findOrCreateSpecializedMethod(CGNode) defined in com::ibm::wala::j2ee::CommandInterpreter
      uses function getInvokeStatements() defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
   function getIR(CGNode,WarningSet) in line 103
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateSpecializedMethod(CGNode) defined in com::ibm::wala::j2ee::CommandInterpreter
      uses function getIR(WarningSet) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses variable warnings defined in com::ibm::wala::j2ee::CommandInterpreter
   function getNumberOfStatements(CGNode,WarningSet) in line 115
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findOrCreateSpecializedMethod(CGNode) defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable calls defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
   function hasObjectArrayLoad(CGNode,WarningSet) in line 358
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function hasObjectArrayStore(CGNode,WarningSet) in line 368
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function iterateCallSites(CGNode,WarningSet) in line 160
      protection public
      17 lines of code
      2 parameters
      1 conditional paths
      uses function getInvokeStatements(CGNode) defined in com::ibm::wala::j2ee::CommandInterpreter
      uses function getCallSite() defined in com::ibm::wala::ssa::SSAAbstractInvokeInstruction
   function iterateCastTypes(CGNode,WarningSet) in line 378
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function iterateFieldsRead(CGNode,WarningSet) in line 310
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function iterateFieldsWritten(CGNode,WarningSet) in line 320
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function iterateNewSites(CGNode,WarningSet) in line 141
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function recordFactoryType(CGNode,IClass) in line 388
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setWarnings(WarningSet) in line 398
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function understands(CGNode) in line 126
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getContext() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable ExecuteMethod defined in com::ibm::wala::j2ee::J2EEContextSelector
   function CommandInterpreter(ClassHierarchy,WarningSet) in line 91
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable warnings defined in com::ibm::wala::j2ee::CommandInterpreter
   variable cha in line 78
   variable DEBUG in line 65
   variable PerformExecuteAtom in line 67
   variable PerformExecuteDesc in line 68
   variable syntheticMethodCache in line 73
   variable warnings in line 83
module com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
   inherits from com::ibm::wala::classLoader::SyntheticMethod
   function addStatementsForConcreteType(final TypeReference) in line 223
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable PerformExecuteAtom defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable PerformExecuteDesc defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable calls defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function addStatementsForSetOfTypes(Iterator< IClass >) in line 237
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function addStatementsForConcreteType(final TypeReference) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
   function equals(Object) in line 260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getInvokeStatements() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable calls defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
   function getIR(WarningSet) in line 298
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getStatements(WarningSet) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses variable warnings defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable EVERYWHERE defined in com::ibm::wala::ipa::callgraph::impl::Everywhere
      uses variable defaultOptions defined in com::ibm::wala::ssa::SSAOptions
   function getStatements(WarningSet) in line 284
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable calls defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
   function hashCode() in line 270
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SpecializedExecuteMethod(IMethod,final TypeAbstraction) in line 187
      29 lines of code
      2 parameters
      8 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function addStatementsForConcreteType(final TypeReference) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses function getType() defined in com::ibm::wala::analysis::typeInference::TypeAbstraction
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable cha defined in com::ibm::wala::j2ee::CommandInterpreter
      uses function getImplementors(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getType() defined in com::ibm::wala::analysis::typeInference::ConeType
      uses variable DEBUG defined in com::ibm::wala::j2ee::CommandInterpreter
      uses variable warnings defined in com::ibm::wala::j2ee::CommandInterpreter
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function create(TypeAbstraction) defined in com::ibm::wala::j2ee::CommandInterpreter::NoSubtypesWarning
      uses function addStatementsForSetOfTypes(Iterator< IClass >) defined in com::ibm::wala::j2ee::CommandInterpreter::SpecializedExecuteMethod
      uses function computeSubClasses(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   variable calls in line 183
module com::ibm::wala::j2ee::CommandInterpreter::NoSubtypesWarning
   inherits from com::ibm::wala::util::warnings::Warning
   function create(TypeAbstraction) in line 425
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 422
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/DeploymentDeclaredTransaction.java
module com::ibm::wala::j2ee::DeploymentDeclaredTransaction
   inherits from com::ibm::wala::j2ee::AbstractDeclaredTransaction
   function getMethodElement() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodElement defined in com::ibm::wala::j2ee::DeploymentDeclaredTransaction
   function getMethodReference() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::j2ee::DeploymentDeclaredTransaction
      uses variable loader defined in com::ibm::wala::j2ee::DeploymentDeclaredTransaction
   function DeploymentDeclaredTransaction(EnterpriseBean,Method,MethodElement,ClassLoaderReference,int,int) in line 49
      protection public
      6 lines of code
      6 parameters
      1 conditional paths
      uses variable kind defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses variable transactionType defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses variable method defined in com::ibm::wala::j2ee::DeploymentDeclaredTransaction
      uses variable methodElement defined in com::ibm::wala::j2ee::DeploymentDeclaredTransaction
      uses variable loader defined in com::ibm::wala::j2ee::DeploymentDeclaredTransaction
   variable loader in line 44
   variable method in line 33
   variable methodElement in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/DeploymentMetaData.java
module com::ibm::wala::j2ee::DeploymentMetaData
   function getAllCMPFields() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllCMRFields() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllCMRGetters() in line 137
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAllFinders() in line 130
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBeanForInterface(TypeReference) in line 89
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBeanMetaData(TypeReference) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCMPField(MethodReference) in line 117
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCMPType(TypeReference) in line 103
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCMRBean(FieldReference) in line 145
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCMRRole(FieldReference) in line 196
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFinderBeanType(MethodReference) in line 151
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getOppositeField(FieldReference) in line 190
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isCMPGetter(MethodReference) in line 110
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isCMPSetter(MethodReference) in line 124
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isCMRGetter(MethodReference) in line 178
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isCMRSetter(MethodReference) in line 184
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isContainerManaged(TypeReference) in line 96
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isEJBInterface(TypeReference) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isFinder(MethodReference) in line 157
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isHomeInterface(TypeReference) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isLocalHomeInterface(TypeReference) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isLocalInterface(TypeReference) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isMessageDriven(TypeReference) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isRemoteInterface(TypeReference) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function iterateEntities() in line 162
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iterateMDBs() in line 172
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iterateSessions() in line 167
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/DeploymentMetaDataImpl.java
module com::ibm::wala::j2ee::DeploymentMetaDataImpl
   inherits from com::ibm::wala::j2ee::DeploymentMetaData
   function computeCMRs(EJBJar,ClassLoaderReference) in line 314
      42 lines of code
      2 parameters
      7 conditional paths
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable cmrGetters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getCMRGetters() defined in com::ibm::wala::j2ee::BeanMetaData
      uses variable cmrSetters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getCMRSetters() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getField(CMRField) defined in com::ibm::wala::j2ee::BeanMetaData
      uses variable cmrField2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable cmrField2Role defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable oppositeFields defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function computeFinders() in line 292
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getFinders() defined in com::ibm::wala::j2ee::BeanMetaData
      uses variable finder2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function computeGettersAndSetters() in line 280
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable getters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getGetterMethods() defined in com::ibm::wala::j2ee::BeanMetaData
      uses variable setters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getSetterMethods() defined in com::ibm::wala::j2ee::BeanMetaData
   function getAllCMPFields() in line 254
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getCMPFields() defined in com::ibm::wala::j2ee::BeanMetaData
   function getAllCMRFields() in line 270
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getCMRFields() defined in com::ibm::wala::j2ee::BeanMetaData
   function getAllCMRGetters() in line 458
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cmrGetters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function getAllFinders() in line 451
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable finder2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function getBeanForInterface(TypeReference) in line 392
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable remote2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable home2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable local2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable localHome2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function getBeanMetaData(TypeReference) in line 247
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable allBeans defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function getCMPField(MethodReference) in line 426
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable getters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable setters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function getCMPType(TypeReference) in line 407
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function getEJBClass() defined in com::ibm::wala::j2ee::BeanMetaData
   function getCMRBean(FieldReference) in line 465
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cmrField2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function getCMRRole(FieldReference) in line 554
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cmrField2Role defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function getFinderBeanType(MethodReference) in line 474
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable finder2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getEJBClass() defined in com::ibm::wala::j2ee::BeanMetaData
   function getOppositeField(FieldReference) in line 545
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oppositeFields defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isCMPGetter(MethodReference) in line 437
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable getters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isCMPSetter(MethodReference) in line 444
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable setters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isCMRGetter(MethodReference) in line 527
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cmrGetters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isCMRSetter(MethodReference) in line 536
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cmrSetters defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isContainerManaged(TypeReference) in line 415
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable allBeans defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isContainerManaged() defined in com::ibm::wala::j2ee::BeanMetaData
   function isEJBInterface(TypeReference) in line 385
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isHomeInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isRemoteInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isLocalInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isLocalHomeInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isFinder(MethodReference) in line 487
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable finder2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isHomeInterface(TypeReference) in line 360
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable home2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isLocalHomeInterface(TypeReference) in line 381
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable localHome2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isLocalInterface(TypeReference) in line 374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable local2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isMessageDriven(TypeReference) in line 561
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable MDBs defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function isRemoteInterface(TypeReference) in line 367
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable remote2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function iterateEntities() in line 500
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function iterateMDBs() in line 518
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MDBs defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function iterateSessions() in line 509
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessions defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function mapEJBInterface(ClassLoaderReference,BeanMetaData,String,HashMap< TypeReference, BeanMetaData >) in line 226
      19 lines of code
      4 parameters
      4 conditional paths
      uses function isContainerManaged() defined in com::ibm::wala::j2ee::BeanMetaData
   function processEJBJarFile(ClassLoaderReference,EJBJarFile) in line 166
      47 lines of code
      2 parameters
      7 conditional paths
      uses variable allBeans defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isContainerManaged() defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable entities defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isSessionBean() defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable sessions defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isMessageDrivenBean() defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses variable MDBs defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function isBeanManaged() defined in com::ibm::wala::j2ee::BeanMetaDataImpl
      uses function mapEJBInterface(ClassLoaderReference,BeanMetaData,String,HashMap< TypeReference, BeanMetaData >) defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable home2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable remote2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable local2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses variable localHome2Bean defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function computeGettersAndSetters() defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function computeFinders() defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
      uses function computeCMRs(EJBJar,ClassLoaderReference) defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   function DeploymentMetaDataImpl(AnalysisScope) in line 139
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getModules(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function processEJBJarFile(ClassLoaderReference,EJBJarFile) defined in com::ibm::wala::j2ee::DeploymentMetaDataImpl
   variable allBeans in line 71
   variable cmrField2Bean in line 120
   variable cmrField2Role in line 125
   variable cmrGetters in line 110
   variable cmrSetters in line 115
   variable entities in line 53
   variable finder2Bean in line 105
   variable getters in line 99
   variable home2Bean in line 83
   variable local2Bean in line 88
   variable localHome2Bean in line 93
   variable MDBs in line 65
   variable oppositeFields in line 130
   variable remote2Bean in line 77
   variable sessions in line 59
   variable setters in line 100
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/EJBConstants.java
module com::ibm::wala::j2ee::EJBConstants
   variable BytesMessageClass in line 95
      protection public
   variable CREATE in line 63
      protection public
   variable CreateExceptionClass in line 75
      protection public
   variable EJB_CREATE in line 64
      protection public
   variable EJB_POST_CREATE in line 65
      protection public
   variable EJB_REMOVE in line 67
      protection public
   variable ejbActivateAtom in line 35
      protection public
   variable ejbActivateSig in line 36
      protection public
   variable EJBExceptionClass in line 78
      protection public
   variable ejbLoadAtom in line 41
      protection public
   variable ejbLoadSig in line 42
      protection public
   variable ejbPassivateAtom in line 38
      protection public
   variable ejbPassivateSig in line 39
      protection public
   variable ejbRemoveAtom in line 32
      protection public
   variable ejbRemoveSig in line 33
      protection public
   variable ejbStoreAtom in line 44
      protection public
   variable ejbStoreSig in line 45
      protection public
   variable FinderExceptionClass in line 81
      protection public
   variable GET_EJB_HOME in line 70
      protection public
   variable GET_EJB_META_DATA in line 69
      protection public
   variable GET_HANDLE in line 71
      protection public
   variable GET_PRIMARY_KEY in line 68
      protection public
   variable IS_IDENTICAL in line 72
      protection public
   variable KnownMessages in line 103
      protection public
   variable MessageClass in line 93
      protection public
   variable ObjectMessageClass in line 97
      protection public
   variable ObjectNotFoundExceptionClass in line 90
      protection public
   variable onMessageAtom in line 58
      protection public
   variable onMessageBytes in line 59
      protection public
   variable onMessageDesc in line 60
      protection public
   variable RemoteExceptionClass in line 87
      protection public
   variable REMOVE in line 66
      protection public
   variable RemoveExceptionClass in line 84
      protection public
   variable setEntityContextAtom in line 52
      protection public
   variable setEntityContextSig in line 53
      protection public
   variable setSessionContextAtom in line 47
      protection public
   variable setSessionContextDescriptor in line 49
      protection public
   variable setSessionContextSig in line 48
      protection public
   variable StreamMessageClass in line 99
      protection public
   variable TextMessageClass in line 101
      protection public
   variable unsetEntityContextAtom in line 55
      protection public
   variable unsetEntityContextSig in line 56
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/EJBEntrypoints.java
module com::ibm::wala::j2ee::EJBEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::Entrypoints
   inherits from com::ibm::wala::j2ee::EJBConstants
   function addEJBLifecycleEntrypoints(EnterpriseBean,ClassLoaderReference) in line 273
      22 lines of code
      2 parameters
      4 conditional paths
      uses variable sessionBeanMethodNames defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable entityBeanMethodNames defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable cha defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses variable entrypoints defined in com::ibm::wala::j2ee::EJBEntrypoints
   function addEntrypointForSyntheticContainer() in line 146
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable deployment defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable cha defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable entrypoints defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable classTargetSelector defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function addEntrypointsForEJBJarFile(J2EEAnalysisScope,ClassLoaderReference,Archive) in line 170
      25 lines of code
      3 parameters
      5 conditional paths
      uses variable JUST_MDBS defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function addRemoteMethods(EnterpriseBean,Method[],ClassLoaderReference) defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function addHomeMethods(EnterpriseBean,Method[],ClassLoaderReference) defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function useEJBLifecycleEntrypoints() defined in com::ibm::wala::j2ee::J2EEAnalysisScope
      uses function addEJBLifecycleEntrypoints(EnterpriseBean,ClassLoaderReference) defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function addMessageDestination(MessageDriven,ClassLoaderReference) defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function pruneEntrypointsByTransactions(Archive,ClassLoaderReference) defined in com::ibm::wala::j2ee::EJBEntrypoints
   function addHomeMethods(EnterpriseBean,Method[],ClassLoaderReference) in line 263
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable deployment defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function getBeanMetaData(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getHomeInterface() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function addMethods(final BeanMetaData,TypeReference,Method[],ClassLoaderReference) defined in com::ibm::wala::j2ee::EJBEntrypoints
   function addMessageDestination(MessageDriven,ClassLoaderReference) in line 200
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable onMessageAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable onMessageDesc defined in com::ibm::wala::j2ee::EJBConstants
      uses variable cha defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses variable entrypoints defined in com::ibm::wala::j2ee::EJBEntrypoints
   function addMethods(final BeanMetaData,TypeReference,Method[],ClassLoaderReference) in line 305
      31 lines of code
      4 parameters
      6 conditional paths
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses variable cha defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses variable entrypoints defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable classTargetSelector defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function addRemoteMethods(EnterpriseBean,Method[],ClassLoaderReference) in line 250
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable deployment defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function getBeanMetaData(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getRemoteInterface() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function addMethods(final BeanMetaData,TypeReference,Method[],ClassLoaderReference) defined in com::ibm::wala::j2ee::EJBEntrypoints
   function iterator() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::EJBEntrypoints
   function makeEntityBeanMethodMap() in line 75
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable ejbActivateAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbActivateSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbLoadAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbLoadSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbPassivateAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbPassivateSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbRemoveAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbRemoveSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbStoreAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbStoreSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable setEntityContextAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable setEntityContextSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable unsetEntityContextAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable unsetEntityContextSig defined in com::ibm::wala::j2ee::EJBConstants
   function makeSessionBeanMethodMap() in line 92
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable ejbActivateAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbActivateSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbPassivateAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbPassivateSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbRemoveAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable ejbRemoveSig defined in com::ibm::wala::j2ee::EJBConstants
      uses variable setSessionContextAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses variable setSessionContextSig defined in com::ibm::wala::j2ee::EJBConstants
   function pruneEntrypointsByTransactions(Archive,ClassLoaderReference) in line 224
      20 lines of code
      2 parameters
      5 conditional paths
      uses function isMandatory() defined in com::ibm::wala::j2ee::AbstractDeclaredTransaction
      uses function getMethodReference() defined in com::ibm::wala::j2ee::DeploymentDeclaredTransaction
      uses variable entrypoints defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
   function toString() in line 344
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::EJBEntrypoints
   function EJBEntrypoints(ClassHierarchy,J2EEAnalysisScope,DeploymentMetaData,boolean,J2EEClassTargetSelector,WarningSet) in line 117
      protection public
      25 lines of code
      6 parameters
      5 conditional paths
      uses variable cha defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable deployment defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable warnings defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses variable classTargetSelector defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function addEntrypointForSyntheticContainer() defined in com::ibm::wala::j2ee::EJBEntrypoints
      uses function getModules(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function addEntrypointsForEJBJarFile(J2EEAnalysisScope,ClassLoaderReference,Archive) defined in com::ibm::wala::j2ee::EJBEntrypoints
   variable cha in line 58
   variable classTargetSelector in line 106
   variable deployment in line 104
   variable entityBeanMethodNames in line 73
   variable entrypoints in line 63
   variable JUST_MDBS in line 68
   variable sessionBeanMethodNames in line 90
   variable warnings in line 108
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/EJBLifecycleEntrypoint.java
module com::ibm::wala::j2ee::EJBLifecycleEntrypoint
   inherits from com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function getParameterTypes(int) in line 27
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   variable bean in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/IDeclaredTransaction.java
module com::ibm::wala::j2ee::IDeclaredTransaction
   inherits from Comparable
   function getBean() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodElement() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodReference() in line 13
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isMandatory() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isNever() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isNotSupported() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isRequired() in line 15
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isRequiresNew() in line 17
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSupports() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/J2EEAnalysisScope.java
module com::ibm::wala::j2ee::J2EEAnalysisScope
   inherits from com::ibm::wala::emf::wrappers::EMFScopeWrapper
   function addToApplicationLoader(AnalysisScope) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getModules(ClassLoaderReference) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function make(JarFile[],JarFile[],ClassLoader,boolean) in line 77
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function make(JarFile[],JarFile[],String,ClassLoader,boolean) in line 88
      protection public
      15 lines of code
      5 parameters
      3 conditional paths
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getPrimordialLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getExtensionLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function make(Module[],Module[],String,ClassLoader,boolean) in line 109
      protection public
      16 lines of code
      5 parameters
      4 conditional paths
      uses function addToScope(ClassLoaderReference,JarFile) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getPrimordialLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getExtensionLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
   function makeDefault(ClassLoader,boolean) in line 73
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function useEJBLifecycleEntrypoints() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function J2EEAnalysisScope(String,ClassLoader,boolean) in line 53
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function J2EEAnalysisScope(String,ClassLoader,String,boolean) in line 62
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   variable BASIC_FILE in line 35
   variable DEFAULT_FILE in line 37
   variable EXCLUSIONS_FILE in line 39
   variable lifecycleEntrypoints in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/J2EEClassTargetSelector.java
module com::ibm::wala::j2ee::J2EEClassTargetSelector
   inherits from com::ibm::wala::ipa::callgraph::ClassTargetSelector
   function getAllocatedTarget(CGNode,NewSiteReference) in line 82
      protection public
      46 lines of code
      2 parameters
      12 conditional paths
      uses function getDeclaredType() defined in com::ibm::wala::classLoader::NewSiteReference
      uses variable DEBUG defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable cha defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable parent defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses function getAllocatedTarget(CGNode,NewSiteReference) defined in com::ibm::wala::ipa::callgraph::ClassTargetSelector
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses variable metaData defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses function isContainerManaged(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isEJBInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses variable bypassLoader defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses function lookupClass(TypeName) defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
      uses function registerClass(TypeName,IClass) defined in com::ibm::wala::ipa::summaries::BypassSyntheticClassLoader
   function J2EEClassTargetSelector(ClassTargetSelector,DeploymentMetaData,ClassHierarchy,IClassLoader) in line 64
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses variable parent defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses variable metaData defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
      uses variable bypassLoader defined in com::ibm::wala::j2ee::J2EEClassTargetSelector
   variable bypassLoader in line 52
   variable cha in line 50
   variable DEBUG in line 35
   variable metaData in line 45
   variable parent in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/J2EEContainerModel.java
module com::ibm::wala::j2ee::J2EEContainerModel
   inherits from com::ibm::wala::classLoader::SyntheticClass
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   inherits from com::ibm::wala::j2ee::EJBConstants
   function equals(Object) in line 337
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAllAncestorInterfaces() in line 375
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getAllFields() in line 414
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllImplementedInterfaces() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllInstanceFields() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllInterfaces() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllMethods() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllStaticFields() in line 410
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBeanFieldName(TypeReference) in line 193
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBeanFieldName(TypeName) in line 201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBeanFieldRef(TypeReference) in line 209
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBeanFieldRef(BeanMetaData) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassInitializer() in line 279
      protection public
      52 lines of code
      0 parameters
      1 conditional paths
   function getClassLoader() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredInstanceFields() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredMethods() in line 159
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function getDeclaredStaticFields() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDirectInterfaces() in line 404
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getField(Atom) in line 265
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getMethod(Selector) in line 152
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getModifiers() in line 355
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 386
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFileName() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSuperclass() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 346
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initializeStaticFieldMap() in line 248
      7 lines of code
      0 parameters
      1 conditional paths
   function initializeStaticFieldRefs() in line 221
      26 lines of code
      0 parameters
      1 conditional paths
   function isReferenceType() in line 395
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable cha in line 119
   variable clinitMethod in line 272
   variable containerModelName in line 65
      protection public
   variable containerModelRef in line 79
      protection public
   variable deployment in line 114
   variable entityBeanName in line 67
      protection public
   variable entityBeanRef in line 81
      protection public
   variable entityContextName in line 69
      protection public
   variable entityContextRef in line 83
      protection public
   variable extensionLoaderName in line 59
   variable extensionLoaderRef in line 63
   variable messageBeanName in line 75
      protection public
   variable messageBeanRef in line 89
      protection public
   variable messageContextName in line 77
      protection public
   variable messageContextRef in line 91
      protection public
   variable sessionBeanName in line 71
      protection public
   variable sessionBeanRef in line 85
      protection public
   variable sessionContextName in line 73
      protection public
   variable sessionContextRef in line 87
      protection public
   variable setEntityContext in line 102
      protection public
   variable setEntityContextDescriptor in line 93
      protection public
   variable setMessageContext in line 108
      protection public
   variable setMessageContextDescriptor in line 99
      protection public
   variable setSessionContext in line 105
      protection public
   variable setSessionContextDescriptor in line 96
      protection public
   variable staticFieldMap in line 187
   variable staticFieldRefs in line 185
   variable syntheticLoaderName in line 57
   variable syntheticLoaderRef in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/J2EEContextSelector.java
module com::ibm::wala::j2ee::J2EEContextSelector
   inherits from com::ibm::wala::ipa::callgraph::ContextSelector
   function allSitesDispatchIdentically(CGNode,CallSiteReference) in line 132
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function contextIsIrrelevant(CGNode,CallSiteReference) in line 117
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable ExecuteAtom defined in com::ibm::wala::j2ee::J2EEContextSelector
      uses function equals(Object) defined in com::ibm::wala::types::Descriptor
      uses variable ExecuteDesc defined in com::ibm::wala::j2ee::J2EEContextSelector
   function getBoundOnNumberOfTargets(CGNode,CallSiteReference,IMethod) in line 93
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable ExecuteMethod defined in com::ibm::wala::j2ee::J2EEContextSelector
   function getCalleeTarget(CGNode,CallSiteReference,IMethod,InstanceKey) in line 68
      protection public
      17 lines of code
      4 parameters
      4 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable ExecuteMethod defined in com::ibm::wala::j2ee::J2EEContextSelector
      uses variable typeInference defined in com::ibm::wala::j2ee::J2EEContextSelector
      uses function findOrCreate(CGNode) defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses function getReceiverType(CallSiteReference) defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses variable warnings defined in com::ibm::wala::j2ee::J2EEContextSelector
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
   function mayUnderstand(CGNode,CallSiteReference,IMethod,InstanceKey) in line 144
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::MemberReference
      uses variable ExecuteMethod defined in com::ibm::wala::j2ee::J2EEContextSelector
   function setWarnings(WarningSet) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function J2EEContextSelector(ReceiverTypeInferenceCache,WarningSet) in line 56
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable typeInference defined in com::ibm::wala::j2ee::J2EEContextSelector
      uses variable warnings defined in com::ibm::wala::j2ee::J2EEContextSelector
   variable CacheableCommandImpl in line 40
   variable CacheableCommandImplClass in line 46
   variable ExecuteAtom in line 42
   variable ExecuteDesc in line 44
   variable ExecuteMethod in line 49
      protection public
   variable typeInference in line 52
   variable warnings in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/J2EEEntrypoints.java
module com::ibm::wala::j2ee::J2EEEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::Entrypoints
   function getAppClientEntrypoints() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appClientEntrypoints defined in com::ibm::wala::j2ee::J2EEEntrypoints
   function getStrutsEntrypoints() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strutsEntrypoints defined in com::ibm::wala::j2ee::J2EEEntrypoints
   function iterator() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::J2EEEntrypoints
      uses function iterator() defined in com::ibm::wala::ipa::callgraph::Entrypoints
   function J2EEEntrypoints(J2EEAnalysisScope,DeploymentMetaData,ClassHierarchy,WarningSet,boolean) in line 46
      protection public
      26 lines of code
      5 parameters
      3 conditional paths
      uses function getLoader(ClassLoaderReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getLoader(Atom) defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable entrypoints defined in com::ibm::wala::j2ee::J2EEEntrypoints
      uses variable appClientEntrypoints defined in com::ibm::wala::j2ee::J2EEEntrypoints
      uses variable USE_STRUTS_ACTIONS defined in com::ibm::wala::j2ee::J2EEEntrypoints
      uses variable strutsEntrypoints defined in com::ibm::wala::j2ee::J2EEEntrypoints
   variable appClientEntrypoints in line 34
   variable entrypoints in line 32
   variable strutsEntrypoints in line 36
   variable USE_STRUTS_ACTIONS in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/J2EEMethodTargetSelector.java
module com::ibm::wala::j2ee::J2EEMethodTargetSelector
   inherits from com::ibm::wala::ipa::callgraph::MethodTargetSelector
   inherits from com::ibm::wala::shrikeBT::BytecodeConstants
   inherits from com::ibm::wala::j2ee::EJBConstants
   function createSummarizedMethod(BeanMetaData,MethodReference,MethodSummary) in line 498
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable map defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
   function findOrCreateEntityContractMethod(MethodReference) in line 510
      79 lines of code
      1 parameters
      10 conditional paths
      uses variable map defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getBeanForInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getEJBClass() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable Void defined in com::ibm::wala::types::TypeReference
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable entityContractMap defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function length() defined in com::ibm::wala::util::Atom
      uses function makeEntityContractMethod(BeanMetaData,MethodReference,TypeReference,Atom) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isInterface() defined in com::ibm::wala::classLoader::IClass
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable entityContractExceptionMap defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isRemoteInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isHomeInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable RemoteExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses variable EJBExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
   function getCalleeTarget(CGNode,CallSiteReference,IClass) in line 1013
      protection public
      56 lines of code
      3 parameters
      11 conditional paths
      uses function getDeclaredTarget() defined in com::ibm::wala::classLoader::CallSiteReference
      uses function isEJBSuperInterface(TypeReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getReceiverClassFromTypeInference(CGNode,CallSiteReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isMessageDriven(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable onMessageAtom defined in com::ibm::wala::j2ee::EJBConstants
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::Descriptor
      uses variable onMessageDesc defined in com::ibm::wala::j2ee::EJBConstants
      uses function hijackOnMessageEntrypoint(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable Servlet defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function isInit() defined in com::ibm::wala::classLoader::IMethod
      uses function isClinit() defined in com::ibm::wala::classLoader::IMethod
      uses function hijackServletEntrypoint(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function specializeForReceiverType(IClass,MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function methodReferenceIntercept(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable parent defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getCalleeTarget(CGNode,CallSiteReference,IClass) defined in com::ibm::wala::ipa::callgraph::MethodTargetSelector
   function getReceiverClassFromTypeInference(CGNode,CallSiteReference) in line 1100
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable typeInference defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function findOrCreate(CGNode) defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInferenceCache
      uses function getReceiverType(CallSiteReference) defined in com::ibm::wala::analysis::typeInference::ReceiverTypeInference
      uses variable warnings defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
   function hijackCMPBeanMethods(MethodReference) in line 426
      38 lines of code
      1 parameters
      7 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getBeanForInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isCMPGetter(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable map defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isCMRGetter(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function createSummarizedMethod(BeanMetaData,MethodReference,MethodSummary) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isCMPSetter(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isCMRSetter(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
   function hijackEntityInterface(MethodReference) in line 169
      83 lines of code
      1 parameters
      13 conditional paths
      uses function isJavaLangObjectMethod(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable entityContractMap defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function findOrCreateEntityContractMethod(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getBeanForInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable map defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getEJBClass() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getReturnType() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function isRemoteInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable RemoteExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses variable EJBExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function hijackHomeInterface(MethodReference) in line 390
      27 lines of code
      1 parameters
      6 conditional paths
      uses function isJavaLangObjectMethod(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getBeanForInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isLocalHomeInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isFinder(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable map defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable entityContractMap defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function findOrCreateEntityContractMethod(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isHomeMethod(MethodReference,BeanMetaData) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
   function hijackOnMessageEntrypoint(MethodReference) in line 260
      70 lines of code
      1 parameters
      10 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getBeanMetaData(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable warnings defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses variable map defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getReturnType() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function isRemoteInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable RemoteExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses variable EJBExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function hijackServletEntrypoint(MethodReference) in line 335
      46 lines of code
      1 parameters
      5 conditional paths
      uses variable map defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable WalaServletConfigModel defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable servletInit defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getReturnType() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
   function isEJBSuperInterface(TypeReference) in line 1128
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getPackage() defined in com::ibm::wala::types::TypeName
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable JAVAX_EJB defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable EJB_HOME defined in com::ibm::wala::j2ee::J2EEUtil
      uses variable EJB_LOCAL_HOME defined in com::ibm::wala::j2ee::J2EEUtil
      uses variable EJB_LOCAL_OBJECT defined in com::ibm::wala::j2ee::J2EEUtil
      uses variable EJB_OBJECT defined in com::ibm::wala::j2ee::J2EEUtil
   function isHomeMethod(MethodReference,BeanMetaData) in line 844
      14 lines of code
      2 parameters
      1 conditional paths
      uses function getEJBClass() defined in com::ibm::wala::j2ee::BeanMetaData
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function getParameters() defined in com::ibm::wala::types::Descriptor
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function isJavaLangObjectMethod(MethodReference) in line 492
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
   function makeEntityContractMethod(BeanMetaData,MethodReference,TypeReference,Atom) in line 601
      14 lines of code
      4 parameters
      3 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses variable VoidName defined in com::ibm::wala::types::TypeReference
      uses function equals(Object) defined in com::ibm::wala::util::Atom
      uses variable EJB_CREATE defined in com::ibm::wala::j2ee::EJBConstants
      uses function isContainerManagedEntity() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getPrimaryKeyType() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function getParameters() defined in com::ibm::wala::types::Descriptor
   function methodReferenceIntercept(MethodReference) in line 469
      22 lines of code
      1 parameters
      6 conditional paths
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getClassLoader() defined in com::ibm::wala::types::TypeReference
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable Primordial defined in com::ibm::wala::types::ClassLoaderReference
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isLocalInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isRemoteInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function hijackEntityInterface(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isLocalHomeInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isHomeInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function hijackHomeInterface(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isContainerManaged(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function hijackCMPBeanMethods(MethodReference) defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
   function mightReturnSyntheticMethod(CGNode,CallSiteReference) in line 1151
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function mightReturnSyntheticMethod(MethodReference) in line 1161
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function specializeForReceiverType(IClass,MethodReference) in line 1076
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getClassLoader() defined in com::ibm::wala::classLoader::IClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClassLoader
      uses function equals(Object) defined in com::ibm::wala::types::ClassLoaderReference
      uses variable scope defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getSyntheticLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function getReference() defined in com::ibm::wala::classLoader::SyntheticClass
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   function J2EEMethodTargetSelector(AnalysisScope,MethodTargetSelector,DeploymentMetaData,ClassHierarchy,ReceiverTypeInferenceCache,WarningSet) in line 151
      protection public
      9 lines of code
      6 parameters
      1 conditional paths
      uses variable scope defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable warnings defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable parent defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable typeInference defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
   variable addAtom in line 68
   variable addDesc in line 70
   variable addMethod in line 72
   variable cha in line 97
   variable deployment in line 92
   variable elementsAtom in line 74
   variable elementsDesc in line 76
   variable elementsMethod in line 78
   variable entityContractExceptionMap in line 145
   variable entityContractMap in line 130
   variable hashSetInit in line 81
   variable JAVAX_EJB in line 87
   variable map in line 103
   variable parent in line 123
   variable scope in line 118
   variable typeInference in line 108
   variable vectorInit in line 84
   variable warnings in line 113
module com::ibm::wala::j2ee::J2EEMethodTargetSelector::GetterSummary
   inherits from com::ibm::wala::ipa::summaries::MethodSummary
   function GetterSummary(final MethodReference) in line 617
      protection public
      29 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getCMPField(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses function isReferenceType() defined in com::ibm::wala::types::TypeReference
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function isRemoteInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable RemoteExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses variable EJBExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
module com::ibm::wala::j2ee::J2EEMethodTargetSelector::CMRGetterSummary
   inherits from com::ibm::wala::ipa::summaries::MethodSummary
   function CMRGetterSummary(final MethodReference) in line 652
      protection public
      88 lines of code
      1 parameters
      5 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getCMPField(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getCMRBean(FieldReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getLocalInterface() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getLocalHomeInterface() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getPrimaryKeyType() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable JavaLangObject defined in com::ibm::wala::types::TypeReference
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilSet defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilCollection defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilHashSet defined in com::ibm::wala::types::TypeReference
      uses variable hashSetInit defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable addMethod defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function isRemoteInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable RemoteExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses variable EJBExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
module com::ibm::wala::j2ee::J2EEMethodTargetSelector::SetterSummary
   inherits from com::ibm::wala::ipa::summaries::MethodSummary
   function SetterSummary(final MethodReference) in line 746
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getCMPField(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
module com::ibm::wala::j2ee::J2EEMethodTargetSelector::CMRSetterSummary
   inherits from com::ibm::wala::ipa::summaries::MethodSummary
   function CMRSetterSummary(final MethodReference) in line 759
      protection public
      83 lines of code
      1 parameters
      4 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getCMPField(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getFieldType() defined in com::ibm::wala::types::FieldReference
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilSet defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilCollection defined in com::ibm::wala::types::TypeReference
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable JavaUtilHashSet defined in com::ibm::wala::types::TypeReference
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable hashSetInit defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable addMethod defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function getCMRBean(FieldReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getLocalInterface() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getOppositeField(FieldReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses variable warnings defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function add(Warning) defined in com::ibm::wala::util::warnings::WarningSet
module com::ibm::wala::j2ee::J2EEMethodTargetSelector::HomeMethodSummary
   inherits from com::ibm::wala::ipa::summaries::MethodSummary
   function HomeMethodSummary(MethodReference,BeanMetaData) in line 867
      protection public
      39 lines of code
      2 parameters
      4 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getEJBClass() defined in com::ibm::wala::j2ee::BeanMetaData
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getName() defined in com::ibm::wala::types::MemberReference
      uses function toString() defined in com::ibm::wala::util::Atom
      uses function getNumberOfParameters() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
      uses function getDescriptor() defined in com::ibm::wala::types::MethodReference
      uses function getParameters() defined in com::ibm::wala::types::Descriptor
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getSelector() defined in com::ibm::wala::types::MethodReference
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Void defined in com::ibm::wala::types::TypeReference
module com::ibm::wala::j2ee::J2EEMethodTargetSelector::LocalHomeFinderSummary
   inherits from com::ibm::wala::ipa::summaries::MethodSummary
   function LocalHomeFinderSummary(final MethodReference) in line 914
      protection public
      81 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getNumberOfParameters() defined in com::ibm::wala::types::MethodReference
      uses variable cha defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getReturnType() defined in com::ibm::wala::types::MethodReference
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses variable deployment defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses function getFinderBeanType(MethodReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getBeanMetaData(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function isLocalHomeInterface(TypeReference) defined in com::ibm::wala::j2ee::DeploymentMetaData
      uses function getLocalInterface() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getRemoteInterface() defined in com::ibm::wala::j2ee::BeanMetaData
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilCollection defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilSet defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilHashSet defined in com::ibm::wala::types::TypeReference
      uses variable hashSetInit defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable addMethod defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable JavaUtilEnum defined in com::ibm::wala::types::TypeReference
      uses variable JavaUtilVector defined in com::ibm::wala::types::TypeReference
      uses variable vectorInit defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable elementsMethod defined in com::ibm::wala::j2ee::J2EEMethodTargetSelector
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable ObjectNotFoundExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses variable FinderExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
      uses variable EJBExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
   variable nextLocal in line 912
module com::ibm::wala::j2ee::J2EEMethodTargetSelector::RemoteFinderSummary
   inherits from com::ibm::wala::j2ee::J2EEMethodTargetSelector::LocalHomeFinderSummary
   function RemoteFinderSummary(final MethodReference) in line 998
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function addStatement(SSAInstruction) defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses function getNextProgramCounter() defined in com::ibm::wala::ipa::summaries::MethodSummary
      uses variable RemoteExceptionClass defined in com::ibm::wala::j2ee::EJBConstants
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/J2EEUtil.java
module com::ibm::wala::j2ee::J2EEUtil
   function buildDescriptor(Method) in line 148
      protection public
      28 lines of code
      1 parameters
      4 conditional paths
   function createMethodReference(Method,ClassLoaderReference) in line 105
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function buildDescriptor(Method) defined in com::ibm::wala::j2ee::J2EEUtil
   function ejb2TypeReference(EnterpriseBean,ClassLoaderReference) in line 94
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function getArchive(Module) in line 65
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function materializeArchive() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function getLogicalEntrypointNodes(CallGraph) in line 185
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getEntrypointNodes() defined in com::ibm::wala::ipa::callgraph::CallGraph
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getReference() defined in com::ibm::wala::classLoader::IMethod
      uses function getDeclaringClass() defined in com::ibm::wala::types::MethodReference
      uses function isServletFrameworkType(TypeReference) defined in com::ibm::wala::j2ee::J2EEUtil
      uses function servletFrontier(CallGraph,CGNode,Set< CGNode >) defined in com::ibm::wala::j2ee::J2EEUtil
   function getTypeForInterface(ClassLoaderReference,String) in line 122
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
   function isServletFrameworkType(TypeReference) in line 201
      5 lines of code
      1 parameters
      1 conditional paths
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses variable Servlet defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses variable HttpServlet defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses variable HttpJspBase defined in com::ibm::wala::j2ee::ServletEntrypoints
   function servletFrontier(CallGraph,CGNode,Set< CGNode >) in line 214
      protection public
      15 lines of code
      3 parameters
      4 conditional paths
      uses function getSuccNodes(T) defined in com::ibm::wala::util::graph::EdgeManager
      uses function getMethod() defined in com::ibm::wala::ipa::callgraph::CGNode
      uses function getDeclaringClass() defined in com::ibm::wala::classLoader::IMember
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isServletFrameworkType(TypeReference) defined in com::ibm::wala::j2ee::J2EEUtil
   variable EJB_HOME in line 51
      protection public
   variable EJB_LOCAL_HOME in line 53
      protection public
   variable EJB_LOCAL_OBJECT in line 57
      protection public
   variable EJB_OBJECT in line 55
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/LoadFailure.java
module com::ibm::wala::j2ee::LoadFailure
   inherits from com::ibm::wala::util::warnings::Warning
   function create(Object) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMsg() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/MDBEntrypoint.java
module com::ibm::wala::j2ee::MDBEntrypoint
   inherits from com::ibm::wala::j2ee::EJBLifecycleEntrypoint
   function getParameterTypes(int) in line 30
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/ServletEntrypoints.java
module com::ibm::wala::j2ee::ServletEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::Entrypoints
   inherits from com::ibm::wala::j2ee::EJBConstants
   function iterator() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::ServletEntrypoints
   function toString() in line 234
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable servlets defined in com::ibm::wala::j2ee::ServletEntrypoints
   function ServletEntrypoints(J2EEAnalysisScope,ClassHierarchy) in line 157
      protection public
      62 lines of code
      2 parameters
      12 conditional paths
      uses function getExtensionLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable servletName defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable actionServlet defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getLoader(ClassLoaderReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function iterateAllClasses() defined in com::ibm::wala::classLoader::IClassLoader
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isSubclassOf(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function implementsInterface(IClass,TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable servlets defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses variable servletMethodNames defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses function length() defined in com::ibm::wala::util::Atom
      uses variable servletMethodDescs defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable entrypoints defined in com::ibm::wala::j2ee::ServletEntrypoints
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses variable concreteParameterMap defined in com::ibm::wala::j2ee::ServletEntrypoints
   variable actionServlet in line 122
   variable concreteParameterMap in line 140
   variable destroyDesc in line 49
   variable destroyName in line 48
   variable entrypoints in line 129
   variable finalizeDesc in line 66
   variable finalizeName in line 65
      protection public
   variable getServletConfigDesc in line 52
   variable getServletConfigName in line 51
   variable getServletInfoDesc in line 55
   variable getServletInfoName in line 54
   variable HttpJspBase in line 81
      protection public
   variable httpJspBaseName in line 80
   variable HttpServlet in line 78
      protection public
   variable httpServletName in line 77
   variable HttpServletRequest in line 90
      protection public
   variable httpServletResponse in line 92
      protection public
   variable HttpServletResponse in line 93
      protection public
   variable initDesc in line 58
   variable initName in line 57
   variable serviceDesc in line 63
   variable serviceDescAtom in line 61
   variable serviceName in line 60
      protection public
   variable Servlet in line 75
      protection public
   variable servletConfig in line 99
   variable ServletConfig in line 100
      protection public
   variable servletContext in line 96
   variable ServletContext in line 97
      protection public
   variable servletInit in line 124
      protection public
   variable servletMethodDescs in line 71
   variable servletMethodNames in line 68
   variable servletName in line 74
   variable ServletRequest in line 84
      protection public
   variable servletResponse in line 86
      protection public
   variable ServletResponse in line 87
      protection public
   variable servlets in line 134
   variable walaHttpServletRequest in line 102
   variable WalaHttpServletRequest in line 104
      protection public
   variable walaHttpServletResponse in line 107
   variable WalaHttpServletResponse in line 109
      protection public
   variable walaServletConfigModel in line 117
   variable WalaServletConfigModel in line 119
      protection public
   variable walaServletContextModel in line 112
   variable WalaServletContextModel in line 114
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/StrutsEntrypoints.java
module com::ibm::wala::j2ee::StrutsEntrypoints
   inherits from com::ibm::wala::ipa::callgraph::Entrypoints
   inherits from com::ibm::wala::j2ee::EJBConstants
   function addSpeculativeDispatchMethods(IClass,ClassHierarchy) in line 139
      19 lines of code
      2 parameters
      5 conditional paths
      uses function getDeclaredMethods() defined in com::ibm::wala::classLoader::IClass
      uses function getDescriptor() defined in com::ibm::wala::classLoader::IMethod
      uses function equals(Object) defined in com::ibm::wala::types::Descriptor
      uses variable executeDesc defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses variable httpExecuteDesc defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function getName() defined in com::ibm::wala::classLoader::IMember
      uses variable entrypoints defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses function getSuperclass() defined in com::ibm::wala::classLoader::IClass
   function contains(MethodReference) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::StrutsEntrypoints
   function iterator() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entrypoints defined in com::ibm::wala::j2ee::StrutsEntrypoints
   function toString() in line 173
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable actions defined in com::ibm::wala::j2ee::StrutsEntrypoints
   function StrutsEntrypoints(J2EEAnalysisScope,ClassHierarchy) in line 91
      protection public
      39 lines of code
      2 parameters
      9 conditional paths
      uses function getApplicationLoader() defined in com::ibm::wala::ipa::callgraph::AnalysisScope
      uses variable actionName defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses function lookupClass(TypeReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function getLoader(ClassLoaderReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses function iterateAllClasses() defined in com::ibm::wala::classLoader::IClassLoader
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
      uses function isAbstract() defined in com::ibm::wala::classLoader::IClass
      uses function equals(Object) defined in com::ibm::wala::types::TypeReference
      uses function isSubclassOf(IClass,IClass) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable actions defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses variable executeName defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses variable httpExecuteDesc defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses function resolveMethod(MethodReference) defined in com::ibm::wala::ipa::cha::ClassHierarchy
      uses variable entrypoints defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses variable SPECULATE_DISPATCH_ACTIONS defined in com::ibm::wala::j2ee::StrutsEntrypoints
      uses function addSpeculativeDispatchMethods(IClass,ClassHierarchy) defined in com::ibm::wala::j2ee::StrutsEntrypoints
   variable actionName in line 59
   variable actions in line 69
   variable concreteParameterMap in line 75
   variable entrypoints in line 64
   variable executeDesc in line 56
   variable executeDescString in line 53
   variable executeName in line 45
      protection public
   variable httpExecuteDesc in line 57
   variable httpExecuteDescString in line 54
   variable SPECULATE_DISPATCH_ACTIONS in line 51
      protection public
module com::ibm::wala::j2ee::StrutsEntrypoints::StrutsActionEntrypoint
   inherits from com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
   function getParameterTypes(int) in line 211
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable receiver defined in com::ibm::wala::j2ee::StrutsEntrypoints::StrutsActionEntrypoint
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function getName() defined in com::ibm::wala::types::TypeReference
      uses variable concreteParameterMap defined in com::ibm::wala::j2ee::StrutsEntrypoints
   function StrutsActionEntrypoint(IClass,IMethod,ClassHierarchy) in line 206
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable method defined in com::ibm::wala::ipa::callgraph::Entrypoint
      uses variable cha defined in com::ibm::wala::ipa::callgraph::impl::DefaultEntrypoint
      uses variable receiver defined in com::ibm::wala::j2ee::StrutsEntrypoints::StrutsActionEntrypoint
      uses function getReference() defined in com::ibm::wala::classLoader::IClass
   variable receiver in line 204
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/SummarizedEJBMethod.java
module com::ibm::wala::j2ee::SummarizedEJBMethod
   inherits from com::ibm::wala::ipa::summaries::SummarizedMethod
   function getBean() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bean defined in com::ibm::wala::j2ee::SummarizedEJBMethod
   function SummarizedEJBMethod(BeanMetaData,MethodReference,MethodSummary,IClass) in line 25
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable summary defined in com::ibm::wala::ipa::summaries::SummarizedMethod
      uses variable declaringClass defined in com::ibm::wala::classLoader::SyntheticMethod
      uses variable bean defined in com::ibm::wala::j2ee::SummarizedEJBMethod
   variable bean in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/TransactionUtil.java
module com::ibm::wala::j2ee::TransactionUtil
   function createDeclaredTransactionEntries(Archive,ClassLoaderReference) in line 51
      protection public
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in com::ibm::wala::j2ee::TransactionUtil
   function createDeclaredTransactionEntries(EJBJar,ClassLoaderReference) in line 79
      33 lines of code
      2 parameters
      8 conditional paths
      uses variable DEBUG defined in com::ibm::wala::j2ee::TransactionUtil
      uses function deduceKind(EnterpriseBean,Method) defined in com::ibm::wala::j2ee::TransactionUtil
   function deduceKind(EnterpriseBean,Method) in line 116
      27 lines of code
      2 parameters
      7 conditional paths
      uses variable DEBUG defined in com::ibm::wala::j2ee::TransactionUtil
      uses variable EJBHOME defined in com::ibm::wala::j2ee::TransactionUtil
      uses variable EJBLOCALHOME defined in com::ibm::wala::j2ee::TransactionUtil
      uses variable EJBLOCALOBJECT defined in com::ibm::wala::j2ee::TransactionUtil
      uses variable EJBOBJECT defined in com::ibm::wala::j2ee::TransactionUtil
   variable DEBUG in line 39
   variable EJBHOME in line 41
   variable EJBLOCALHOME in line 42
   variable EJBLOCALOBJECT in line 44
   variable EJBOBJECT in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/j2ee/util/TopLevelArchiveModule.java
module com::ibm::wala::j2ee::util::TopLevelArchiveModule
   inherits from com::ibm::wala::classLoader::Module
   function getEntries() in line 113
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses variable DEBUG defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses function materializeArchive() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses function getTypeCode(Archive) defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable ignoreDependentJars defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable OTHER_JAR_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function getType() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeCode(Archive) defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses function materializeArchive() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function getTypeCode(Archive) in line 80
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable EAR_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable EJB_JAR_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable WAR_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable APPLICATION_CLIENT_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable OTHER_JAR_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function isWarFile() in line 143
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable jarFile defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses function getJarFile() defined in com::ibm::wala::classLoader::JarFileModule
   function materializeArchive() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jarFile defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function setIgnoreDependentJars(boolean) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreDependentJars defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function toString() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function materializeArchive() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function TopLevelArchiveModule(JarFileModule) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jarFile defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   variable APPLICATION_CLIENT_FILE in line 54
      protection public
   variable DEBUG in line 61
   variable EAR_FILE in line 55
      protection public
   variable EJB_JAR_FILE in line 56
      protection public
   variable ignoreDependentJars in line 58
   variable jarFile in line 69
   variable ORG_APACHE_JSP in line 50
   variable OTHER_JAR_FILE in line 53
      protection public
   variable WAR_CP_ROOT in line 43
   variable WAR_FILE in line 52
      protection public
   variable WAR_JSP_CP_ROOT in line 48
module com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   inherits from com::ibm::wala::classLoader::ModuleEntry
   function asModule() in line 220
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable verifyAssertions defined in com::ibm::wala::util::debug::Assertions
      uses function isModuleFile() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
      uses variable F defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   function getClassName() in line 230
      protection public
      20 lines of code
      0 parameters
      6 conditional paths
      uses function getName() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
      uses function isWarFile() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable WAR_JSP_CP_ROOT defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable ORG_APACHE_JSP defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable WAR_CP_ROOT defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function getInputStream() in line 187
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable F defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   function getName() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable F defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   function hashCode() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable F defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   function isClassFile() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable F defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   function isModuleFile() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable F defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   function isSourceFile() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule::Entry
   variable F in line 161
module com::ibm::wala::j2ee::util::TopLevelArchiveModule::BloatedArchiveModule
   inherits from com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function hashCode() in line 301
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isApplicationClientFile() in line 293
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeCode(Archive) defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable APPLICATION_CLIENT_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function isWarFile() in line 287
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeCode(Archive) defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
      uses variable WAR_FILE defined in com::ibm::wala::j2ee::util::TopLevelArchiveModule
   function materializeArchive() in line 280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BloatedArchiveModule(Archive) in line 272
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable A in line 270
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/http/HttpServletRequest.java
module com::ibm::wala::model::javax::servlet::http::HttpServletRequest
   inherits from com::ibm::wala::model::javax::servlet::ServletRequest
   function getAuthType() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContextPath() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCookies() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDateHeader(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getHeader(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletRequest
   function getHeaderNames() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletRequest
   function getHeaders(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletRequest
   function getIntHeader(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getHeader(String) defined in com::ibm::wala::model::javax::servlet::http::HttpServletRequest
   function getMethod() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPathInfo() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPathTranslated() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getQueryString() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRemoteUser() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRequestedSessionId() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRequestURI() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRequestURL() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getRequestURI() defined in com::ibm::wala::model::javax::servlet::http::HttpServletRequest
   function getServletPath() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSession() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSession(boolean) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getUserPrincipal() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRequestedSessionIdFromCookie() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRequestedSessionIdFromUrl() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRequestedSessionIdFromURL() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRequestedSessionIdValid() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isUserInRole(String) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function HttpServletRequest() in line 10
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletRequest
   variable headers in line 8
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/http/HttpServletResponse.java
module com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   inherits from com::ibm::wala::model::javax::servlet::ServletResponse
   function addCookie(Cookie) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addDateHeader(String,long) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   function addHeader(String,String) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   function addIntHeader(java.lang.String,int) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   function containsHeader(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   function encodeRedirectUrl(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function encodeRedirectURL(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function encodeUrl(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function encodeURL(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function sendError(int) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function sendError(int,String) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function sendRedirect(String) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDateHeader(String,long) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   function setHeader(String,String) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   function setIntHeader(String,int) in line 67
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable headers defined in com::ibm::wala::model::javax::servlet::http::HttpServletResponse
   function setStatus(int) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatus(int,String) in line 75
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable headers in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/http/HttpSession.java
module com::ibm::wala::model::javax::servlet::http::HttpSession
   function getAttribute(String) in line 100
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable attributes defined in com::ibm::wala::model::javax::servlet::http::HttpSession
   function getAttributeNames() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attributes defined in com::ibm::wala::model::javax::servlet::http::HttpSession
   function getCreationTime() in line 44
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getId() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getLastAccessedTime() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getMaxInactiveInterval() in line 84
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getModelInstance() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable singleton defined in com::ibm::wala::model::javax::servlet::http::HttpSession
   function getServletContext() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getSessionContext() in line 92
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getValue(String) in line 111
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::http::HttpSession
   function getValueNames() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function invalidate() in line 166
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isNew() in line 174
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function putValue(String,Object) in line 143
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::http::HttpSession
   function removeAttribute(String) in line 150
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function removeValue(String) in line 158
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setAttribute(String,Object) in line 136
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable attributes defined in com::ibm::wala::model::javax::servlet::http::HttpSession
   function setMaxInactiveInterval(int) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function HttpSession() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable attributes in line 30
   variable singleton in line 24
   variable values in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/RequestDispatcher.java
module com::ibm::wala::model::javax::servlet::RequestDispatcher
   function forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse) in line 6
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function include(javax.servlet.ServletRequest,javax.servlet.ServletResponse) in line 10
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/ServletConfig.java
module com::ibm::wala::model::javax::servlet::ServletConfig
   function getInitParameter(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getInitParameterNames() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getServletContext() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getServletName() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/ServletContext.java
module com::ibm::wala::model::javax::servlet::ServletContext
   function getAttribute(String) in line 17
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletContext
   function getAttributeNames() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletContext
   function getContext(String) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable singleton defined in com::ibm::wala::model::javax::servlet::ServletContext
   function getInitParameter(String) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getInitParameterNames() in line 38
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function getMajorVersion() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMimeType(String) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMinorVersion() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getModelInstance() in line 11
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable singleton defined in com::ibm::wala::model::javax::servlet::ServletContext
   function getNamedDispatcher(String) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRealPath(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRequestDispatcher(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getResource(String) in line 74
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getResourceAsStream(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getResourcePaths(String) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getServerInfo() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getServlet(java.lang.String) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getServletContextName() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getServletNames() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getServlets() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function log(Exception,String) in line 112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function log(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function log(String,Throwable) in line 120
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function removeAttribute(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletContext
   function setAttribute(String,Object) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletContext
   variable singleton in line 9
   variable values in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/ServletRequest.java
module com::ibm::wala::model::javax::servlet::ServletRequest
   function getAttribute(String) in line 16
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getAttributeNames() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getCharacterEncoding() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable encoding defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getContentLength() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContentType() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInputStream() in line 40
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function getLocale() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLocales() in line 53
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getLocale() defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getParameter(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parameters defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getParameterMap() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getParameterNames() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getParameterValues(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parameters defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function getProtocol() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReader() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRealPath(String) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRemoteAddr() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRemoteHost() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRequestDispatcher(String) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getScheme() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getServerName() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getServerPort() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSecure() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function removeAttribute(String) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function setAttribute(String,Object) in line 126
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable values defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function setCharacterEncoding(String) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable encoding defined in com::ibm::wala::model::javax::servlet::ServletRequest
   function ServletRequest() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in com::ibm::wala::model::javax::servlet::ServletRequest
   variable encoding in line 10
   variable parameters in line 9
   variable values in line 8
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.j2ee/src/com/ibm/wala/model/javax/servlet/ServletResponse.java
module com::ibm::wala::model::javax::servlet::ServletResponse
   function flushBuffer() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBufferSize() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bufferSize defined in com::ibm::wala::model::javax::servlet::ServletResponse
   function getCharacterEncoding() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLocale() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locale defined in com::ibm::wala::model::javax::servlet::ServletResponse
   function getOutputStream() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in com::ibm::wala::model::javax::servlet::ServletResponse
   function getWriter() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in com::ibm::wala::model::javax::servlet::ServletResponse
   function isCommitted() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function reset() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function resetBuffer() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setBufferSize(int) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bufferSize defined in com::ibm::wala::model::javax::servlet::ServletResponse
   function setContentLength(int) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setContentType(java.lang.String) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLocale(java.util.Locale) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable locale defined in com::ibm::wala::model::javax::servlet::ServletResponse
   variable bufferSize in line 8
   variable locale in line 6
   variable out in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/bench/AddBytecodeDebug.java
module com::ibm::wala::shrike::bench::AddBytecodeDebug
   function doClass(final ClassInstrumenter,Writer) in line 64
      39 lines of code
      2 parameters
      7 conditional paths
      uses function setHasChanged() defined in com::ibm::wala::shrikeBT::MethodData
      uses function beginPass() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function getHandler() defined in com::ibm::wala::shrikeBT::ExceptionHandler
      uses function insertBefore(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function emit(Instruction) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
      uses function applyPatches() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instrumenter defined in com::ibm::wala::shrike::bench::AddBytecodeDebug
      uses function outputModifiedClass(ClassInstrumenter,ClassWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
   function main(String[]) in line 47
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable instrumenter defined in com::ibm::wala::shrike::bench::AddBytecodeDebug
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function setPassUnmodifiedClasses(boolean) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassInstrumenter,Writer) defined in com::ibm::wala::shrike::bench::AddBytecodeDebug
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   variable instrumenter in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/bench/Bench.java
module com::ibm::wala::shrike::bench::Bench
   function doClass(final ClassInstrumenter,Writer) in line 93
      98 lines of code
      2 parameters
      12 conditional paths
      uses variable disasm defined in com::ibm::wala::shrike::bench::Bench
      uses variable verify defined in com::ibm::wala::shrike::bench::Bench
      uses function verify() defined in com::ibm::wala::shrikeBT::analysis::Verifier
      uses function beginPass() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable doEntry defined in com::ibm::wala::shrike::bench::Bench
      uses function allocateLabel() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function insertAtStart(Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable TYPE_boolean defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
      uses variable EQ defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction::Operator
      uses variable doExit defined in com::ibm::wala::shrike::bench::Bench
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function insertBefore(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable doException defined in com::ibm::wala::shrike::bench::Bench
      uses function addMethodExceptionHandler(String,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function emit(Instruction) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
      uses function emitLabel(int) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
      uses function applyPatches() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function addField(int,String,String,Element[]) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable ACC_PUBLIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable instrumenter defined in com::ibm::wala::shrike::bench::Bench
      uses function outputModifiedClass(ClassInstrumenter,ClassWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
   function main(String[]) in line 62
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses variable instrumenter defined in com::ibm::wala::shrike::bench::Bench
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable doExit defined in com::ibm::wala::shrike::bench::Bench
      uses variable doException defined in com::ibm::wala::shrike::bench::Bench
      uses function setPassUnmodifiedClasses(boolean) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassInstrumenter,Writer) defined in com::ibm::wala::shrike::bench::Bench
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   variable disasm in line 53
   variable doEntry in line 58
   variable doException in line 60
   variable doExit in line 59
   variable instrumenter in line 56
   variable verify in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/bench/InterfaceAnalyzer.java
module com::ibm::wala::shrike::bench::InterfaceAnalyzer
   function doClass(ClassReader) in line 71
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable ACC_INTERFACE defined in com::ibm::wala::shrikeBT::Constants
      uses variable ACC_PUBLIC defined in com::ibm::wala::shrikeBT::Constants
      uses function doType(int,String,String,int) defined in com::ibm::wala::shrike::bench::InterfaceAnalyzer
   function doType(int,String,String,int) in line 88
      22 lines of code
      4 parameters
      6 conditional paths
      uses variable ACC_PUBLIC defined in com::ibm::wala::shrikeBT::Constants
      uses function packagePart(String,int) defined in com::ibm::wala::shrike::bench::InterfaceAnalyzer
   function main(String[]) in line 42
      protection public
      23 lines of code
      1 parameters
      3 conditional paths
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(ClassReader) defined in com::ibm::wala::shrike::bench::InterfaceAnalyzer
      uses function getReader() defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function packagePart(String,int) in line 111
      12 lines of code
      2 parameters
      3 conditional paths
module com::ibm::wala::shrike::bench::InterfaceAnalyzer::TypeStats
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/bench/Mangler.java
module com::ibm::wala::shrike::bench::Mangler
   function doClass(final ClassInstrumenter,Writer,final Random) in line 87
      119 lines of code
      3 parameters
      12 conditional paths
      uses variable disasm defined in com::ibm::wala::shrike::bench::Mangler
      uses variable verify defined in com::ibm::wala::shrike::bench::Mangler
      uses function verify() defined in com::ibm::wala::shrikeBT::analysis::Verifier
      uses function beginPass() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function visitInstructions(Visitor) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function isStatic() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function emit(Instruction) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
      uses function isStatic() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function allocateLabel() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function getType() defined in com::ibm::wala::shrikeBT::ArrayStoreInstruction
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
      uses variable EQ defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction::Operator
      uses function emitLabel(int) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
      uses function applyPatches() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instrumenter defined in com::ibm::wala::shrike::bench::Mangler
      uses function outputModifiedClass(ClassInstrumenter,ClassWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
   function main(String[]) in line 60
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable instrumenter defined in com::ibm::wala::shrike::bench::Mangler
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function setPassUnmodifiedClasses(boolean) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function setOutputJar(File) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassInstrumenter,Writer,final Random) defined in com::ibm::wala::shrike::bench::Mangler
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   variable disasm in line 58
   variable instrumenter in line 56
   variable verify in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/bench/Slots.java
module com::ibm::wala::shrike::bench::Slots
   variable i in line 18
      protection public
   variable o in line 17
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/bench/Statistics.java
module com::ibm::wala::shrike::bench::Statistics
   function doClass(final ClassInstrumenter,Writer) in line 62
      46 lines of code
      2 parameters
      12 conditional paths
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getMethodCount() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getName() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getMethodAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable ACC_PRIVATE defined in com::ibm::wala::shrikeBT::Constants
      uses variable ACC_PROTECTED defined in com::ibm::wala::shrikeBT::Constants
      uses function getAccessFlags() defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable ACC_FINAL defined in com::ibm::wala::shrikeBT::Constants
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function main(String[]) in line 44
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable instrumenter defined in com::ibm::wala::shrike::bench::Statistics
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassInstrumenter,Writer) defined in com::ibm::wala::shrike::bench::Statistics
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   variable instrumenter in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/copywriter/CopyWriter.java
module com::ibm::wala::shrike::copywriter::CopyWriter
   function collectAttributes(ClassReader,int,ClassWriter,AttrIterator) in line 221
      9 lines of code
      4 parameters
      2 conditional paths
      uses function transformAttribute(ClassReader,int,ClassWriter,AttrIterator) defined in com::ibm::wala::shrike::copywriter::CopyWriter
   function copyEntry(ConstantPoolParser,ClassWriter,int) in line 231
      28 lines of code
      3 parameters
      12 conditional paths
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_FieldRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_InterfaceMethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_MethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Integer defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Float defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Utf8 defined in com::ibm::wala::shrikeCT::ClassConstants
   function doClass(final ClassInstrumenter) in line 260
      81 lines of code
      1 parameters
      11 conditional paths
      uses function setForceAddCPEntries(boolean) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable copyright defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function getCP() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getItemCount() defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getItemType(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function copyEntry(ConstantPoolParser,ClassWriter,int) defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses variable replaceWith defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses variable replace defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function setMajorVersion(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getMajorVersion() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function setMinorVersion(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getMinorVersion() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function setAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getAccessFlags() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function setName(String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function setSuperName(String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getSuperName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function setInterfaceNames(String[]) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getInterfaceNames() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldCount() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function initFieldAttributeIterator(int,AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function addField(int,String,String,Element[]) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getFieldAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldName(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldType(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function collectAttributes(ClassReader,int,ClassWriter,AttrIterator) defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function getMethodCount() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function initMethodAttributeIterator(int,AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function addMethod(int,String,String,Element[]) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getMethodAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getMethodName(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getMethodType(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function initClassAttributeIterator(AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function addClassAttribute(Element) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function transformAttribute(ClassReader,int,ClassWriter,AttrIterator) defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses variable instrumenter defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function outputModifiedClass(ClassInstrumenter,ClassWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
   function main(String[]) in line 66
      protection public
      56 lines of code
      1 parameters
      8 conditional paths
      uses variable USAGE defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses variable copyright defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses variable instrumenter defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function setManifestBuilder(ManifestBuilder) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function setJARComment(String) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassInstrumenter) defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function getLastClassResourceName() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function writeUnmodifiedClasses() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function addOutputJarEntry(ZipEntry) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function endOutputJarEntry() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function transformAttribute(ClassReader,int,ClassWriter,AttrIterator) in line 131
      89 lines of code
      4 parameters
      16 conditional paths
      uses variable replace defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function decode() defined in com::ibm::wala::shrikeBT::Decoder
      uses function setMaxLocals(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setMaxStack(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setCode(byte[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setRawHandlers(int[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function initAttributeIterator(ClassReader.AttrIterator) defined in com::ibm::wala::shrikeCT::CodeReader
      uses function setAttributes(ClassWriter.Element[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function collectAttributes(ClassReader,int,ClassWriter,AttrIterator) defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function setValueCPIndex(int) defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function transformCPIndex(int) defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses function getValueCPIndex() defined in com::ibm::wala::shrikeCT::ConstantValueReader
      uses function setSourceFileCPIndex(int) defined in com::ibm::wala::shrikeCT::SourceFileWriter
      uses function getSourceFileCPIndex() defined in com::ibm::wala::shrikeCT::SourceFileReader
      uses function getRawTable() defined in com::ibm::wala::shrikeCT::LocalVariableTableReader
      uses function setRawTable(int[]) defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
      uses function getRawTable() defined in com::ibm::wala::shrikeCT::ExceptionsReader
      uses function setRawTable(int[]) defined in com::ibm::wala::shrikeCT::ExceptionsWriter
      uses function getRawTable() defined in com::ibm::wala::shrikeCT::InnerClassesReader
      uses function setRawTable(int[]) defined in com::ibm::wala::shrikeCT::InnerClassesWriter
   function transformCPIndex(int) in line 123
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable replace defined in com::ibm::wala::shrike::copywriter::CopyWriter
      uses variable replaceWith defined in com::ibm::wala::shrike::copywriter::CopyWriter
   variable copyright in line 52
      protection public
   variable copyrightAttrName in line 53
      protection public
   variable instrumenter in line 51
   variable replace in line 56
   variable replaceWith in line 55
   variable USAGE in line 46
module com::ibm::wala::shrike::copywriter::CopyWriter::UnknownAttributeException
   inherits from Exception
   variable serialVersionUID in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrike/tools/ExtractMatchingClasses.java
module com::ibm::wala::shrike::tools::ExtractMatchingClasses
   function main(String[]) in line 39
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses function matchEntry(JarFile[],JarEntry) defined in com::ibm::wala::shrike::tools::ExtractMatchingClasses
      uses function readFully(InputStream,byte[]) defined in com::ibm::wala::shrike::tools::ExtractMatchingClasses
   function matchEntry(JarFile[],JarEntry) in line 22
      8 lines of code
      2 parameters
      3 conditional paths
   function readFully(InputStream,byte[]) in line 31
      7 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/analysis/Analyzer.java
module com::ibm::wala::shrikeBT::analysis::Analyzer
   function addBackEdge(int,int) in line 69
      37 lines of code
      2 parameters
      9 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function computeMaxLocals() in line 599
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable maxLocals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable locals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function computeStackSizesAt(int[],int,int) in line 283
      36 lines of code
      3 parameters
      10 conditional paths
      uses variable stackSizes defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getPushedWordSize() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
   function computeTypes(int,TypeVisitor,BitSet,List< PathElement >) in line 480
      103 lines of code
      4 parameters
      19 conditional paths
      uses variable maxStack defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable maxLocals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable path defined in com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
      uses variable stacks defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable locals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
      uses function getSize() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getPushedType(String[]) defined in com::ibm::wala::shrikeBT::Instruction
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function mergeTypes(int,String[],int,String[],int,List< PathElement >) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
   function computeTypes(TypeVisitor,BitSet,boolean) in line 631
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function initTypeInfo() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function computeTypes(int,TypeVisitor,BitSet,List< PathElement >) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function cutArray(String[],int) in line 425
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable noStrings defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function findCommonSupertype(String,String) in line 148
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable hierarchy defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getBackEdges() in line 107
      protection public
      36 lines of code
      0 parameters
      9 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function addBackEdge(int,int) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable handlers defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable noEdges defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getBasicBlockStarts() in line 152
      protection public
      27 lines of code
      0 parameters
      7 conditional paths
      uses variable basicBlockStarts defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getInstructions() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getLocalTypes() in line 646
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getReachableFrom(int) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReachableFrom(int,boolean,BitSet) in line 225
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function getReachableRecursive(int,BitSet,boolean,BitSet) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getReachableFromUpdate(int,BitSet,boolean,BitSet) in line 220
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function getReachableRecursive(int,BitSet,boolean,BitSet) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getReachableRecursive(int,BitSet,boolean,BitSet) in line 184
      31 lines of code
      4 parameters
      7 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
   function getReachingBase(int,BitSet,BitSet) in line 255
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getReachingRecursive(int,BitSet,BitSet) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getReachingRecursive(int,BitSet,BitSet) in line 231
      23 lines of code
      3 parameters
      5 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getReachingTo(int,BitSet) in line 272
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getBackEdges() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getReachingBase(int,BitSet,BitSet) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getReachingTo(int) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReachingTo(int,BitSet) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getReachingToUpdate(int,BitSet,BitSet) in line 266
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function getBackEdges() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getReachingBase(int,BitSet,BitSet) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getStackSizes() in line 584
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable stackSizes defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function computeStackSizesAt(int[],int,int) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getStackTypes() in line 655
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stacks defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function initTypeInfo() in line 611
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable stacks defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable locals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable noStrings defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable isStatic defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable classType defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable signature defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable stackSizes defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function getStackSizes() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable maxStack defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function computeMaxLocals() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function isSubtypeOf(String,String) in line 144
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable hierarchy defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable NO defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchy
   function mergeTypes(int,String[],int,String[],int,List< PathElement >) in line 435
      40 lines of code
      6 parameters
      9 conditional paths
      uses variable stacks defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function cutArray(String[],int) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable path defined in com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
      uses function findCommonSupertype(String,String) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable locals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function setClassHierarchy(ClassHierarchyProvider) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function Analyzer(boolean,String,String,Instruction[],ExceptionHandler) in line 52
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable classType defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable isStatic defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable signature defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable handlers defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function Analyzer(MethodData) in line 659
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getIsStatic() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getClassType() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getSignature() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::MethodData
   variable backEdges in line 47
   variable basicBlockStarts in line 46
   variable classType in line 34
   variable handlers in line 37
   variable hierarchy in line 38
   variable instructions in line 36
   variable isStatic in line 33
   variable locals in line 44
   variable maxLocals in line 42
   variable maxStack in line 41
   variable noEdges in line 50
   variable noStrings in line 49
   variable signature in line 35
   variable stacks in line 43
   variable stackSizes in line 45
module com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
   inherits from Exception
   function getOffset() in line 340
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable offset defined in com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
   function getPath() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable path defined in com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
   function getReason() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reason defined in com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
   function printPath(Writer) in line 366
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable path defined in com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
      uses variable locals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   variable offset in line 326
   variable path in line 328
   variable reason in line 327
   variable serialVersionUID in line 325
module com::ibm::wala::shrikeBT::analysis::Analyzer::PathElement
   function getIndex() in line 406
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLocals() in line 413
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locals defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function getStack() in line 420
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::shrikeBT::analysis::Analyzer::TypeVisitor
   inherits from com::ibm::wala::shrikeBT::Instruction::Visitor
   abstract class
   function setState(int,List< PathElement >,String[],String[]) in line 637
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function shouldContinue() in line 639
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/analysis/ClassHierarchyProvider.java
module com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
   function getSubClasses(String) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSuperClass(String) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSuperInterfaces(String) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isInterface(String) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/analysis/ClassHierarchyStore.java
module com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
   inherits from com::ibm::wala::shrikeBT::analysis::ClassHierarchyProvider
   function getSubClasses(String) in line 102
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
      uses variable noClasses defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
   function getSuperClass(String) in line 86
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
   function getSuperInterfaces(String) in line 94
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
   function isInterface(String) in line 110
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
      uses variable MAYBE defined in com::ibm::wala::shrikeBT::Constants
      uses variable YES defined in com::ibm::wala::shrikeBT::Constants
      uses variable NO defined in com::ibm::wala::shrikeBT::Constants
   function iterateOverClasses() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
   function removeClassInfo(String) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
   function setClassInfo(String,boolean,boolean,String,String[]) in line 62
      protection public
      6 lines of code
      5 parameters
      2 conditional paths
      uses variable contents defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
      uses function isInterface(String) defined in com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore
   function ClassHierarchyStore() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable contents in line 40
   variable noClasses in line 24
module com::ibm::wala::shrikeBT::analysis::ClassHierarchyStore::ClassInfo
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/analysis/Verifier.java
module com::ibm::wala::shrikeBT::analysis::Verifier
   inherits from com::ibm::wala::shrikeBT::analysis::Analyzer
   function computeTypes() in line 295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBasicBlockStarts() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function verify() in line 281
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function computeTypes() defined in com::ibm::wala::shrikeBT::analysis::Verifier
      uses function getBasicBlockStarts() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function verifyCollectAll() in line 287
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function computeTypes() defined in com::ibm::wala::shrikeBT::analysis::Verifier
   function Verifier(boolean,String,String,Instruction[],ExceptionHandler) in line 263
      protection public
      3 lines of code
      5 parameters
      1 conditional paths
      uses variable isStatic defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable classType defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable signature defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable instructions defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable handlers defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function Verifier(MethodData) in line 270
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::shrikeBT::analysis::Verifier::VerifyVisitor
   inherits from TypeVisitor
   function checkArrayStackSubtype(int,String) in line 107
      5 lines of code
      2 parameters
      1 conditional paths
   function checkStackSubtype(int,String) in line 101
      5 lines of code
      2 parameters
      1 conditional paths
   function setState(int,List< PathElement >,String[],String[]) in line 84
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   function shouldContinue() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitArrayLength(ArrayLengthInstruction) in line 233
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitArrayLoad(ArrayLoadInstruction) in line 136
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitArrayStore(ArrayStoreInstruction) in line 141
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitBinaryOp(BinaryOpInstruction) in line 153
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitCheckCast(CheckCastInstruction) in line 247
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitComparison(ComparisonInstruction) in line 171
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalBranch(ConditionalBranchInstruction) in line 176
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitConstant(ConstantInstruction) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitConversion(ConversionInstruction) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDup(DupInstruction) in line 150
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitGet(GetInstruction) in line 192
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitGoto(GotoInstruction) in line 118
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceof(InstanceofInstruction) in line 253
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitInvoke(InvokeInstruction) in line 212
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function visitLocalLoad(LoadInstruction) in line 121
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitLocalStore(StoreInstruction) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMonitor(MonitorInstruction) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNew(NewInstruction) in line 225
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function visitPop(PopInstruction) in line 147
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPut(PutInstruction) in line 201
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitReturn(ReturnInstruction) in line 185
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitShift(ShiftInstruction) in line 162
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(SwitchInstruction) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitThrow(ThrowInstruction) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitUnaryOp(UnaryOpInstruction) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable curIndex in line 75
   variable curLocals in line 79
   variable curPath in line 76
   variable curStack in line 78
   variable ex in line 77
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ArrayLengthInstruction.java
module com::ibm::wala::shrikeBT::ArrayLengthInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ArrayLengthInstruction() defined in com::ibm::wala::shrikeBT::ArrayLengthInstruction
   function getPoppedCount() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
   function getPushedWordSize() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preallocated defined in com::ibm::wala::shrikeBT::ArrayLengthInstruction
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(Visitor) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitArrayLength(ArrayLengthInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ArrayLengthInstruction() in line 17
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_arraylength defined in com::ibm::wala::shrikeBT::Constants
   variable preallocated in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ArrayLoadInstruction.java
module com::ibm::wala::shrikeBT::ArrayLoadInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 40
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ArrayLoadInstruction(short) defined in com::ibm::wala::shrikeBT::ArrayLoadInstruction
   function getPoppedCount() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 61
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ArrayLoadInstruction
      uses variable TYPE_null defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_unknown defined in com::ibm::wala::shrikeBT::Constants
   function getPushedWordSize() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ArrayLoadInstruction
   function getType() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iaload defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable TYPE_boolean_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocated defined in com::ibm::wala::shrikeBT::ArrayLoadInstruction
   function preallocate() in line 23
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_saload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iaload defined in com::ibm::wala::shrikeBT::Constants
      uses function ArrayLoadInstruction(short) defined in com::ibm::wala::shrikeBT::ArrayLoadInstruction
      uses variable OP_baload defined in com::ibm::wala::shrikeBT::Constants
   function toString() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ArrayLoadInstruction
   function visit(Visitor) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitArrayLoad(ArrayLoadInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ArrayLoadInstruction(short) in line 17
      3 lines of code
      1 parameters
      1 conditional paths
   variable preallocated in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ArrayStoreInstruction.java
module com::ibm::wala::shrikeBT::ArrayStoreInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 40
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ArrayStoreInstruction(short) defined in com::ibm::wala::shrikeBT::ArrayStoreInstruction
   function getPoppedCount() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iastore defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable TYPE_boolean_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocated defined in com::ibm::wala::shrikeBT::ArrayStoreInstruction
   function preallocate() in line 23
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_sastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iastore defined in com::ibm::wala::shrikeBT::Constants
      uses function ArrayStoreInstruction(short) defined in com::ibm::wala::shrikeBT::ArrayStoreInstruction
      uses variable OP_baload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iaload defined in com::ibm::wala::shrikeBT::Constants
   function toString() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ArrayStoreInstruction
   function visit(Visitor) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitArrayStore(ArrayStoreInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ArrayStoreInstruction(short) in line 17
      3 lines of code
      1 parameters
      1 conditional paths
   variable preallocated in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/BinaryOpInstruction.java
module com::ibm::wala::shrikeBT::BinaryOpInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 71
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function BinaryOpInstruction(short) defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
   function getOperator() in line 83
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_iand defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iadd defined in com::ibm::wala::shrikeBT::Constants
   function getPoppedCount() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
   function getPushedWordSize() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
   function getType() in line 107
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_iand defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iadd defined in com::ibm::wala::shrikeBT::Constants
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_idiv defined in com::ibm::wala::shrikeBT::Constants
   function make(String,Operator) in line 52
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable REM defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
      uses variable TYPE_double_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable arithmeticOps defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
      uses variable ADD defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
      uses variable TYPE_long_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable logicalOps defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
      uses variable AND defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
   function preallocateArithmeticOps() in line 36
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_drem defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iadd defined in com::ibm::wala::shrikeBT::Constants
      uses function BinaryOpInstruction(short) defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
   function preallocateLogicalOps() in line 44
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_lxor defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iand defined in com::ibm::wala::shrikeBT::Constants
      uses function BinaryOpInstruction(short) defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
   function toString() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
      uses function getOperator() defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
   function visit(Visitor) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitBinaryOp(BinaryOpInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function BinaryOpInstruction(short) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
   variable arithmeticOps in line 33
   variable logicalOps in line 34
module com::ibm::wala::shrikeBT::BinaryOpInstruction::IOperator
module com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
   inherits from com::ibm::wala::shrikeBT::BinaryOpInstruction::IOperator
   function toString() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable ADD in line 21
      protection public
   variable AND in line 21
      protection public
   variable DIV in line 21
      protection public
   variable MUL in line 21
      protection public
   variable OR in line 21
      protection public
   variable REM in line 21
      protection public
   variable SUB in line 21
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/BytecodeConstants.java
module com::ibm::wala::shrikeBT::BytecodeConstants
   variable JBC_aaload in line 75
      protection public
   variable JBC_aastore in line 108
      protection public
   variable JBC_aconst_null in line 26
      protection public
   variable JBC_aload in line 50
      protection public
   variable JBC_aload_0 in line 67
      protection public
   variable JBC_aload_1 in line 68
      protection public
   variable JBC_aload_2 in line 69
      protection public
   variable JBC_aload_3 in line 70
      protection public
   variable JBC_anewarray in line 214
      protection public
   variable JBC_areturn in line 201
      protection public
   variable JBC_arraylength in line 215
      protection public
   variable JBC_astore in line 83
      protection public
   variable JBC_astore_0 in line 100
      protection public
   variable JBC_astore_1 in line 101
      protection public
   variable JBC_astore_2 in line 102
      protection public
   variable JBC_astore_3 in line 103
      protection public
   variable JBC_athrow in line 216
      protection public
   variable JBC_baload in line 76
      protection public
   variable JBC_bastore in line 109
      protection public
   variable JBC_bipush in line 41
      protection public
   variable JBC_caload in line 77
      protection public
   variable JBC_castore in line 110
      protection public
   variable JBC_checkcast in line 217
      protection public
   variable JBC_d2f in line 169
      protection public
   variable JBC_d2i in line 167
      protection public
   variable JBC_d2l in line 168
      protection public
   variable JBC_dadd in line 124
      protection public
   variable JBC_daload in line 74
      protection public
   variable JBC_dastore in line 107
      protection public
   variable JBC_dcmpg in line 177
      protection public
   variable JBC_dcmpl in line 176
      protection public
   variable JBC_dconst_0 in line 39
      protection public
   variable JBC_dconst_1 in line 40
      protection public
   variable JBC_ddiv in line 136
      protection public
   variable JBC_dload in line 49
      protection public
   variable JBC_dload_0 in line 63
      protection public
   variable JBC_dload_1 in line 64
      protection public
   variable JBC_dload_2 in line 65
      protection public
   variable JBC_dload_3 in line 66
      protection public
   variable JBC_dmul in line 132
      protection public
   variable JBC_dneg in line 144
      protection public
   variable JBC_drem in line 140
      protection public
   variable JBC_dreturn in line 200
      protection public
   variable JBC_dstore in line 82
      protection public
   variable JBC_dstore_0 in line 96
      protection public
   variable JBC_dstore_1 in line 97
      protection public
   variable JBC_dstore_2 in line 98
      protection public
   variable JBC_dstore_3 in line 99
      protection public
   variable JBC_dsub in line 128
      protection public
   variable JBC_dup in line 114
      protection public
   variable JBC_dup2 in line 117
      protection public
   variable JBC_dup2_x1 in line 118
      protection public
   variable JBC_dup2_x2 in line 119
      protection public
   variable JBC_dup_x1 in line 115
      protection public
   variable JBC_dup_x2 in line 116
      protection public
   variable JBC_f2d in line 166
      protection public
   variable JBC_f2i in line 164
      protection public
   variable JBC_f2l in line 165
      protection public
   variable JBC_fadd in line 123
      protection public
   variable JBC_faload in line 73
      protection public
   variable JBC_fastore in line 106
      protection public
   variable JBC_fcmpg in line 175
      protection public
   variable JBC_fcmpl in line 174
      protection public
   variable JBC_fconst_0 in line 36
      protection public
   variable JBC_fconst_1 in line 37
      protection public
   variable JBC_fconst_2 in line 38
      protection public
   variable JBC_fdiv in line 135
      protection public
   variable JBC_fload in line 48
      protection public
   variable JBC_fload_0 in line 59
      protection public
   variable JBC_fload_1 in line 60
      protection public
   variable JBC_fload_2 in line 61
      protection public
   variable JBC_fload_3 in line 62
      protection public
   variable JBC_fmul in line 131
      protection public
   variable JBC_fneg in line 143
      protection public
   variable JBC_frem in line 139
      protection public
   variable JBC_freturn in line 199
      protection public
   variable JBC_fstore in line 81
      protection public
   variable JBC_fstore_0 in line 92
      protection public
   variable JBC_fstore_1 in line 93
      protection public
   variable JBC_fstore_2 in line 94
      protection public
   variable JBC_fstore_3 in line 95
      protection public
   variable JBC_fsub in line 127
      protection public
   variable JBC_getfield in line 205
      protection public
   variable JBC_getstatic in line 203
      protection public
   variable JBC_goto in line 192
      protection public
   variable JBC_goto_w in line 225
      protection public
   variable JBC_i2d in line 160
      protection public
   variable JBC_i2f in line 159
      protection public
   variable JBC_i2l in line 158
      protection public
   variable JBC_iadd in line 121
      protection public
   variable JBC_iaload in line 71
      protection public
   variable JBC_iand in line 151
      protection public
   variable JBC_iastore in line 104
      protection public
   variable JBC_iconst_0 in line 28
      protection public
   variable JBC_iconst_1 in line 29
      protection public
   variable JBC_iconst_2 in line 30
      protection public
   variable JBC_iconst_3 in line 31
      protection public
   variable JBC_iconst_4 in line 32
      protection public
   variable JBC_iconst_5 in line 33
      protection public
   variable JBC_iconst_m1 in line 27
      protection public
   variable JBC_idiv in line 133
      protection public
   variable JBC_if_acmpeq in line 190
      protection public
   variable JBC_if_acmpne in line 191
      protection public
   variable JBC_if_icmpeq in line 184
      protection public
   variable JBC_if_icmpge in line 187
      protection public
   variable JBC_if_icmpgt in line 188
      protection public
   variable JBC_if_icmple in line 189
      protection public
   variable JBC_if_icmplt in line 186
      protection public
   variable JBC_if_icmpne in line 185
      protection public
   variable JBC_ifeq in line 178
      protection public
   variable JBC_ifge in line 181
      protection public
   variable JBC_ifgt in line 182
      protection public
   variable JBC_ifle in line 183
      protection public
   variable JBC_iflt in line 180
      protection public
   variable JBC_ifne in line 179
      protection public
   variable JBC_ifnonnull in line 224
      protection public
   variable JBC_ifnull in line 223
      protection public
   variable JBC_iinc in line 157
      protection public
   variable JBC_iload in line 46
      protection public
   variable JBC_iload_0 in line 51
      protection public
   variable JBC_iload_1 in line 52
      protection public
   variable JBC_iload_2 in line 53
      protection public
   variable JBC_iload_3 in line 54
      protection public
   variable JBC_impdep1 in line 228
      protection public
   variable JBC_impdep2 in line 229
      protection public
   variable JBC_imul in line 129
      protection public
   variable JBC_ineg in line 141
      protection public
   variable JBC_instanceof in line 218
      protection public
   variable JBC_int2byte in line 170
      protection public
   variable JBC_int2char in line 171
      protection public
   variable JBC_int2short in line 172
      protection public
   variable JBC_invokeinterface in line 210
      protection public
   variable JBC_invokespecial in line 208
      protection public
   variable JBC_invokestatic in line 209
      protection public
   variable JBC_invokevirtual in line 207
      protection public
   variable JBC_ior in line 153
      protection public
   variable JBC_irem in line 137
      protection public
   variable JBC_ireturn in line 197
      protection public
   variable JBC_ishl in line 145
      protection public
   variable JBC_ishr in line 147
      protection public
   variable JBC_istore in line 79
      protection public
   variable JBC_istore_0 in line 84
      protection public
   variable JBC_istore_1 in line 85
      protection public
   variable JBC_istore_2 in line 86
      protection public
   variable JBC_istore_3 in line 87
      protection public
   variable JBC_isub in line 125
      protection public
   variable JBC_iushr in line 149
      protection public
   variable JBC_ixor in line 155
      protection public
   variable JBC_jsr in line 193
      protection public
   variable JBC_jsr_w in line 226
      protection public
   variable JBC_l2d in line 163
      protection public
   variable JBC_l2f in line 162
      protection public
   variable JBC_l2i in line 161
      protection public
   variable JBC_ladd in line 122
      protection public
   variable JBC_laload in line 72
      protection public
   variable JBC_land in line 152
      protection public
   variable JBC_lastore in line 105
      protection public
   variable JBC_lcmp in line 173
      protection public
   variable JBC_lconst_0 in line 34
      protection public
   variable JBC_lconst_1 in line 35
      protection public
   variable JBC_ldc in line 43
      protection public
   variable JBC_ldc2_w in line 45
      protection public
   variable JBC_ldc_w in line 44
      protection public
   variable JBC_ldiv in line 134
      protection public
   variable JBC_length in line 235
      protection public
   variable JBC_lload in line 47
      protection public
   variable JBC_lload_0 in line 55
      protection public
   variable JBC_lload_1 in line 56
      protection public
   variable JBC_lload_2 in line 57
      protection public
   variable JBC_lload_3 in line 58
      protection public
   variable JBC_lmul in line 130
      protection public
   variable JBC_lneg in line 142
      protection public
   variable JBC_lookupswitch in line 196
      protection public
   variable JBC_lor in line 154
      protection public
   variable JBC_lrem in line 138
      protection public
   variable JBC_lreturn in line 198
      protection public
   variable JBC_lshl in line 146
      protection public
   variable JBC_lshr in line 148
      protection public
   variable JBC_lstore in line 80
      protection public
   variable JBC_lstore_0 in line 88
      protection public
   variable JBC_lstore_1 in line 89
      protection public
   variable JBC_lstore_2 in line 90
      protection public
   variable JBC_lstore_3 in line 91
      protection public
   variable JBC_lsub in line 126
      protection public
   variable JBC_lushr in line 150
      protection public
   variable JBC_lxor in line 156
      protection public
   variable JBC_monitorenter in line 219
      protection public
   variable JBC_monitorexit in line 220
      protection public
   variable JBC_multianewarray in line 222
      protection public
   variable JBC_name in line 443
      protection public
   variable JBC_new in line 212
      protection public
   variable JBC_newarray in line 213
      protection public
   variable JBC_nop in line 25
      protection public
   variable JBC_pop in line 112
      protection public
   variable JBC_pop2 in line 113
      protection public
   variable JBC_putfield in line 206
      protection public
   variable JBC_putstatic in line 204
      protection public
   variable JBC_ret in line 194
      protection public
   variable JBC_return in line 202
      protection public
   variable JBC_saload in line 78
      protection public
   variable JBC_sastore in line 111
      protection public
   variable JBC_sipush in line 42
      protection public
   variable JBC_swap in line 120
      protection public
   variable JBC_tableswitch in line 195
      protection public
   variable JBC_wide in line 221
      protection public
   variable JBC_xxxunusedxxx in line 211
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/CheckCastInstruction.java
module com::ibm::wala::shrikeBT::CheckCastInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 28
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function CheckCastInstruction(String) defined in com::ibm::wala::shrikeBT::CheckCastInstruction
      uses variable type defined in com::ibm::wala::shrikeBT::CheckCastInstruction
   function getPoppedCount() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::CheckCastInstruction
   function getPushedWordSize() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::CheckCastInstruction
   function hashCode() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::CheckCastInstruction
   function isPEI() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function CheckCastInstruction(String) defined in com::ibm::wala::shrikeBT::CheckCastInstruction
      uses variable type defined in com::ibm::wala::shrikeBT::CheckCastInstruction
   function toString() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::CheckCastInstruction
   function visit(Visitor) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitCheckCast(CheckCastInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function CheckCastInstruction(String) in line 19
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::CheckCastInstruction
      uses variable OP_checkcast defined in com::ibm::wala::shrikeBT::Constants
   variable type in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ComparisonInstruction.java
module com::ibm::wala::shrikeBT::ComparisonInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 62
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ComparisonInstruction(short) defined in com::ibm::wala::shrikeBT::ComparisonInstruction
   function getOperator() in line 74
      protection public
      14 lines of code
      0 parameters
      6 conditional paths
      uses variable OP_lcmp defined in com::ibm::wala::shrikeBT::Constants
      uses variable CMP defined in com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
      uses variable OP_fcmpl defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dcmpl defined in com::ibm::wala::shrikeBT::Constants
      uses variable CMPL defined in com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
      uses variable OP_dcmpg defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fcmpg defined in com::ibm::wala::shrikeBT::Constants
      uses enumvalue CMPG defined in com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
   function getPoppedCount() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TYPE_boolean defined in com::ibm::wala::shrikeBT::Constants
   function getPushedWordSize() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 89
      protection public
      14 lines of code
      0 parameters
      6 conditional paths
      uses variable OP_lcmp defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_long defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fcmpg defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fcmpl defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_float defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dcmpl defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dcmpg defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_double defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,Operator) in line 41
      protection public
      20 lines of code
      2 parameters
      6 conditional paths
      uses variable TYPE_long_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable CMP defined in com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
      uses variable preallocatedLCMP defined in com::ibm::wala::shrikeBT::ComparisonInstruction
      uses variable TYPE_float_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_double_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocatedFloatingCompares defined in com::ibm::wala::shrikeBT::ComparisonInstruction
      uses variable CMPL defined in com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
   function preallocateFloatingCompares() in line 33
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_dcmpg defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fcmpl defined in com::ibm::wala::shrikeBT::Constants
      uses function ComparisonInstruction(short) defined in com::ibm::wala::shrikeBT::ComparisonInstruction
   function toString() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ComparisonInstruction
      uses function getOperator() defined in com::ibm::wala::shrikeBT::ComparisonInstruction
   function visit(Visitor) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitComparison(ComparisonInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ComparisonInstruction(short) in line 26
      3 lines of code
      1 parameters
      1 conditional paths
   variable preallocatedFloatingCompares in line 31
   variable preallocatedLCMP in line 30
module com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
   function toString() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable CMP in line 18
      protection public
   variable CMPL in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/Compiler.java
module com::ibm::wala::shrikeBT::Compiler
   inherits from com::ibm::wala::shrikeBT::Constants
   abstract class
   function addBackEdge(int,int) in line 1127
      37 lines of code
      2 parameters
      9 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::Compiler
   function addLiveVar(int,int) in line 1165
      26 lines of code
      2 parameters
      7 conditional paths
      uses variable liveLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable backEdges defined in com::ibm::wala::shrikeBT::Compiler
   function allocateConstantPoolClassType(String) in line 140
      1 lines of code
      1 parameters
      1 conditional paths
   function allocateConstantPoolDouble(double) in line 136
      1 lines of code
      1 parameters
      1 conditional paths
   function allocateConstantPoolField(String,String,String) in line 142
      1 lines of code
      3 parameters
      1 conditional paths
   function allocateConstantPoolFloat(float) in line 132
      1 lines of code
      1 parameters
      1 conditional paths
   function allocateConstantPoolInteger(int) in line 130
      1 lines of code
      1 parameters
      1 conditional paths
   function allocateConstantPoolInterfaceMethod(String,String,String) in line 146
      1 lines of code
      3 parameters
      1 conditional paths
   function allocateConstantPoolLong(long) in line 134
      1 lines of code
      1 parameters
      1 conditional paths
   function allocateConstantPoolMethod(String,String,String) in line 144
      1 lines of code
      3 parameters
      1 conditional paths
   function allocateConstantPoolString(String) in line 138
      1 lines of code
      1 parameters
      1 conditional paths
   function allocateLocals(int) in line 1242
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable maxLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses variable allocatedLocals defined in com::ibm::wala::shrikeBT::Compiler
   function applyPatches(ArrayList< Patch >) in line 416
      9 lines of code
      1 parameters
      3 conditional paths
   function buildBytecodeMap(int,int) in line 1096
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToOffsets defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
   function buildRawHandlers(int,int) in line 1047
      48 lines of code
      2 parameters
      10 conditional paths
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses variable noRawHandlers defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToOffsets defined in com::ibm::wala::shrikeBT::Compiler
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolClassType(String) defined in com::ibm::wala::shrikeBT::Compiler
   function checkStackWordSize(byte[],int) in line 259
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable maxStack defined in com::ibm::wala::shrikeBT::Compiler
      uses variable stackWords defined in com::ibm::wala::shrikeBT::Compiler
   function collectInstructionInfo() in line 150
      70 lines of code
      0 parameters
      10 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function getType() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable TYPE_long defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_double defined in com::ibm::wala::shrikeBT::Constants
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
      uses variable isStatic defined in com::ibm::wala::shrikeBT::Compiler
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
      uses variable signature defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
   function compile() in line 1654
      protection public
      25 lines of code
      0 parameters
      3 conditional paths
      uses function collectInstructionInfo() defined in com::ibm::wala::shrikeBT::Compiler
      uses function computeStackWords() defined in com::ibm::wala::shrikeBT::Compiler
      uses function outputInstructions(int,int,int,boolean,byte[]) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable allocatedLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses variable maxLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses function makeLiveLocals() defined in com::ibm::wala::shrikeBT::Compiler
      uses function makeTypes() defined in com::ibm::wala::shrikeBT::Compiler
      uses variable auxMethods defined in com::ibm::wala::shrikeBT::Compiler
      uses function makeHelpers() defined in com::ibm::wala::shrikeBT::Compiler
      uses variable mainMethod defined in com::ibm::wala::shrikeBT::Compiler
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
      uses function buildRawHandlers(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses function buildBytecodeMap(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable maxStack defined in com::ibm::wala::shrikeBT::Compiler
      uses variable isStatic defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToOffsets defined in com::ibm::wala::shrikeBT::Compiler
      uses variable branchTargets defined in com::ibm::wala::shrikeBT::Compiler
      uses variable stackWords defined in com::ibm::wala::shrikeBT::Compiler
   function computeStackWords() in line 360
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable stackWords defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable maxStack defined in com::ibm::wala::shrikeBT::Compiler
      uses function computeStackWordsAt(int,int,byte[],boolean[]) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToOffsets defined in com::ibm::wala::shrikeBT::Compiler
      uses function writeShort(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses function writeInt(int,int) defined in com::ibm::wala::shrikeBT::Compiler
   function computeStackWordsAt(int,int,byte[],boolean[]) in line 279
      80 lines of code
      4 parameters
      15 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable stackWords defined in com::ibm::wala::shrikeBT::Compiler
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getSize() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getDelta() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function checkStackWordSize(byte[],int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable maxStack defined in com::ibm::wala::shrikeBT::Compiler
      uses function getPushedWordSize() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
   function createHelperMethod(boolean,String) in line 148
      1 lines of code
      2 parameters
      1 conditional paths
   function findBlock(int,int) in line 1357
      243 lines of code
      2 parameters
      54 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses variable stackTypes defined in com::ibm::wala::shrikeBT::Compiler
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable TYPE_unknown defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_null defined in com::ibm::wala::shrikeBT::Constants
      uses variable liveLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses function makeHelperPatch(int,int,int,int,int) defined in com::ibm::wala::shrikeBT::Compiler
   function getAndCheckLocalType(int,int) in line 1230
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable localTypes defined in com::ibm::wala::shrikeBT::Compiler
      uses variable TYPE_unknown defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_null defined in com::ibm::wala::shrikeBT::Constants
   function getAuxiliaryMethods() in line 1693
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable auxMethods defined in com::ibm::wala::shrikeBT::Compiler
   function getClassType() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classType defined in com::ibm::wala::shrikeBT::Compiler
   function getOutput() in line 1683
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mainMethod defined in com::ibm::wala::shrikeBT::Compiler
   function inBasicBlock(int,int) in line 237
      21 lines of code
      2 parameters
      6 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable branchTargets defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Compiler
   function insertBranchOffsetInt(ArrayList< Patch >,int,int,int) in line 408
      7 lines of code
      4 parameters
      2 conditional paths
      uses variable instructionsToOffsets defined in com::ibm::wala::shrikeBT::Compiler
      uses function writeInt(int,int) defined in com::ibm::wala::shrikeBT::Compiler
   function makeCodeBuf() in line 428
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable cachedBuf defined in com::ibm::wala::shrikeBT::Compiler
   function makeHelperPatch(int,int,int,int,int) in line 1248
      108 lines of code
      5 parameters
      15 conditional paths
      uses function getAndCheckLocalType(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable stackTypes defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateLocals(int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable allocatedLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses variable liveLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses function createHelperMethod(boolean,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable classType defined in com::ibm::wala::shrikeBT::Compiler
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable maxStack defined in com::ibm::wala::shrikeBT::Compiler
      uses function outputInstructions(int,int,int,boolean,byte[]) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_wide defined in com::ibm::wala::shrikeBT::Constants
      uses function getOpcode() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable TYPE_void defined in com::ibm::wala::shrikeBT::Constants
      uses function buildRawHandlers(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses function buildBytecodeMap(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable auxMethods defined in com::ibm::wala::shrikeBT::Compiler
      uses variable maxLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
   function makeHelpers() in line 1601
      30 lines of code
      0 parameters
      6 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses function findBlock(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Compiler
   function makeLiveLocals() in line 1192
      37 lines of code
      0 parameters
      9 conditional paths
      uses variable liveLocals defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable backEdges defined in com::ibm::wala::shrikeBT::Compiler
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function addBackEdge(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses function addLiveVar(int,int) defined in com::ibm::wala::shrikeBT::Compiler
   function makeTypes() in line 1632
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable isStatic defined in com::ibm::wala::shrikeBT::Compiler
      uses variable classType defined in com::ibm::wala::shrikeBT::Compiler
      uses variable signature defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses variable hierarchy defined in com::ibm::wala::shrikeBT::Compiler
      uses function setClassHierarchy(ClassHierarchyProvider) defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses function computeTypes() defined in com::ibm::wala::shrikeBT::analysis::Verifier
      uses variable localTypes defined in com::ibm::wala::shrikeBT::Compiler
      uses function getLocalTypes() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
      uses variable stackTypes defined in com::ibm::wala::shrikeBT::Compiler
      uses function getStackTypes() defined in com::ibm::wala::shrikeBT::analysis::Analyzer
   function outputInstructions(int,int,int,boolean,byte[]) in line 442
      604 lines of code
      5 parameters
      117 conditional paths
      uses variable instructionsToOffsets defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
      uses function makeCodeBuf() defined in com::ibm::wala::shrikeBT::Compiler
      uses variable stackWords defined in com::ibm::wala::shrikeBT::Compiler
      uses variable maxStack defined in com::ibm::wala::shrikeBT::Compiler
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::PopInstruction
      uses variable OP_pop defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_pop2 defined in com::ibm::wala::shrikeBT::Constants
      uses function getSize() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getDelta() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable OP_dup defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_swap defined in com::ibm::wala::shrikeBT::Constants
      uses function getOpcode() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable OP_iconst_0 defined in com::ibm::wala::shrikeBT::Constants
      uses function inBasicBlock(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses function getType() defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
      uses function getOperator() defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
      uses variable OP_ifeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_aconst_null defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifnull defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifge defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifgt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifle defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iflt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifne defined in com::ibm::wala::shrikeBT::Constants
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function writeShort(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_goto_w defined in com::ibm::wala::shrikeBT::Constants
      uses function writeInt(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_if_icmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpge defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpgt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmple defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmplt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpne defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_acmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_acmpne defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_bipush defined in com::ibm::wala::shrikeBT::Constants
      uses function writeByte(int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_sipush defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ldc_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable presetConstants defined in com::ibm::wala::shrikeBT::Compiler
      uses function getPushedType(String[]) defined in com::ibm::wala::shrikeBT::Instruction
      uses function allocateConstantPoolInteger(int) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable TYPE_String defined in com::ibm::wala::shrikeBT::Constants
      uses function allocateConstantPoolString(String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolFloat(float) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_ldc defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ldc2_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_long defined in com::ibm::wala::shrikeBT::Constants
      uses function allocateConstantPoolLong(long) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolDouble(double) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_iload_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload_1 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload_2 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload_3 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload defined in com::ibm::wala::shrikeBT::Constants
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses function getOperator() defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable ADD defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
      uses variable SUB defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
      uses function getType() defined in com::ibm::wala::shrikeBT::BinaryOpInstruction
      uses function getType() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable OP_iinc defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_wide defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_aload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_istore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lstore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fstore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dstore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_astore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_goto defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lookupswitch defined in com::ibm::wala::shrikeBT::Constants
      uses function getCasesAndLabels() defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses function insertBranchOffsetInt(ArrayList< Patch >,int,int,int) defined in com::ibm::wala::shrikeBT::Compiler
      uses function getDefaultLabel() defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable OP_tableswitch defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_getfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_getstatic defined in com::ibm::wala::shrikeBT::Constants
      uses function allocateConstantPoolField(String,String,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function getClassType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses variable OP_putfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_putstatic defined in com::ibm::wala::shrikeBT::Constants
      uses function getClassType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses function allocateConstantPoolMethod(String,String,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses function allocateConstantPoolInterfaceMethod(String,String,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_new defined in com::ibm::wala::shrikeBT::Constants
      uses function allocateConstantPoolClassType(String) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable OP_newarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable indexedTypes_T defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_anewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_multianewarray defined in com::ibm::wala::shrikeBT::Constants
      uses function getType() defined in com::ibm::wala::shrikeBT::NewInstruction
      uses function getArrayBoundsCount() defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable OP_checkcast defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_instanceof defined in com::ibm::wala::shrikeBT::Constants
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getPushedWordSize() defined in com::ibm::wala::shrikeBT::Instruction
      uses function applyPatches(ArrayList< Patch >) defined in com::ibm::wala::shrikeBT::Compiler
      uses function releaseCodeBuf(byte[]) defined in com::ibm::wala::shrikeBT::Compiler
   function releaseCodeBuf(byte[]) in line 438
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cachedBuf defined in com::ibm::wala::shrikeBT::Compiler
   function setClassHierarchy(ClassHierarchyProvider) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function allocateConstantPoolInteger(int) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolFloat(float) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolLong(long) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolDouble(double) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolString(String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolClassType(String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolField(String,String,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolMethod(String,String,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function allocateConstantPoolInterfaceMethod(String,String,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses function createHelperMethod(boolean,String) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable isStatic defined in com::ibm::wala::shrikeBT::Compiler
   function setPresetConstants(ConstantPoolReader) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable presetConstants defined in com::ibm::wala::shrikeBT::Compiler
   function writeByte(int,int) in line 233
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
   function writeInt(int,int) in line 221
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
   function writeShort(int,int) in line 228
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
   function Compiler(boolean,String,String,Instruction[],ExceptionHandler,int[]) in line 81
      protection public
      16 lines of code
      6 parameters
      3 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Compiler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Compiler
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Compiler
      uses variable isStatic defined in com::ibm::wala::shrikeBT::Compiler
      uses variable classType defined in com::ibm::wala::shrikeBT::Compiler
      uses variable signature defined in com::ibm::wala::shrikeBT::Compiler
   function Compiler(MethodData) in line 102
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getIsStatic() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getClassType() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getSignature() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getInstructionsToBytecodes() defined in com::ibm::wala::shrikeBT::MethodData
   variable allocatedLocals in line 53
   variable auxMethods in line 63
   variable backEdges in line 55
   variable branchTargets in line 48
   variable cachedBuf in line 426
   variable classType in line 35
   variable code in line 50
   variable handlers in line 38
   variable hierarchy in line 43
   variable instructions in line 37
   variable instructionsToBytecodes in line 39
   variable instructionsToOffsets in line 47
   variable isStatic in line 34
   variable liveLocals in line 54
   variable localTypes in line 56
   variable mainMethod in line 62
   variable maxLocals in line 60
   variable maxStack in line 61
   variable noRawHandlers in line 41
   variable presetConstants in line 44
   variable signature in line 36
   variable stackTypes in line 57
   variable stackWords in line 49
module com::ibm::wala::shrikeBT::Compiler::Patch
   abstract class
module com::ibm::wala::shrikeBT::Compiler::ShortPatch
   inherits from com::ibm::wala::shrikeBT::Compiler::Patch
module com::ibm::wala::shrikeBT::Compiler::IntPatch
   inherits from com::ibm::wala::shrikeBT::Compiler::Patch
module com::ibm::wala::shrikeBT::Compiler::HelperPatch
module com::ibm::wala::shrikeBT::Compiler::Output
   function getAccessFlags() in line 1758
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ACC_PRIVATE defined in com::ibm::wala::shrikeBT::Constants
      uses variable isStatic defined in com::ibm::wala::shrikeBT::Compiler
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeBT::Constants
   function getCode() in line 1734
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Compiler
   function getMaxLocals() in line 1795
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxLocals defined in com::ibm::wala::shrikeBT::Compiler
   function getMaxStack() in line 1788
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxStack defined in com::ibm::wala::shrikeBT::Compiler
   function getMethodName() in line 1743
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethodSignature() in line 1750
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in com::ibm::wala::shrikeBT::Compiler
   function getNewBytecodesToOldBytecodes() in line 1781
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRawHandlers() in line 1765
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 1772
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isStatic defined in com::ibm::wala::shrikeBT::Compiler
   variable code in line 1710
   variable isStatic in line 1715
   variable maxLocals in line 1716
   variable maxStack in line 1717
   variable name in line 1713
   variable newBytecodesToOldBytecodes in line 1712
   variable rawHandlers in line 1711
   variable signature in line 1714
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ConditionalBranchInstruction.java
module com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 64
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ConditionalBranchInstruction(short,int) defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function getBranchTargets() in line 77
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function getOperator() in line 90
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_if_acmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpeq defined in com::ibm::wala::shrikeBT::Constants
   function getPoppedCount() in line 106
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_ifeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifle defined in com::ibm::wala::shrikeBT::Constants
   function getTarget() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function getType() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_if_acmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function isPEI() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,Operator,int) in line 38
      protection public
      20 lines of code
      3 parameters
      4 conditional paths
      uses variable TYPE_int_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable EQ defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction::Operator
      uses variable TYPE_Object_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable NE defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction::Operator
      uses variable OP_if_acmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function make(short,int) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function ConditionalBranchInstruction(short,int) defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function redirectTargets(int[]) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function make(String,Operator,int) defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function toString() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
      uses function getOperator() defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   function visit(Visitor) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitConditionalBranch(ConditionalBranchInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ConditionalBranchInstruction(short,int) in line 33
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::ConditionalBranchInstruction
   variable label in line 31
module com::ibm::wala::shrikeBT::ConditionalBranchInstruction::IOperator
module com::ibm::wala::shrikeBT::ConditionalBranchInstruction::Operator
   inherits from com::ibm::wala::shrikeBT::ConditionalBranchInstruction::IOperator
   function toString() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable EQ in line 23
      protection public
   variable GE in line 23
      protection public
   variable GT in line 23
      protection public
   variable LT in line 23
      protection public
   variable NE in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ConstantInstruction.java
module com::ibm::wala::shrikeBT::ConstantInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   abstract class
   function equals(Object) in line 487
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ConstantInstruction
      uses function getValue() defined in com::ibm::wala::shrikeBT::ConstantInstruction
   function getPushedType(String[]) in line 496
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ConstantInstruction
   function getPushedWordSize() in line 500
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ConstantInstruction
   function getType() in line 419
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 414
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ConstantInstruction
      uses function getValue() defined in com::ibm::wala::shrikeBT::ConstantInstruction
   function isPEI() in line 550
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,Object) in line 421
      protection public
      22 lines of code
      2 parameters
      8 conditional paths
      uses variable TYPE_String defined in com::ibm::wala::shrikeBT::Constants
      uses function makeString(String) defined in com::ibm::wala::shrikeBT::ConstantInstruction
      uses variable TYPE_Class defined in com::ibm::wala::shrikeBT::Constants
      uses function makeClass(String) defined in com::ibm::wala::shrikeBT::ConstantInstruction
      uses variable TYPE_int_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_long_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_float_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_double_index defined in com::ibm::wala::shrikeBT::Constants
   function make(int) in line 444
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function make(long) in line 448
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function make(float) in line 452
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function make(double) in line 456
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeClass(String) in line 464
      protection public
      3 lines of code
      1 parameters
      7 conditional paths
      uses function make(String,Object) defined in com::ibm::wala::shrikeBT::ConstantInstruction
      uses function getConstantPoolItemType(int) defined in com::ibm::wala::shrikeBT::ConstantPoolReader
      uses variable CONSTANT_Integer defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ldc_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ldc2_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable CONSTANT_Float defined in com::ibm::wala::shrikeBT::Constants
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeBT::Constants
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeBT::Constants
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeBT::Constants
   function makeString(String) in line 460
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function quote(Object) in line 512
      30 lines of code
      1 parameters
      7 conditional paths
   function toString() in line 543
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ConstantInstruction
      uses function quote(Object) defined in com::ibm::wala::shrikeBT::ConstantInstruction
      uses function getValue() defined in com::ibm::wala::shrikeBT::ConstantInstruction
   function visit(Visitor) in line 508
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitConstant(ConstantInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
module com::ibm::wala::shrikeBT::ConstantInstruction::ConstNull
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction
   function getType() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ConstNull() in line 29
      3 lines of code
      0 parameters
      1 conditional paths
   variable preallocated in line 33
module com::ibm::wala::shrikeBT::ConstantInstruction::ConstInt
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction
   function getIntValue() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function preallocate() in line 58
      10 lines of code
      0 parameters
      1 conditional paths
   function ConstInt(short,int) in line 53
      4 lines of code
      2 parameters
      1 conditional paths
   variable preallocated in line 51
   variable value in line 49
module com::ibm::wala::shrikeBT::ConstantInstruction::LazyInt
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction::ConstInt
   function getCPIndex() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIntValue() in line 104
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function getLazyConstantPool() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LazyInt(short,ConstantPoolReader,int) in line 97
      6 lines of code
      3 parameters
      1 conditional paths
   variable cp in line 93
   variable index in line 94
   variable isSet in line 95
module com::ibm::wala::shrikeBT::ConstantInstruction::ConstLong
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction
   function getLongValue() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function preallocate() in line 131
      4 lines of code
      0 parameters
      1 conditional paths
   function ConstLong(short,long) in line 126
      4 lines of code
      2 parameters
      1 conditional paths
   variable preallocated in line 124
   variable value in line 122
module com::ibm::wala::shrikeBT::ConstantInstruction::LazyLong
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction::ConstLong
   function getCPIndex() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLazyConstantPool() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLongValue() in line 169
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function LazyLong(short,ConstantPoolReader,int) in line 162
      6 lines of code
      3 parameters
      1 conditional paths
   variable cp in line 158
   variable index in line 159
   variable isSet in line 160
module com::ibm::wala::shrikeBT::ConstantInstruction::ConstFloat
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction
   function getFloatValue() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function preallocate() in line 196
      4 lines of code
      0 parameters
      1 conditional paths
   function ConstFloat(short,float) in line 191
      4 lines of code
      2 parameters
      1 conditional paths
   variable preallocated in line 189
   variable value in line 187
module com::ibm::wala::shrikeBT::ConstantInstruction::LazyFloat
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction::ConstFloat
   function getCPIndex() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFloatValue() in line 234
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function getLazyConstantPool() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LazyFloat(short,ConstantPoolReader,int) in line 227
      6 lines of code
      3 parameters
      1 conditional paths
   variable cp in line 223
   variable index in line 224
   variable isSet in line 225
module com::ibm::wala::shrikeBT::ConstantInstruction::ConstDouble
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction
   function getDoubleValue() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function preallocate() in line 261
      4 lines of code
      0 parameters
      1 conditional paths
   function ConstDouble(short,double) in line 256
      4 lines of code
      2 parameters
      1 conditional paths
   variable preallocated in line 254
   variable value in line 252
module com::ibm::wala::shrikeBT::ConstantInstruction::LazyDouble
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction::ConstDouble
   function getCPIndex() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDoubleValue() in line 299
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function getLazyConstantPool() in line 307
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LazyDouble(short,ConstantPoolReader,int) in line 292
      6 lines of code
      3 parameters
      1 conditional paths
   variable cp in line 288
   variable index in line 289
   variable isSet in line 290
module com::ibm::wala::shrikeBT::ConstantInstruction::ConstString
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction
   function getType() in line 332
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ConstString(short,String) in line 319
      4 lines of code
      2 parameters
      1 conditional paths
   variable value in line 317
module com::ibm::wala::shrikeBT::ConstantInstruction::LazyString
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction::ConstString
   function getCPIndex() in line 358
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLazyConstantPool() in line 354
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 347
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function LazyString(short,ConstantPoolReader,int) in line 341
      5 lines of code
      3 parameters
      1 conditional paths
   variable cp in line 338
   variable index in line 339
module com::ibm::wala::shrikeBT::ConstantInstruction::ConstClass
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction
   function getType() in line 379
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 375
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ConstClass(short,String) in line 366
      4 lines of code
      2 parameters
      1 conditional paths
   variable typeName in line 364
module com::ibm::wala::shrikeBT::ConstantInstruction::LazyClass
   inherits from com::ibm::wala::shrikeBT::ConstantInstruction::ConstClass
   function getCPIndex() in line 405
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLazyConstantPool() in line 401
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 394
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function LazyClass(short,ConstantPoolReader,int) in line 388
      5 lines of code
      3 parameters
      1 conditional paths
   variable cp in line 385
   variable index in line 386
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ConstantPoolReader.java
module com::ibm::wala::shrikeBT::ConstantPoolReader
   abstract class
   function getConstantPoolClassType(int) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolDouble(int) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolFloat(int) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolInteger(int) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolItemType(int) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolLong(int) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolMemberClassType(int) in line 91
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolMemberName(int) in line 101
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolMemberType(int) in line 112
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolString(int) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/Constants.java
module com::ibm::wala::shrikeBT::Constants
   variable ACC_ABSTRACT in line 259
      protection public
   variable ACC_FINAL in line 252
      protection public
   variable ACC_INTERFACE in line 258
      protection public
   variable ACC_NATIVE in line 257
      protection public
   variable ACC_PRIVATE in line 249
      protection public
   variable ACC_PROTECTED in line 250
      protection public
   variable ACC_PUBLIC in line 248
      protection public
   variable ACC_STATIC in line 251
      protection public
   variable ACC_STRICT in line 260
      protection public
   variable ACC_SUPER in line 254
      protection public
   variable ACC_SYNCHRONIZED in line 253
      protection public
   variable ACC_TRANSIENT in line 256
      protection public
   variable ACC_VOLATILE in line 255
      protection public
   variable CONSTANT_Class in line 267
      protection public
   variable CONSTANT_Double in line 266
      protection public
   variable CONSTANT_FieldRef in line 269
      protection public
   variable CONSTANT_Float in line 264
      protection public
   variable CONSTANT_Integer in line 263
      protection public
   variable CONSTANT_InterfaceMethodRef in line 271
      protection public
   variable CONSTANT_Long in line 265
      protection public
   variable CONSTANT_MethodRef in line 270
      protection public
   variable CONSTANT_NameAndType in line 272
      protection public
   variable CONSTANT_String in line 268
      protection public
   variable CONSTANT_Utf8 in line 262
      protection public
   variable indexedTypes in line 318
      protection public
   variable indexedTypes_T in line 321
      protection public
   variable MAYBE in line 326
      protection public
   variable NO in line 324
      protection public
   variable OP_aaload in line 95
      protection public
   variable OP_aastore in line 128
      protection public
   variable OP_aconst_null in line 46
      protection public
   variable OP_aload in line 70
      protection public
   variable OP_aload_0 in line 87
      protection public
   variable OP_aload_1 in line 88
      protection public
   variable OP_aload_2 in line 89
      protection public
   variable OP_aload_3 in line 90
      protection public
   variable OP_anewarray in line 234
      protection public
   variable OP_areturn in line 221
      protection public
   variable OP_arraylength in line 235
      protection public
   variable OP_astore in line 103
      protection public
   variable OP_astore_0 in line 120
      protection public
   variable OP_astore_1 in line 121
      protection public
   variable OP_astore_2 in line 122
      protection public
   variable OP_astore_3 in line 123
      protection public
   variable OP_athrow in line 236
      protection public
   variable OP_baload in line 96
      protection public
   variable OP_bastore in line 129
      protection public
   variable OP_bipush in line 61
      protection public
   variable OP_caload in line 97
      protection public
   variable OP_castore in line 130
      protection public
   variable OP_checkcast in line 237
      protection public
   variable OP_d2f in line 189
      protection public
   variable OP_d2i in line 187
      protection public
   variable OP_d2l in line 188
      protection public
   variable OP_dadd in line 144
      protection public
   variable OP_daload in line 94
      protection public
   variable OP_dastore in line 127
      protection public
   variable OP_dcmpg in line 197
      protection public
   variable OP_dcmpl in line 196
      protection public
   variable OP_dconst_0 in line 59
      protection public
   variable OP_dconst_1 in line 60
      protection public
   variable OP_ddiv in line 156
      protection public
   variable OP_dload in line 69
      protection public
   variable OP_dload_0 in line 83
      protection public
   variable OP_dload_1 in line 84
      protection public
   variable OP_dload_2 in line 85
      protection public
   variable OP_dload_3 in line 86
      protection public
   variable OP_dmul in line 152
      protection public
   variable OP_dneg in line 164
      protection public
   variable OP_drem in line 160
      protection public
   variable OP_dreturn in line 220
      protection public
   variable OP_dstore in line 102
      protection public
   variable OP_dstore_0 in line 116
      protection public
   variable OP_dstore_1 in line 117
      protection public
   variable OP_dstore_2 in line 118
      protection public
   variable OP_dstore_3 in line 119
      protection public
   variable OP_dsub in line 148
      protection public
   variable OP_dup in line 134
      protection public
   variable OP_dup2 in line 137
      protection public
   variable OP_dup2_x1 in line 138
      protection public
   variable OP_dup2_x2 in line 139
      protection public
   variable OP_dup_x1 in line 135
      protection public
   variable OP_dup_x2 in line 136
      protection public
   variable OP_f2d in line 186
      protection public
   variable OP_f2i in line 184
      protection public
   variable OP_f2l in line 185
      protection public
   variable OP_fadd in line 143
      protection public
   variable OP_faload in line 93
      protection public
   variable OP_fastore in line 126
      protection public
   variable OP_fcmpg in line 195
      protection public
   variable OP_fcmpl in line 194
      protection public
   variable OP_fconst_0 in line 56
      protection public
   variable OP_fconst_1 in line 57
      protection public
   variable OP_fconst_2 in line 58
      protection public
   variable OP_fdiv in line 155
      protection public
   variable OP_fload in line 68
      protection public
   variable OP_fload_0 in line 79
      protection public
   variable OP_fload_1 in line 80
      protection public
   variable OP_fload_2 in line 81
      protection public
   variable OP_fload_3 in line 82
      protection public
   variable OP_fmul in line 151
      protection public
   variable OP_fneg in line 163
      protection public
   variable OP_frem in line 159
      protection public
   variable OP_freturn in line 219
      protection public
   variable OP_fstore in line 101
      protection public
   variable OP_fstore_0 in line 112
      protection public
   variable OP_fstore_1 in line 113
      protection public
   variable OP_fstore_2 in line 114
      protection public
   variable OP_fstore_3 in line 115
      protection public
   variable OP_fsub in line 147
      protection public
   variable OP_getfield in line 225
      protection public
   variable OP_getstatic in line 223
      protection public
   variable OP_goto in line 212
      protection public
   variable OP_goto_w in line 245
      protection public
   variable OP_i2b in line 190
      protection public
   variable OP_i2c in line 191
      protection public
   variable OP_i2d in line 180
      protection public
   variable OP_i2f in line 179
      protection public
   variable OP_i2l in line 178
      protection public
   variable OP_i2s in line 192
      protection public
   variable OP_iadd in line 141
      protection public
   variable OP_iaload in line 91
      protection public
   variable OP_iand in line 171
      protection public
   variable OP_iastore in line 124
      protection public
   variable OP_iconst_0 in line 48
      protection public
   variable OP_iconst_1 in line 49
      protection public
   variable OP_iconst_2 in line 50
      protection public
   variable OP_iconst_3 in line 51
      protection public
   variable OP_iconst_4 in line 52
      protection public
   variable OP_iconst_5 in line 53
      protection public
   variable OP_iconst_m1 in line 47
      protection public
   variable OP_idiv in line 153
      protection public
   variable OP_if_acmpeq in line 210
      protection public
   variable OP_if_acmpne in line 211
      protection public
   variable OP_if_icmpeq in line 204
      protection public
   variable OP_if_icmpge in line 207
      protection public
   variable OP_if_icmpgt in line 208
      protection public
   variable OP_if_icmple in line 209
      protection public
   variable OP_if_icmplt in line 206
      protection public
   variable OP_if_icmpne in line 205
      protection public
   variable OP_ifeq in line 198
      protection public
   variable OP_ifge in line 201
      protection public
   variable OP_ifgt in line 202
      protection public
   variable OP_ifle in line 203
      protection public
   variable OP_iflt in line 200
      protection public
   variable OP_ifne in line 199
      protection public
   variable OP_ifnonnull in line 244
      protection public
   variable OP_ifnull in line 243
      protection public
   variable OP_iinc in line 177
      protection public
   variable OP_iload in line 66
      protection public
   variable OP_iload_0 in line 71
      protection public
   variable OP_iload_1 in line 72
      protection public
   variable OP_iload_2 in line 73
      protection public
   variable OP_iload_3 in line 74
      protection public
   variable OP_imul in line 149
      protection public
   variable OP_ineg in line 161
      protection public
   variable OP_instanceof in line 238
      protection public
   variable OP_invokeinterface in line 230
      protection public
   variable OP_invokespecial in line 228
      protection public
   variable OP_invokestatic in line 229
      protection public
   variable OP_invokevirtual in line 227
      protection public
   variable OP_ior in line 173
      protection public
   variable OP_irem in line 157
      protection public
   variable OP_ireturn in line 217
      protection public
   variable OP_ishl in line 165
      protection public
   variable OP_ishr in line 167
      protection public
   variable OP_istore in line 99
      protection public
   variable OP_istore_0 in line 104
      protection public
   variable OP_istore_1 in line 105
      protection public
   variable OP_istore_2 in line 106
      protection public
   variable OP_istore_3 in line 107
      protection public
   variable OP_isub in line 145
      protection public
   variable OP_iushr in line 169
      protection public
   variable OP_ixor in line 175
      protection public
   variable OP_jsr in line 213
      protection public
   variable OP_jsr_w in line 246
      protection public
   variable OP_l2d in line 183
      protection public
   variable OP_l2f in line 182
      protection public
   variable OP_l2i in line 181
      protection public
   variable OP_ladd in line 142
      protection public
   variable OP_laload in line 92
      protection public
   variable OP_land in line 172
      protection public
   variable OP_lastore in line 125
      protection public
   variable OP_lcmp in line 193
      protection public
   variable OP_lconst_0 in line 54
      protection public
   variable OP_lconst_1 in line 55
      protection public
   variable OP_ldc in line 63
      protection public
   variable OP_ldc2_w in line 65
      protection public
   variable OP_ldc_w in line 64
      protection public
   variable OP_ldiv in line 154
      protection public
   variable OP_lload in line 67
      protection public
   variable OP_lload_0 in line 75
      protection public
   variable OP_lload_1 in line 76
      protection public
   variable OP_lload_2 in line 77
      protection public
   variable OP_lload_3 in line 78
      protection public
   variable OP_lmul in line 150
      protection public
   variable OP_lneg in line 162
      protection public
   variable OP_lookupswitch in line 216
      protection public
   variable OP_lor in line 174
      protection public
   variable OP_lrem in line 158
      protection public
   variable OP_lreturn in line 218
      protection public
   variable OP_lshl in line 166
      protection public
   variable OP_lshr in line 168
      protection public
   variable OP_lstore in line 100
      protection public
   variable OP_lstore_0 in line 108
      protection public
   variable OP_lstore_1 in line 109
      protection public
   variable OP_lstore_2 in line 110
      protection public
   variable OP_lstore_3 in line 111
      protection public
   variable OP_lsub in line 146
      protection public
   variable OP_lushr in line 170
      protection public
   variable OP_lxor in line 176
      protection public
   variable OP_monitorenter in line 239
      protection public
   variable OP_monitorexit in line 240
      protection public
   variable OP_multianewarray in line 242
      protection public
   variable OP_new in line 232
      protection public
   variable OP_newarray in line 233
      protection public
   variable OP_nop in line 45
      protection public
   variable OP_pop in line 132
      protection public
   variable OP_pop2 in line 133
      protection public
   variable OP_putfield in line 226
      protection public
   variable OP_putstatic in line 224
      protection public
   variable OP_ret in line 214
      protection public
   variable OP_return in line 222
      protection public
   variable OP_saload in line 98
      protection public
   variable OP_sastore in line 131
      protection public
   variable OP_sipush in line 62
      protection public
   variable OP_swap in line 140
      protection public
   variable OP_tableswitch in line 215
      protection public
   variable OP_wide in line 241
      protection public
   variable OP_xxxunusedxxx in line 231
      protection public
   variable T_BOOLEAN in line 274
      protection public
   variable T_BYTE in line 278
      protection public
   variable T_CHAR in line 275
      protection public
   variable T_DOUBLE in line 277
      protection public
   variable T_FLOAT in line 276
      protection public
   variable T_INT in line 280
      protection public
   variable T_LONG in line 281
      protection public
   variable T_SHORT in line 279
      protection public
   variable TYPE_boolean in line 283
      protection public
   variable TYPE_boolean_index in line 316
      protection public
   variable TYPE_byte in line 284
      protection public
   variable TYPE_byte_index in line 313
      protection public
   variable TYPE_char in line 290
      protection public
   variable TYPE_char_index in line 314
      protection public
   variable TYPE_Class in line 295
      protection public
   variable TYPE_double in line 289
      protection public
   variable TYPE_double_index in line 311
      protection public
   variable TYPE_Error in line 298
      protection public
   variable TYPE_Exception in line 296
      protection public
   variable TYPE_float in line 288
      protection public
   variable TYPE_float_index in line 310
      protection public
   variable TYPE_int in line 285
      protection public
   variable TYPE_int_index in line 308
      protection public
   variable TYPE_long in line 287
      protection public
   variable TYPE_long_index in line 309
      protection public
   variable TYPE_null in line 304
      protection public
   variable TYPE_Object in line 293
      protection public
   variable TYPE_Object_index in line 312
      protection public
   variable TYPE_RuntimeException in line 297
      protection public
   variable TYPE_short in line 286
      protection public
   variable TYPE_short_index in line 315
      protection public
   variable TYPE_String in line 292
      protection public
   variable TYPE_Throwable in line 294
      protection public
   variable TYPE_unknown in line 306
      protection public
   variable TYPE_void in line 291
      protection public
   variable YES in line 325
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ConversionInstruction.java
module com::ibm::wala::shrikeBT::ConversionInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 91
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ConversionInstruction(short) defined in com::ibm::wala::shrikeBT::ConversionInstruction
   function getFromType() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fromType defined in com::ibm::wala::shrikeBT::ConversionInstruction
   function getPoppedCount() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getToType() defined in com::ibm::wala::shrikeBT::ConversionInstruction
   function getPushedWordSize() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getToType() defined in com::ibm::wala::shrikeBT::ConversionInstruction
   function getToType() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable toType defined in com::ibm::wala::shrikeBT::ConversionInstruction
   function hashCode() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,String) in line 48
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable fromType defined in com::ibm::wala::shrikeBT::ConversionInstruction
      uses variable toType defined in com::ibm::wala::shrikeBT::ConversionInstruction
      uses variable TYPE_double_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_int_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_byte_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_short_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocated defined in com::ibm::wala::shrikeBT::ConversionInstruction
      uses variable OP_i2b defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_i2l defined in com::ibm::wala::shrikeBT::Constants
   function preallocate() in line 40
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_i2s defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_i2l defined in com::ibm::wala::shrikeBT::Constants
      uses function ConversionInstruction(short) defined in com::ibm::wala::shrikeBT::ConversionInstruction
   function skip(int,int) in line 75
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFromType() defined in com::ibm::wala::shrikeBT::ConversionInstruction
      uses function getToType() defined in com::ibm::wala::shrikeBT::ConversionInstruction
   function visit(Visitor) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitConversion(ConversionInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ConversionInstruction(short) in line 21
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable OP_i2b defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_i2l defined in com::ibm::wala::shrikeBT::Constants
      uses variable toType defined in com::ibm::wala::shrikeBT::ConversionInstruction
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses function skip(int,int) defined in com::ibm::wala::shrikeBT::ConversionInstruction
      uses variable TYPE_byte_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable fromType defined in com::ibm::wala::shrikeBT::ConversionInstruction
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
   variable fromType in line 18
   variable preallocated in line 38
   variable toType in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/Decoder.java
module com::ibm::wala::shrikeBT::Decoder
   inherits from com::ibm::wala::shrikeBT::Constants
   abstract class
   function appendSubroutineCode(int,int,int[]) in line 870
      51 lines of code
      3 parameters
      8 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Decoder
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
      uses function clone() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable JSRs defined in com::ibm::wala::shrikeBT::Decoder
      uses variable belongsToSub defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedSize defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedOffset defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decoded defined in com::ibm::wala::shrikeBT::Decoder
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Decoder
      uses function redirectTargets(int[]) defined in com::ibm::wala::shrikeBT::GotoInstruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::Decoder
      uses function makeHandlers(int,int[]) defined in com::ibm::wala::shrikeBT::Decoder
   function applyInstructionToStack(Instruction,int,byte[]) in line 679
      31 lines of code
      3 parameters
      6 conditional paths
      uses function getDelta() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getSize() defined in com::ibm::wala::shrikeBT::DupInstruction
   function assignReachablesToSubroutine(int,int) in line 378
      38 lines of code
      2 parameters
      10 conditional paths
      uses variable belongsToSub defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedSize defined in com::ibm::wala::shrikeBT::Decoder
      uses variable rawHandlers defined in com::ibm::wala::shrikeBT::Decoder
      uses variable JSRs defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedOffset defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decoded defined in com::ibm::wala::shrikeBT::Decoder
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
      uses function doesSubroutineReturn(int) defined in com::ibm::wala::shrikeBT::Decoder
   function assignSubroutine(int) in line 417
      9 lines of code
      1 parameters
      3 conditional paths
      uses function assignReachablesToSubroutine(int,int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable belongsToSub defined in com::ibm::wala::shrikeBT::Decoder
      uses variable JSRs defined in com::ibm::wala::shrikeBT::Decoder
   function computeSubroutineLength(int) in line 855
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable belongsToSub defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedSize defined in com::ibm::wala::shrikeBT::Decoder
      uses variable JSRs defined in com::ibm::wala::shrikeBT::Decoder
   function computeSubroutineMap() in line 427
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable belongsToSub defined in com::ibm::wala::shrikeBT::Decoder
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
      uses function assignSubroutine(int) defined in com::ibm::wala::shrikeBT::Decoder
   function decode() in line 929
      protection public
      118 lines of code
      0 parameters
      25 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decoded defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedOffset defined in com::ibm::wala::shrikeBT::Decoder
      uses variable UNSEEN defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedSize defined in com::ibm::wala::shrikeBT::Decoder
      uses function decodeAt(int,int,byte[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable rawHandlers defined in com::ibm::wala::shrikeBT::Decoder
      uses variable retInfo defined in com::ibm::wala::shrikeBT::Decoder
      uses function computeSubroutineMap() defined in com::ibm::wala::shrikeBT::Decoder
      uses variable belongsToSub defined in com::ibm::wala::shrikeBT::Decoder
      uses variable JSRs defined in com::ibm::wala::shrikeBT::Decoder
      uses function computeSubroutineLength(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable instructions defined in com::ibm::wala::shrikeBT::Decoder
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Decoder
      uses variable handlers defined in com::ibm::wala::shrikeBT::Decoder
      uses function redirectTargets(int[]) defined in com::ibm::wala::shrikeBT::Instruction
      uses function appendSubroutineCode(int,int,int[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses function makeHandlers(int,int[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable noHandlers defined in com::ibm::wala::shrikeBT::Decoder
   function decodeAt(int,int,byte[]) in line 711
      79 lines of code
      3 parameters
      13 conditional paths
      uses variable decodedOffset defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decoded defined in com::ibm::wala::shrikeBT::Decoder
      uses function decodeBytecodeInstruction(int,int,byte[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedSize defined in com::ibm::wala::shrikeBT::Decoder
      uses variable INSIDE_INSTRUCTION defined in com::ibm::wala::shrikeBT::Decoder
      uses function applyInstructionToStack(Instruction,int,byte[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_wide defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_jsr defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_jsr_w defined in com::ibm::wala::shrikeBT::Constants
      uses function decodeInt(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses function decodeShort(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses function decodeSubroutine(int,int,int,int,byte[]) defined in com::ibm::wala::shrikeBT::Decoder
   function decodeBytecodeInstruction(int,int,byte[]) in line 437
      241 lines of code
      3 parameters
      69 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
      uses variable simpleInstructions defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decoded defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_nop defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_bipush defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_sipush defined in com::ibm::wala::shrikeBT::Constants
      uses function decodeShort(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_ldc defined in com::ibm::wala::shrikeBT::Constants
      uses function makeConstantPoolLoad(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_ldc_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ldc2_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_aload defined in com::ibm::wala::shrikeBT::Constants
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses function decodeUShort(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_istore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lstore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fstore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dstore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_astore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_pop2 defined in com::ibm::wala::shrikeBT::Constants
      uses function elemCount(byte[],int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_dup_x2 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dup2 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dup2_x1 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dup2_x2 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iinc defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
      uses variable ADD defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
      uses variable OP_ifeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifne defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iflt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifle defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifgt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifge defined in com::ibm::wala::shrikeBT::Constants
      uses variable makeZero defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_if_icmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpne defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmplt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmple defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpgt defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_icmpge defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_acmpeq defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_if_acmpne defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_Object defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_goto defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_jsr defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_jsr_w defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ret defined in com::ibm::wala::shrikeBT::Constants
      uses variable retInfo defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_tableswitch defined in com::ibm::wala::shrikeBT::Constants
      uses function decodeInt(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_lookupswitch defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_getstatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_getfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable constantPool defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_putstatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_putfield defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_new defined in com::ibm::wala::shrikeBT::Constants
      uses function getConstantPoolClassType(int) defined in com::ibm::wala::shrikeBT::ConstantPoolReader
      uses variable OP_newarray defined in com::ibm::wala::shrikeBT::Constants
      uses function getPrimitiveType(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_anewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_checkcast defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_instanceof defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_wide defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_multianewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifnull defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ifnonnull defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_goto_w defined in com::ibm::wala::shrikeBT::Constants
   function decodeInt(int) in line 175
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
   function decodeShort(int) in line 167
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
   function decodeSubroutine(int,int,int,int,byte[]) in line 354
      23 lines of code
      5 parameters
      4 conditional paths
      uses variable JSRs defined in com::ibm::wala::shrikeBT::Decoder
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
      uses variable retInfo defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedOffset defined in com::ibm::wala::shrikeBT::Decoder
      uses function decodeAt(int,int,byte[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses function findReturn(int) defined in com::ibm::wala::shrikeBT::Decoder
   function decodeUShort(int) in line 171
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
   function doesSubroutineReturn(int) in line 245
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable retInfo defined in com::ibm::wala::shrikeBT::Decoder
   function elemCount(byte[],int) in line 188
      19 lines of code
      2 parameters
      5 conditional paths
   function findReturn(int) in line 330
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable decodedSize defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decoded defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedOffset defined in com::ibm::wala::shrikeBT::Decoder
      uses variable INSIDE_INSTRUCTION defined in com::ibm::wala::shrikeBT::Decoder
      uses function findReturnToVar(int,int,boolean[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
   function findReturnToVar(int,int,boolean[]) in line 254
      71 lines of code
      3 parameters
      18 conditional paths
      uses variable retInfo defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedOffset defined in com::ibm::wala::shrikeBT::Decoder
      uses variable UNSEEN defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decodedSize defined in com::ibm::wala::shrikeBT::Decoder
      uses variable rawHandlers defined in com::ibm::wala::shrikeBT::Decoder
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
      uses function decodeAt(int,int,byte[]) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable JSRs defined in com::ibm::wala::shrikeBT::Decoder
      uses function doesSubroutineReturn(int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable decoded defined in com::ibm::wala::shrikeBT::Decoder
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable INSIDE_INSTRUCTION defined in com::ibm::wala::shrikeBT::Decoder
   function getConstantPool() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constantPool defined in com::ibm::wala::shrikeBT::Decoder
   function getHandlers() in line 1065
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable handlers defined in com::ibm::wala::shrikeBT::Decoder
   function getInstructions() in line 1053
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Decoder
   function getInstructionsToBytecodes() in line 1079
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Decoder
   function getPrimitiveType(int) in line 208
      22 lines of code
      1 parameters
      9 conditional paths
      uses variable T_BOOLEAN defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_boolean defined in com::ibm::wala::shrikeBT::Constants
      uses variable T_CHAR defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_char defined in com::ibm::wala::shrikeBT::Constants
      uses variable T_FLOAT defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_float defined in com::ibm::wala::shrikeBT::Constants
      uses variable T_DOUBLE defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_double defined in com::ibm::wala::shrikeBT::Constants
      uses variable T_BYTE defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_byte defined in com::ibm::wala::shrikeBT::Constants
      uses variable T_SHORT defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_short defined in com::ibm::wala::shrikeBT::Constants
      uses variable T_INT defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
      uses variable T_LONG defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_long defined in com::ibm::wala::shrikeBT::Constants
   function makeConstantPoolLoad(int) in line 179
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable constantPool defined in com::ibm::wala::shrikeBT::Decoder
      uses function getConstantPoolItemType(int) defined in com::ibm::wala::shrikeBT::ConstantPoolReader
   function makeHandlers(int,int[]) in line 825
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable rawHandlers defined in com::ibm::wala::shrikeBT::Decoder
   function makeHandlers(int,int,int[]) in line 836
      18 lines of code
      3 parameters
      4 conditional paths
      uses variable noHandlers defined in com::ibm::wala::shrikeBT::Decoder
      uses variable rawHandlers defined in com::ibm::wala::shrikeBT::Decoder
      uses variable constantPool defined in com::ibm::wala::shrikeBT::Decoder
      uses function getConstantPoolClassType(int) defined in com::ibm::wala::shrikeBT::ConstantPoolReader
   function makeSimpleInstructions() in line 53
      74 lines of code
      0 parameters
      17 conditional paths
      uses variable OP_aconst_null defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_null defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iconst_m1 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iconst_5 defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_int defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lconst_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lconst_1 defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_long defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fconst_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_fconst_2 defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_float defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dconst_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dconst_1 defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_double defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_aload_3 defined in com::ibm::wala::shrikeBT::Constants
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iaload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_saload defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_istore_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_astore_3 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_sastore defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_pop defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dup defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dup_x1 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_swap defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iadd defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_drem defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ineg defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dneg defined in com::ibm::wala::shrikeBT::Constants
      uses enumvalue NEG defined in com::ibm::wala::shrikeBT::UnaryOpInstruction::Operator
      uses variable OP_ishl defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lushr defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iand defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lxor defined in com::ibm::wala::shrikeBT::Constants
      uses variable AND defined in com::ibm::wala::shrikeBT::BinaryOpInstruction::Operator
      uses variable OP_i2l defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_d2f defined in com::ibm::wala::shrikeBT::Constants
      uses function skip(int,int) defined in com::ibm::wala::shrikeBT::Decoder
      uses variable OP_i2b defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_i2s defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_lcmp defined in com::ibm::wala::shrikeBT::Constants
      uses variable CMP defined in com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
      uses variable OP_fcmpl defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_dcmpg defined in com::ibm::wala::shrikeBT::Constants
      uses variable CMPL defined in com::ibm::wala::shrikeBT::ComparisonInstruction::Operator
      uses variable OP_ireturn defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_areturn defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_return defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_void defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_athrow defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_monitorenter defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_monitorexit defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_arraylength defined in com::ibm::wala::shrikeBT::Constants
   function skip(int,int) in line 44
      3 lines of code
      2 parameters
      1 conditional paths
   function Decoder(byte[],int[],ConstantPoolReader) in line 157
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeBT::Decoder
      uses variable rawHandlers defined in com::ibm::wala::shrikeBT::Decoder
   variable belongsToSub in line 144
   variable code in line 137
   variable constantPool in line 134
   variable decoded in line 143
   variable decodedOffset in line 141
   variable decodedSize in line 142
   variable handlers in line 132
   variable INSIDE_INSTRUCTION in line 42
   variable instructions in line 131
   variable instructionsToBytecodes in line 133
   variable JSRs in line 145
   variable makeZero in line 128
   variable noHandlers in line 48
   variable rawHandlers in line 138
   variable retInfo in line 146
   variable simpleInstructions in line 51
   variable UNSEEN in line 41
module com::ibm::wala::shrikeBT::Decoder::RetInfo
module com::ibm::wala::shrikeBT::Decoder::InvalidBytecodeException
   inherits from Exception
   function getIndex() in line 820
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable index in line 799
   variable serialVersionUID in line 798
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/Disassembler.java
module com::ibm::wala::shrikeBT::Disassembler
   function disassembleTo(String,Writer) in line 45
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Disassembler
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Disassembler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Disassembler
   function disassembleTo(Writer) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function disassembleTo(String,Writer) defined in com::ibm::wala::shrikeBT::Disassembler
   function Disassembler(Instruction[],ExceptionHandler,int[]) in line 29
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::Disassembler
      uses variable handlers defined in com::ibm::wala::shrikeBT::Disassembler
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::Disassembler
   function Disassembler(MethodData) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getInstructionsToBytecodes() defined in com::ibm::wala::shrikeBT::MethodData
   variable handlers in line 23
   variable instructions in line 22
   variable instructionsToBytecodes in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/DupInstruction.java
module com::ibm::wala::shrikeBT::DupInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 68
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DupInstruction(byte,byte) defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable size defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
   function getDelta() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
   function getPoppedCount() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
   function getSize() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::DupInstruction
   function hashCode() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
   function isPEI() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(int) in line 61
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
   function preallocate() in line 30
      8 lines of code
      0 parameters
      4 conditional paths
      uses function DupInstruction(byte,byte) defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable size defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable preallocated defined in com::ibm::wala::shrikeBT::DupInstruction
   function toString() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
   function visit(Visitor) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitDup(DupInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function DupInstruction(byte,byte) in line 23
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::DupInstruction
      uses variable delta defined in com::ibm::wala::shrikeBT::DupInstruction
   variable delta in line 21
   variable preallocated in line 28
   variable size in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ExceptionHandler.java
module com::ibm::wala::shrikeBT::ExceptionHandler
   function equals(ExceptionHandler) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 77
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function equals(ExceptionHandler) defined in com::ibm::wala::shrikeBT::ExceptionHandler
   function getCatchClass() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHandler() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ExceptionHandler(int,String) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/GetInstruction.java
module com::ibm::wala::shrikeBT::GetInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 89
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::GetInstruction
   function getClassType() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classType defined in com::ibm::wala::shrikeBT::GetInstruction
   function getFieldName() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in com::ibm::wala::shrikeBT::GetInstruction
   function getFieldType() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::GetInstruction
   function getPoppedCount() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in com::ibm::wala::shrikeBT::GetInstruction
   function getPushedType(String[]) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::GetInstruction
   function getPushedWordSize() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::GetInstruction
   function hashCode() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::GetInstruction
   function isPEI() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_getstatic defined in com::ibm::wala::shrikeBT::Constants
   function make(String,String,String,boolean) in line 76
      protection public
      12 lines of code
      4 parameters
      4 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::GetInstruction
      uses variable fieldName defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function isStatic() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses variable OP_getstatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_getfield defined in com::ibm::wala::shrikeBT::Constants
   function toString() in line 131
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function isStatic() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::GetInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::GetInstruction
   function visit(Visitor) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitGet(GetInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   variable classType in line 18
   variable fieldName in line 19
   variable type in line 17
module com::ibm::wala::shrikeBT::GetInstruction::Lazy
   inherits from com::ibm::wala::shrikeBT::GetInstruction
   function getClassType() in line 50
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getFieldName() in line 57
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getFieldType() in line 64
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable cp in line 33
   variable index in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/GotoInstruction.java
module com::ibm::wala::shrikeBT::GotoInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 59
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function GotoInstruction(int) defined in com::ibm::wala::shrikeBT::GotoInstruction
      uses variable label defined in com::ibm::wala::shrikeBT::GotoInstruction
   function getBranchTargets() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::GotoInstruction
   function getLabel() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::GotoInstruction
   function hashCode() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::GotoInstruction
   function isFallThrough() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(int) in line 35
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::GotoInstruction
      uses variable preallocated defined in com::ibm::wala::shrikeBT::GotoInstruction
      uses function GotoInstruction(int) defined in com::ibm::wala::shrikeBT::GotoInstruction
   function preallocate() in line 27
      7 lines of code
      0 parameters
      2 conditional paths
      uses function GotoInstruction(int) defined in com::ibm::wala::shrikeBT::GotoInstruction
   function redirectTargets(int[]) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function make(int) defined in com::ibm::wala::shrikeBT::GotoInstruction
      uses variable label defined in com::ibm::wala::shrikeBT::GotoInstruction
   function toString() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in com::ibm::wala::shrikeBT::GotoInstruction
   function visit(Visitor) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitGoto(GotoInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function GotoInstruction(int) in line 19
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in com::ibm::wala::shrikeBT::GotoInstruction
      uses variable OP_goto defined in com::ibm::wala::shrikeBT::Constants
   variable label in line 17
   variable preallocated in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/IInstruction.java
module com::ibm::wala::shrikeBT::IInstruction
   function isPEI() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/IInvokeInstruction.java
module com::ibm::wala::shrikeBT::IInvokeInstruction
   inherits from com::ibm::wala::shrikeBT::IInstruction
   function getInvocationCode() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::shrikeBT::IInvokeInstruction::IDispatch
module com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   inherits from com::ibm::wala::shrikeBT::IInvokeInstruction::IDispatch
   variable SPECIAL in line 32
      protection public
   variable STATIC in line 32
      protection public
   variable VIRTUAL in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/info/InstructionTypeCounter.java
module com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   inherits from com::ibm::wala::shrikeBT::MethodData::Results
   function getArrayLengthCount(MethodData) in line 264
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countArrayLengths defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getArrayLoadCount(MethodData) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countArrayLoads defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getArrayStoreCount(MethodData) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countArrayStores defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getBinaryOpCount(MethodData) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countBinaryOps defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getCheckCastCount(MethodData) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countCheckCasts defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getComparisonCount(MethodData) in line 260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countComparisons defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getConditionalBranchCount(MethodData) in line 296
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countConditionalBranches defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getConstantCount(MethodData) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countConstants defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getConversionCount(MethodData) in line 300
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countConversions defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getCounter(MethodData) in line 340
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getInfo(Object) defined in com::ibm::wala::shrikeBT::MethodData
      uses variable key defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses function putInfo(Object,Results) defined in com::ibm::wala::shrikeBT::MethodData
   function getDupCount(MethodData) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countDups defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getGetCount(MethodData) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countGets defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getGotoCount(MethodData) in line 308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countGotos defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getInstanceOfCount(MethodData) in line 316
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countInstanceOfs defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getInvokeCount(MethodData) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countInvokes defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getLocalLoadCount(MethodData) in line 320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countLocalLoads defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getLocalStoreCount(MethodData) in line 324
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countLocalStores defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getMonitorCount(MethodData) in line 252
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countMonitors defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getNewCount(MethodData) in line 328
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countNews defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getPopCount(MethodData) in line 332
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countPops defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getPutCount(MethodData) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countPuts defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getReturnCount(MethodData) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countReturns defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getShiftCount(MethodData) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countShifts defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getSwapCount(MethodData) in line 280
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countSwaps defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getSwitchesCount(MethodData) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countSwitches defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getThrowCount(MethodData) in line 292
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countThrows defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function getUnaryOpCount(MethodData) in line 336
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCounter(MethodData) defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countUnaryOps defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
   function notifyUpdate(MethodData,Instruction[],ExceptionHandler,int[]) in line 230
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function recalculateFrom(Instruction[]) in line 85
      138 lines of code
      1 parameters
      2 conditional paths
      uses variable countMonitors defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countGets defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countPuts defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countArrayLoads defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countArrayStores defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countInvokes defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countArrayLengths defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countBinaryOps defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countCheckCasts defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countComparisons defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countConditionalBranches defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countConstants defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countConversions defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countDups defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countGotos defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countInstanceOfs defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countLocalLoads defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countLocalStores defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countNews defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countPops defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countReturns defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countShifts defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countSwaps defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countSwitches defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countThrows defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses variable countUnaryOps defined in com::ibm::wala::shrikeBT::info::InstructionTypeCounter
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
   variable countArrayLengths in line 60
   variable countArrayLoads in line 57
   variable countArrayStores in line 58
   variable countBinaryOps in line 61
   variable countCheckCasts in line 62
   variable countComparisons in line 63
   variable countConditionalBranches in line 64
   variable countConstants in line 65
   variable countConversions in line 66
   variable countDups in line 67
   variable countGets in line 55
   variable countGotos in line 68
   variable countInstanceOfs in line 69
   variable countInvokes in line 59
   variable countLocalLoads in line 70
   variable countLocalStores in line 71
   variable countMonitors in line 54
   variable countNews in line 72
   variable countPops in line 73
   variable countPuts in line 56
   variable countReturns in line 74
   variable countShifts in line 75
   variable countSwaps in line 76
   variable countSwitches in line 77
   variable countThrows in line 78
   variable countUnaryOps in line 79
   variable key in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/info/LocalAllocator.java
module com::ibm::wala::shrikeBT::info::LocalAllocator
   inherits from com::ibm::wala::shrikeBT::MethodData::Results
   function allocate(MethodData,int) in line 78
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getInfo(Object) defined in com::ibm::wala::shrikeBT::MethodData
      uses variable key defined in com::ibm::wala::shrikeBT::info::LocalAllocator
      uses function putInfo(Object,Results) defined in com::ibm::wala::shrikeBT::MethodData
      uses function allocateLocals(int) defined in com::ibm::wala::shrikeBT::info::LocalAllocator
   function allocate(MethodData,String) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function allocate(MethodData,int) defined in com::ibm::wala::shrikeBT::info::LocalAllocator
   function allocate(MethodData) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function allocate(MethodData,int) defined in com::ibm::wala::shrikeBT::info::LocalAllocator
   function allocateLocals(int) in line 61
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable nextLocal defined in com::ibm::wala::shrikeBT::info::LocalAllocator
   function notifyUpdate(MethodData,Instruction[],ExceptionHandler,int[]) in line 70
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function recalculateFrom(MethodData) in line 34
      26 lines of code
      1 parameters
      4 conditional paths
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getSignature() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getIsStatic() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses function getType() defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function getType() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
      uses variable nextLocal defined in com::ibm::wala::shrikeBT::info::LocalAllocator
   variable key in line 26
   variable nextLocal in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/info/ThisAssignmentChecker.java
module com::ibm::wala::shrikeBT::info::ThisAssignmentChecker
   inherits from com::ibm::wala::shrikeBT::MethodData::Results
   function isThisAssigned(MethodData) in line 61
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getInfo(Object) defined in com::ibm::wala::shrikeBT::MethodData
      uses variable key defined in com::ibm::wala::shrikeBT::info::ThisAssignmentChecker
      uses function putInfo(Object,Results) defined in com::ibm::wala::shrikeBT::MethodData
      uses variable assignmentToThis defined in com::ibm::wala::shrikeBT::info::ThisAssignmentChecker
   function notifyUpdate(MethodData,Instruction[],ExceptionHandler,int[]) in line 52
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function recalculateFrom(MethodData) in line 31
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable assignmentToThis defined in com::ibm::wala::shrikeBT::info::ThisAssignmentChecker
      uses function getIsStatic() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
   variable assignmentToThis in line 25
   variable key in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/InstanceofInstruction.java
module com::ibm::wala::shrikeBT::InstanceofInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 28
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function InstanceofInstruction(String) defined in com::ibm::wala::shrikeBT::InstanceofInstruction
      uses variable type defined in com::ibm::wala::shrikeBT::InstanceofInstruction
   function getPoppedCount() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TYPE_boolean defined in com::ibm::wala::shrikeBT::Constants
   function getPushedWordSize() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::InstanceofInstruction
   function hashCode() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::InstanceofInstruction
   function isPEI() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function InstanceofInstruction(String) defined in com::ibm::wala::shrikeBT::InstanceofInstruction
      uses variable type defined in com::ibm::wala::shrikeBT::InstanceofInstruction
   function toString() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::InstanceofInstruction
   function visit(Visitor) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInstanceof(InstanceofInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function InstanceofInstruction(String) in line 19
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::InstanceofInstruction
      uses variable OP_instanceof defined in com::ibm::wala::shrikeBT::Constants
   variable type in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/Instruction.java
module com::ibm::wala::shrikeBT::Instruction
   inherits from com::ibm::wala::shrikeBT::Constants
   inherits from Cloneable
   inherits from com::ibm::wala::shrikeBT::IInstruction
   abstract class
   function clone() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBranchTargets() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable noInstructions defined in com::ibm::wala::shrikeBT::Instruction
   function getOpcode() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPoppedCount() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPushedWordSize() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
      uses function toString() defined in com::ibm::wala::shrikeBT::Instruction
   function isFallThrough() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function redirectTargets(int[]) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 131
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visit(Visitor) in line 126
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable noInstructions in line 51
module com::ibm::wala::shrikeBT::Instruction::Visitor
   abstract class
   function visitArrayLength(ArrayLengthInstruction) in line 208
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayLoad(ArrayLoadInstruction) in line 157
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayStore(ArrayStoreInstruction) in line 160
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitBinaryOp(BinaryOpInstruction) in line 172
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCheckCast(CheckCastInstruction) in line 217
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitComparison(ComparisonInstruction) in line 184
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalBranch(ConditionalBranchInstruction) in line 187
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConstant(ConstantInstruction) in line 145
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConversion(ConversionInstruction) in line 181
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitDup(DupInstruction) in line 166
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitGet(GetInstruction) in line 196
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitGoto(GotoInstruction) in line 148
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceof(InstanceofInstruction) in line 220
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitInvoke(InvokeInstruction) in line 202
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLocalLoad(LoadInstruction) in line 151
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLocalStore(StoreInstruction) in line 154
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitMonitor(MonitorInstruction) in line 214
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitNew(NewInstruction) in line 205
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPop(PopInstruction) in line 163
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPut(PutInstruction) in line 199
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitReturn(ReturnInstruction) in line 193
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitShift(ShiftInstruction) in line 178
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSwap(SwapInstruction) in line 169
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(SwitchInstruction) in line 190
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitThrow(ThrowInstruction) in line 211
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitUnaryOp(UnaryOpInstruction) in line 175
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/InvokeInstruction.java
module com::ibm::wala::shrikeBT::InvokeInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   inherits from com::ibm::wala::shrikeBT::IInvokeInstruction
   function equals(Object) in line 92
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function getClassType() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classType defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function getInvocationCode() in line 178
      protection public
      14 lines of code
      0 parameters
      5 conditional paths
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable STATIC defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses enumvalue INTERFACE defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable SPECIAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses variable VIRTUAL defined in com::ibm::wala::shrikeBT::IInvokeInstruction::Dispatch
   function getInvocationMode() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInvocationModeString() in line 118
      protection public
      14 lines of code
      0 parameters
      5 conditional paths
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokespecial defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
   function getMethodName() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function getMethodSignature() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function getPoppedCount() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_invokestatic defined in com::ibm::wala::shrikeBT::Constants
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function getPushedType(String[]) in line 141
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable TYPE_void defined in com::ibm::wala::shrikeBT::Constants
   function getPushedWordSize() in line 150
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function hashCode() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function isPEI() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,String,String,Dispatch) in line 28
      protection public
      12 lines of code
      4 parameters
      8 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable methodName defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable OP_invokevirtual defined in com::ibm::wala::shrikeBT::Constants
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses variable classType defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getConstantPoolMemberClassType(int) defined in com::ibm::wala::shrikeBT::ConstantPoolReader
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getConstantPoolMemberName(int) defined in com::ibm::wala::shrikeBT::ConstantPoolReader
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getConstantPoolMemberType(int) defined in com::ibm::wala::shrikeBT::ConstantPoolReader
      uses variable OP_invokeinterface defined in com::ibm::wala::shrikeBT::Constants
   function toString() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvocationModeString() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodSignature() defined in com::ibm::wala::shrikeBT::InvokeInstruction
   function visit(Visitor) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInvoke(InvokeInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   variable classType in line 18
   variable methodName in line 19
   variable type in line 17
module com::ibm::wala::shrikeBT::InvokeInstruction::Lazy
   inherits from com::ibm::wala::shrikeBT::InvokeInstruction
   function getClassType() in line 63
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getMethodName() in line 70
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getMethodSignature() in line 77
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable cp in line 46
   variable index in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/LoadInstruction.java
module com::ibm::wala::shrikeBT::LoadInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 78
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function LoadInstruction(short,int) defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses variable index defined in com::ibm::wala::shrikeBT::LoadInstruction
   function getPushedType(String[]) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::LoadInstruction
   function getPushedWordSize() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::LoadInstruction
   function getType() in line 58
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_iload_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload defined in com::ibm::wala::shrikeBT::Constants
   function getVarIndex() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::shrikeBT::LoadInstruction
   function hashCode() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::shrikeBT::LoadInstruction
   function isPEI() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,int) in line 39
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable TYPE_Object_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable index defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses variable preallocated defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses function LoadInstruction(short,int) defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses variable OP_iload defined in com::ibm::wala::shrikeBT::Constants
   function preallocate() in line 26
      12 lines of code
      0 parameters
      4 conditional paths
      uses function LoadInstruction(short,int) defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses variable OP_iload_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_iload defined in com::ibm::wala::shrikeBT::Constants
   function toString() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses variable index defined in com::ibm::wala::shrikeBT::LoadInstruction
   function visit(Visitor) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitLocalLoad(LoadInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function LoadInstruction(short,int) in line 19
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::shrikeBT::LoadInstruction
   variable index in line 17
   variable preallocated in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/MethodData.java
module com::ibm::wala::shrikeBT::MethodData
   function getAccess() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable access defined in com::ibm::wala::shrikeBT::MethodData
   function getClassType() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classType defined in com::ibm::wala::shrikeBT::MethodData
   function getHandlers() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodData
   function getHasChanged() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hasChanged defined in com::ibm::wala::shrikeBT::MethodData
   function getInfo(Object) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in com::ibm::wala::shrikeBT::MethodData
   function getInstructions() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodData
   function getInstructionsToBytecodes() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodData
   function getIsStatic() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable access defined in com::ibm::wala::shrikeBT::MethodData
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeBT::Constants
   function getIsSynchronized() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable access defined in com::ibm::wala::shrikeBT::MethodData
      uses variable ACC_SYNCHRONIZED defined in com::ibm::wala::shrikeBT::Constants
   function getName() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::ibm::wala::shrikeBT::MethodData
   function getSignature() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in com::ibm::wala::shrikeBT::MethodData
   function putInfo(Object,Results) in line 214
      protection public
      3 lines of code
      2 parameters
      3 conditional paths
      uses variable map defined in com::ibm::wala::shrikeBT::MethodData
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodData
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodData
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodData
      uses function notifyUpdate(MethodData,Instruction[],ExceptionHandler,int[]) defined in com::ibm::wala::shrikeBT::MethodData::Results
      uses variable hasChanged defined in com::ibm::wala::shrikeBT::MethodData
   function setHasChanged() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hasChanged defined in com::ibm::wala::shrikeBT::MethodData
   function toString() in line 240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassType() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getName() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getSignature() defined in com::ibm::wala::shrikeBT::MethodData
   function MethodData(int,String,String,String,Instruction[],ExceptionHandler,int[]) in line 61
      protection public
      26 lines of code
      7 parameters
      6 conditional paths
      uses variable classType defined in com::ibm::wala::shrikeBT::MethodData
      uses variable access defined in com::ibm::wala::shrikeBT::MethodData
      uses variable name defined in com::ibm::wala::shrikeBT::MethodData
      uses variable signature defined in com::ibm::wala::shrikeBT::MethodData
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodData
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodData
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodData
   function MethodData(Decoder,int,String,String,String) in line 104
      protection public
      3 lines of code
      5 parameters
      1 conditional paths
      uses variable access defined in com::ibm::wala::shrikeBT::MethodData
      uses variable classType defined in com::ibm::wala::shrikeBT::MethodData
      uses variable name defined in com::ibm::wala::shrikeBT::MethodData
      uses variable signature defined in com::ibm::wala::shrikeBT::MethodData
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::Decoder
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::Decoder
      uses function getInstructionsToBytecodes() defined in com::ibm::wala::shrikeBT::Decoder
   variable access in line 31
   variable classType in line 32
   variable handlers in line 36
   variable hasChanged in line 38
   variable instructions in line 35
   variable instructionsToBytecodes in line 37
   variable map in line 29
   variable name in line 33
   variable signature in line 34
module com::ibm::wala::shrikeBT::MethodData::Results
   function notifyUpdate(MethodData,Instruction[],ExceptionHandler,int[]) in line 198
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/MethodEditor.java
module com::ibm::wala::shrikeBT::MethodEditor
   function addInstructionExceptionHandler(int,String,Patch) in line 425
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructionHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function allocateLabel() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function addMethodExceptionHandler(String,Patch) in line 440
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function allocateLabel() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function allocateLabel() in line 343
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable nextLabel defined in com::ibm::wala::shrikeBT::MethodEditor
   function applyPatches() in line 495
      protection public
      140 lines of code
      0 parameters
      22 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable state defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable EMITTING_CODE defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_END_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable nextLabel defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable noHandlers defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodStartPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function makeExceptionArray(HandlerPatch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructionHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function emitLabel(int) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable beforePatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable replacementPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function emitTo(Output) defined in com::ibm::wala::shrikeBT::MethodEditor::Patch
      uses variable afterPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable afterMethodPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function redirectTargets(int[]) defined in com::ibm::wala::shrikeBT::Instruction
      uses variable methodInfo defined in com::ibm::wala::shrikeBT::MethodEditor
   function beginPass() in line 306
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable state defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable nextLabel defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable beforePatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable afterPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable lastAfterPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable replacementPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructionHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodStartPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable afterMethodPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function endPass() in line 325
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable state defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable beforePatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable afterPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable lastAfterPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable replacementPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructionHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodStartPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable afterMethodPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodHandlerPatches defined in com::ibm::wala::shrikeBT::MethodEditor
   function getData() in line 462
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodInfo defined in com::ibm::wala::shrikeBT::MethodEditor
   function getHandlers() in line 151
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodEditor
   function getInstructions() in line 159
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodEditor
   function getInstructionsToBytecodes() in line 167
      protection public
      4 lines of code
      0 parameters
      3 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodEditor
   function getStateMessage(int) in line 133
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable state defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable EMITTING_CODE defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable BEFORE_END_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
   function insertAfter(int,Patch) in line 386
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable afterPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable lastAfterPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function insertAfterBody(Patch) in line 452
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable afterMethodPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function insertAtStart(Patch) in line 356
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable methodStartPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function insertBefore(int,Patch) in line 370
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable beforePatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function makeExceptionArray(HandlerPatch) in line 466
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable noHandlers defined in com::ibm::wala::shrikeBT::MethodEditor
   function replaceWith(int,Patch) in line 403
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable replacementPatches defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable patchCount defined in com::ibm::wala::shrikeBT::MethodEditor
   function verifyState(int) in line 127
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable state defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function getStateMessage(int) defined in com::ibm::wala::shrikeBT::MethodEditor
   function visitInstructions(Visitor) in line 640
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function verifyState(int) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable DURING_PASS defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function setIndex(MethodEditor,int) defined in com::ibm::wala::shrikeBT::MethodEditor::Visitor
      uses function visit(Visitor) defined in com::ibm::wala::shrikeBT::Instruction
   function MethodEditor(MethodData) in line 109
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable methodInfo defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function getInstructionsToBytecodes() defined in com::ibm::wala::shrikeBT::MethodData
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::MethodData
   function MethodEditor(Instruction[],ExceptionHandler,int[]) in line 120
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable methodInfo defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instructions defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodEditor
   variable afterMethodPatches in line 83
   variable afterPatches in line 79
   variable BEFORE_END_PASS in line 74
   variable BEFORE_PASS in line 71
   variable beforePatches in line 78
   variable DURING_PASS in line 72
   variable EMITTING_CODE in line 73
   variable handlers in line 66
   variable instructionHandlerPatches in line 84
   variable instructions in line 65
   variable instructionsToBytecodes in line 64
   variable lastAfterPatches in line 80
   variable methodHandlerPatches in line 85
   variable methodInfo in line 68
   variable methodStartPatches in line 82
   variable nextLabel in line 86
   variable noHandlers in line 61
   variable patchCount in line 77
   variable replacementPatches in line 81
   variable state in line 76
module com::ibm::wala::shrikeBT::MethodEditor::HandlerPatch
module com::ibm::wala::shrikeBT::MethodEditor::Output
   function emit(Instruction) in line 213
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function emit(Instruction,ExceptionHandler[]) in line 222
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodEditor
   function emit(Instruction[]) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable noHandlers defined in com::ibm::wala::shrikeBT::MethodEditor
   function emit(Instruction[],ExceptionHandler[]) in line 261
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable instructionsToBytecodes defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable handlers defined in com::ibm::wala::shrikeBT::MethodEditor
   function emitLabel(int) in line 206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::shrikeBT::MethodEditor::Patch
   abstract class
   function emitTo(Output) in line 300
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function Patch() in line 289
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
module com::ibm::wala::shrikeBT::MethodEditor::Visitor
   inherits from com::ibm::wala::shrikeBT::Instruction::Visitor
   function addInstructionExceptionHandler(String,Patch) in line 703
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addInstructionExceptionHandler(int,String,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
   function getIndex() in line 669
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function insertAfter(Patch) in line 676
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function insertAfter(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
   function insertBefore(Patch) in line 683
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function insertBefore(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
   function replaceWith(Patch) in line 690
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function replaceWith(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
   function setIndex(MethodEditor,int) in line 661
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable editor in line 656
   variable index in line 655
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/MonitorInstruction.java
module com::ibm::wala::shrikeBT::MonitorInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 28
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function MonitorInstruction(short) defined in com::ibm::wala::shrikeBT::MonitorInstruction
   function getPoppedCount() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEnter() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_monitorenter defined in com::ibm::wala::shrikeBT::Constants
   function isPEI() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(boolean) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable enter defined in com::ibm::wala::shrikeBT::MonitorInstruction
      uses variable exit defined in com::ibm::wala::shrikeBT::MonitorInstruction
   function toString() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isEnter() defined in com::ibm::wala::shrikeBT::MonitorInstruction
   function visit(Visitor) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitMonitor(MonitorInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function MonitorInstruction(short) in line 17
      3 lines of code
      1 parameters
      1 conditional paths
   variable enter in line 21
   variable exit in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/NewInstruction.java
module com::ibm::wala::shrikeBT::NewInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 63
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function NewInstruction(short,String,short) defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable type defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable arrayBoundsCount defined in com::ibm::wala::shrikeBT::NewInstruction
   function getArrayBoundsCount() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayBoundsCount defined in com::ibm::wala::shrikeBT::NewInstruction
   function getPoppedCount() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayBoundsCount defined in com::ibm::wala::shrikeBT::NewInstruction
   function getPushedType(String[]) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::NewInstruction
   function getPushedWordSize() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::NewInstruction
   function hashCode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable arrayBoundsCount defined in com::ibm::wala::shrikeBT::NewInstruction
   function isPEI() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,int) in line 31
      protection public
      31 lines of code
      2 parameters
      8 conditional paths
      uses variable arrayBoundsCount defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable type defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable OP_new defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_newarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_anewarray defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_multianewarray defined in com::ibm::wala::shrikeBT::Constants
      uses function NewInstruction(short,String,short) defined in com::ibm::wala::shrikeBT::NewInstruction
   function toString() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable arrayBoundsCount defined in com::ibm::wala::shrikeBT::NewInstruction
   function visit(Visitor) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitNew(NewInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function NewInstruction(short,String,short) in line 17
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::NewInstruction
      uses variable arrayBoundsCount defined in com::ibm::wala::shrikeBT::NewInstruction
   variable arrayBoundsCount in line 15
   variable type in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/PopInstruction.java
module com::ibm::wala::shrikeBT::PopInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 35
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function PopInstruction(byte) defined in com::ibm::wala::shrikeBT::PopInstruction
      uses variable size defined in com::ibm::wala::shrikeBT::PopInstruction
   function getPoppedCount() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::PopInstruction
   function hashCode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::PopInstruction
   function isPEI() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(int) in line 27
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::PopInstruction
      uses function PopInstruction(byte) defined in com::ibm::wala::shrikeBT::PopInstruction
   function toString() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::PopInstruction
   function visit(Visitor) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitPop(PopInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function PopInstruction(byte) in line 19
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable size defined in com::ibm::wala::shrikeBT::PopInstruction
   variable size in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/PutInstruction.java
module com::ibm::wala::shrikeBT::PutInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 89
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::PutInstruction
   function getClassType() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classType defined in com::ibm::wala::shrikeBT::PutInstruction
   function getFieldName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in com::ibm::wala::shrikeBT::PutInstruction
   function getFieldType() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::PutInstruction
   function getPoppedCount() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in com::ibm::wala::shrikeBT::PutInstruction
   function hashCode() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::PutInstruction
   function isPEI() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_putstatic defined in com::ibm::wala::shrikeBT::Constants
   function make(String,String,String,boolean) in line 76
      protection public
      12 lines of code
      4 parameters
      4 conditional paths
      uses variable type defined in com::ibm::wala::shrikeBT::PutInstruction
      uses variable fieldName defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function isStatic() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses variable OP_putstatic defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_putfield defined in com::ibm::wala::shrikeBT::Constants
   function toString() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function isStatic() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getClassType() defined in com::ibm::wala::shrikeBT::PutInstruction
      uses function getFieldName() defined in com::ibm::wala::shrikeBT::PutInstruction
   function visit(Visitor) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitPut(PutInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   variable classType in line 18
   variable fieldName in line 19
   variable type in line 17
module com::ibm::wala::shrikeBT::PutInstruction::Lazy
   inherits from com::ibm::wala::shrikeBT::PutInstruction
   function getClassType() in line 50
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getFieldName() in line 57
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getFieldType() in line 64
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable cp in line 33
   variable index in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ReturnInstruction.java
module com::ibm::wala::shrikeBT::ReturnInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 44
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ReturnInstruction(short) defined in com::ibm::wala::shrikeBT::ReturnInstruction
   function getPoppedCount() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_return defined in com::ibm::wala::shrikeBT::Constants
   function getType() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_return defined in com::ibm::wala::shrikeBT::Constants
      uses variable TYPE_void defined in com::ibm::wala::shrikeBT::Constants
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ireturn defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFallThrough() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String) in line 32
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable TYPE_void defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocatedVoid defined in com::ibm::wala::shrikeBT::ReturnInstruction
      uses variable TYPE_Object_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocated defined in com::ibm::wala::shrikeBT::ReturnInstruction
   function preallocate() in line 24
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_areturn defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ireturn defined in com::ibm::wala::shrikeBT::Constants
      uses function ReturnInstruction(short) defined in com::ibm::wala::shrikeBT::ReturnInstruction
   function toString() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ReturnInstruction
   function visit(Visitor) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitReturn(ReturnInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ReturnInstruction(short) in line 17
      3 lines of code
      1 parameters
      1 conditional paths
   variable preallocated in line 21
   variable preallocatedVoid in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/Settings.java
module com::ibm::wala::shrikeBT::Settings
   function hashCode() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ShiftInstruction.java
module com::ibm::wala::shrikeBT::ShiftInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ShiftInstruction(short) defined in com::ibm::wala::shrikeBT::ShiftInstruction
   function getOperator() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_ishl defined in com::ibm::wala::shrikeBT::Constants
   function getPoppedCount() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ShiftInstruction
   function getPushedWordSize() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ShiftInstruction
   function getType() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ishl defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,Operator) in line 37
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable TYPE_long_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocated defined in com::ibm::wala::shrikeBT::ShiftInstruction
      uses variable SHL defined in com::ibm::wala::shrikeBT::ShiftInstruction::Operator
   function preallocate() in line 29
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_lushr defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ishl defined in com::ibm::wala::shrikeBT::Constants
      uses function ShiftInstruction(short) defined in com::ibm::wala::shrikeBT::ShiftInstruction
   function toString() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::ShiftInstruction
      uses function getOperator() defined in com::ibm::wala::shrikeBT::ShiftInstruction
   function visit(Visitor) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitShift(ShiftInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ShiftInstruction(short) in line 23
      3 lines of code
      1 parameters
      1 conditional paths
   variable preallocated in line 27
module com::ibm::wala::shrikeBT::ShiftInstruction::Operator
   inherits from com::ibm::wala::shrikeBT::BinaryOpInstruction::IOperator
   variable SHL in line 20
      protection public
   variable SHR in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/ClassInstrumenter.java
module com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function createEmptyMethodData(String,String,int) in line 137
      protection public
      20 lines of code
      3 parameters
      3 conditional paths
      uses variable TYPE_void defined in com::ibm::wala::shrikeBT::Constants
      uses variable noHandlers defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable cr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
   function deleteMethod(int) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable deletedMethods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function emitClass() in line 324
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function emitClassInto(ClassWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function emitClassInto(ClassWriter) in line 337
      55 lines of code
      1 parameters
      9 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getMajorVersion() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getMinorVersion() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getCP() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getAccessFlags() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getNameIndex() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getSuperNameIndex() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getInterfaceNameIndices() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldCount() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getBytes() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldRawOffset(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getFieldRawSize(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable deletedMethods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getHasChanged() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getMethodRawOffset(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getMethodRawSize(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function setPresetConstants(ConstantPoolReader) defined in com::ibm::wala::shrikeBT::Compiler
      uses variable cpr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function compile() defined in com::ibm::wala::shrikeBT::Compiler
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getMethodAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable ACC_NATIVE defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getMethodNameIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getMethodTypeIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function makeMethodAttributes(int,ClassWriter,CodeReader,Compiler.Output) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getOutput() defined in com::ibm::wala::shrikeBT::Compiler
      uses function getAuxiliaryMethods() defined in com::ibm::wala::shrikeBT::Compiler
      uses function initClassAttributeIterator(AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
   function enableFakeLineNumbers(int) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable createFakeLineNumbers defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable fakeLineOffset defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function getMethodCode(int) in line 273
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function prepareMethod(int) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function getReader() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function isChanged() in line 307
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable deletedMethods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function makeMethodAttributes(int,ClassWriter,CodeReader,Compiler.Output) in line 467
      56 lines of code
      4 parameters
      12 conditional paths
      uses function makeNewCode(ClassWriter,Compiler.Output) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function makeNewLines(ClassWriter,CodeReader,Compiler.Output) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function makeNewLocals(ClassWriter,CodeReader,Compiler.Output) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function setAttributes(ClassWriter.Element[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable cr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function initMethodAttributeIterator(int,AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getBytes() defined in com::ibm::wala::shrikeCT::ClassReader
   function makeNewCode(ClassWriter,Compiler.Output) in line 393
      8 lines of code
      2 parameters
      1 conditional paths
      uses function setMaxStack(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setMaxLocals(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setCode(byte[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setRawHandlers(int[]) defined in com::ibm::wala::shrikeCT::CodeWriter
   function makeNewLines(ClassWriter,CodeReader,Compiler.Output) in line 402
      33 lines of code
      3 parameters
      7 conditional paths
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable createFakeLineNumbers defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable fakeLineOffset defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function setRawTable(int[]) defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
   function makeNewLocals(ClassWriter,CodeReader,Compiler.Output) in line 436
      30 lines of code
      3 parameters
      5 conditional paths
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function setRawTable(int[]) defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
   function newMethod(String,String,ArrayList< Instruction >,int,ClassWriter,ClassWriter.Element) in line 163
      protection public
      41 lines of code
      6 parameters
      5 conditional paths
      uses variable noHandlers defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable cr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function compile() defined in com::ibm::wala::shrikeBT::Compiler
      uses function getOutput() defined in com::ibm::wala::shrikeBT::Compiler
      uses function setMaxStack(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setMaxLocals(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setCode(byte[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setRawHandlers(int[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setRawTable(int[]) defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
      uses function setAttributes(ClassWriter.Element[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function addMethod(int,String,String,Element[]) defined in com::ibm::wala::shrikeCT::ClassWriter
   function newMethod(MethodData,ClassWriter,ClassWriter.Element) in line 205
      protection public
      34 lines of code
      3 parameters
      3 conditional paths
      uses function compile() defined in com::ibm::wala::shrikeBT::Compiler
      uses function getOutput() defined in com::ibm::wala::shrikeBT::Compiler
      uses function setMaxStack(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setMaxLocals(int) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setCode(byte[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setRawHandlers(int[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function getCodeLength() defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function setRawTable(int[]) defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
      uses function setAttributes(ClassWriter.Element[]) defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function addMethod(int,String,String,Element[]) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getAccess() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getName() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getSignature() defined in com::ibm::wala::shrikeBT::MethodData
   function prepareMethod(int) in line 98
      24 lines of code
      1 parameters
      6 conditional paths
      uses variable deletedMethods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable cr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function initMethodAttributeIterator(int,AttrIterator) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable cpr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function decode() defined in com::ibm::wala::shrikeBT::Decoder
      uses function getRawOffset() defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getMethodAccessFlags(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getMethodType(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function replaceMethod(int,MethodData) in line 297
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable deletedMethods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function setHasChanged() defined in com::ibm::wala::shrikeBT::MethodData
   function resetMethod(int) in line 285
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable deletedMethods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function visitMethod(int) in line 262
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function prepareMethod(int) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function visitMethods(MethodExaminer) in line 247
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function prepareMethod(int) defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   function ClassInstrumenter(byte[]) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ClassInstrumenter(ClassReader) in line 72
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable methods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getMethodCount() defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable oldCode defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable cpr defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable deletedMethods defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
   variable cpr in line 48
   variable cr in line 47
   variable createFakeLineNumbers in line 49
   variable deletedMethods in line 44
   variable fakeLineOffset in line 50
   variable methods in line 45
   variable noHandlers in line 133
   variable oldCode in line 46
module com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter::MethodExaminer
   function examineCode(MethodData) in line 95
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/CTCompiler.java
module com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
   inherits from com::ibm::wala::shrikeBT::Compiler
   function allocateConstantPoolClassType(String) in line 54
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPClass(String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function convertTypeToClass(String) defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
   function allocateConstantPoolDouble(double) in line 46
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPDouble(double) defined in com::ibm::wala::shrikeCT::ClassWriter
   function allocateConstantPoolField(String,String,String) in line 70
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPFieldRef(String,String,String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function convertTypeToClass(String) defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
   function allocateConstantPoolFloat(float) in line 38
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPFloat(float) defined in com::ibm::wala::shrikeCT::ClassWriter
   function allocateConstantPoolInteger(int) in line 34
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPInt(int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function allocateConstantPoolInterfaceMethod(String,String,String) in line 78
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPInterfaceMethodRef(String,String,String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function convertTypeToClass(String) defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
   function allocateConstantPoolLong(long) in line 42
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPLong(long) defined in com::ibm::wala::shrikeCT::ClassWriter
   function allocateConstantPoolMethod(String,String,String) in line 74
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPMethodRef(String,String,String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function convertTypeToClass(String) defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
   function allocateConstantPoolString(String) in line 50
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
      uses function addCPString(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   function convertTypeToClass(String) in line 62
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function createHelperMethod(boolean,String) in line 82
      6 lines of code
      2 parameters
      1 conditional paths
   function CTCompiler(ClassWriter,MethodData) in line 29
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cw defined in com::ibm::wala::shrikeBT::shrikeCT::CTCompiler
   variable cw in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/CTDecoder.java
module com::ibm::wala::shrikeBT::shrikeCT::CTDecoder
   inherits from com::ibm::wala::shrikeBT::Decoder
   function convertClassToType(String) in line 45
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function makeConstantPoolReader(ClassReader) in line 57
      protection public
      3 lines of code
      1 parameters
      10 conditional paths
      uses function getCP() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getItemType(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPInt(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPFloat(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPLong(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPDouble(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPString(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function convertClassToType(String) defined in com::ibm::wala::shrikeBT::shrikeCT::CTDecoder
      uses function getCPClass(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPRefClass(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPRefName(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPRefType(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function CTDecoder(CodeReader) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeConstantPoolReader(ClassReader) defined in com::ibm::wala::shrikeBT::shrikeCT::CTDecoder
      uses function getClassReader() defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function CTDecoder(CodeReader,ConstantPoolReader) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecode() defined in com::ibm::wala::shrikeCT::CodeReader
      uses function getRawHandlers() defined in com::ibm::wala::shrikeCT::CodeReader
module com::ibm::wala::shrikeBT::shrikeCT::CTDecoder::CPReader
   inherits from com::ibm::wala::shrikeBT::ConstantPoolReader
   function convertToError(InvalidClassFileException) in line 72
      4 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolClassType(int) in line 117
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolDouble(int) in line 101
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolFloat(int) in line 85
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolInteger(int) in line 77
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolItemType(int) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolLong(int) in line 93
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolMemberClassType(int) in line 125
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolMemberName(int) in line 133
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolMemberType(int) in line 141
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getConstantPoolString(int) in line 109
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable cp in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/CTUtils.java
module com::ibm::wala::shrikeBT::shrikeCT::CTUtils
   function addClassToHierarchy(ClassHierarchyStore,ClassReader) in line 24
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable ACC_INTERFACE defined in com::ibm::wala::shrikeBT::Constants
      uses variable ACC_FINAL defined in com::ibm::wala::shrikeBT::Constants
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/OfflineInstrumenter.java
module com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
   inherits from com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function getClassName(Object) in line 44
      7 lines of code
      1 parameters
      2 conditional paths
   function makeClassFromStream(BufferedInputStream) in line 34
      9 lines of code
      1 parameters
      2 conditional paths
   function nextClass() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function internalNextClass() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function outputModifiedClass(ClassInstrumenter,ClassWriter) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function internalOutputModifiedClass(Object,Object) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function outputModifiedClass(ClassInstrumenter) in line 82
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function internalOutputModifiedClass(Object,Object) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function writeClassTo(Object,Object,OutputStream) in line 52
      9 lines of code
      3 parameters
      2 conditional paths
      uses function getReader() defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function getBytes() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function makeBytes() defined in com::ibm::wala::shrikeCT::ClassWriter
   function OfflineInstrumenter() in line 31
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/tools/AddSerialVersion.java
module com::ibm::wala::shrikeBT::shrikeCT::tools::AddSerialVersion
   function addSerialVersionUID(ClassReader,ClassWriter) in line 38
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function computeSerialVersionUID(final ClassReader) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::AddSerialVersion
      uses variable ACC_PUBLIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable ACC_FINAL defined in com::ibm::wala::shrikeCT::ClassConstants
   function computeSerialVersionUID(final ClassReader) in line 70
      protection public
      101 lines of code
      1 parameters
      14 conditional paths
      uses variable ACC_PRIVATE defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable ACC_STATIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable ACC_TRANSIENT defined in com::ibm::wala::shrikeCT::ClassConstants
   function main(String[]) in line 172
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function computeSerialVersionUID(final ClassReader) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::AddSerialVersion
module com::ibm::wala::shrikeBT::shrikeCT::tools::AddSerialVersion::SinkOutputStream
   inherits from java::io::OutputStream
   function write(int) in line 55
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function write(byte[]) in line 58
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function write(byte[],int,int) in line 61
      protection public
      2 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/tools/BatchVerifier.java
module com::ibm::wala::shrikeBT::shrikeCT::tools::BatchVerifier
   function doClass(final ClassReader,PrintWriter) in line 82
      46 lines of code
      2 parameters
      7 conditional paths
      uses function decode() defined in com::ibm::wala::shrikeBT::Decoder
      uses function getRawOffset() defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable disasm defined in com::ibm::wala::shrikeBT::shrikeCT::tools::BatchVerifier
      uses function verify() defined in com::ibm::wala::shrikeBT::analysis::Verifier
      uses function printPath(Writer) defined in com::ibm::wala::shrikeBT::analysis::Analyzer::FailureException
      uses variable errors defined in com::ibm::wala::shrikeBT::shrikeCT::tools::BatchVerifier
   function main(String[]) in line 51
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable disasm defined in com::ibm::wala::shrikeBT::shrikeCT::tools::BatchVerifier
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function getReader() defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses variable store defined in com::ibm::wala::shrikeBT::shrikeCT::tools::BatchVerifier
      uses function doClass(final ClassReader,PrintWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::BatchVerifier
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable errors defined in com::ibm::wala::shrikeBT::shrikeCT::tools::BatchVerifier
   variable disasm in line 47
   variable errors in line 49
   variable store in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/tools/ClassPrinter.java
module com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   function doClass(final ClassReader) in line 344
      protection public
      38 lines of code
      1 parameters
      6 conditional paths
      uses variable w defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses variable printConstantPool defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function getItemCount() defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getItemType(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPItemString(ConstantPoolParser,int) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function dumpAttributes(ClassReader,int,ClassReader.AttrIterator) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function dumpFlags(int) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   function dumpAttributes(ClassReader,int,ClassReader.AttrIterator) in line 153
      119 lines of code
      3 parameters
      28 conditional paths
      uses variable w defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function getMaxStack() defined in com::ibm::wala::shrikeCT::CodeReader
      uses function getMaxLocals() defined in com::ibm::wala::shrikeCT::CodeReader
      uses function getRawHandlers() defined in com::ibm::wala::shrikeCT::CodeReader
      uses function decode() defined in com::ibm::wala::shrikeBT::Decoder
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::Decoder
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::Decoder
      uses function getInstructionsToBytecodes() defined in com::ibm::wala::shrikeBT::Decoder
      uses function disassembleTo(String,Writer) defined in com::ibm::wala::shrikeBT::Disassembler
      uses function getClassName(ClassReader,int) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function initAttributeIterator(ClassReader.AttrIterator) defined in com::ibm::wala::shrikeCT::CodeReader
      uses variable printLineNumberInfo defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function getCP() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getCPUtf8(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPItemString(ConstantPoolParser,int) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function getValueCPIndex() defined in com::ibm::wala::shrikeCT::ConstantValueReader
      uses function getSourceFileCPIndex() defined in com::ibm::wala::shrikeCT::SourceFileReader
      uses function makeHex(byte[],int,int,int) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function getBytes() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function makeChars(byte[],int,int) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   function dumpFlags(int) in line 127
      25 lines of code
      1 parameters
      6 conditional paths
   function getClassName(ClassReader,int) in line 119
      7 lines of code
      2 parameters
      2 conditional paths
   function getCPItemString(ConstantPoolParser,int) in line 273
      29 lines of code
      2 parameters
      12 conditional paths
      uses variable CONSTANT_Utf8 defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function quoteString(String) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Integer defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Float defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_MethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_FieldRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_InterfaceMethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
   function main(String[]) in line 70
      protection public
      20 lines of code
      1 parameters
      3 conditional paths
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable w defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function ClassPrinter(PrintWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassReader) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
      uses function getReader() defined in com::ibm::wala::shrikeBT::shrikeCT::ClassInstrumenter
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function makeChars(byte[],int,int) in line 106
      12 lines of code
      3 parameters
      3 conditional paths
   function makeHex(byte[],int,int,int) in line 93
      12 lines of code
      4 parameters
      3 conditional paths
      uses variable hexChars defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   function quoteString(String) in line 303
      37 lines of code
      1 parameters
      9 conditional paths
      uses function makeHex(byte[],int,int,int) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   function setPrintConstantPool(boolean) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable printConstantPool defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   function setPrintLineNumberInfo(boolean) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable printLineNumberInfo defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   function ClassPrinter(PrintWriter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassPrinter
   variable hexChars in line 91
   variable printConstantPool in line 46
   variable printLineNumberInfo in line 45
   variable w in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/tools/ClassSearcher.java
module com::ibm::wala::shrikeBT::shrikeCT::tools::ClassSearcher
   function doClass(final ClassInstrumenter,Writer,String) in line 57
      13 lines of code
      3 parameters
      3 conditional paths
      uses variable scanned defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassSearcher
      uses function getCP() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getItemCount() defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getItemType(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getCPClass(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getName() defined in com::ibm::wala::shrikeCT::ClassReader
   function main(String[]) in line 40
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable instrumenter defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassSearcher
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassInstrumenter,Writer,String) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassSearcher
      uses function getLastClassResourceName() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable scanned defined in com::ibm::wala::shrikeBT::shrikeCT::tools::ClassSearcher
   variable instrumenter in line 36
   variable scanned in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/shrikeCT/tools/MethodTracer.java
module com::ibm::wala::shrikeBT::shrikeCT::tools::MethodTracer
   function doClass(final ClassInstrumenter,Writer) in line 75
      75 lines of code
      2 parameters
      11 conditional paths
      uses variable disasm defined in com::ibm::wala::shrikeBT::shrikeCT::tools::MethodTracer
      uses variable verify defined in com::ibm::wala::shrikeBT::shrikeCT::tools::MethodTracer
      uses function verify() defined in com::ibm::wala::shrikeBT::analysis::Verifier
      uses function beginPass() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function insertAtStart(Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable INSTRUMENT_CALLERS defined in com::ibm::wala::shrikeBT::shrikeCT::tools::MethodTracer
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodData
      uses function getClassType() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function getMethodName() defined in com::ibm::wala::shrikeBT::InvokeInstruction
      uses function insertBefore(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function applyPatches() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable instrumenter defined in com::ibm::wala::shrikeBT::shrikeCT::tools::MethodTracer
      uses function outputModifiedClass(ClassInstrumenter,ClassWriter) defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
   function main(String[]) in line 52
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable instrumenter defined in com::ibm::wala::shrikeBT::shrikeCT::tools::MethodTracer
      uses function parseStandardArgs(String[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function setPassUnmodifiedClasses(boolean) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function beginTraversal() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function nextClass() defined in com::ibm::wala::shrikeBT::shrikeCT::OfflineInstrumenter
      uses function doClass(final ClassInstrumenter,Writer) defined in com::ibm::wala::shrikeBT::shrikeCT::tools::MethodTracer
      uses function close() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   variable disasm in line 46
   variable INSTRUMENT_CALLERS in line 48
   variable instrumenter in line 50
   variable verify in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/StoreInstruction.java
module com::ibm::wala::shrikeBT::StoreInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 66
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function StoreInstruction(short,int) defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable index defined in com::ibm::wala::shrikeBT::StoreInstruction
   function getPoppedCount() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 58
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_istore_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_istore defined in com::ibm::wala::shrikeBT::Constants
   function getVarIndex() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::shrikeBT::StoreInstruction
   function hashCode() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::shrikeBT::StoreInstruction
   function isPEI() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,int) in line 39
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable TYPE_Object_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable index defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable preallocated defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function StoreInstruction(short,int) defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable OP_istore defined in com::ibm::wala::shrikeBT::Constants
   function preallocate() in line 26
      12 lines of code
      0 parameters
      4 conditional paths
      uses function StoreInstruction(short,int) defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable OP_istore_0 defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_istore defined in com::ibm::wala::shrikeBT::Constants
   function toString() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable index defined in com::ibm::wala::shrikeBT::StoreInstruction
   function visit(Visitor) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitLocalStore(StoreInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function StoreInstruction(short,int) in line 19
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable index defined in com::ibm::wala::shrikeBT::StoreInstruction
   variable index in line 17
   variable preallocated in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/SwapInstruction.java
module com::ibm::wala::shrikeBT::SwapInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 27
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getPoppedCount() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preallocated defined in com::ibm::wala::shrikeBT::SwapInstruction
   function toString() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(Visitor) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitSwap(SwapInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function SwapInstruction() in line 18
      2 lines of code
      0 parameters
      1 conditional paths
   variable preallocated in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/SwitchInstruction.java
module com::ibm::wala::shrikeBT::SwitchInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 95
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function SwitchInstruction(short,int[],int) defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function getBranchTargets() in line 77
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function getCasesAndLabels() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function getDefaultLabel() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function getPoppedCount() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 104
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function isFallThrough() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(int[],int) in line 52
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses variable OP_tableswitch defined in com::ibm::wala::shrikeBT::Constants
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable OP_lookupswitch defined in com::ibm::wala::shrikeBT::Constants
      uses function SwitchInstruction(short,int[],int) defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function redirectTargets(int[]) in line 86
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses function make(int[],int) defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function toString() in line 116
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
   function visit(Visitor) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitSwitch(SwitchInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function SwitchInstruction(short,int[],int) in line 22
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable casesAndLabels defined in com::ibm::wala::shrikeBT::SwitchInstruction
      uses variable defaultLabel defined in com::ibm::wala::shrikeBT::SwitchInstruction
   variable casesAndLabels in line 19
   variable defaultLabel in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/ThrowInstruction.java
module com::ibm::wala::shrikeBT::ThrowInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ThrowInstruction() defined in com::ibm::wala::shrikeBT::ThrowInstruction
   function getPoppedCount() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFallThrough() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preallocated defined in com::ibm::wala::shrikeBT::ThrowInstruction
   function toString() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(Visitor) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitThrow(ThrowInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function ThrowInstruction() in line 19
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable OP_athrow defined in com::ibm::wala::shrikeBT::Constants
   variable preallocated in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/tools/MethodOptimizer.java
module com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function buildBackEdges() in line 99
      39 lines of code
      0 parameters
      9 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getHandler() defined in com::ibm::wala::shrikeBT::ExceptionHandler
      uses variable backEdges defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function buildStackDefMap() in line 298
      51 lines of code
      0 parameters
      14 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable stackSizes defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getSize() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getDelta() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function followStackDef(int,int,int,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable uniqueStackDefLocations defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable uniqueStackUseLocations defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function followStackUse(int,int,int,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function checkConsistentStackSizes() in line 139
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable stackSizes defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function checkStackSizesAt(int,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function checkStackSizesAt(int,int) in line 152
      44 lines of code
      2 parameters
      11 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function UnoptimizableCodeException(String) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer::UnoptimizableCodeException
      uses variable stackSizes defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::Instruction
      uses function getSize() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getPoppedCount() defined in com::ibm::wala::shrikeBT::DupInstruction
      uses function getPushedType(String[]) defined in com::ibm::wala::shrikeBT::Instruction
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function isFallThrough() defined in com::ibm::wala::shrikeBT::Instruction
   function findUniqueStackDef(int,int) in line 72
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable editor defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable handlers defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function checkConsistentStackSizes() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function buildBackEdges() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function buildStackDefMap() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable uniqueStackDefLocations defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function followStackDef(int,int,int,int) in line 350
      35 lines of code
      4 parameters
      9 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
      uses variable handlers defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function followStackUse(int,int,int,int) in line 386
      28 lines of code
      4 parameters
      7 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function forwardDups() in line 206
      38 lines of code
      0 parameters
      9 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable uniqueStackDefLocations defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getInstructionsOnPath(int,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::LoadInstruction
      uses function instructionKillsVar(Instruction,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable editor defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function insertBefore(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function emit(Instruction) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
   function getInstructionsOnPath(int,int) in line 415
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getReachableInstructions(BitSet,int,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getReachingInstructions(BitSet,int,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function getReachableInstructions(BitSet,int,int) in line 424
      19 lines of code
      3 parameters
      5 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getBranchTargets() defined in com::ibm::wala::shrikeBT::Instruction
   function getReachingInstructions(BitSet,int,int) in line 444
      19 lines of code
      3 parameters
      5 conditional paths
      uses variable backEdges defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
   function instructionKillsVar(Instruction,int) in line 197
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function getType() defined in com::ibm::wala::shrikeBT::StoreInstruction
   function optimize() in line 82
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable editor defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getInstructions() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses variable handlers defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getHandlers() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function checkConsistentStackSizes() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function buildBackEdges() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function beginPass() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function buildStackDefMap() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function pushBackLocalStores() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function forwardDups() defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function applyPatches() defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function endPass() defined in com::ibm::wala::shrikeBT::MethodEditor
   function pushBackLocalStores() in line 245
      52 lines of code
      0 parameters
      7 conditional paths
      uses variable instructions defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable uniqueStackDefLocations defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable uniqueStackUseLocations defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getInstructionsOnPath(int,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getVarIndex() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses function instructionKillsVar(Instruction,int) defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function getType() defined in com::ibm::wala::shrikeBT::StoreInstruction
      uses variable data defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses variable editor defined in com::ibm::wala::shrikeBT::tools::MethodOptimizer
      uses function insertAfter(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function emit(Instruction) defined in com::ibm::wala::shrikeBT::MethodEditor::Output
      uses function insertBefore(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
      uses function replaceWith(int,Patch) defined in com::ibm::wala::shrikeBT::MethodEditor
   function MethodOptimizer(MethodData,MethodEditor) in line 55
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function MethodOptimizer(MethodData) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable backEdges in line 46
   variable data in line 29
   variable editor in line 32
   variable handlers in line 31
   variable instructions in line 30
   variable stackSizes in line 45
   variable uniqueStackDefLocations in line 38
   variable uniqueStackUseLocations in line 44
module com::ibm::wala::shrikeBT::tools::MethodOptimizer::UnoptimizableCodeException
   inherits from Exception
   function UnoptimizableCodeException(String) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/tools/OfflineInstrumenterBase.java
module com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   abstract class
   function addInputClass(File) in line 224
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function addInputDirectory(File) in line 232
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function addInputClass(File) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function addInputElement(String) in line 253
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses function addInputJarEntry(File,String) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function addInputDirectory(File) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function addInputClass(File) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function addInputJar(File) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function addInputJar(File) in line 202
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable inputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function addInputJarEntry(File,String) in line 217
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable inputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function addOutputJarEntry(ZipEntry) in line 479
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function putNextEntry(ZipEntry) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable outputJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function beginTraversal() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inputIndex defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function makeClassFromStream(BufferedInputStream) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function getClassName(Object) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function writeClassTo(Object,Object,OutputStream) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function close() in line 560
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable passUnmodifiedClasses defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function writeUnmodifiedClasses() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable outputJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable cachedJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function copyStream(InputStream,OutputStream) in line 458
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function makeBuf() defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function releaseBuf(byte[]) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function endOutputJarEntry() in line 487
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function getClassName(Object) in line 344
      1 lines of code
      1 parameters
      1 conditional paths
   function getLastClassResourceName() in line 382
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable inputIndex defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable inputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function getNumInputClasses() in line 319
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function getOutputFile() in line 394
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputFile defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function internalNextClass() in line 348
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable inputIndex defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable inputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable ignoringInputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function makeClassFromStream(BufferedInputStream) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function getClassName(Object) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function internalOutputModifiedClass(Object,Object) in line 398
      14 lines of code
      2 parameters
      2 conditional paths
      uses function toEntryName(String) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function getClassName(Object) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable entryNames defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function putNextEntry(ZipEntry) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable outputJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function writeClassTo(Object,Object,OutputStream) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function makeBuf() in line 444
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable cachedBuf defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function makeClassFromStream(BufferedInputStream) in line 342
      1 lines of code
      1 parameters
      1 conditional paths
   function openCachedJar(File) in line 148
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable cachedJarFile defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable cachedJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function parseStandardArgs(String[]) in line 289
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses function setOutputJar(File) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function addInputElement(String) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function putNextEntry(ZipEntry) in line 574
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable outputJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable entryNames defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable manifestBuilder defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function addEntry(ZipEntry) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase::ManifestBuilder
   function readInputClasses(InputStream) in line 327
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function addInputElement(String) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function releaseBuf(byte[]) in line 454
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cachedBuf defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function setIgnore(boolean) in line 434
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable inputIndex defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable ignoringInputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function setJARComment(String) in line 416
      protection public
      4 lines of code
      1 parameters
      3 conditional paths
      uses variable outputJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable outputFile defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function setManifestBuilder(ManifestBuilder) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable manifestBuilder defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function setOutputJar(File) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable outputFile defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function setPassUnmodifiedClasses(boolean) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable passUnmodifiedClasses defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function toEntryName(String) in line 371
      3 lines of code
      1 parameters
      1 conditional paths
   function writeClassTo(Object,Object,OutputStream) in line 346
      1 lines of code
      3 parameters
      1 conditional paths
   function writeUnmodifiedClasses() in line 497
      protection public
      59 lines of code
      0 parameters
      10 conditional paths
      uses variable passUnmodifiedClasses defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable inputs defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function putNextEntry(ZipEntry) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function copyStream(InputStream,OutputStream) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable outputJar defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function makeClassFromStream(BufferedInputStream) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function toEntryName(String) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function getClassName(Object) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses variable entryNames defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
      uses function writeClassTo(Object,Object,OutputStream) defined in com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase
   function OfflineInstrumenterBase() in line 181
      2 lines of code
      0 parameters
      1 conditional paths
   variable cachedBuf in line 442
   variable cachedJar in line 47
   variable cachedJarFile in line 48
   variable entryNames in line 39
   variable ignoringInputs in line 41
   variable inputIndex in line 38
   variable inputs in line 40
   variable manifestBuilder in line 50
   variable outputFile in line 42
   variable outputJar in line 45
   variable passUnmodifiedClasses in line 43
module com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase::ManifestBuilder
   function addEntry(ZipEntry) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase::Input
   abstract class
   function getClassName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isClass() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function open() in line 92
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setClassName(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable className in line 73
module com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase::JarInput
   inherits from com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase::Input
   function getEntry() in line 135
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isClass() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function open() in line 119
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function JarInput(File,String) in line 114
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable file in line 108
   variable name in line 109
module com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase::ClassInput
   inherits from com::ibm::wala::shrikeBT::tools::OfflineInstrumenterBase::Input
   function open() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassInput(File) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable file in line 166
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeBT/UnaryOpInstruction.java
module com::ibm::wala::shrikeBT::UnaryOpInstruction
   inherits from com::ibm::wala::shrikeBT::Instruction
   function equals(Object) in line 51
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function UnaryOpInstruction(short) defined in com::ibm::wala::shrikeBT::UnaryOpInstruction
   function getOperator() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses enumvalue NEG defined in com::ibm::wala::shrikeBT::UnaryOpInstruction::Operator
   function getPoppedCount() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPushedType(String[]) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::UnaryOpInstruction
   function getPushedWordSize() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::UnaryOpInstruction
   function getType() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable indexedTypes defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ineg defined in com::ibm::wala::shrikeBT::Constants
   function hashCode() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPEI() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function make(String,Operator) in line 43
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TYPE_double_index defined in com::ibm::wala::shrikeBT::Constants
      uses variable preallocated defined in com::ibm::wala::shrikeBT::UnaryOpInstruction
   function preallocate() in line 35
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable OP_dneg defined in com::ibm::wala::shrikeBT::Constants
      uses variable OP_ineg defined in com::ibm::wala::shrikeBT::Constants
      uses function UnaryOpInstruction(short) defined in com::ibm::wala::shrikeBT::UnaryOpInstruction
   function toString() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getType() defined in com::ibm::wala::shrikeBT::UnaryOpInstruction
      uses function getOperator() defined in com::ibm::wala::shrikeBT::UnaryOpInstruction
   function visit(Visitor) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitUnaryOp(UnaryOpInstruction) defined in com::ibm::wala::shrikeBT::Instruction::Visitor
   function UnaryOpInstruction(short) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
   variable preallocated in line 33
module com::ibm::wala::shrikeBT::UnaryOpInstruction::IOperator
module com::ibm::wala::shrikeBT::UnaryOpInstruction::Operator
   inherits from com::ibm::wala::shrikeBT::UnaryOpInstruction::IOperator
   function toString() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ClassConstants.java
module com::ibm::wala::shrikeCT::ClassConstants
   variable ACC_ABSTRACT in line 43
      protection public
   variable ACC_FINAL in line 36
      protection public
   variable ACC_INTERFACE in line 42
      protection public
   variable ACC_NATIVE in line 41
      protection public
   variable ACC_PRIVATE in line 33
      protection public
   variable ACC_PROTECTED in line 34
      protection public
   variable ACC_PUBLIC in line 32
      protection public
   variable ACC_STATIC in line 35
      protection public
   variable ACC_STRICT in line 44
      protection public
   variable ACC_SUPER in line 38
      protection public
   variable ACC_SYNCHRONIZED in line 37
      protection public
   variable ACC_TRANSIENT in line 40
      protection public
   variable ACC_VOLATILE in line 39
      protection public
   variable CONSTANT_Class in line 25
      protection public
   variable CONSTANT_Double in line 24
      protection public
   variable CONSTANT_FieldRef in line 27
      protection public
   variable CONSTANT_Float in line 22
      protection public
   variable CONSTANT_Integer in line 21
      protection public
   variable CONSTANT_InterfaceMethodRef in line 29
      protection public
   variable CONSTANT_Long in line 23
      protection public
   variable CONSTANT_MethodRef in line 28
      protection public
   variable CONSTANT_NameAndType in line 30
      protection public
   variable CONSTANT_String in line 26
      protection public
   variable CONSTANT_Utf8 in line 20
      protection public
   variable MAGIC in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ClassReader.java
module com::ibm::wala::shrikeCT::ClassReader
   inherits from com::ibm::wala::shrikeCT::ClassConstants
   function checkLength(int,int) in line 46
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
   function getAccessFlags() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getByte(int) in line 329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
   function getBytes() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
   function getCP() in line 301
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpParser defined in com::ibm::wala::shrikeCT::ClassReader
   function getFieldAccessFlags(int) in line 349
      protection public
      4 lines of code
      1 parameters
      3 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable cpParser defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getCPUtf8(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getFieldCount() in line 336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getFieldName(int) in line 370
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getFieldNameIndex(int) in line 388
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getFieldRawOffset(int) in line 567
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getFieldRawSize(int) in line 575
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getFieldType(int) in line 379
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getFieldTypeIndex(int) in line 397
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getInt(int) in line 308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
   function getInterfaceCount() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interfaceCount defined in com::ibm::wala::shrikeCT::ClassReader
   function getInterfaceName(int) in line 270
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function verifyInterfaceIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getInterfaceNameIndex(int) in line 250
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyInterfaceIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getInterfaceNameIndices() in line 259
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable interfaceCount defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getInterfaceNames() in line 283
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable interfaceCount defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getMagic() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function getMajorVersion() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodAccessFlags(int) in line 612
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodCount() in line 583
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodName(int) in line 620
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodNameIndex(int) in line 637
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodRawOffset(int) in line 596
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodRawSize(int) in line 604
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodType(int) in line 629
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMethodTypeIndex(int) in line 645
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function getMinorVersion() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function getName() in line 208
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getNameIndex() in line 188
      protection public
      3 lines of code
      0 parameters
      3 conditional paths
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable cpParser defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getCPClass(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getShort(int) in line 322
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
   function getSuperName() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getSuperNameIndex() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function getUShort(int) in line 315
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
   function initClassAttributeIterator(AttrIterator) in line 661
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
   function initFieldAttributeIterator(int,AttrIterator) in line 559
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function verifyFieldIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function initMethodAttributeIterator(int,AttrIterator) in line 653
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function verifyMethodIndex(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function parse() in line 53
      56 lines of code
      0 parameters
      7 conditional paths
      uses function checkLength(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable MAGIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable cpParser defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getRawSize() defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable classInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable interfaceCount defined in com::ibm::wala::shrikeCT::ClassReader
      uses function parseFields(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function parseMethods(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attrInfoOffset defined in com::ibm::wala::shrikeCT::ClassReader
      uses function skipAttributes(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
   function parseFields(int,int) in line 128
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
      uses function checkLength(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function skipAttributes(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function parseMethods(int,int) in line 139
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
      uses function checkLength(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function skipAttributes(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function skipAttributes(int,int) in line 110
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable interfaceCount defined in com::ibm::wala::shrikeCT::ClassReader
      uses function checkLength(int,int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function verifyFieldIndex(int) in line 340
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable fieldOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function verifyInterfaceIndex(int) in line 240
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable interfaceCount defined in com::ibm::wala::shrikeCT::ClassReader
   function verifyMethodIndex(int) in line 587
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable methodOffsets defined in com::ibm::wala::shrikeCT::ClassReader
   function ClassReader(byte[]) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ClassReader
      uses function parse() defined in com::ibm::wala::shrikeCT::ClassReader
   variable attrInfoOffset in line 25
   variable bytes in line 20
   variable classInfoOffset in line 24
   variable cpParser in line 23
   variable fieldOffsets in line 22
   variable interfaceCount in line 26
   variable methodOffsets in line 21
module com::ibm::wala::shrikeCT::ClassReader::AttrIterator
   function advance() in line 548
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable remaining defined in com::ibm::wala::shrikeCT::ClassReader::AttrIterator
      uses function setSize() defined in com::ibm::wala::shrikeCT::ClassReader::AttrIterator
   function getClassReader() in line 453
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getDataOffset() in line 486
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getDataSize() in line 497
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 525
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function getNameIndex() in line 515
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function getRawOffset() in line 464
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getRawSize() in line 475
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getRemainingAttributesCount() in line 506
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable remaining defined in com::ibm::wala::shrikeCT::ClassReader::AttrIterator
   function isValid() in line 538
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable remaining defined in com::ibm::wala::shrikeCT::ClassReader::AttrIterator
   function setSize() in line 434
      5 lines of code
      0 parameters
      3 conditional paths
      uses variable remaining defined in com::ibm::wala::shrikeCT::ClassReader::AttrIterator
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function AttrIterator() in line 431
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable remaining in line 425
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ClassReaderAttribute.java
module com::ibm::wala::shrikeCT::ClassReaderAttribute
   abstract class
   function checkSize(int,int) in line 71
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable length defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function checkSizeEquals(int,int) in line 85
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable length defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getClassReader() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getRawOffset() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getRawSize() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable length defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function ClassReaderAttribute(ClassReader.AttrIterator,String) in line 30
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   variable attr in line 19
   variable cr in line 18
   variable length in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ClassWriter.java
module com::ibm::wala::shrikeCT::ClassWriter
   inherits from com::ibm::wala::shrikeCT::ClassConstants
   function addClassAttribute(Element) in line 672
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classAttributes defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPClass(String) in line 329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPDouble(double) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPEntry(Object,int) in line 247
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable cachedCPEntries defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable forceAddCPEntries defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable nextCPIndex defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable newCPEntries defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPFieldRef(String,String,String) in line 344
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_FieldRef defined in com::ibm::wala::shrikeCT::ClassConstants
   function addCPFloat(float) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPInt(int) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPInterfaceMethodRef(String,String,String) in line 374
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_InterfaceMethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
   function addCPLong(long) in line 300
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPMethodRef(String,String,String) in line 359
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_MethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
   function addCPNAT(String,String) in line 387
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPString(String) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addCPUtf8(String) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCPEntry(Object,int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addField(int,String,String,Element[]) in line 565
      protection public
      3 lines of code
      4 parameters
      9 conditional paths
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getSize() defined in com::ibm::wala::shrikeCT::ClassWriter::Element
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function setUShort(byte[],int,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function copyInto(byte[],int) defined in com::ibm::wala::shrikeCT::ClassWriter::Element
   function addField(int,int,int,Element[]) in line 659
      protection public
      6 lines of code
      4 parameters
      2 conditional paths
      uses variable fields defined in com::ibm::wala::shrikeCT::ClassWriter
   function addMethod(int,String,String,Element[]) in line 549
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   function addMethod(int,int,int,Element[]) in line 636
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses variable methods defined in com::ibm::wala::shrikeCT::ClassWriter
   function addRawField(Element) in line 533
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fields defined in com::ibm::wala::shrikeCT::ClassWriter
   function addRawMethod(Element) in line 525
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methods defined in com::ibm::wala::shrikeCT::ClassWriter
   function emitConstantPool() in line 703
      107 lines of code
      0 parameters
      21 conditional paths
      uses variable rawCP defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getRawSize() defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function reserveBuf(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function getRawBytes() defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getRawOffset() defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable noChars defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable newCPEntries defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function setUShort(byte[],int,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_MethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_FieldRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_InterfaceMethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function addCPClass(String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function addCPNAT(String,String) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_Utf8 defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Integer defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function setInt(byte[],int,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function setLong(byte[],int,long) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_Float defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function setFloat(byte[],int,float) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function setDouble(byte[],int,double) defined in com::ibm::wala::shrikeCT::ClassWriter
   function emitElement(Element) in line 692
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getSize() defined in com::ibm::wala::shrikeCT::ClassWriter::Element
      uses function reserveBuf(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function copyInto(byte[],int) defined in com::ibm::wala::shrikeCT::ClassWriter::Element
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function makeBytes() in line 815
      protection public
      66 lines of code
      0 parameters
      9 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable thisClass defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function reserveBuf(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function setInt(byte[],int,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable MAGIC defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function setUShort(byte[],int,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable minorVersion defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable majorVersion defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function emitConstantPool() defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable nextCPIndex defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable cachedCPEntries defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable accessFlags defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable superClass defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable superInterfaces defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable fields defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function emitElement(Element) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable methods defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable classAttributes defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable bufLen defined in com::ibm::wala::shrikeCT::ClassWriter
   function reserveBuf(int) in line 679
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable bufLen defined in com::ibm::wala::shrikeCT::ClassWriter
   function setAccessFlags(int) in line 394
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable accessFlags defined in com::ibm::wala::shrikeCT::ClassWriter
   function setDouble(byte[],int,double) in line 919
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function setLong(byte[],int,long) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function setFloat(byte[],int,float) in line 912
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function setInt(byte[],int,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function setForceAddCPEntries(boolean) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable forceAddCPEntries defined in com::ibm::wala::shrikeCT::ClassWriter
   function setInt(byte[],int,int) in line 893
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function setInterfaceNameIndices(int[]) in line 424
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable superInterfaces defined in com::ibm::wala::shrikeCT::ClassWriter
   function setInterfaceNames(String[]) in line 457
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function setInterfaceNameIndices(int[]) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function addCPClass(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setLong(byte[],int,long) in line 904
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function setInt(byte[],int,int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function setMajorVersion(int) in line 52
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable majorVersion defined in com::ibm::wala::shrikeCT::ClassWriter
   function setMinorVersion(int) in line 63
      protection public
      6 lines of code
      1 parameters
      4 conditional paths
      uses variable minorVersion defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
   function setName(String) in line 442
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setNameIndex(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function addCPClass(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setNameIndex(int) in line 404
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable thisClass defined in com::ibm::wala::shrikeCT::ClassWriter
   function setRawCP(ConstantPoolParser,boolean) in line 189
      protection public
      47 lines of code
      2 parameters
      16 conditional paths
      uses variable rawCP defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable nextCPIndex defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable cachedCPEntries defined in com::ibm::wala::shrikeCT::ClassWriter
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_FieldRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_InterfaceMethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_MethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Integer defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Float defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Utf8 defined in com::ibm::wala::shrikeCT::ClassConstants
   function setSuperName(String) in line 450
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setSuperNameIndex(int) defined in com::ibm::wala::shrikeCT::ClassWriter
      uses function addCPClass(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setSuperNameIndex(int) in line 414
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable superClass defined in com::ibm::wala::shrikeCT::ClassWriter
   function setUByte(byte[],int,int) in line 885
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function setUShort(byte[],int,int) in line 927
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function ClassWriter() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable accessFlags in line 33
   variable buf in line 37
   variable bufLen in line 38
   variable cachedCPEntries in line 24
   variable classAttributes in line 29
   variable fields in line 27
   variable forceAddCPEntries in line 34
   variable majorVersion in line 21
   variable methods in line 28
   variable minorVersion in line 22
   variable newCPEntries in line 25
   variable nextCPIndex in line 26
   variable noChars in line 701
   variable rawCP in line 23
   variable superClass in line 31
   variable superInterfaces in line 32
   variable thisClass in line 30
module com::ibm::wala::shrikeCT::ClassWriter::CWItem
   abstract class
module com::ibm::wala::shrikeCT::ClassWriter::CWString
   inherits from com::ibm::wala::shrikeCT::ClassWriter::CWItem
   function equals(Object) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable s in line 75
module com::ibm::wala::shrikeCT::ClassWriter::CWClass
   inherits from com::ibm::wala::shrikeCT::ClassWriter::CWItem
   function equals(Object) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable c in line 95
module com::ibm::wala::shrikeCT::ClassWriter::CWRef
   inherits from com::ibm::wala::shrikeCT::ClassWriter::CWItem
   function equals(Object) in line 127
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable c in line 115
   variable n in line 116
   variable t in line 117
   variable type in line 118
module com::ibm::wala::shrikeCT::ClassWriter::CWNAT
   inherits from com::ibm::wala::shrikeCT::ClassWriter::CWItem
   function equals(Object) in line 154
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable n in line 146
   variable t in line 147
module com::ibm::wala::shrikeCT::ClassWriter::Element
   abstract class
   function copyInto(byte[],int) in line 490
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getSize() in line 483
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function Element() in line 477
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
module com::ibm::wala::shrikeCT::ClassWriter::RawElement
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 515
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   function getSize() in line 511
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function RawElement(byte[],int,int) in line 505
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable buf defined in com::ibm::wala::shrikeCT::ClassWriter
   variable buf in line 498
   variable len in line 500
   variable offset in line 499
module com::ibm::wala::shrikeCT::ClassWriter::MemberElement
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 605
      protection public
      16 lines of code
      2 parameters
      1 conditional paths
   function getSize() in line 595
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function MemberElement(int,int,int,Element[]) in line 575
      protection public
      19 lines of code
      4 parameters
      1 conditional paths
   variable access in line 570
   variable attributes in line 573
   variable name in line 571
   variable type in line 572
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/CodeReader.java
module com::ibm::wala::shrikeCT::CodeReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getBytecode() in line 69
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable codeLen defined in com::ibm::wala::shrikeCT::CodeReader
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getBytes() defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getBytecodeLength() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeLen defined in com::ibm::wala::shrikeCT::CodeReader
   function getMaxLocals() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getMaxStack() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getRawHandlers() in line 79
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable exnTableLen defined in com::ibm::wala::shrikeCT::CodeReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable codeLen defined in com::ibm::wala::shrikeCT::CodeReader
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function initAttributeIterator(ClassReader.AttrIterator) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable codeLen defined in com::ibm::wala::shrikeCT::CodeReader
      uses variable exnTableLen defined in com::ibm::wala::shrikeCT::CodeReader
   function CodeReader(ClassReader.AttrIterator) in line 20
      protection public
      24 lines of code
      1 parameters
      2 conditional paths
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function checkSize(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable codeLen defined in com::ibm::wala::shrikeCT::CodeReader
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable exnTableLen defined in com::ibm::wala::shrikeCT::CodeReader
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   variable codeLen in line 17
   variable exnTableLen in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/CodeWriter.java
module com::ibm::wala::shrikeCT::CodeWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 63
      protection public
      30 lines of code
      2 parameters
      5 conditional paths
      uses function verify() defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable attrID defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable maxStack defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable maxLocals defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable code defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable exnHandlers defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable attributes defined in com::ibm::wala::shrikeCT::CodeWriter
   function getCodeLength() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable code defined in com::ibm::wala::shrikeCT::CodeWriter
   function getSize() in line 51
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function verify() defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable code defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable exnHandlers defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable attributes defined in com::ibm::wala::shrikeCT::CodeWriter
   function setAttributes(ClassWriter.Element[]) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attributes defined in com::ibm::wala::shrikeCT::CodeWriter
   function setCode(byte[]) in line 97
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable code defined in com::ibm::wala::shrikeCT::CodeWriter
   function setMaxLocals(int) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxLocals defined in com::ibm::wala::shrikeCT::CodeWriter
   function setMaxStack(int) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxStack defined in com::ibm::wala::shrikeCT::CodeWriter
   function setRawHandlers(int[]) in line 115
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses variable exnHandlers defined in com::ibm::wala::shrikeCT::CodeWriter
   function verify() in line 34
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable maxStack defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable maxLocals defined in com::ibm::wala::shrikeCT::CodeWriter
      uses variable code defined in com::ibm::wala::shrikeCT::CodeWriter
   function CodeWriter(ClassWriter) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::CodeWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   variable attributes in line 25
   variable attrID in line 20
   variable code in line 23
   variable exnHandlers in line 24
   variable maxLocals in line 21
   variable maxStack in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ConstantPoolParser.java
module com::ibm::wala::shrikeCT::ConstantPoolParser
   inherits from com::ibm::wala::shrikeCT::ClassConstants
   function checkLength(int,int) in line 63
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getByte(int) in line 393
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPClass(int) in line 90
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getCPUtf8(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPDouble(int) in line 284
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getDouble(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPFloat(int) in line 256
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Float defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getFloat(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPInt(int) in line 242
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Integer defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPLong(int) in line 270
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getLong(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPNATName(int) in line 205
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getCPUtf8(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPNATType(int) in line 224
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getCPUtf8(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPRefClass(int) in line 148
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function isRef(byte) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPClass(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPRefName(int) in line 167
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function isRef(byte) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPNATName(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPRefType(int) in line 187
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function isRef(byte) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getCPNATType(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPString(int) in line 113
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getCPUtf8(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getCPUtf8(int) in line 303
      protection public
      52 lines of code
      1 parameters
      13 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_Utf8 defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function invalidUtf8(int,int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getDouble(int) in line 417
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLong(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getFloat(int) in line 413
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getInt(int) in line 405
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getItemCount() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getItemType(int) in line 74
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getLong(int) in line 409
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInt(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getRawBytes() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getRawOffset() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getRawSize() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getUShort(int) in line 397
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function invalidUtf8(int,int) in line 295
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function isRef(byte) in line 133
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable CONSTANT_MethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_FieldRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_InterfaceMethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
   function parseConstantPool(int,int) in line 356
      36 lines of code
      2 parameters
      13 conditional paths
      uses variable cpOffsets defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable cpItems defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function getByte(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses variable CONSTANT_String defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Class defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_NameAndType defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_MethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_FieldRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_InterfaceMethodRef defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Integer defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Float defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Long defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Double defined in com::ibm::wala::shrikeCT::ClassConstants
      uses variable CONSTANT_Utf8 defined in com::ibm::wala::shrikeCT::ClassConstants
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function checkLength(int,int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function ConstantPoolParser(byte[],int,int) in line 30
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable bytes defined in com::ibm::wala::shrikeCT::ConstantPoolParser
      uses function parseConstantPool(int,int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   variable bytes in line 18
   variable cpItems in line 20
   variable cpOffsets in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ConstantValueReader.java
module com::ibm::wala::shrikeCT::ConstantValueReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getValueCPIndex() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function ConstantValueReader(ClassReader.AttrIterator) in line 20
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function checkSizeEquals(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ConstantValueWriter.java
module com::ibm::wala::shrikeCT::ConstantValueWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 83
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function verify() defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses variable attrID defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses variable index defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function getSize() in line 78
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function verify() defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function setDouble(double) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function addCPDouble(double) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setFloat(float) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function addCPFloat(float) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setInt(int) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function addCPInt(int) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setLong(long) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function addCPLong(long) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setString(String) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function addCPString(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   function setValueCPIndex(int) in line 129
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable index defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function verify() in line 72
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable index defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function ConstantValueWriter(ClassWriter) in line 27
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses variable attrID defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   function ConstantValueWriter(ClassWriter,long) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function setLong(long) defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function ConstantValueWriter(ClassWriter,int) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function setInt(int) defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function ConstantValueWriter(ClassWriter,float) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function setFloat(float) defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function ConstantValueWriter(ClassWriter,double) in line 59
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function setDouble(double) defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   function ConstantValueWriter(ClassWriter,String) in line 67
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable w defined in com::ibm::wala::shrikeCT::ConstantValueWriter
      uses function setString(String) defined in com::ibm::wala::shrikeCT::ConstantValueWriter
   variable attrID in line 20
   variable index in line 21
   variable w in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ExceptionsReader.java
module com::ibm::wala::shrikeCT::ExceptionsReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getClasses() in line 43
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getCP() defined in com::ibm::wala::shrikeCT::ClassReader
      uses function getCPClass(int) defined in com::ibm::wala::shrikeCT::ConstantPoolParser
   function getRawTable() in line 31
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function ExceptionsReader(ClassReader.AttrIterator) in line 20
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function checkSize(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function checkSizeEquals(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/ExceptionsWriter.java
module com::ibm::wala::shrikeCT::ExceptionsWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 31
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::ExceptionsWriter
      uses function getSize() defined in com::ibm::wala::shrikeCT::ExceptionsWriter
      uses variable table defined in com::ibm::wala::shrikeCT::ExceptionsWriter
   function getSize() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable table defined in com::ibm::wala::shrikeCT::ExceptionsWriter
   function setRawTable(int[]) in line 51
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function ExceptionsWriter(ClassWriter) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::ExceptionsWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   variable attrID in line 17
   variable table in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/InnerClassesReader.java
module com::ibm::wala::shrikeCT::InnerClassesReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getRawTable() in line 31
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function InnerClassesReader(ClassReader.AttrIterator) in line 20
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function checkSize(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses function checkSizeEquals(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/InnerClassesWriter.java
module com::ibm::wala::shrikeCT::InnerClassesWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 31
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::InnerClassesWriter
      uses function getSize() defined in com::ibm::wala::shrikeCT::InnerClassesWriter
      uses variable table defined in com::ibm::wala::shrikeCT::InnerClassesWriter
   function getSize() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable table defined in com::ibm::wala::shrikeCT::InnerClassesWriter
   function setRawTable(int[]) in line 48
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
   function InnerClassesWriter(ClassWriter) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::InnerClassesWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   variable attrID in line 17
   variable table in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/InvalidClassFileException.java
module com::ibm::wala::shrikeCT::InvalidClassFileException
   inherits from Exception
   function getOffset() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable offset defined in com::ibm::wala::shrikeCT::InvalidClassFileException
   function InvalidClassFileException(int,String) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable offset defined in com::ibm::wala::shrikeCT::InvalidClassFileException
   variable offset in line 20
   variable serialVersionUID in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/LineNumberTableReader.java
module com::ibm::wala::shrikeCT::LineNumberTableReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getRawTable() in line 39
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function makeBytecodeToSourceMap(CodeReader) in line 59
      protection public
      45 lines of code
      1 parameters
      9 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function LineNumberTableReader(ClassReader.AttrIterator) defined in com::ibm::wala::shrikeCT::LineNumberTableReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
   function LineNumberTableReader(ClassReader.AttrIterator) in line 25
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function checkSize(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/LineNumberTableWriter.java
module com::ibm::wala::shrikeCT::LineNumberTableWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 61
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
      uses variable rawTable defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
   function getSize() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rawTable defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
   function makeRawTable(int[]) in line 81
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable rawTable defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
   function setRawTable(int[]) in line 36
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses variable emptyTable defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
      uses variable rawTable defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
   function LineNumberTableWriter(ClassWriter) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::LineNumberTableWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   variable attrID in line 17
   variable emptyTable in line 20
   variable rawTable in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/LocalVariableTableReader.java
module com::ibm::wala::shrikeCT::LocalVariableTableReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getRawTable() in line 35
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function makeVarMap(CodeReader) in line 66
      protection public
      54 lines of code
      1 parameters
      11 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function LocalVariableTableReader(ClassReader.AttrIterator) defined in com::ibm::wala::shrikeCT::LocalVariableTableReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable length defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function makeVarVector(int[],int,int,int) defined in com::ibm::wala::shrikeCT::LocalVariableTableReader
   function makeVarVector(int[],int,int,int) in line 46
      12 lines of code
      4 parameters
      2 conditional paths
   function LocalVariableTableReader(ClassReader.AttrIterator) in line 21
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function checkSize(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/LocalVariableTableWriter.java
module com::ibm::wala::shrikeCT::LocalVariableTableWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 64
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
      uses variable rawTable defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
   function getSize() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rawTable defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
   function makeRawTable(int) in line 87
      protection public
      58 lines of code
      1 parameters
      12 conditional paths
   function setRawTable(int[]) in line 39
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses variable emptyTable defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
      uses variable rawTable defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
   function LocalVariableTableWriter(ClassWriter) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::LocalVariableTableWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   variable attrID in line 19
   variable emptyTable in line 22
   variable rawTable in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/SourceDebugExtensionReader.java
module com::ibm::wala::shrikeCT::SourceDebugExtensionReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function SourceDebugExtensionReader(ClassReader.AttrIterator) in line 14
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function checkSize(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/SourceDebugExtensionWriter.java
module com::ibm::wala::shrikeCT::SourceDebugExtensionWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 29
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::SourceDebugExtensionWriter
      uses function getSize() defined in com::ibm::wala::shrikeCT::SourceDebugExtensionWriter
      uses variable table defined in com::ibm::wala::shrikeCT::SourceDebugExtensionWriter
   function getSize() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable table defined in com::ibm::wala::shrikeCT::SourceDebugExtensionWriter
   function setDebugInfo(String) in line 51
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function setRawTable(byte[]) defined in com::ibm::wala::shrikeCT::SourceDebugExtensionWriter
   function setRawTable(byte[]) in line 42
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function SourceDebugExtensionWriter(ClassWriter) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::SourceDebugExtensionWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   variable attrID in line 18
   variable table in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/SourceFileReader.java
module com::ibm::wala::shrikeCT::SourceFileReader
   inherits from com::ibm::wala::shrikeCT::ClassReaderAttribute
   function getSourceFileCPIndex() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses function getUShort(int) defined in com::ibm::wala::shrikeCT::ClassReader
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
   function SourceFileReader(ClassReader.AttrIterator) in line 20
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function checkSizeEquals(int,int) defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
      uses variable attr defined in com::ibm::wala::shrikeCT::ClassReaderAttribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/wala/wala-code-4607-tags-R_1.0/wala-code-4607-tags-R_1.0/com.ibm.wala.shrike/src/com/ibm/wala/shrikeCT/SourceFileWriter.java
module com::ibm::wala::shrikeCT::SourceFileWriter
   inherits from com::ibm::wala::shrikeCT::ClassWriter::Element
   function copyInto(byte[],int) in line 40
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function verify() defined in com::ibm::wala::shrikeCT::SourceFileWriter
      uses variable attrID defined in com::ibm::wala::shrikeCT::SourceFileWriter
      uses variable index defined in com::ibm::wala::shrikeCT::SourceFileWriter
   function getSize() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function verify() defined in com::ibm::wala::shrikeCT::SourceFileWriter
   function setSourceFileCPIndex(int) in line 51
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable index defined in com::ibm::wala::shrikeCT::SourceFileWriter
   function verify() in line 29
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable index defined in com::ibm::wala::shrikeCT::SourceFileWriter
   function SourceFileWriter(ClassWriter) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attrID defined in com::ibm::wala::shrikeCT::SourceFileWriter
      uses function addCPUtf8(String) defined in com::ibm::wala::shrikeCT::ClassWriter
   variable attrID in line 19
   variable index in line 20
