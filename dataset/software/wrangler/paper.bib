@INPROCEEDINGS{5601817,
  author={H. Li and S. Thompson},
  booktitle={2010 10th IEEE Working Conference on Source Code Analysis and Manipulation},
  title={Refactoring Support for Modularity Maintenance in Erlang},
  year={2010},
  pages={157-166},
  abstract={Low coupling between modules and high cohesion inside each module are key features of good software architecture. Systems written in modern programming languages generally start with some reasonably well-designed module structure, however with continuous feature additions, modifications and bug fixes, software modularity gradually deteriorates. So, there is a need for incremental improvements to modularity to avoid the situation when the structure of the system becomes too complex to maintain. We demonstrate how Wrangler, a general-purpose refactoring tool for Erlang, can be used to maintain and improve the modularity of programs written in Erlang without dramatically changing the existing module structure. We identify a set of "modularity smells&quot, and show how they can be detected by Wrangler and removed by way of a variety of refactorings implemented in Wrangler. Validation of the approach and usefulness of the tool are demonstrated by case studies.},
  keywords={software architecture;software maintenance;Erlang;Wrangler;general purpose refactoring tool;modularity maintenance;software architecture;software modularity;support refactoring;Application programming interface;Computer languages;Maintenance engineering;Manganese;Programming;Software;Software architecture;Erlang;Modularity Maintenance;program analaysis;program transformation;refactoring},
  doi={10.1109/SCAM.2010.17},
  month={Sept},
}
