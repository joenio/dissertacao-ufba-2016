@inproceedings{7927969,
  author = {A. Arcuri and G. Fraser and R. Just},
  booktitle = {2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title = {Private API Access and Functional Mocking in Automated Unit Test Generation},
  year = {2017},
  pages = {126-137},
  keywords = {application program interfaces;object-oriented methods;program debugging;program testing;software maintenance;Defects4J benchmarks;EvoSuite unit test generation tool;Mockito framework;SF110 benchmarks;automated unit test generation;bug finding;code coverage;dependency objects;functional mocking;mock objects;object oriented code;object-oriented encapsulation;private API access;semantics-preserving refactoring;test generator;Generators;Java;Search problems;Software;Software testing;Tools;mocking;search-based software engineering;search-based testing;test case generation;testing classes},
  doi = {10.1109/ICST.2017.19},
  month = {March},
  review = {cita na fundamentação como exemplo de implementação sobre a geração de sequencias randomicas de chamada a métodos},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{7503725,
  author = {Lei Ma and Cheng Zhang and Bing Yu and Jianjun Zhao},
  booktitle = {2016 IEEE 24th International Conference on Program Comprehension (ICPC)},
  title = {Retrofitting automatic testing through library tests reusing},
  year = {2016},
  pages = {1-4},
  keywords = {automatic testing;program diagnostics;program testing;software libraries;software maintenance;software metrics;software reusability;automated testing techniques;automatic testing;code fragments;dependency metrics;in-depth analysis;library tests reusing;program analysis;random test generator GRT;retrofitting;test cases;Automatic testing;Generators;Libraries;Measurement;Receivers;Software;Automated test generation;program analysis;random testing;software reuse},
  doi = {10.1109/ICPC.2016.7503725},
  month = {May},
  review = {melhora o software para incorporar instruções extraidos de bibliotecas de testes, não deixa claro se envia as melhorias de volta ao software},
  really_refers_to_software = {yes},
  contribution_weight = {0.5},
}

@inproceedings{7476758,
  author = {C. Artho and L. Ma},
  booktitle = {2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
  title = {Classification of Randomly Generated Test Cases},
  year = {2016},
  volume = {2},
  pages = {29-32},
  keywords = {Java;program testing;@NonNull annotation;Java 8;false positive elimination;machine-readable documentation;randomly generated test case classification;test sequences;Documentation;Generators;Java;Libraries;Software;Testing;Tin},
  doi = {10.1109/SANER.2016.32},
  month = {March},
  review = {usa o GRT para coleta de dados do estudo, usa 1p projetos de software livre populares como objeto de estudo, cita 3 artigos sobre o software nas referencias},
  really_refers_to_software = {yes},
  contribution_weight = {0.25},
}

@article{7840029,
  author = {A. Panichella and F. Kifetew and P. Tonella},
  journal = {IEEE Transactions on Software Engineering},
  title = {Automated Test Case Generation as a Many-Objective Optimisation Problem with Dynamic Selection of the Targets},
  year = {2017},
  volume = {PP},
  number = {99},
  pages = {1-1},
  keywords = {Algorithm design and analysis;Genetic algorithms;Heuristic algorithms;Optimization;Software algorithms;Sorting;Testing;Automatic Test Case Generation;Evolutionary Testing;Many-Objective Optimisation},
  doi = {10.1109/TSE.2017.2663435},
  issn = {0098-5589},
  month = {},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@article{Chiang:2014:ESI:2692916.2555265,
  author = {Chiang, Wei-Fan and Gopalakrishnan, Ganesh and Rakamaric, Zvonimir and Solovyev, Alexey},
  title = {Efficient Search for Inputs Causing High Floating-point Errors},
  journal = {SIGPLAN Not.},
  issue_date = {August 2014},
  volume = {49},
  number = {8},
  month = {February},
  year = {2014},
  issn = {0362-1340},
  pages = {43--52},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/2692916.2555265},
  doi = {10.1145/2692916.2555265},
  acmid = {2555265},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {floating-point error estimation methods, guided search, sequential and parallel programming},
  review = {apresenta um novo software Binary Guided Random Testing (BGRT)},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
  weightless_contributions = {BGRT},
}

@inproceedings{7810699,
  author = {F. Palomba and D. Di Nucci and A. Panichella and R. Oliveto and A. De Lucia},
  booktitle = {2016 IEEE/ACM 9th International Workshop on Search-Based Software Testing (SBST)},
  title = {On the Diffusion of Test Smells in Automatically Generated Test Code: An Empirical Study},
  year = {2016},
  pages = {5-14},
  keywords = {program testing;software engineering;automatic unit test generation tools;automatically generated test code;software development process;software testing;Context;Correlation;Production;Software testing;Usability;Automatically Generated Test Classes;Empirical Studies;Mining Software Repositories;Software Quality;Test Smells},
  doi = {10.1109/SBST.2016.010},
  month = {May},
  review = {cita um artigo com o nome do software no título},
  really_refers_to_software = {no},
}

@inproceedings{7927983,
  author = {C. Artho and Q. Gros and G. Rousset and K. Banzai and L. Ma and T. Kitamura and M. Hagiya and Y. Tanabe and M. Yamamoto},
  booktitle = {2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title = {Model-Based API Testing of Apache ZooKeeper},
  year = {2017},
  pages = {288-298},
  keywords = {application program interfaces;distributed databases;formal verification;program testing;storage management;Apache ZooKeeper;Modbat;asynchronous callbacks;branch coverage;concurrent client sessions;core classes;coverage evaluation;distributed data storage;embedded model checker;feature coverage;model-based API testing;modeling effort;network communication;nondeterministic outcomes;synchronous callbacks;test cases;Complexity theory;Computational modeling;Computer science;Electronic mail;Servers;Testing;Tools;Apache ZooKeeper;Model-based testing;asynchronous systems;concurrency;networked systems;test oracle},
  doi = {10.1109/ICST.2017.33},
  month = {March},
  review = {cita o software GRT como uma ferramenta para geração automática de casos de teste baseado no Randoop, usa o GRT para coletar dados para o estudo, compara os dados com seus proprios dados coletados com implementação própria},
  really_refers_to_software = {yes},
  contribution_weight = {0.25},
}

@article{7763728,
  author = {H. Sato},
  journal = {IT Professional},
  title = {Practical Correctness in ICT Environments},
  year = {2016},
  volume = {18},
  number = {6},
  pages = {4-8},
  keywords = {Internet of Things;cybersecurity;information technology and communications;software engineering},
  doi = {10.1109/MITP.2016.107},
  issn = {1520-9202},
  month = {Nov},
  review = {cita como exemplo},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{7810701,
  author = {U. Rueda and R. Just and J. P. Galeotti and T. E. J. Vos},
  booktitle = {2016 IEEE/ACM 9th International Workshop on Search-Based Software Testing (SBST)},
  title = {Unit Testing Tool Competition--Round Four},
  year = {2016},
  pages = {19-28},
  keywords = {Java;program testing;Java unit testing tool competition;automated test generation tools;multiple time budgets;test effectiveness metrics;test generation tools;unit testing tool competition;Benchmark testing;Java;Measurement;Software reliability;Virtual machining;Defects4J;Java;automated unit testing;benchmark;mutation testing;tool competition},
  doi = {10.1109/SBST.2016.012},
  month = {May},
  review = {cita um artigo com o nome do software no título},
  really_refers_to_software = {no},
}

@inproceedings{7372010,
  author = {L. Ma and C. Artho and C. Zhang and H. Sato and J. Gmeiner and R. Ramler},
  booktitle = {2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title = {GRT: Program-Analysis-Guided Random Testing (T)},
  year = {2015},
  pages = {212-223},
  keywords = {object-oriented programming;program testing;GRT;automated test generation;continuous coverage analysis;fault detection capability;peer techniques;program analysis guided random testing;program types;static analysis;Computer bugs;Data mining;Frequency measurement;Impurities;Software;Testing;Tin;Automatic test generation;dynamic analysis;random testing;static analysis},
  doi = {10.1109/ASE.2015.49},
  month = {Nov},
  review = {é o mesmo artigo que publicou o software (o software foi selecionado em 2 artigos)},
  really_refers_to_software = {yes},
  contribution_weight = {1},
  step = {structured-review},
  conference = {ASE},
}

@inproceedings{Ma:2015:GST:2821339.2821355,
  author = {Ma, Lei and Artho, Cyrille and Zhang, Cheng and Sato, Hiroyuki and Hagiya, Masami and Tanabe, Yoshinori and Yamamoto, Mitsuharu},
  title = {GRT at the SBST 2015 Tool Competition},
  booktitle = {Proceedings of the Eighth International Workshop on Search-Based Software Testing},
  series = {SBST '15},
  year = {2015},
  location = {Florence, Italy},
  pages = {48--51},
  numpages = {4},
  url = {http://dl.acm.org/citation.cfm?id=2821339.2821355},
  acmid = {2821355},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
  keywords = {automatic test case generation, program analysis, random testing, software testing},
  review = {uma competição onde o software ficou em primeiro no ranking, apresenta o software},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
  weightless_contributions = {1º no SBST '15},
}

@inproceedings{7372077,
  author = {L. Ma and C. Artho and C. Zhang and H. Sato and J. Gmeiner and R. Ramler},
  booktitle = {2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title = {GRT: An Automated Test Generator Using Orchestrated Program Analysis},
  year = {2015},
  pages = {842-847},
  keywords = {program diagnostics;program testing;GRT;automated test generator;black-box approach;defect detection ability;low code coverage;orchestrated program analysis;program analysis components;random testing;software under test;static analysis;test coverage report;Data mining;Generators;Impurities;Libraries;Software systems;Testing;Automatic test generation;bug detection;dynamic analysis;random testing;static analysis},
  doi = {10.1109/ASE.2015.102},
  month = {Nov},
  review = {é o mesmo artigo que publicou o software},
  really_refers_to_software = {yes},
  contribution_weight = {1},
  step = {structured-review},
  conference = {ASE},
}

