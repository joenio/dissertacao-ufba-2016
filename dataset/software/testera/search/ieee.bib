@INPROCEEDINGS{4463748,
  author={S. Khurshid and M. Z. Malik and E. Uzuncaova},
  booktitle={Second International Symposium on Leveraging Applications of Formal Methods, Verification and Validation (isola 2006)},
  title={An Automated Approach for Writing Alloy Specifications Using Instances},
  year={2006},
  pages={449-457},
  keywords={computability;formal logic;formal specification;Alloy specification writing;SAT-based analyzer;aDeryaft;declarative language;first-order relational logic;graph properties;Application software;Automatic testing;Concrete;Data structures;Feedback;Logic programming;Logic testing;Software systems;Software testing;Writing},
  doi={10.1109/ISoLA.2006.44},
  month={Nov},
}

@INPROCEEDINGS{4700330,
  author={E. Uzuncaova and D. Garcia and S. Khurshid and D. Batory},
  booktitle={2008 19th International Symposium on Software Reliability Engineering (ISSRE)},
  title={Testing Software Product Lines Using Incremental Test Generation},
  year={2008},
  pages={249-258},
  keywords={computability;formal specification;program testing;SAT-based analysis;first-order logic formula;incremental test generation;software product line testing;specification-based approach;Acoustic testing;Automatic testing;Data structures;Logic testing;Performance analysis;Performance evaluation;Reliability engineering;Software reliability;Software testing;System testing;AHEAD;Alloy;GenVoca;roduct-lines;specification-based testing;test data generation},
  doi={10.1109/ISSRE.2008.56},
  ISSN={1071-9458},
  month={Nov},
}

@INPROCEEDINGS{4815337,
  author={M. Gligoric and T. Gvero and S. Lauterburg and D. Marinov and S. Khurshid},
  booktitle={2009 International Conference on Software Testing Verification and Validation},
  title={Optimizing Generation of Object Graphs in Java PathFinder},
  year={2009},
  pages={51-60},
  keywords={Java;object-oriented programming;program testing;program verification;Java PathFinder;Java programs;Korat algorithm;model checker;object graphs;object-oriented programs;Automatic testing;Costs;Data structures;Instruments;Java;Object oriented modeling;Protocols;Search engines;Software testing;State-space methods},
  doi={10.1109/ICST.2009.52},
  ISSN={2159-4848},
  month={April},
}

@INPROCEEDINGS{5635077,
  author={D. Shao and D. Gopinath and S. Khurshid and D. E. Perry},
  booktitle={2010 IEEE 21st International Symposium on Software Reliability Engineering},
  title={Optimizing Incremental Scope-Bounded Checking with Data-Flow Analysis},
  year={2010},
  pages={408-417},
  keywords={data flow analysis;program verification;search problems;bounded code segment;control flow;correctness specification;data flow analysis;incremental scope bounded checking;relational constraint solver;Complexity theory;Encoding;Engines;Java;Metals;Scalability;Semantics;Alloy;JML;SAT;Scope-bounded checking;computation graph;data-flow analysis;first-order logic;lightweight formal method;white-box testing},
  doi={10.1109/ISSRE.2010.27},
  ISSN={1071-9458},
  month={Nov},
}

@INPROCEEDINGS{7927981,
  author={A. Sullivan and K. Wang and R. N. Zaeem and S. Khurshid},
  booktitle={2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title={Automated Test Generation and Mutation Testing for Alloy},
  year={2017},
  pages={264-275},
  keywords={program testing;specification languages;AUnit framework;Alloy language;automated test generation;automatic SAT-based analysis engine;declarative programming paradigm;declarative-first-order language;imperative languages;mutation testing;unit testing;Adaptation models;Analytical models;Computational modeling;Cost accounting;Metals;Testing;Tools;AUnit;Alloy modeling language;Declarative programming;Mutation testing;Test input generation},
  doi={10.1109/ICST.2017.31},
  month={March},
}

@INPROCEEDINGS{989787,
  author={D. Marinov and S. Khurshid},
  booktitle={Proceedings 16th Annual International Conference on Automated Software Engineering (ASE 2001)},
  title={TestEra: a novel framework for automated testing of Java programs},
  year={2001},
  pages={22-31},
  keywords={Java;automatic programming;data structures;formal languages;program testing;program verification;Alloy Analyzer;Java data structures;TestEra;abstraction;automated Java program testing;concrete Java inputs;concretization translations;correctness criteria;enabling technology;first-order relational language;input size;naming architecture;non-isomorphic test cases;red-black trees;singly linked lists;violated correctness criteria;Automatic testing;Computational modeling;Computer science;Concrete;Data structures;Java;Laboratories;Marine technology;Prototypes;Software testing},
  doi={10.1109/ASE.2001.989787},
  ISSN={1938-4300},
  month={Nov},
}

@INPROCEEDINGS{6100137,
  author={S. A. Khalek and Guowei Yang and Lingming Zhang and D. Marinov and S. Khurshid},
  booktitle={2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
  title={TestEra: A tool for testing Java programs using alloy specifications},
  year={2011},
  pages={608-611},
  keywords={Java;graphs;program testing;specification languages;Alloy tool-set;Eclipse plug-in;JUnit test method;Java program testing;SAT-based backend;TestEra;alloy specification;declarative language;graphical illustration;object graph;specification-based testing;Java;Libraries;Metals;Receivers;Software engineering;Systematics;Testing},
  doi={10.1109/ASE.2011.6100137},
  ISSN={1938-4300},
  month={Nov},
}

@INPROCEEDINGS{6571631,
  author={C. Cadar and F. Dadeau},
  booktitle={2013 IEEE Sixth International Conference on Software Testing, Verification and Validation Workshops},
  title={Constraints in Software Testing, Verification and Analysis CSTVA'2013},
  year={2013},
  pages={208-209},
  keywords={constraint handling;formal verification;program testing;Boolean data type;International Conference on Software Testing Verification and Validation;Principles and Practice of Constraint Programming conference;SAT solver;SMT solver;application domain;constraint solving technique;constraint-based technique;floating-point data type;integer data type;model-based testing;program verification;real data type;software analysis;software testing;software verification;static analysis;symbolic execution;test input generation;Analytical models;Conferences;Educational institutions;Software systems;Software testing;Unified modeling language},
  doi={10.1109/ICSTW.2013.64},
  month={March},
}

@INPROCEEDINGS{6200120,
  author={M. Z. Malik and S. Khurshid},
  booktitle={2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  title={Dynamic Shape Analysis Using Spectral Graph Properties},
  year={2012},
  pages={211-220},
  keywords={data structures;graph theory;object-oriented programming;program diagnostics;program testing;reasoning about programs;automated analysis;automated reasoning;data structures;dynamic shape analysis;object-oriented programs;program code;program testing;spectral graph properties;static analysis;Binary trees;Eigenvalues and eigenfunctions;Image edge detection;Matrices;Shape;Symmetric matrices;Deryaft;Graph spectra;Shape analysis;Structural invariant generation},
  doi={10.1109/ICST.2012.101},
  ISSN={2159-4848},
  month={April},
}

@INPROCEEDINGS{6100100,
  author={S. Ganov and S. Khurshid and D. E. Perry},
  booktitle={2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
  title={A case for alloy annotations for efficient incremental analysis via domain specific solvers},
  year={2011},
  pages={464-467},
  keywords={computability;logic programming;meta data;SAT solver;alloy annotations;automatic Alloy analyzer;declarative modelling language;domain specific solvers;efficient incremental analysis;first-order logic;imperative languages;meta-data facility;satisfiability;Analytical models;Binary search trees;Data models;Educational institutions;Metals;Software;Software engineering},
  doi={10.1109/ASE.2011.6100100},
  ISSN={1938-4300},
  month={Nov},
}

@INPROCEEDINGS{6693075,
  author={N. Rosner and J. H. Siddiqui and N. Aguirre and S. Khurshid and M. F. Frias},
  booktitle={2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={Ranger: Parallel analysis of alloy models by range partitioning},
  year={2013},
  pages={147-157},
  keywords={computability;constraint satisfaction problems;parallel processing;specification languages;Alloy Analyzer;Alloy language models;Ranger tool;analysis cost reduction;candidate solution space partitioning;constraint satisfaction problem;first-order logic;off-the-shelf SAT technology;parallel analysis;propositional formulas;range endpoints;range partitioning;Analytical models;Computational modeling;Hardware;Metals;Partitioning algorithms;Scalability;Vectors;Alloy;Parallel analysis;SAT;Static analysis},
  doi={10.1109/ASE.2013.6693075},
  month={Nov},
}

@INPROCEEDINGS{5770594,
  author={S. A. Khalek and S. Khurshid},
  booktitle={2011 Fourth IEEE International Conference on Software Testing, Verification and Validation},
  title={Systematic Testing of Database Engines Using a Relational Constraint Solver},
  year={2011},
  pages={50-59},
  keywords={SQL;constraint handling;grammars;program testing;query processing;relational databases;ADUSA;DBMS engine;Oracle 11g database;SQL grammar constraint;alloy constraint;alloy tool-set;automated SQL query generator;automated database testing;database engine;database management system;relational constraint solver;systematic black-box testing;systematic testing;Aggregates;Database systems;Generators;Grammar;Metals;Testing;Alloy;Automatic testing;Constraint Solver;DBMS;Database;SQL},
  doi={10.1109/ICST.2011.21},
  ISSN={2159-4848},
  month={March},
}

@INPROCEEDINGS{4344112,
  author={D. Shao and S. Khurshid and D. E. Perry},
  booktitle={Testing: Academic and Industrial Conference Practice and Research Techniques - MUTATION (TAICPART-MUTATION 2007)},
  title={A Case for White-box Testing Using Declarative Specifications Poster Abstract},
  year={2007},
  pages={137-137},
  keywords={formal specification;formal verification;program testing;software quality;black-box testing;declarative specifications poster abstract;software quality;software testing;white-box testing;Automatic control;Automatic testing;Computer industry;Costs;Java;Logic testing;Programming;Software maintenance;Software quality;Software testing},
  doi={10.1109/TAIC.PART.2007.36},
  month={Sept},
}

@INPROCEEDINGS{1521219,
  author={D. Coppit and J. M. Haddox-Schatz},
  booktitle={29th Annual IEEE/NASA Software Engineering Workshop},
  title={On the Use of Specification-Based Assertions as Test Oracles},
  year={2005},
  pages={305-314},
  keywords={formal specification;program testing;program verification;software cost estimation;software fault tolerance;formal specification;software cost reduction;software faults;software testing;specification translation;specification-based assertion;test oracles;Automatic testing;Computer science;Costs;Educational institutions;Fault diagnosis;Formal specifications;Impedance matching;Software systems;Software testing;System testing},
  doi={10.1109/SEW.2005.33},
  ISSN={1550-6215},
  month={April},
}

@ARTICLE{1435353,
  author={D. Coppit and Jinlin Yang and S. Khurshid and Wei Le and K. Sullivan},
  journal={IEEE Transactions on Software Engineering},
  title={Software assurance by bounded exhaustive testing},
  year={2005},
  volume={31},
  number={4},
  pages={328-339},
  keywords={automatic programming;fault trees;formal specification;program debugging;program testing;program verification;software fault tolerance;software tools;Alloy;BET;Galileo dynamic fault tree analysis tool;TestEra;bounded exhaustive testing;formal methods;formal specification;program debugging;program verification;software assurance;software verification technique;Aircraft;Automatic testing;Data structures;Debugging;Fault tolerant systems;Fault trees;Formal specifications;Hardware;Software testing;System testing;Index Terms- Formal methods;program verification;testing and debugging.},
  doi={10.1109/TSE.2005.52},
  ISSN={0098-5589},
  month={April},
}

@INPROCEEDINGS{6100122,
  author={S. A. Khalek and V. P. Narayanan and S. Khurshid},
  booktitle={2011 26th IEEE/ACM International Conference on Automated Software Engineering (ASE 2011)},
  title={Mixed constraints for test input generation - An initial exploration},
  year={2011},
  pages={548-551},
  keywords={constraint handling;formal specification;program testing;constraint formulation;constraint solving technology;programming paradigms;specification usage;test input generation;testing automation;Java;Metals;Programming;Software engineering;Testing;Vegetation;Writing},
  doi={10.1109/ASE.2011.6100122},
  ISSN={1938-4300},
  month={Nov},
}

@INPROCEEDINGS{4639327,
  author={S. Abdul Khalek and B. Elkarablieh and Y. O. Laleye and S. Khurshid},
  booktitle={2008 23rd IEEE/ACM International Conference on Automated Software Engineering},
  title={Query-Aware Test Generation Using a Relational Constraint Solver},
  year={2008},
  pages={238-247},
  keywords={SQL;constraint handling;program debugging;program testing;public domain software;query processing;relational databases;ADUSA;Alloy Analyzer;Alloy tool-set;SQL query;black-box testing;bugs detection;commercial database management system;database management systems;open-source database management system;query-aware data generation;query-aware test generation;relational constraint solver;Automatic testing;Computer bugs;Costs;Data analysis;Database systems;Open source software;Performance evaluation;Prototypes;Relational databases;System testing},
  doi={10.1109/ASE.2008.34},
  ISSN={1938-4300},
  month={Sept},
}

@INPROCEEDINGS{6200100,
  author={J. H. Siddiqui and D. Marinov and S. Khurshid},
  booktitle={2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  title={Lightweight Data-Flow Analysis for Execution-Driven Constraint Solving},
  year={2012},
  pages={91-100},
  keywords={data flow analysis;program debugging;program testing;constraint-based testing;execution-driven constraint solving;execution-driven monitoring;imperative constraint;imperative language;lightweight static data-flow analysis;subject constraints;Algorithm design and analysis;Binary search trees;Computer bugs;Heuristic algorithms;Instruments;Monitoring;Testing;Constraint-based testing;multi-value comparisons;static data-flow analysis},
  doi={10.1109/ICST.2012.89},
  ISSN={2159-4848},
  month={April},
}

@INPROCEEDINGS{6132959,
  author={S. A. Khalek and S. Khurshid},
  booktitle={2011 IEEE 22nd International Symposium on Software Reliability Engineering},
  title={Efficiently Running Test Suites Using Abstract Undo Operations},
  year={2011},
  pages={110-119},
  keywords={checkpointing;optimisation;pattern clustering;program debugging;program testing;program verification;abstract level undo operation;bounded exhaustive testing;execution clustering;execution segment;suite execution optimization;systematically generated suites;test input generation;Clustering algorithms;Context;Databases;Instruments;Receivers;Semantics;Testing;check-pointing;test clustering;undo operations;unit test suites},
  doi={10.1109/ISSRE.2011.20},
  ISSN={1071-9458},
  month={Nov},
}

@INPROCEEDINGS{4815357,
  author={J. H. Siddiqui and S. Khurshid},
  booktitle={2009 International Conference on Software Testing Verification and Validation},
  title={PKorat: Parallel Generation of Structurally Complex Test Inputs},
  year={2009},
  pages={250-259},
  keywords={Java;formal specification;program testing;Java programs;PKorat;automated testing;complex structural constraints;parallel algorithm;parallel generation;Automatic testing;Availability;Heart;Java;Multicore processing;Parallel algorithms;Sequential analysis;Software testing;Space exploration;State-space methods},
  doi={10.1109/ICST.2009.48},
  ISSN={2159-4848},
  month={April},
}

@INPROCEEDINGS{6062090,
  author={M. Gligoric and T. Gvero and V. Jagannath and S. Khurshid and V. Kuncak and D. Marinov},
  booktitle={2010 ACM/IEEE 32nd International Conference on Software Engineering},
  title={Test generation through programming in UDITA},
  year={2010},
  volume={1},
  pages={225-234},
  keywords={Java;data structures;program testing;JPF;Java PathFinder;Java based language;Java programs;UDITA programming;UDITA programs;data structures;test generation;Computer bugs;Concrete;Data structures;Engines;Generators;Java;Testing;Java PathFinder;Pex;UDITA;automated testing;test filtering;test generation;test predicates;test programs},
  doi={10.1145/1806799.1806835},
  ISSN={0270-5257},
  month={May},
}
