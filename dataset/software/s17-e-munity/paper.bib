@INPROCEEDINGS{6975645,
  author={S. Tlili and J. M. Fernandez and A. Belghith and B. Dridi and S. Hidouri},
  booktitle={2014 IEEE 14th International Working Conference on Source Code Analysis and Manipulation},
  title={Scalable Security Verification of Software at Compile Time},
  year={2014},
  pages={115-124},
  abstract={Automated verification tools are required to detect coding errors that may lead to severe software vulnerabilities. However, the usage of these tools is still not well integrated into software development life cycle. In this paper, we present our approach that brings the software compilation process and security verification to a meeting point where both can be applied simultaneously in a user-friendly manner. Our security verification engine is implemented as a new GCC pass that can be enabled via flag-fsecurity-check=checks.xml where the input XML file contains a set of user-defined security checks. The verification operates on the GIMPLE intermediate representation of source code that is language and platform independent. The conducted experiments demonstrate the scalability, efficiency and performance of our engine used to verify large scale software, especially the entire Linux kernel source code.},
  keywords={Linux;XML;formal verification;security of data;GCC pass;Linux kernel source code;automated verification tools;scalable security verification engine;software compilation process;software development life cycle;software vulnerabilities;Automata;Engines;Monitoring;Scalability;Security;Software;XML;Finite State Automata;GCC;Security Verification;Static Analysis},
  doi={10.1109/SCAM.2014.20},
  month={Sept},
}
