file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/assets/bootstrap.min.js
module bootstrap.min.js
   variable jQuery in line 7
      protection public
   function !function((null)) in line 7
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/assets/gumtree.js
module gumtree.js
   variable currentMapping in line 1
      protection public
   variable event in line 86
      protection public
   function if((null)) in line 3
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getMappedElement((null)) in line 9
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function nextMapping() in line 18
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable currentMapping defined in gumtree.js
   function isSrc((null)) in line 34
      protection public
      3 lines of code
      1 parameters
      7 conditional paths
      uses function keypress((null)) defined in gumtree.js
      uses variable event defined in gumtree.js
      uses function nextMapping() defined in gumtree.js
      uses variable attr defined in jquery.min.js
      uses function getMappedElement((null)) defined in gumtree.js
   function keypress((null)) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function click((null)) in line 54
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable event defined in gumtree.js
   function stopPropagation() in line 88
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/assets/jquery.min.js
module jquery.min.js
   variable e in line 1
      protection public
   variable t in line 1
      protection public
   variable n in line 1
      protection public
   variable r in line 1
      protection public
   variable i in line 1
      protection public
   variable U in line 1
      protection public
   variable V in line 1
      protection public
   variable Y in line 1
      protection public
   variable J in line 1
      protection public
   variable G in line 1
      protection public
   variable Q in line 1
      protection public
   variable K in line 1
      protection public
   variable Z in line 1
      protection public
   variable et in line 1
      protection public
   variable tt in line 1
      protection public
   variable nt in line 1
      protection public
   variable rt in line 1
      protection public
   variable it in line 1
      protection public
   variable ot in line 1
      protection public
   variable at in line 1
      protection public
   variable st in line 1
      protection public
   variable ut in line 1
      protection public
   variable lt in line 1
      protection public
   variable ct in line 1
      protection public
   variable ft in line 1
      protection public
   variable pt in line 1
      protection public
   variable ht in line 1
      protection public
   variable gt in line 1
      protection public
   variable matchesSelector in line 2
      protection public
   variable detectDuplicates in line 2
      protection public
   variable L in line 2
      protection public
   variable matches in line 2
      protection public
   variable contains in line 2
      protection public
   variable attr in line 2
      protection public
   variable error in line 2
      protection public
   variable uniqueSort in line 2
      protection public
   variable k in line 2
      protection public
   variable C in line 2
      protection public
   variable S in line 2
      protection public
   variable nth in line 2
      protection public
   variable filters in line 2
      protection public
   variable setFilters in line 2
      protection public
   variable find in line 2
      protection public
   variable expr in line 2
      protection public
   variable unique in line 2
      protection public
   variable text in line 2
      protection public
   variable isXMLDoc in line 2
      protection public
   variable Pt in line 2
      protection public
   variable Rt in line 2
      protection public
   variable Wt in line 2
      protection public
   variable andSelf in line 2
      protection public
   variable zt in line 3
      protection public
   variable Xt in line 3
      protection public
   variable Ut in line 3
      protection public
   variable Vt in line 3
      protection public
   variable Yt in line 3
      protection public
   variable Jt in line 3
      protection public
   variable Kt in line 3
      protection public
   variable optgroup in line 3
      protection public
   variable tbody in line 3
      protection public
   variable th in line 3
      protection public
   variable un in line 3
      protection public
   variable ln in line 3
      protection public
   variable cn in line 3
      protection public
   variable fn in line 3
      protection public
   variable Cn in line 3
      protection public
   variable kn in line 3
      protection public
   variable En in line 3
      protection public
   variable Sn in line 3
      protection public
   variable An in line 3
      protection public
   variable param in line 3
      protection public
   variable jn in line 3
      protection public
   variable Dn in line 3
      protection public
   variable Ln in line 3
      protection public
   variable Hn in line 3
      protection public
   variable Mn in line 3
      protection public
   variable qn in line 3
      protection public
   variable _n in line 3
      protection public
   variable Fn in line 3
      protection public
   variable On in line 3
      protection public
   function n((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function r((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function i((null),(null),(null),(null)) in line 1
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function o((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function a((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function s((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function u() in line 1
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function l() in line 1
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function c((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function f((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function p((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function d((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function h((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function g((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function m((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function y((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function v((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function b((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function x((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function T((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function w((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function N((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function C((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function k((null),(null),(null),(null),(null)) in line 1
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function E((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function S((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function A((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function j((null),(null),(null),(null)) in line 1
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function D((null)) in line 1
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function L((null),(null),(null),(null)) in line 1
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function H((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function M((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function q((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function _() in line 1
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function F() in line 1
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function O() in line 1
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function B((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function P((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function R((null),(null)) in line 1
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function W((null),(null),(null)) in line 1
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function sort((null)) in line 2
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function for((null)) in line 2
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function D() in line 2
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function extend((null)) in line 2
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function each((null),(null)) in line 2
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/AbstractFilePairsProcessor.java
module fr::labri::gumtree::client::batch::AbstractFilePairsProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractProcessor
   abstract class
   function process() in line 19
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses function init() defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable LOGGER defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function processFilePair(String,String) defined in fr::labri::gumtree::client::batch::AbstractFilePairsProcessor
      uses variable e defined in jquery.min.js
      uses function finish() defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function processFilePair(String,String) in line 39
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function AbstractFilePairsProcessor(String) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/AbstractFileProcessor.java
module fr::labri::gumtree::client::batch::AbstractFileProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractProcessor
   abstract class
   function process() in line 22
      protection public
      14 lines of code
      0 parameters
      5 conditional paths
      uses function init() defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable LOGGER defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable e defined in jquery.min.js
      uses function finish() defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function process(String) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function AbstractFileProcessor(String,String) in line 12
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable outFolder defined in fr::labri::gumtree::client::batch::AbstractFileProcessor
      uses function ensureFolder(String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function AbstractFileProcessor(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable DEFAULT_OUT_FOLDER defined in fr::labri::gumtree::client::batch::AbstractFileProcessor
   variable DEFAULT_OUT_FOLDER in line 10
      protection public
   variable outFolder in line 8
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/AbstractProcessor.java
module fr::labri::gumtree::client::batch::AbstractProcessor
   abstract class
   function copyResource(String,String) in line 43
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable e defined in jquery.min.js
   function ensureFolder(String) in line 28
      5 lines of code
      1 parameters
      3 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function fileExtension(String) in line 63
      3 lines of code
      1 parameters
      1 conditional paths
   function fileName(String) in line 59
      3 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 26
      1 lines of code
      0 parameters
      1 conditional paths
   function init() in line 24
      1 lines of code
      0 parameters
      1 conditional paths
   function nextFile(String,String,String) in line 34
      8 lines of code
      3 parameters
      3 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
   function process() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tic() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractProcessor(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function process() defined in fr::labri::gumtree::client::batch::AbstractProcessor
   variable inFolder in line 16
   variable LOGGER in line 14
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/ActionDistributionProcessor.java
module fr::labri::gumtree::client::batch::ActionDistributionProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractFilePairsProcessor
   function finish() in line 55
      14 lines of code
      0 parameters
      3 conditional paths
      uses function nextFile(String,String,String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function w((null),(null)) defined in jquery.min.js
      uses variable dist defined in fr::labri::gumtree::client::batch::ActionDistributionProcessor
      uses variable e defined in jquery.min.js
   function inc(String) in line 49
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable dist defined in fr::labri::gumtree::client::batch::ActionDistributionProcessor
   function init() in line 29
      4 lines of code
      0 parameters
      1 conditional paths
      uses function ensureFolder(String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable dist defined in fr::labri::gumtree::client::batch::ActionDistributionProcessor
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function ActionDistributionProcessor(String) defined in fr::labri::gumtree::client::batch::ActionDistributionProcessor
   function processFilePair(String,String) in line 35
      protection public
      13 lines of code
      2 parameters
      8 conditional paths
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
      uses function c((null),(null)) defined in jquery.min.js
      uses function getMappings() defined in fr::labri::gumtree::matchers::Matcher
      uses variable t defined in jquery.min.js
      uses function inc(String) defined in fr::labri::gumtree::client::batch::ActionDistributionProcessor
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses function getTypeLabel() defined in fr::labri::gumtree::tree::Tree
   function ActionDistributionProcessor(String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable dist in line 23
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/DigestProcessor.java
module fr::labri::gumtree::client::batch::DigestProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractFileProcessor
   function finish() in line 97
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable LOGGER defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function result(int,Map< Integer, Set< String >>) defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable stdTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable stdDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rStdTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rStdDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable md5Time defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable md5Digests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rMd5Time defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rMd5Digests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rRdmTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rRdmDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
   function init() in line 46
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable stdTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rStdTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable md5Time defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rMd5Time defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rRdmTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable stdDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rStdDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable md5Digests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rMd5Digests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rRdmDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
   function main(String[]) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function DigestProcessor(String,String) defined in fr::labri::gumtree::client::batch::DigestProcessor
   function process(String) in line 60
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
      uses function tic() defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable stdTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses function updateDigests(Tree,Map< Integer, Set< String >>) defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable stdDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rStdTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rStdDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable md5Time defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable md5Digests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rMd5Time defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rMd5Digests defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rRdmTime defined in fr::labri::gumtree::client::batch::DigestProcessor
      uses variable rRdmDigests defined in fr::labri::gumtree::client::batch::DigestProcessor
   function result(int,Map< Integer, Set< String >>) in line 110
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable LOGGER defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function updateDigests(Tree,Map< Integer, Set< String >>) in line 88
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   function DigestProcessor(String,String) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable outFolder defined in fr::labri::gumtree::client::batch::AbstractFileProcessor
   variable md5Digests in line 30
   variable md5Time in line 20
   variable rMd5Digests in line 32
   variable rMd5Time in line 22
   variable rRdmDigests in line 34
   variable rRdmTime in line 24
   variable rStdDigests in line 28
   variable rStdTime in line 18
   variable stdDigests in line 26
   variable stdTime in line 16
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/DotProcessor.java
module fr::labri::gumtree::client::batch::DotProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractFileProcessor
   function main(String[]) in line 11
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function DotProcessor(String) defined in fr::labri::gumtree::client::batch::DotProcessor
   function process(String) in line 25
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
   function DotProcessor(String) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function DotProcessor(String,String) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable outFolder defined in fr::labri::gumtree::client::batch::AbstractFileProcessor
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/FileUtils.java
module fr::labri::gumtree::client::batch::FileUtils
   function createTmpFolder(String,String) in line 30
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
   function deleteFolder(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function deleteFolder(File) in line 22
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses function deleteFolder(String) defined in fr::labri::gumtree::client::batch::FileUtils
   function getExtension(String) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function listAllFiles(File,List< String >,String) in line 48
      protection public
      9 lines of code
      3 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
   function listAllFiles(File) in line 58
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function listAllFiles(File,List< String >,String) defined in fr::labri::gumtree::client::batch::FileUtils
   function listAllFiles(File,List< File >) in line 65
      protection public
      6 lines of code
      2 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses function listAllFiles(File,List< String >,String) defined in fr::labri::gumtree::client::batch::FileUtils
   function FileUtils() in line 11
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/MetricsProcessor.java
module fr::labri::gumtree::client::batch::MetricsProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractFilePairsProcessor
   function finish() in line 81
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable csv defined in fr::labri::gumtree::client::batch::MetricsProcessor
      uses variable e defined in jquery.min.js
   function init() in line 31
      11 lines of code
      0 parameters
      2 conditional paths
      uses function ensureFolder(String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function copyResource(String,String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function nextFile(String,String,String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable csv defined in fr::labri::gumtree::client::batch::MetricsProcessor
      uses variable e defined in jquery.min.js
   function main(String[]) in line 20
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function MetricsProcessor(String) defined in fr::labri::gumtree::client::batch::MetricsProcessor
   function processFilePair(String,String) in line 44
      protection public
      36 lines of code
      2 parameters
      7 conditional paths
      uses function tic() defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses function g((null)) defined in jquery.min.js
      uses function getMappings() defined in fr::labri::gumtree::matchers::Matcher
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable csv defined in fr::labri::gumtree::client::batch::MetricsProcessor
      uses variable e defined in jquery.min.js
   function MetricsProcessor(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable csv in line 25
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/WebDiffProcessor.java
module fr::labri::gumtree::client::batch::WebDiffProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractFilePairsProcessor
   function ensureBootstrap() in line 43
      5 lines of code
      0 parameters
      2 conditional paths
      uses function ensureFolder(String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable BOOTSTRAP_RESOURCES defined in fr::labri::gumtree::client::batch::WebDiffProcessor
      uses function copyResource(String,String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function main(String[]) in line 15
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function WebDiffProcessor(String) defined in fr::labri::gumtree::client::batch::WebDiffProcessor
   function processFilePair(String,String) in line 30
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
      uses function match() defined in fr::labri::gumtree::matchers::Matcher
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function fileName(String) defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable LOGGER defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses function w((null),(null)) defined in jquery.min.js
   function WebDiffProcessor(String) in line 24
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ensureBootstrap() defined in fr::labri::gumtree::client::batch::WebDiffProcessor
   variable BOOTSTRAP_RESOURCES in line 20
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/batch/XmlProcessor.java
module fr::labri::gumtree::client::batch::XmlProcessor
   inherits from fr::labri::gumtree::client::batch::AbstractFileProcessor
   function main(String[]) in line 11
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function XmlProcessor(String) defined in fr::labri::gumtree::client::batch::XmlProcessor
   function process(String) in line 25
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
   function XmlProcessor(String) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
   function XmlProcessor(String,String) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable inFolder defined in fr::labri::gumtree::client::batch::AbstractProcessor
      uses variable outFolder defined in fr::labri::gumtree::client::batch::AbstractFileProcessor
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/DiffClient.java
module fr::labri::gumtree::client::DiffClient
   abstract class
   function getDstTree() in line 48
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTree(String) defined in fr::labri::gumtree::client::DiffClient
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function getDst() defined in fr::labri::gumtree::client::DiffOptions
   function getMatcher() in line 38
      5 lines of code
      0 parameters
      1 conditional paths
      uses function m((null),(null)) defined in jquery.min.js
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function getMatcher() defined in fr::labri::gumtree::client::DiffOptions
      uses function getSrcTree() defined in fr::labri::gumtree::client::DiffClient
      uses function getDstTree() defined in fr::labri::gumtree::client::DiffClient
   function getSrcTree() in line 44
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTree(String) defined in fr::labri::gumtree::client::DiffClient
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function getSrc() defined in fr::labri::gumtree::client::DiffOptions
   function getTree(String) in line 52
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function getGenerators() defined in fr::labri::gumtree::client::DiffOptions
      uses variable e defined in jquery.min.js
   function main(String[]) in line 16
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function getOutput() defined in fr::labri::gumtree::client::DiffOptions
      uses function start() defined in fr::labri::gumtree::client::DiffClient
      uses variable e defined in jquery.min.js
   function start() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function DiffClient(DiffOptions) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function start() defined in fr::labri::gumtree::client::DiffClient
   variable diffOptions in line 30
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/DiffOptions.java
module fr::labri::gumtree::client::DiffOptions
   function getDst() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dst defined in fr::labri::gumtree::client::DiffOptions
   function getGenerators() in line 39
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable generators defined in fr::labri::gumtree::client::DiffOptions
   function getMatcher() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matcher defined in fr::labri::gumtree::client::DiffOptions
   function getOutput() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable output defined in fr::labri::gumtree::client::DiffOptions
   function getSrc() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::client::DiffOptions
   variable dst in line 21
   variable generators in line 12
   variable matcher in line 9
   variable output in line 15
   variable src in line 18
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/TreeGeneratorRegistry.java
module fr::labri::gumtree::client::TreeGeneratorRegistry
   function getGenerator(String,String[]) in line 34
      15 lines of code
      2 parameters
      7 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable producers defined in fr::labri::gumtree::client::TreeGeneratorRegistry
   function getInstance() in line 21
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable registry defined in fr::labri::gumtree::client::TreeGeneratorRegistry
      uses function TreeGeneratorRegistry() defined in fr::labri::gumtree::client::TreeGeneratorRegistry
   function getTree(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getGenerator(String,String[]) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
   function getTree(String,String[]) in line 55
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getGenerator(String,String[]) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
   function TreeGeneratorRegistry() in line 26
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable producers defined in fr::labri::gumtree::client::TreeGeneratorRegistry
   variable producers in line 17
   variable registry in line 19
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/swing/MappingsPanel.java
module fr::labri::gumtree::client::ui::swing::MappingsPanel
   inherits from javax::swing::JPanel
   inherits from javax::swing::event::TreeSelectionListener
   function openNode(TreePanel,Tree) in line 97
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable n defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
   function openNodes() in line 86
      10 lines of code
      0 parameters
      7 conditional paths
      uses variable t defined in jquery.min.js
      uses variable classifyTrees defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getSrcDelTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses function openNode(TreePanel,Tree) defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable panSrc defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getDstAddTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable panDst defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getSrcUpdTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getDstUpdTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getSrcMvTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getDstMvTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getJTree() defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses function getTrees() defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses variable src defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable dst defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
   function updateJTreeAndJTextArea(Tree,JTextArea,boolean,Tree,TreePanel,JTextArea) in line 135
      18 lines of code
      6 parameters
      2 conditional paths
   function valueChanged(TreeSelectionEvent) in line 103
      protection public
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable e defined in jquery.min.js
      uses variable panSrc defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getJTree() defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses variable txtSrc defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable panDst defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable txtDst defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable mappings defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function hasSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function hasDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function updateJTreeAndJTextArea(Tree,JTextArea,boolean,Tree,TreePanel,JTextArea) defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
   function MappingsPanel(String,String,Tree,Tree,Matcher) in line 49
      protection public
      36 lines of code
      5 parameters
      2 conditional paths
      uses variable src defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable dst defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function m((null),(null)) defined in jquery.min.js
      uses function getJTree() defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses variable panSrc defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable panDst defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable txtSrc defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable txtDst defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses variable e defined in jquery.min.js
      uses function openNodes() defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
   variable ADD_COLOR in line 44
   variable classifyTrees in line 35
   variable DEL_COLOR in line 43
   variable dst in line 34
   variable mappings in line 36
   variable MV_COLOR in line 47
   variable panDst in line 39
   variable panSrc in line 38
   variable serialVersionUID in line 31
   variable src in line 33
   variable txtDst in line 41
   variable txtSrc in line 40
   variable UPD_COLOR in line 45
module fr::labri::gumtree::client::ui::swing::MappingsPanel::MappingsCellRenderer
   inherits from javax::swing::tree::DefaultTreeCellRenderer
   function getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean) in line 164
      protection public
      11 lines of code
      7 parameters
      7 conditional paths
      uses variable isSrc defined in fr::labri::gumtree::client::ui::swing::MappingsPanel::MappingsCellRenderer
      uses variable classifyTrees defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getSrcDelTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable DEL_COLOR defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getDstAddTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable ADD_COLOR defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getSrcUpdTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable UPD_COLOR defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getDstUpdTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getSrcMvTrees() defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable MV_COLOR defined in fr::labri::gumtree::client::ui::swing::MappingsPanel
      uses function getDstMvTrees() defined in fr::labri::gumtree::actions::TreeClassifier
   function MappingsCellRenderer(boolean) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isSrc in line 157
   variable serialVersionUID in line 155
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/swing/SwingDiff.java
module fr::labri::gumtree::client::ui::swing::SwingDiff
   inherits from fr::labri::gumtree::client::DiffClient
   function createAndShowGUI(String,String,Matcher) in line 15
      7 lines of code
      3 parameters
      1 conditional paths
      uses function m((null),(null)) defined in jquery.min.js
   function start() in line 24
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getMatcher() defined in fr::labri::gumtree::client::DiffClient
      uses function createAndShowGUI(String,String,Matcher) defined in fr::labri::gumtree::client::ui::swing::SwingDiff
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function getSrc() defined in fr::labri::gumtree::client::DiffOptions
      uses function getDst() defined in fr::labri::gumtree::client::DiffOptions
   function SwingDiff(DiffOptions) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/swing/SwingTree.java
module fr::labri::gumtree::client::ui::swing::SwingTree
   function createAndShowGUI(Tree) in line 20
      7 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 12
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTree(String) defined in fr::labri::gumtree::client::TreeGeneratorRegistry
      uses function createAndShowGUI(Tree) defined in fr::labri::gumtree::client::ui::swing::SwingTree
   function SwingTree() in line 17
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/swing/TreePanel.java
module fr::labri::gumtree::client::ui::swing::TreePanel
   inherits from javax::swing::JPanel
   function createNodes(DefaultMutableTreeNode,Tree) in line 69
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable tree defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses variable trees defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function getJTree() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jtree defined in fr::labri::gumtree::client::ui::swing::TreePanel
   function getTree() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tree defined in fr::labri::gumtree::client::ui::swing::TreePanel
   function getTrees() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trees defined in fr::labri::gumtree::client::ui::swing::TreePanel
   function valueChanged(TreeSelectionEvent) in line 62
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable jtree defined in fr::labri::gumtree::client::ui::swing::TreePanel
   function TreePanel(Tree,TreeCellRenderer) in line 26
      protection public
      19 lines of code
      2 parameters
      2 conditional paths
      uses variable trees defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses variable tree defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function createNodes(DefaultMutableTreeNode,Tree) defined in fr::labri::gumtree::client::ui::swing::TreePanel
      uses variable jtree defined in fr::labri::gumtree::client::ui::swing::TreePanel
   function TreePanel(Tree) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tree defined in fr::labri::gumtree::client::ui::swing::TreePanel
   variable jtree in line 22
   variable serialVersionUID in line 21
   variable tree in line 23
   variable trees in line 24
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/web/BootstrapGenerator.java
module fr::labri::gumtree::client::ui::web::BootstrapGenerator
   function append(char,Writer) in line 137
      6 lines of code
      2 parameters
      4 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
   function appendFooter(Writer) in line 181
      9 lines of code
      1 parameters
      1 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses variable END_DIV defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
   function appendHeader(Writer) in line 144
      36 lines of code
      1 parameters
      1 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses variable END_DIV defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
   function getFileName(String) in line 191
      5 lines of code
      1 parameters
      2 conditional paths
   function produceHTML(String,String,Tree,Tree,Matcher,String) in line 36
      protection public
      5 lines of code
      6 parameters
      1 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
   function produceHTML(String,String,Tree,Tree,Matcher) in line 42
      protection public
      90 lines of code
      5 parameters
      13 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function addStartTag(int,String) defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses variable ID_SPAN defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses function addTags(int,String,int,String) defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses variable SRC_MV_SPAN defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses function tooltip(Tree) defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses variable END_SPAN defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses variable UPD_SPAN defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses variable ADD_DEL_SPAN defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses variable DST_MV_SPAN defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function w((null),(null)) defined in jquery.min.js
      uses function appendHeader(Writer) defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses variable r defined in jquery.min.js
      uses variable CODE_HEAD defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses function getFileName(String) defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses function getEndTags(int) defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses function getStartTags(int) defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses function append(char,Writer) defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses variable CODE_END defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
      uses function appendFooter(Writer) defined in fr::labri::gumtree::client::ui::web::BootstrapGenerator
   function tooltip(Tree) in line 133
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
   function BootstrapGenerator() in line 33
      2 lines of code
      0 parameters
      1 conditional paths
   variable ADD_DEL_SPAN in line 25
   variable CODE_END in line 31
   variable CODE_HEAD in line 30
   variable DST_MV_SPAN in line 24
   variable END_DIV in line 29
   variable END_SPAN in line 28
   variable ID_SPAN in line 27
   variable SRC_MV_SPAN in line 23
   variable UPD_SPAN in line 26
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/web/DiffServer.java
module fr::labri::gumtree::client::ui::web::DiffServer
   inherits from fr::labri::gumtree::client::ui::web::NanoHTTPD
   function respond(String) in line 96
      3 lines of code
      1 parameters
      1 conditional paths
      uses function s((null)) defined in jquery.min.js
   function respond(String,String) in line 100
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable OK defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses function s((null)) defined in jquery.min.js
   function respond(String,InputStream) in line 104
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable OK defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses function s((null)) defined in jquery.min.js
   function serve(String,Method,Map< String, String >,Map< String, String >,Map< String, String >) in line 57
      protection public
      38 lines of code
      5 parameters
      16 conditional paths
      uses function respond(String) defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable fSrc defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable tSrc defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable fDst defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable tDst defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable matcher defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses function g((null)) defined in jquery.min.js
      uses function getMappings() defined in fr::labri::gumtree::matchers::Matcher
      uses variable OK defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses variable e defined in jquery.min.js
   function start(NanoHTTPD) in line 38
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function start() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses function stop() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
   function DiffServer(String,String,Tree,Tree,Matcher) in line 29
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
      uses variable PORT defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable fSrc defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable fDst defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable tSrc defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable tDst defined in fr::labri::gumtree::client::ui::web::DiffServer
      uses variable matcher defined in fr::labri::gumtree::client::ui::web::DiffServer
   variable fDst in line 21
   variable fSrc in line 19
   variable matcher in line 27
   variable PORT in line 17
      protection public
   variable tDst in line 25
   variable tSrc in line 23
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/web/NanoHTTPD.java
module fr::labri::gumtree::client::ui::web::NanoHTTPD
   abstract class
   function decodeParameters(Map< String, String >) in line 195
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable QUERY_STRING_PARAMETER defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
   function decodeParameters(String) in line 199
      23 lines of code
      1 parameters
      6 conditional paths
      uses variable st defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function decodePercent(String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
   function decodePercent(String) in line 171
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function serve(String,Method,Map< String, String >,Map< String, String >,Map< String, String >) in line 164
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function setAsyncRunner(AsyncRunner) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable asyncRunner defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses function serve(String,Method,Map< String, String >,Map< String, String >,Map< String, String >) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
   function setTempFileManagerFactory(TempFileManagerFactory) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tempFileManagerFactory defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
   function start() in line 95
      protection public
      34 lines of code
      0 parameters
      5 conditional paths
      uses variable myServerSocket defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable hostname defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable myPort defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable myThread defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable tempFileManagerFactory defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses function create() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManagerFactory
      uses variable asyncRunner defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses function exec(Runnable) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::AsyncRunner
      uses function run() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::HTTPSession
      uses variable e defined in jquery.min.js
   function stop() in line 133
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable myServerSocket defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable myThread defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable e defined in jquery.min.js
   function NanoHTTPD(int) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function NanoHTTPD(String,int) in line 83
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable hostname defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
   variable asyncRunner in line 74
   variable hostname in line 69
   variable MIME_DEFAULT_BINARY in line 68
      protection public
   variable MIME_HTML in line 67
      protection public
   variable MIME_PLAINTEXT in line 66
      protection public
   variable myPort in line 70
   variable myServerSocket in line 71
   variable myThread in line 72
   variable QUERY_STRING_PARAMETER in line 62
      protection public
   variable tempFileManagerFactory in line 73
module fr::labri::gumtree::client::ui::web::NanoHTTPD::Method
   function lookup(String) in line 226
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function m((null),(null)) defined in jquery.min.js
   variable GET in line 224
      protection public
   variable POST in line 224
      protection public
   variable PUT in line 224
      protection public
module fr::labri::gumtree::client::ui::web::NanoHTTPD::AsyncRunner
   function exec(Runnable) in line 237
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManagerFactory
   function create() in line 241
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManager
   function clear() in line 247
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createTempFile() in line 245
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFile
   function delete() in line 253
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 255
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function open() in line 251
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module fr::labri::gumtree::client::ui::web::NanoHTTPD::Response
   function addHeader(String,String) in line 315
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function error(OutputStream,Status,String) in line 308
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable error defined in jquery.min.js
      uses variable MIME_PLAINTEXT defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses function send(OutputStream) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response
   function send(OutputStream) in line 322
      51 lines of code
      1 parameters
      11 conditional paths
      uses function getDescription() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
   function Response(String) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable OK defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses variable MIME_HTML defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
   function Response(Status,String,InputStream) in line 289
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function Response(Status,String,String) in line 298
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
   variable data in line 273
      protection public
   variable header in line 277
      protection public
   variable mimeType in line 269
      protection public
   variable status in line 265
      protection public
module fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
   function getDescription() in line 394
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRequestStatus() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Status(int,String) in line 385
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable BAD_REQUEST in line 379
      protection public
   variable CREATED in line 378
      protection public
   variable descr in line 383
   variable FORBIDDEN in line 380
      protection public
   variable INTERNAL_ERROR in line 381
      protection public
   variable NO_CONTENT in line 378
      protection public
   variable NOT_FOUND in line 380
      protection public
   variable NOT_MODIFIED in line 379
      protection public
   variable OK in line 378
      protection public
   variable PARTIAL_CONTENT in line 378
      protection public
   variable RANGE_NOT_SATISFIABLE in line 381
      protection public
   variable REDIRECT in line 379
      protection public
   variable requestStatus in line 382
   variable UNAUTHORIZED in line 380
      protection public
module fr::labri::gumtree::client::ui::web::NanoHTTPD::DefaultTempFile
   inherits from fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFile
   function delete() in line 415
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 420
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function open() in line 410
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DefaultTempFile(String) in line 404
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable file in line 401
   variable fstream in line 402
module fr::labri::gumtree::client::ui::web::NanoHTTPD::HTTPSession
   inherits from Runnable
   function decodeHeader(BufferedReader,Map< String, String >,Map< String, String >,Map< String, String >) in line 604
      53 lines of code
      4 parameters
      9 conditional paths
      uses variable st defined in jquery.min.js
      uses function error(OutputStream,Status,String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response
      uses variable BAD_REQUEST defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses function decodePercent(String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses function p((null)) defined in jquery.min.js
      uses variable INTERNAL_ERROR defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
   function decodeMultipartData(String,ByteBuffer,BufferedReader,Map< String, String >,Map< String, String >) in line 661
      74 lines of code
      5 parameters
      16 conditional paths
      uses function error(OutputStream,Status,String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response
      uses variable BAD_REQUEST defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses function p((null)) defined in jquery.min.js
      uses variable st defined in jquery.min.js
      uses function d((null),(null)) defined in jquery.min.js
      uses variable INTERNAL_ERROR defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
   function decodeParms(String,Map< String, String >) in line 829
      23 lines of code
      2 parameters
      5 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable QUERY_STRING_PARAMETER defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable st defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function decodePercent(String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses function error(OutputStream,Status,String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response
      uses variable BAD_REQUEST defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
   function extractContentLength(Map< String, String >) in line 588
      12 lines of code
      1 parameters
      3 conditional paths
      uses function l() defined in jquery.min.js
   function findHeaderEnd(final byte[],int) in line 739
      10 lines of code
      2 parameters
      3 conditional paths
   function getBoundaryPositions(ByteBuffer,byte[]) in line 753
      protection public
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
   function getTmpBucket() in line 802
      9 lines of code
      0 parameters
      2 conditional paths
      uses function createTempFile() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManager
      uses function getName() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFile
      uses variable e defined in jquery.min.js
   function run() in line 441
      protection public
      146 lines of code
      0 parameters
      21 conditional paths
      uses function lookup(String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Method
      uses function error(OutputStream,Status,String) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response
      uses variable BAD_REQUEST defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable POST defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Method
      uses variable st defined in jquery.min.js
      uses variable PUT defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Method
      uses variable r defined in jquery.min.js
      uses function serve(String,Method,Map< String, String >,Map< String, String >,Map< String, String >) defined in fr::labri::gumtree::client::ui::web::NanoHTTPD
      uses variable INTERNAL_ERROR defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::Response::Status
      uses function clear() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManager
   function saveTmpFile(ByteBuffer,int,int) in line 783
      18 lines of code
      3 parameters
      3 conditional paths
      uses function createTempFile() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManager
      uses function b((null),(null)) defined in jquery.min.js
      uses function getName() defined in fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFile
      uses variable e defined in jquery.min.js
   function stripMultipartHeaders(ByteBuffer,int) in line 815
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
   function HTTPSession(TempFileManager,InputStream,OutputStream) in line 434
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable BUFSIZE in line 429
      protection public
   variable inputStream in line 431
   variable outputStream in line 432
   variable tempFileManager in line 430
module fr::labri::gumtree::client::ui::web::NanoHTTPD::DefaultTempFileManagerFactory
   inherits from fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManagerFactory
   function create() in line 856
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module fr::labri::gumtree::client::ui::web::NanoHTTPD::DefaultTempFileManager
   inherits from fr::labri::gumtree::client::ui::web::NanoHTTPD::TempFileManager
   function clear() in line 878
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
   function createTempFile() in line 871
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function DefaultTempFileManager() in line 865
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable tempFiles in line 863
   variable tmpdir in line 862
module fr::labri::gumtree::client::ui::web::NanoHTTPD::DefaultAsyncRunner
   inherits from fr::labri::gumtree::client::ui::web::NanoHTTPD::AsyncRunner
   function exec(Runnable) in line 891
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/web/TagIndex.java
module fr::labri::gumtree::client::ui::web::TagIndex
   function addEndTag(int,String) in line 29
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable endTags defined in fr::labri::gumtree::client::ui::web::TagIndex
   function addStartTag(int,String) in line 24
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable startTags defined in fr::labri::gumtree::client::ui::web::TagIndex
   function addTags(int,String,int,String) in line 19
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addStartTag(int,String) defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses function addEndTag(int,String) defined in fr::labri::gumtree::client::ui::web::TagIndex
   function getEndTags(int) in line 34
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable endTags defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses function b((null),(null)) defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function getStartTags(int) in line 42
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable startTags defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses function b((null),(null)) defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function TagIndex() in line 14
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable startTags defined in fr::labri::gumtree::client::ui::web::TagIndex
      uses variable endTags defined in fr::labri::gumtree::client::ui::web::TagIndex
   variable endTags in line 12
   variable startTags in line 10
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/client/src/main/java/fr/labri/gumtree/client/ui/web/WebDiff.java
module fr::labri::gumtree::client::ui::web::WebDiff
   inherits from fr::labri::gumtree::client::DiffClient
   function start() in line 14
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getMatcher() defined in fr::labri::gumtree::client::DiffClient
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
      uses function getSrc() defined in fr::labri::gumtree::client::DiffOptions
      uses function getDst() defined in fr::labri::gumtree::client::DiffOptions
      uses function getSrc() defined in fr::labri::gumtree::matchers::Matcher
      uses function getDst() defined in fr::labri::gumtree::matchers::Matcher
   function WebDiff(DiffOptions) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable diffOptions defined in fr::labri::gumtree::client::DiffClient
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/ActionGenerator.java
module fr::labri::gumtree::actions::ActionGenerator
   function alignChildren(Tree,Tree) in line 149
      44 lines of code
      2 parameters
      13 conditional paths
      uses variable srcInOrder defined in fr::labri::gumtree::actions::ActionGenerator
      uses function w((null),(null)) defined in jquery.min.js
      uses variable dstInOrder defined in fr::labri::gumtree::actions::ActionGenerator
      uses function x((null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses variable newMappings defined in fr::labri::gumtree::actions::ActionGenerator
      uses function hasSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function hasDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function lcs(List< Tree >,List< Tree >) defined in fr::labri::gumtree::actions::ActionGenerator
      uses function m((null),(null)) defined in jquery.min.js
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
      uses variable origMappings defined in fr::labri::gumtree::actions::ActionGenerator
      uses function has(Tree,Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses variable k defined in jquery.min.js
      uses function findPos(Tree) defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable origSrcTrees defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable actions defined in fr::labri::gumtree::actions::ActionGenerator
   function findPos(Tree) in line 194
      31 lines of code
      1 parameters
      7 conditional paths
      uses function y((null),(null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses variable dstInOrder defined in fr::labri::gumtree::actions::ActionGenerator
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function u() defined in jquery.min.js
      uses variable newMappings defined in fr::labri::gumtree::actions::ActionGenerator
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function generate() in line 66
      protection public
      82 lines of code
      0 parameters
      9 conditional paths
      uses function setId(int) defined in fr::labri::gumtree::tree::Tree
      uses function addChild(Tree) defined in fr::labri::gumtree::tree::Tree
      uses variable newSrc defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable origDst defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable actions defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable dstInOrder defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable srcInOrder defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable lastId defined in fr::labri::gumtree::actions::ActionGenerator
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses variable newMappings defined in fr::labri::gumtree::actions::ActionGenerator
      uses function link(Tree,Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function x((null)) defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function hasDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses variable k defined in jquery.min.js
      uses function findPos(Tree) defined in fr::labri::gumtree::actions::ActionGenerator
      uses function newId() defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable origSrcTrees defined in fr::labri::gumtree::actions::ActionGenerator
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function v((null),(null)) defined in jquery.min.js
      uses function equals(Object) defined in fr::labri::gumtree::tree::Tree
      uses function alignChildren(Tree,Tree) defined in fr::labri::gumtree::actions::ActionGenerator
      uses function hasSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function toDigestTreeString() defined in fr::labri::gumtree::tree::Tree
      uses variable LOGGER defined in fr::labri::gumtree::actions::ActionGenerator
      uses function refresh() defined in fr::labri::gumtree::tree::Tree
   function getActions() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable actions defined in fr::labri::gumtree::actions::ActionGenerator
   function lcs(List< Tree >,List< Tree >) in line 230
      25 lines of code
      2 parameters
      7 conditional paths
      uses function m((null),(null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable n defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable newMappings defined in fr::labri::gumtree::actions::ActionGenerator
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function newId() in line 226
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastId defined in fr::labri::gumtree::actions::ActionGenerator
   function ActionGenerator(Tree,Tree,MappingStore) in line 47
      protection public
      14 lines of code
      3 parameters
      4 conditional paths
      uses function deepCopy() defined in fr::labri::gumtree::tree::Tree
      uses variable origSrcTrees defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable t defined in jquery.min.js
      uses variable origSrc defined in fr::labri::gumtree::actions::ActionGenerator
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
      uses variable cpySrcTrees defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable newSrc defined in fr::labri::gumtree::actions::ActionGenerator
      uses variable origMappings defined in fr::labri::gumtree::actions::ActionGenerator
      uses function m((null),(null)) defined in jquery.min.js
      uses function link(Tree,Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function copy() defined in fr::labri::gumtree::matchers::MappingStore
   variable actions in line 41
   variable cpySrcTrees in line 45
   variable dstInOrder in line 35
   variable lastId in line 39
   variable LOGGER in line 23
      protection public
   variable newMappings in line 33
   variable newSrc in line 27
   variable origDst in line 29
   variable origMappings in line 31
   variable origSrc in line 25
   variable origSrcTrees in line 43
   variable srcInOrder in line 37
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/LeavesClassifier.java
module fr::labri::gumtree::actions::LeavesClassifier
   inherits from fr::labri::gumtree::actions::TreeClassifier
   function classify() in line 27
      protection public
      15 lines of code
      0 parameters
      6 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable actions defined in fr::labri::gumtree::actions::TreeClassifier
      uses function isLeafAction(Action) defined in fr::labri::gumtree::actions::LeavesClassifier
      uses variable srcDelTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstAddTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable srcUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable mappings defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses variable srcMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function isLeafAction(Action) in line 43
      8 lines of code
      1 parameters
      4 conditional paths
      uses function d((null),(null)) defined in jquery.min.js
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses variable actions defined in fr::labri::gumtree::actions::TreeClassifier
   function LeavesClassifier(Tree,Tree,Set< Mapping >,List< Action >) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable actions defined in fr::labri::gumtree::actions::TreeClassifier
   function LeavesClassifier(Tree,Tree,Matcher) in line 21
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses function m((null),(null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/model/Action.java
module fr::labri::gumtree::actions::model::Action
   abstract class
   function getName() in line 21
      1 lines of code
      0 parameters
      1 conditional paths
   function getNode() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
   function setNode(Tree) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses function getName() defined in fr::labri::gumtree::actions::model::Action
      uses function toString() defined in fr::labri::gumtree::actions::model::Action
   function toString() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function Action(Tree) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
   variable node in line 7
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/model/Addition.java
module fr::labri::gumtree::actions::model::Addition
   inherits from fr::labri::gumtree::actions::model::Action
   abstract class
   function toString() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in fr::labri::gumtree::actions::model::Action
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses function toTreeString() defined in fr::labri::gumtree::tree::Tree
      uses variable parent defined in fr::labri::gumtree::actions::model::Addition
      uses function toString() defined in fr::labri::gumtree::tree::Tree
      uses variable pos defined in fr::labri::gumtree::actions::model::Addition
   function Addition(Tree,Tree,int) in line 11
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses variable parent defined in fr::labri::gumtree::actions::model::Addition
      uses variable pos defined in fr::labri::gumtree::actions::model::Addition
   variable parent in line 7
   variable pos in line 9
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/model/Delete.java
module fr::labri::gumtree::actions::model::Delete
   inherits from fr::labri::gumtree::actions::model::Action
   function getName() in line 12
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in fr::labri::gumtree::actions::model::Delete
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses function toString() defined in fr::labri::gumtree::tree::Tree
   function Delete(Tree) in line 7
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/model/Insert.java
module fr::labri::gumtree::actions::model::Insert
   inherits from fr::labri::gumtree::actions::model::Addition
   function getName() in line 12
      3 lines of code
      0 parameters
      1 conditional paths
   function Insert(Tree,Tree,int) in line 7
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses variable parent defined in fr::labri::gumtree::actions::model::Addition
      uses variable pos defined in fr::labri::gumtree::actions::model::Addition
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/model/Move.java
module fr::labri::gumtree::actions::model::Move
   inherits from fr::labri::gumtree::actions::model::Addition
   function getName() in line 12
      3 lines of code
      0 parameters
      1 conditional paths
   function Move(Tree,Tree,int) in line 7
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses variable parent defined in fr::labri::gumtree::actions::model::Addition
      uses variable pos defined in fr::labri::gumtree::actions::model::Addition
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/model/Permute.java
module fr::labri::gumtree::actions::model::Permute
   inherits from fr::labri::gumtree::actions::model::Addition
   function getName() in line 12
      3 lines of code
      0 parameters
      1 conditional paths
   function Permute(Tree,Tree,int) in line 7
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses variable parent defined in fr::labri::gumtree::actions::model::Addition
      uses variable pos defined in fr::labri::gumtree::actions::model::Addition
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/model/Update.java
module fr::labri::gumtree::actions::model::Update
   inherits from fr::labri::gumtree::actions::model::Action
   function getName() in line 15
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in fr::labri::gumtree::actions::model::Update
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses function toString() defined in fr::labri::gumtree::tree::Tree
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses variable value defined in fr::labri::gumtree::actions::model::Update
   function Update(Tree,String) in line 9
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in fr::labri::gumtree::actions::model::Action
      uses variable value defined in fr::labri::gumtree::actions::model::Update
   variable value in line 7
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/RootAndLeavesClassifier.java
module fr::labri::gumtree::actions::RootAndLeavesClassifier
   inherits from fr::labri::gumtree::actions::TreeClassifier
   function classify() in line 27
      protection public
      35 lines of code
      0 parameters
      12 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable actions defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstAddTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable srcDelTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable srcUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable mappings defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses variable srcMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable t defined in jquery.min.js
   function RootAndLeavesClassifier(Tree,Tree,Set< Mapping >,List< Action >) in line 18
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable actions defined in fr::labri::gumtree::actions::TreeClassifier
   function RootAndLeavesClassifier(Tree,Tree,Matcher) in line 22
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses function m((null),(null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/RootsClassifier.java
module fr::labri::gumtree::actions::RootsClassifier
   inherits from fr::labri::gumtree::actions::TreeClassifier
   function classify() in line 26
      protection public
      13 lines of code
      0 parameters
      6 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable actions defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable srcDelTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstAddTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable srcUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable mappings defined in fr::labri::gumtree::actions::TreeClassifier
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses variable srcMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dstMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function RootsClassifier(Tree,Tree,Set< Mapping >,List< Action >) in line 18
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
   function RootsClassifier(Tree,Tree,Matcher) in line 22
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses function m((null),(null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/actions/TreeClassifier.java
module fr::labri::gumtree::actions::TreeClassifier
   abstract class
   function classify() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDstAddTrees() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dstAddTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function getDstMvTrees() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dstMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function getDstUpdTrees() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dstUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function getSrcDelTrees() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDelTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function getSrcMvTrees() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcMvTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function getSrcUpdTrees() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcUpdTrees defined in fr::labri::gumtree::actions::TreeClassifier
   function TreeClassifier(Tree,Tree,Set< Mapping >,List< Action >) in line 35
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable actions defined in fr::labri::gumtree::actions::TreeClassifier
      uses function classify() defined in fr::labri::gumtree::actions::TreeClassifier
   function TreeClassifier(Tree,Tree,Matcher) in line 41
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses function m((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
      uses function classify() defined in fr::labri::gumtree::actions::TreeClassifier
   function TreeClassifier(Tree,Tree,Set< Mapping >) in line 49
      11 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::actions::TreeClassifier
      uses variable dst defined in fr::labri::gumtree::actions::TreeClassifier
      uses function classify() defined in fr::labri::gumtree::actions::TreeClassifier
   variable actions in line 33
   variable dst in line 29
   variable dstAddTrees in line 25
   variable dstMvTrees in line 21
   variable dstUpdTrees in line 17
   variable mappings in line 31
   variable src in line 27
   variable srcDelTrees in line 23
   variable srcMvTrees in line 19
   variable srcUpdTrees in line 15
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/algo/HungarianAlgorithm.java
module fr::labri::gumtree::algo::HungarianAlgorithm
   function computeInitialFeasibleSolution() in line 101
      12 lines of code
      0 parameters
      5 conditional paths
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses variable costMatrix defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function execute() in line 121
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses function reduce() defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function computeInitialFeasibleSolution() defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function greedyMatch() defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function w((null),(null)) defined in jquery.min.js
      uses function fetchUnmatchedWorker() defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function initializePhase(int) defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function executePhase() defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable matchJobByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable rows defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function executePhase() in line 165
      53 lines of code
      0 parameters
      12 conditional paths
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable parentWorkerByCommittedJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable minSlackValueByJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable minSlackWorkerByJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function updateLabeling(double) defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable matchJobByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function match(int,int) defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable committedWorkers defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable costMatrix defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable labelByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function fetchUnmatchedWorker() in line 223
      9 lines of code
      0 parameters
      3 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses variable matchJobByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function greedyMatch() in line 237
      11 lines of code
      0 parameters
      4 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable matchJobByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable costMatrix defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable labelByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function match(int,int) defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function initializePhase(int) in line 257
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable committedWorkers defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable parentWorkerByCommittedJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function w((null),(null)) defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable minSlackValueByJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable costMatrix defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable labelByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable minSlackWorkerByJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function match(int,int) in line 271
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable matchJobByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function w((null),(null)) defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
   function reduce() in line 282
      29 lines of code
      0 parameters
      11 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable costMatrix defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function updateLabeling(double) in line 317
      14 lines of code
      1 parameters
      5 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses variable committedWorkers defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable labelByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable parentWorkerByCommittedJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable minSlackValueByJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function HungarianAlgorithm(double) in line 69
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable costMatrix defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses function w((null),(null)) defined in jquery.min.js
      uses variable labelByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable minSlackWorkerByJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable minSlackValueByJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable committedWorkers defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable parentWorkerByCommittedJob defined in fr::labri::gumtree::algo::HungarianAlgorithm
      uses variable matchJobByWorker defined in fr::labri::gumtree::algo::HungarianAlgorithm
   variable committedWorkers in line 58
   variable costMatrix in line 51
   variable labelByWorker in line 53
   variable matchJobByWorker in line 56
   variable minSlackValueByJob in line 55
   variable minSlackWorkerByJob in line 54
   variable parentWorkerByCommittedJob in line 57
   variable rows in line 52
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/algo/StringAlgorithms.java
module fr::labri::gumtree::algo::StringAlgorithms
   function hunks(String,String) in line 37
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses function lcs(String,String) defined in fr::labri::gumtree::algo::StringAlgorithms
      uses function lcss(String,String) defined in fr::labri::gumtree::algo::StringAlgorithms
      uses variable i defined in jquery.min.js
   function lcs(String,String) in line 63
      protection public
      22 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
   function lcss(String,String) in line 13
      protection public
      23 lines of code
      2 parameters
      7 conditional paths
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function lcss(List< Tree >,List< Tree >) in line 86
      protection public
      23 lines of code
      2 parameters
      7 conditional paths
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function StringAlgorithms() in line 11
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/io/ActionsSerializer.java
module fr::labri::gumtree::io::ActionsSerializer
   function toText(List< Action >) in line 15
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function toText(List< Action >,String) in line 27
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function ActionsSerializer() in line 12
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/io/MatrixDebugger.java
module fr::labri::gumtree::io::MatrixDebugger
   function dump(Object) in line 8
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses function l() defined in jquery.min.js
   function dump(boolean) in line 15
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses function l() defined in jquery.min.js
   function dump(double) in line 22
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses function l() defined in jquery.min.js
   function MatrixDebugger() in line 5
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/io/TreeGenerator.java
module fr::labri::gumtree::io::TreeGenerator
   abstract class
   function fromFile(String) in line 10
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function generate(String) defined in fr::labri::gumtree::io::TreeGenerator
      uses function refresh() defined in fr::labri::gumtree::tree::Tree
      uses function handleFile(String) defined in fr::labri::gumtree::io::TreeGenerator
      uses function getName() defined in fr::labri::gumtree::io::TreeGenerator
   function generate(String) in line 17
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getName() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function handleFile(String) in line 19
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/io/TreeIoUtils.java
module fr::labri::gumtree::io::TreeIoUtils
   function fromXml(String) in line 27
      protection public
      33 lines of code
      1 parameters
      6 conditional paths
      uses variable r defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function refresh() defined in fr::labri::gumtree::tree::Tree
   function toCompactXml(Tree,String) in line 101
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function toCompactXml(Tree) in line 111
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses function writeCompactTree(Tree,XMLStreamWriter) defined in fr::labri::gumtree::io::TreeIoUtils
      uses variable t defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function toDot(Tree) in line 137
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses function b((null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   function toDot(Tree,String) in line 160
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function toDot(Tree) defined in fr::labri::gumtree::io::TreeIoUtils
      uses variable e defined in jquery.min.js
   function toXml(Tree,String) in line 61
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function toXml(Tree) in line 71
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses function writeTree(Tree,XMLStreamWriter) defined in fr::labri::gumtree::io::TreeIoUtils
      uses variable t defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function writeCompactTree(Tree,XMLStreamWriter) in line 129
      7 lines of code
      2 parameters
      3 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function writeTree(Tree,XMLStreamWriter) in line 89
      11 lines of code
      2 parameters
      2 conditional paths
      uses function w((null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function TreeIoUtils() in line 24
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/CompositeMatcher.java
module fr::labri::gumtree::matchers::CompositeMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function match() in line 14
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable factories defined in fr::labri::gumtree::matchers::CompositeMatcher
      uses variable i defined in jquery.min.js
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function b((null),(null)) defined in jquery.min.js
      uses variable LOGGER defined in fr::labri::gumtree::matchers::Matcher
   function CompositeMatcher(Tree,Tree,MatcherFactory[]) in line 9
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable factories defined in fr::labri::gumtree::matchers::CompositeMatcher
   variable factories in line 7
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/CompositeMatchers.java
module fr::labri::gumtree::matchers::CompositeMatchers
module fr::labri::gumtree::matchers::CompositeMatchers::ChangeDistillerMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 15
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
module fr::labri::gumtree::matchers::CompositeMatchers::GumTreeMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 26
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
module fr::labri::gumtree::matchers::CompositeMatchers::XyMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 37
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/cd/ChangeDistillerBottumUpMatcher.java
module fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerBottumUpMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function match() in line 21
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function l() defined in jquery.min.js
      uses function numberOfLeafs(Tree) defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerBottumUpMatcher
      uses function isMatchable(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function isLeaf() defined in fr::labri::gumtree::tree::Tree
      uses function chawatheSimilarity(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable STRUCT_SIM_THRESHOLD_1 defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerBottumUpMatcher
      uses variable STRUCT_SIM_THRESHOLD_2 defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerBottumUpMatcher
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function numberOfLeafs(Tree) in line 38
      5 lines of code
      1 parameters
      3 conditional paths
      uses function l() defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
   function ChangeDistillerBottumUpMatcher(Tree,Tree) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   variable STRUCT_SIM_THRESHOLD_1 in line 12
      protection public
   variable STRUCT_SIM_THRESHOLD_2 in line 14
      protection public
module fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerBottumUpMatcher::ChangeDistillerBottomUpMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function ChangeDistillerBottumUpMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerBottumUpMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/cd/ChangeDistillerLeavesMatcher.java
module fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function match() in line 29
      protection public
      27 lines of code
      0 parameters
      7 conditional paths
      uses function retainLeaves(List< Tree >) defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable QGRAM defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher
      uses variable LABEL_SIM_THRESHOLD defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher
      uses function getFirst() defined in fr::labri::gumtree::tree::Pair
      uses function getSecond() defined in fr::labri::gumtree::tree::Pair
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function retainLeaves(List< Tree >) in line 57
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
   function ChangeDistillerLeavesMatcher(Tree,Tree) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   variable LABEL_SIM_THRESHOLD in line 20
      protection public
   variable QGRAM in line 22
module fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher::LeafMappingComparator
   inherits from java::util::Comparator
   function compare(Mapping,Mapping) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sim(Mapping) defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher::LeafMappingComparator
   function sim(Mapping) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable QGRAM defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher
      uses function m((null),(null)) defined in jquery.min.js
module fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher::ChangeDistillerLeavesMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 82
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function ChangeDistillerLeavesMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::cd::ChangeDistillerLeavesMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/gt/CompleteBottomUpMatcher.java
module fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function getDstCandidates(Tree) in line 67
      20 lines of code
      1 parameters
      7 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
      uses function m((null),(null)) defined in jquery.min.js
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses function getType() defined in fr::labri::gumtree::tree::Tree
      uses function isMatched() defined in fr::labri::gumtree::tree::Tree
      uses function isRoot() defined in fr::labri::gumtree::tree::Tree
   function lastChanceMatch(Tree,Tree) in line 89
      29 lines of code
      2 parameters
      8 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function deepCopy() defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses variable SIZE_THESHOLD defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses function m((null),(null)) defined in jquery.min.js
      uses variable srcIds defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses function getTree(int) defined in fr::labri::gumtree::tree::TreeMap
      uses variable dstIds defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function isMatchable(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses function getType() defined in fr::labri::gumtree::tree::Tree
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   function match() in line 36
      protection public
      30 lines of code
      0 parameters
      7 conditional paths
      uses variable srcIds defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dstIds defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable t defined in jquery.min.js
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses function lastChanceMatch(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses function getDstCandidates(Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses function D((null)) defined in jquery.min.js
      uses function jaccardSimilarity(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable SIM_THRESHOLD defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses function clean() defined in fr::labri::gumtree::matchers::Matcher
   function CompleteBottomUpMatcher(Tree,Tree) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   variable dstIds in line 30
   variable SIM_THRESHOLD in line 24
   variable SIZE_THESHOLD in line 26
   variable srcIds in line 28
module fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher::CompleteBottumUpMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function CompleteBottomUpMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::CompleteBottomUpMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/gt/GreedyBottomUpMatcher.java
module fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function lastChanceMatch(Tree,Tree) in line 62
      24 lines of code
      2 parameters
      9 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function deepCopy() defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses variable SIZE_THESHOLD defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses function m((null),(null)) defined in jquery.min.js
      uses variable srcIds defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses variable dstIds defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function isMatched() defined in fr::labri::gumtree::tree::Tree
      uses function isMatchable(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses function getType() defined in fr::labri::gumtree::tree::Tree
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   function match() in line 37
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable t defined in jquery.min.js
      uses variable srcIds defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses variable dstIds defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses function clean() defined in fr::labri::gumtree::matchers::Matcher
   function match(List< Tree >,List< Tree >) in line 46
      14 lines of code
      2 parameters
      6 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function isMatchable(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function isLeaf() defined in fr::labri::gumtree::tree::Tree
      uses function jaccardSimilarity(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable SIM_THRESHOLD defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses function isRoot() defined in fr::labri::gumtree::tree::Tree
      uses function areDescendantsMatched() defined in fr::labri::gumtree::tree::Tree
      uses function lastChanceMatch(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function GreedyBottomUpMatcher(Tree,Tree) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   variable dstIds in line 31
   variable SIM_THRESHOLD in line 25
   variable SIZE_THESHOLD in line 27
   variable srcIds in line 29
module fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher::GreedyBottumUpMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 90
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function GreedyBottomUpMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::GreedyBottomUpMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/gt/GreedySubtreeMatcher.java
module fr::labri::gumtree::matchers::heuristic::gt::GreedySubtreeMatcher
   inherits from fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
   function filterMappings(MultiMappingStore) in line 22
      protection public
      32 lines of code
      1 parameters
      8 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getSrcs() defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function isSrcUnique(Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function addFullMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function getFirst() defined in fr::labri::gumtree::tree::Pair
      uses function getSecond() defined in fr::labri::gumtree::tree::Pair
   function GreedySubtreeMatcher(Tree,Tree) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
module fr::labri::gumtree::matchers::heuristic::gt::GreedySubtreeMatcher::MappingComparator
   inherits from java::util::Comparator
   function compare(Mapping,Mapping) in line 58
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function sim(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
      uses function getFirst() defined in fr::labri::gumtree::tree::Pair
      uses function getSecond() defined in fr::labri::gumtree::tree::Pair
module fr::labri::gumtree::matchers::heuristic::gt::GreedySubtreeMatcher::GreedySubtreeMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 68
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function GreedySubtreeMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::GreedySubtreeMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/gt/HungarianSubtreeMatcher.java
module fr::labri::gumtree::matchers::heuristic::gt::HungarianSubtreeMatcher
   inherits from fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
   function cost(Tree,Tree) in line 55
      3 lines of code
      2 parameters
      1 conditional paths
      uses function D((null)) defined in jquery.min.js
      uses function sim(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   function filterMappings(MultiMappingStore) in line 20
      protection public
      34 lines of code
      1 parameters
      11 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getSrcs() defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function isSrcUnique(Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function addFullMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function getSrc(Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function link(Tree,Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function cost(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::HungarianSubtreeMatcher
      uses function execute() defined in fr::labri::gumtree::algo::HungarianAlgorithm
   function HungarianSubtreeMatcher(Tree,Tree) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
module fr::labri::gumtree::matchers::heuristic::gt::HungarianSubtreeMatcher::MultiMappingComparator
   inherits from java::util::Comparator
   function compare(MultiMappingStore,MultiMappingStore) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function impact(MultiMappingStore) defined in fr::labri::gumtree::matchers::heuristic::gt::HungarianSubtreeMatcher::MultiMappingComparator
   function impact(MultiMappingStore) in line 66
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function m((null),(null)) defined in jquery.min.js
      uses function getParents() defined in fr::labri::gumtree::tree::Tree
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/gt/SubtreeMatcher.java
module fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   abstract class
   function filterMappings(MultiMappingStore) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMaxTreeSize() in line 73
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   function match() in line 22
      protection public
      36 lines of code
      0 parameters
      10 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function peekHeight() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function popLarger(PriorityTreeList,PriorityTreeList) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
      uses function pop() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function isClone(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function link(Tree,Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function open() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function updateHeight() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function filterMappings(MultiMappingStore) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
   function popLarger(PriorityTreeList,PriorityTreeList) in line 18
      3 lines of code
      2 parameters
      2 conditional paths
      uses function peekHeight() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function open() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function sim(Tree,Tree) in line 61
      11 lines of code
      2 parameters
      1 conditional paths
      uses function jaccardSimilarity(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function isRoot() defined in fr::labri::gumtree::tree::Tree
      uses function getChildPosition(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function D((null)) defined in jquery.min.js
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function getMaxTreeSize() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
   function SubtreeMatcher(Tree,Tree) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   variable MIN_HEIGHT in line 12
module fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function addTree(Tree) in line 104
      7 lines of code
      1 parameters
      3 conditional paths
      uses function getHeight() defined in fr::labri::gumtree::tree::Tree
      uses variable MIN_HEIGHT defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
      uses function idx(Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses variable trees defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function height(int) in line 100
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxHeight defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function idx(Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function idx(Tree) in line 92
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getHeight() defined in fr::labri::gumtree::tree::Tree
   function idx(int) in line 96
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxHeight defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function height(int) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function open() in line 112
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function pop() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function updateHeight() defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function open(Tree) in line 131
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function addTree(Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function peekHeight() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentIdx defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function height(int) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function pop() in line 121
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable currentIdx defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses variable trees defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function updateHeight() in line 139
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable currentIdx defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses variable i defined in jquery.min.js
      uses variable trees defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   function PriorityTreeList(Tree) in line 86
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable trees defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses variable MIN_HEIGHT defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher
      uses variable maxHeight defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
      uses function addTree(Tree) defined in fr::labri::gumtree::matchers::heuristic::gt::SubtreeMatcher::PriorityTreeList
   variable currentIdx in line 83
   variable maxHeight in line 81
   variable trees in line 79
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/LcsMatcher.java
module fr::labri::gumtree::matchers::heuristic::LcsMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function match() in line 17
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function x((null)) defined in jquery.min.js
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function LcsMatcher(Tree,Tree) in line 12
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/heuristic/XyBottomUpMatcher.java
module fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function getDstCandidates(Tree) in line 66
      20 lines of code
      1 parameters
      7 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
      uses function m((null),(null)) defined in jquery.min.js
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses function getType() defined in fr::labri::gumtree::tree::Tree
      uses function isMatched() defined in fr::labri::gumtree::tree::Tree
   function lastChanceMatch(Tree,Tree) in line 87
      17 lines of code
      2 parameters
      7 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable t defined in jquery.min.js
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function match() in line 36
      protection public
      29 lines of code
      0 parameters
      9 conditional paths
      uses variable t defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
      uses variable srcs defined in fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable dsts defined in fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher
      uses function isRoot() defined in fr::labri::gumtree::tree::Tree
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses function lastChanceMatch(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher
      uses function isMatched() defined in fr::labri::gumtree::tree::Tree
      uses function isLeaf() defined in fr::labri::gumtree::tree::Tree
      uses function getDstCandidates(Tree) defined in fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher
      uses function D((null)) defined in jquery.min.js
      uses function jaccardSimilarity(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable SIM_THRESHOLD defined in fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher
      uses function clean() defined in fr::labri::gumtree::matchers::Matcher
   function XyBottomUpMatcher(Tree,Tree) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   variable dsts in line 30
   variable SIM_THRESHOLD in line 26
   variable srcs in line 28
module fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher::XyBottomUpMatcherFactory
   inherits from fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 108
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function XyBottomUpMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::heuristic::XyBottomUpMatcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/Mapping.java
module fr::labri::gumtree::matchers::Mapping
   inherits from fr::labri::gumtree::tree::Pair
   function Mapping(Tree,Tree) in line 8
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/MappingStore.java
module fr::labri::gumtree::matchers::MappingStore
   inherits from Iterable
   function asSet() in line 33
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
   function copy() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function MappingStore() defined in fr::labri::gumtree::matchers::MappingStore
      uses function asSet() defined in fr::labri::gumtree::matchers::MappingStore
   function firstMappedDstParent(Tree) in line 65
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses function hasDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function firstMappedSrcParent(Tree) in line 53
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
      uses function hasSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function getDst(Tree) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
   function getSrc(Tree) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dsts defined in fr::labri::gumtree::matchers::MappingStore
   function has(Tree,Tree) in line 93
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
   function hasDst(Tree) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dsts defined in fr::labri::gumtree::matchers::MappingStore
   function hasSrc(Tree) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
   function iterator() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function asSet() defined in fr::labri::gumtree::matchers::MappingStore
   function link(Tree,Tree) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MappingStore
   function unlink(Tree,Tree) in line 48
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MappingStore
   function MappingStore(Set< Mapping >) in line 17
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MappingStore
      uses function m((null),(null)) defined in jquery.min.js
      uses function link(Tree,Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function MappingStore() in line 23
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MappingStore
   function MappingStore(int) in line 28
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MappingStore
   variable dsts in line 15
   variable srcs in line 13
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/Matcher.java
module fr::labri::gumtree::matchers::Matcher
   abstract class
   function addFullMapping(Tree,Tree) in line 62
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable i defined in jquery.min.js
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function addMapping(Tree,Tree) in line 56
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function setMatched(boolean) defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function link(Tree,Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function chawatheSimilarity(Tree,Tree) in line 72
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function numberOfCommonDescendants(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function clean() in line 100
      4 lines of code
      0 parameters
      5 conditional paths
      uses variable t defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function hasSrc(Tree) defined in fr::labri::gumtree::matchers::MappingStore
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function hasDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function diceSimilarity(Tree,Tree) in line 77
      4 lines of code
      2 parameters
      1 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses function numberOfCommonDescendants(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function D((null)) defined in jquery.min.js
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
   function getDst() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   function getMappings() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
   function getMappingSet() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function asSet() defined in fr::labri::gumtree::matchers::MappingStore
   function getSrc() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
   function jaccardSimilarity(Tree,Tree) in line 82
      5 lines of code
      2 parameters
      1 conditional paths
      uses function numberOfCommonDescendants(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
   function match() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function numberOfCommonDescendants(Tree,Tree) in line 88
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
      uses variable t defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses function m((null),(null)) defined in jquery.min.js
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function getDst(Tree) defined in fr::labri::gumtree::matchers::MappingStore
   function setDst(Tree) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
   function setMappings(MappingStore) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
   function setSrc(Tree) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
   function Matcher(Tree,Tree) in line 20
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function match() defined in fr::labri::gumtree::matchers::Matcher
   variable dst in line 16
   variable LOGGER in line 12
      protection public
   variable mappings in line 18
   variable src in line 14
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/MatcherFactories.java
module fr::labri::gumtree::matchers::MatcherFactories
   function addFactory(MatcherFactory) in line 58
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factories defined in fr::labri::gumtree::matchers::MatcherFactories
   function getDefaultMatcherFactory() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factories defined in fr::labri::gumtree::matchers::MatcherFactories
   function getFactory(Class<?extends MatcherFactory >) in line 20
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable factories defined in fr::labri::gumtree::matchers::MatcherFactories
      uses variable e defined in jquery.min.js
   function getFactory(String) in line 33
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getFactory(Class<?extends MatcherFactory >) defined in fr::labri::gumtree::matchers::MatcherFactories
      uses variable e defined in jquery.min.js
   function newMatcher(Tree,Tree,Class<?extends MatcherFactory >) in line 46
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getFactory(Class<?extends MatcherFactory >) defined in fr::labri::gumtree::matchers::MatcherFactories
      uses function newMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree,String) in line 50
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getFactory(Class<?extends MatcherFactory >) defined in fr::labri::gumtree::matchers::MatcherFactories
      uses function newMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getDefaultMatcherFactory() defined in fr::labri::gumtree::matchers::MatcherFactories
      uses function newMatcher(Tree,Tree) defined in fr::labri::gumtree::matchers::MatcherFactory
   variable factories in line 11
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/MatcherFactory.java
module fr::labri::gumtree::matchers::MatcherFactory
   function newMatcher(Tree,Tree) in line 7
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/MultiMappingStore.java
module fr::labri::gumtree::matchers::MultiMappingStore
   inherits from Iterable
   function getDst(Tree) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
   function getDsts() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
   function getMappings() in line 28
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
   function getSrc(Tree) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
   function getSrcs() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
   function has(Tree,Tree) in line 72
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
   function hasDst(Tree) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
   function hasSrc(Tree) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
   function isSrcUnique(Tree) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
   function iterator() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMappings() defined in fr::labri::gumtree::matchers::MultiMappingStore
   function link(Tree,Tree) in line 36
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
   function unlink(Tree,Tree) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
   function MultiMappingStore(Set< Mapping >) in line 17
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses function m((null),(null)) defined in jquery.min.js
      uses function link(Tree,Tree) defined in fr::labri::gumtree::matchers::MultiMappingStore
   function MultiMappingStore() in line 23
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable srcs defined in fr::labri::gumtree::matchers::MultiMappingStore
      uses variable dsts defined in fr::labri::gumtree::matchers::MultiMappingStore
   variable dsts in line 15
   variable srcs in line 13
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/optimal/rted/InfoTree.java
module fr::labri::gumtree::matchers::optimal::rted::InfoTree
   function gatherInfo(Tree,int) in line 210
      142 lines of code
      2 parameters
      16 conditional paths
      uses variable e defined in jquery.min.js
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function setTmpData(Object) defined in fr::labri::gumtree::tree::Tree
      uses function store(String) defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses variable i defined in jquery.min.js
   function getCurrentNode() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInfo(int,int) in line 145
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getInfoArray(int) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNodeRelSubtrees(int,int) in line 168
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getNodeTypeArray(int) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPath(int) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSize() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ifNodeOfType(int,int) in line 129
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isSwitched() in line 440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function postTraversalProcessing() in line 356
      65 lines of code
      0 parameters
      11 conditional paths
      uses variable i defined in jquery.min.js
      uses variable k defined in jquery.min.js
   function setCurrentNode(int) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSwitched(boolean) in line 436
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toIntArray(List< Integer >) in line 427
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable n defined in jquery.min.js
   function InfoTree(Tree,LabelDictionary) in line 103
      protection public
      16 lines of code
      2 parameters
      1 conditional paths
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
   variable BOTH in line 40
   variable currentNode in line 81
   variable descSizesTmp in line 75
   variable HEAVY in line 39
   variable info in line 63
      protection public
   variable inputTree in line 35
   variable KR in line 53
      protection public
   variable krSizesSumTmp in line 76
   variable ld in line 65
   variable leafCount in line 87
   variable LEFT in line 37
   variable nodeType in line 67
      protection public
   variable paths in line 70
   variable POST2_DESC_SUM in line 49
      protection public
   variable POST2_KR_SUM in line 47
      protection public
   variable POST2_LABEL in line 52
      protection public
   variable POST2_LLD in line 54
      protection public
   variable POST2_MIN_KR in line 55
      protection public
   variable POST2_PARENT in line 51
      protection public
   variable POST2_PRE in line 50
      protection public
   variable POST2_REV_KR_SUM in line 48
      protection public
   variable POST2_SIZE in line 46
      protection public
   variable POST2_STRATEGY in line 60
      protection public
   variable PRE2_POST in line 61
      protection public
   variable preorderTmp in line 78
   variable relSubtrees in line 71
   variable revkrSizesSumTmp in line 77
   variable RIGHT in line 38
   variable RKR in line 56
      protection public
   variable RPOST2_MIN_RKR in line 58
      protection public
   variable RPOST2_POST in line 59
      protection public
   variable RPOST2_RLD in line 57
      protection public
   variable sizeTmp in line 74
   variable switched in line 84
   variable treeSize in line 88
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/optimal/rted/LabelDictionary.java
module fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
   function isNewLabelsAllowed() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable newLabelsAllowed defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
   function read(int) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable intStr defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
   function setNewLabelsAllowed(boolean) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newLabelsAllowed defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
   function store(String) in line 53
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable strInt defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
      uses variable newLabelsAllowed defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
      uses variable KEY_DUMMY_LABEL defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
      uses variable count defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
      uses variable intStr defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
   function LabelDictionary() in line 39
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable count defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
      uses variable strInt defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
      uses variable intStr defined in fr::labri::gumtree::matchers::optimal::rted::LabelDictionary
   variable count in line 29
   variable intStr in line 31
   variable KEY_DUMMY_LABEL in line 28
      protection public
   variable newLabelsAllowed in line 32
   variable strInt in line 30
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/optimal/rted/RtedAlgorithm.java
module fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function computeDistUsingStrArray(InfoTree,InfoTree) in line 303
      142 lines of code
      2 parameters
      25 conditional paths
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getCurrentNode() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable str defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable LEFT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getPath(int) defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses function getNodeRelSubtrees(int,int) defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses function setCurrentNode(int) defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses function setSwitched(boolean) defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable strStat defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function spfL(InfoTree,InfoTree) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RIGHT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function spfR(InfoTree,InfoTree) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable HEAVY defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function spfH(InfoTree,InfoTree,int[]) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable REVLEFT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable REVRIGHT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable REVHEAVY defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function computeEditMapping() in line 1066
      protection public
      86 lines of code
      0 parameters
      11 conditional paths
      uses variable size1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable deltaBit defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function forestDist(InfoTree,InfoTree,int,int,double,double) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getInfo(int,int) defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_LLD defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable costDel defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function computeIJTable(InfoTree,int,int,int,int,int) in line 948
      40 lines of code
      6 parameters
      10 conditional paths
      uses variable it defined in jquery.min.js
      uses variable POST2_PRE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RPOST2_POST defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable LEFT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function x((null)) defined in jquery.min.js
      uses variable ij defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function computeOptimalStrategy() in line 195
      protection public
      100 lines of code
      0 parameters
      9 conditional paths
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable nodeType defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable LEFT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RIGHT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable HEAVY defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_SIZE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_DESC_SUM defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_KR_SUM defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_REV_KR_SUM defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_PARENT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable str defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function v((null),(null)) defined in jquery.min.js
      uses variable costW defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function w((null),(null)) defined in jquery.min.js
      uses variable costV defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable i defined in jquery.min.js
   function computePeriod(InfoTree,int,int,InfoTree,int) in line 672
      264 lines of code
      5 parameters
      23 conditional paths
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getSize() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_PRE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_SIZE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getCurrentNode() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable k defined in jquery.min.js
      uses variable LEFT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable previousStrategy defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function computeIJTable(InfoTree,int,int,int,int,int) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_STRATEGY defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function isSwitched() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable tTMP defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable tCOPY defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable t defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function setDeltaValue(int,int,double,boolean) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable PRE2_POST defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function jOfI(InfoTree,int,int,int,int,int,int) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable i defined in jquery.min.js
      uses variable costDel defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable q defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_LABEL defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable ij defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RPOST2_POST defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable s defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable BOTH defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function x((null)) defined in jquery.min.js
   function forestDist(InfoTree,InfoTree,int,int,double,double) in line 1153
      28 lines of code
      6 parameters
      5 conditional paths
      uses function getInfo(int,int) defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_LLD defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable costDel defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_LABEL defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function init(Tree,Tree) in line 143
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses variable ld defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getSize() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable size2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable ij defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable deltaBit defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable costV defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable costW defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getInfoArray(int) defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_LABEL defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable POST2_SIZE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function jOfI(InfoTree,int,int,int,int,int,int) in line 1001
      9 lines of code
      7 parameters
      1 conditional paths
      uses variable LEFT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it defined in jquery.min.js
      uses variable POST2_SIZE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RPOST2_POST defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function nonNormalizedTreeDist(Tree,Tree) in line 120
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function init(Tree,Tree) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable str defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function computeOptimalStrategy() defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function computeDistUsingStrArray(InfoTree,InfoTree) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function nonNormalizedTreeDist() in line 127
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable str defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function computeDistUsingStrArray(InfoTree,InfoTree) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function setCustomCosts(double,double,double) in line 1027
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable costDel defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function setCustomStrategy(int) in line 1033
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable str defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function setCustomStrategy(int,boolean) in line 1037
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable str defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable size2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_SIZE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function setDeltaBitValue(int,int,byte,boolean) in line 1019
      7 lines of code
      4 parameters
      2 conditional paths
      uses variable deltaBit defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function b((null),(null)) defined in jquery.min.js
      uses function a((null),(null),(null)) defined in jquery.min.js
   function setDeltaValue(int,int,double,boolean) in line 1011
      7 lines of code
      4 parameters
      2 conditional paths
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function b((null),(null)) defined in jquery.min.js
      uses function a((null),(null),(null)) defined in jquery.min.js
   function spfH(InfoTree,InfoTree,int[]) in line 595
      67 lines of code
      3 parameters
      12 conditional paths
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_SIZE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getCurrentNode() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getSize() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_PRE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable t defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable tCOPY defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable s defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable q defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable it defined in jquery.min.js
      uses variable POST2_STRATEGY defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable BOTH defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable i defined in jquery.min.js
      uses function jOfI(InfoTree,int,int,int,int,int,int) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable previousStrategy defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function computePeriod(InfoTree,int,int,InfoTree,int) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable LEFT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RIGHT defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function spfL(InfoTree,InfoTree) in line 454
      19 lines of code
      2 parameters
      3 conditional paths
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getCurrentNode() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_MIN_KR defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable KR defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function treeEditDist(InfoTree,InfoTree,int,int) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function isSwitched() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable deltaBit defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function spfR(InfoTree,InfoTree) in line 516
      17 lines of code
      2 parameters
      3 conditional paths
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getSize() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_PRE defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function getCurrentNode() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RPOST2_MIN_RKR defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RKR defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function treeEditDistRev(InfoTree,InfoTree,int,int) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function isSwitched() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable deltaBit defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function treeEditDist(InfoTree,InfoTree,int,int) in line 474
      33 lines of code
      4 parameters
      7 conditional paths
      uses function m((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable POST2_LLD defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable n defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function isSwitched() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses function u() defined in jquery.min.js
      uses variable POST2_LABEL defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable da defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable costDel defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function setDeltaValue(int,int,double,boolean) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function setDeltaBitValue(int,int,byte,boolean) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable deltaBit defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function treeEditDistRev(InfoTree,InfoTree,int,int) in line 534
      52 lines of code
      4 parameters
      7 conditional paths
      uses function m((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable it1 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable info defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses variable RPOST2_RLD defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable n defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable it2 defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function isSwitched() defined in fr::labri::gumtree::matchers::optimal::rted::InfoTree
      uses function u() defined in jquery.min.js
      uses variable POST2_LABEL defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable RPOST2_POST defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable da defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable costDel defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function setDeltaValue(int,int,double,boolean) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses function setDeltaBitValue(int,int,byte,boolean) defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable deltaBit defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
      uses variable delta defined in fr::labri::gumtree::matchers::optimal::rted::RtedAlgorithm
   function RtedAlgorithm(double,double,double) in line 107
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable BOTH in line 36
   variable costDel in line 98
   variable costV in line 81
   variable costW in line 82
   variable da in line 94
   variable delta in line 75
   variable deltaBit in line 77
   variable HEAVY in line 35
   variable ij in line 80
   variable it1 in line 67
   variable it2 in line 68
   variable KR in line 48
   variable ld in line 71
   variable LEFT in line 33
   variable POST2_DESC_SUM in line 43
   variable POST2_KR_SUM in line 41
   variable POST2_LABEL in line 47
   variable POST2_LLD in line 50
   variable POST2_MIN_KR in line 51
   variable POST2_PARENT in line 46
   variable POST2_PRE in line 45
   variable POST2_REV_KR_SUM in line 42
   variable POST2_SIZE in line 40
   variable POST2_STRATEGY in line 60
   variable PRE2_POST in line 64
   variable previousStrategy in line 95
   variable q in line 92
   variable REVHEAVY in line 39
   variable REVLEFT in line 37
   variable REVRIGHT in line 38
   variable RIGHT in line 34
   variable RKR in line 53
   variable RPOST2_MIN_RKR in line 56
   variable RPOST2_POST in line 58
   variable RPOST2_RLD in line 54
   variable s in line 91
   variable size1 in line 69
   variable size2 in line 70
   variable str in line 74
   variable strStat in line 96
   variable t in line 83
   variable tCOPY in line 86
   variable tTMP in line 90
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/optimal/rted/RtedMatcher.java
module fr::labri::gumtree::matchers::optimal::rted::RtedMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function match() in line 16
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function D((null)) defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
      uses function m((null),(null)) defined in jquery.min.js
      uses function isMatchable(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
   function RtedMatcher(Tree,Tree) in line 11
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::Matcher
      uses variable dst defined in fr::labri::gumtree::matchers::Matcher
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/optimal/zs/ComputeTreeCost.java
module fr::labri::gumtree::matchers::optimal::zs::ComputeTreeCost
   function deleteCost(Tree) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function D((null)) defined in jquery.min.js
   function insertCost(Tree) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function D((null)) defined in jquery.min.js
   function updateCost(Tree,Tree) in line 13
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses function getType() defined in fr::labri::gumtree::tree::Tree
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses function D((null)) defined in jquery.min.js
      uses variable qgram defined in fr::labri::gumtree::matchers::optimal::zs::ComputeTreeCost
   function ComputeTreeCost() in line 10
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable qgram in line 8
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/matchers/optimal/zs/ZsMatcher.java
module fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
   inherits from fr::labri::gumtree::matchers::Matcher
   function align() in line 47
      12 lines of code
      0 parameters
      6 conditional paths
      uses variable kr defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable i defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function treeDist(int,int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable dist defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function size() defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
   function computeMappings() in line 27
      19 lines of code
      0 parameters
      4 conditional paths
      uses function forestDist(int,int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable src defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function size() defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses function l() defined in jquery.min.js
      uses function D((null)) defined in jquery.min.js
      uses function u() defined in jquery.min.js
      uses function addMapping(Tree,Tree) defined in fr::labri::gumtree::matchers::Matcher
      uses variable nodes defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
   function forestDist(int,int) in line 91
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable lmd defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function deleteCost(int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses function insertCost(int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable k defined in jquery.min.js
      uses function l() defined in jquery.min.js
      uses function updateCost(int,int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable dist defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function treeDist(int,int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
   function match() in line 123
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function align() defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function computeMappings() defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable mappings defined in fr::labri::gumtree::matchers::Matcher
      uses function iterator() defined in fr::labri::gumtree::matchers::MappingStore
      uses function m((null),(null)) defined in jquery.min.js
   function treeDist(int,int) in line 60
      30 lines of code
      2 parameters
      7 conditional paths
      uses function d((null),(null)) defined in jquery.min.js
      uses variable dist defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable src defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable lmd defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses function deleteCost(int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses function insertCost(int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable k defined in jquery.min.js
      uses function l() defined in jquery.min.js
      uses function updateCost(int,int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
   function updateCost(int,int) in line 118
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cost defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function updateCost(Tree,Tree) defined in fr::labri::gumtree::matchers::optimal::zs::ComputeTreeCost
      uses variable src defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable nodes defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
   function ZsMatcher(Tree,Tree) in line 18
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable src defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable dist defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses variable cost defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses variable i defined in jquery.min.js
   variable cost in line 16
   variable dist in line 14
   variable src in line 12
module fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
   function deleteCost(int) in line 158
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cost defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function deleteCost(Tree) defined in fr::labri::gumtree::matchers::optimal::zs::ComputeTreeCost
      uses variable nodes defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable n defined in jquery.min.js
   function insertCost(int) in line 154
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cost defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher
      uses function insertCost(Tree) defined in fr::labri::gumtree::matchers::optimal::zs::ComputeTreeCost
      uses variable nodes defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable n defined in jquery.min.js
   function postOrderNumbering(Tree,int) in line 166
      8 lines of code
      2 parameters
      3 conditional paths
      uses function l() defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable n defined in jquery.min.js
      uses variable nodes defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable lmd defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable kr defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
   function size() in line 162
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nodes defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable length defined in fr::labri::gumtree::tree::Tree
   function TreeInfo(Tree) in line 143
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable t defined in jquery.min.js
      uses function size() defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable nodes defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable lmd defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses variable kr defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
      uses function postOrderNumbering(Tree,int) defined in fr::labri::gumtree::matchers::optimal::zs::ZsMatcher::TreeInfo
   variable kr in line 141
   variable lmd in line 140
   variable nodes in line 138
   variable root in line 137
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/tree/DigestGenerator.java
module fr::labri::gumtree::tree::DigestGenerator
   abstract class
   function byteArrayToInt(byte[]) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function b((null),(null)) defined in jquery.min.js
   function computeDigest(Tree) in line 10
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function fpow(int,int) in line 16
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function b((null),(null)) defined in jquery.min.js
      uses function a((null),(null),(null)) defined in jquery.min.js
   function md5digest(String) in line 26
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses function byteArrayToInt(byte[]) defined in fr::labri::gumtree::tree::DigestGenerator
      uses variable e defined in jquery.min.js
      uses variable NO_VALUE defined in fr::labri::gumtree::tree::Tree
module fr::labri::gumtree::tree::DigestGenerator::StdHashGenerator
   inherits from fr::labri::gumtree::tree::DigestGenerator
   function computeDigest(Tree) in line 39
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
module fr::labri::gumtree::tree::DigestGenerator::Md5HashGenerator
   inherits from fr::labri::gumtree::tree::DigestGenerator
   function computeDigest(Tree) in line 46
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
      uses function md5digest(String) defined in fr::labri::gumtree::tree::DigestGenerator
module fr::labri::gumtree::tree::DigestGenerator::RollingStdHashGenerator
   inherits from fr::labri::gumtree::tree::DigestGenerator
   function computeDigest(Tree) in line 55
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable t defined in jquery.min.js
      uses variable n defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function B((null),(null)) defined in jquery.min.js
      uses function fpow(int,int) defined in fr::labri::gumtree::tree::DigestGenerator
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
   variable B in line 52
module fr::labri::gumtree::tree::DigestGenerator::RollingMd5HashGenerator
   inherits from fr::labri::gumtree::tree::DigestGenerator
   function computeDigest(Tree) in line 76
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable t defined in jquery.min.js
      uses function md5digest(String) defined in fr::labri::gumtree::tree::DigestGenerator
      uses variable n defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function B((null),(null)) defined in jquery.min.js
      uses function fpow(int,int) defined in fr::labri::gumtree::tree::DigestGenerator
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
   variable B in line 73
module fr::labri::gumtree::tree::DigestGenerator::RollingRdmHashGenerator
   inherits from fr::labri::gumtree::tree::DigestGenerator
   function computeDigest(Tree) in line 99
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable t defined in jquery.min.js
      uses variable n defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function B((null),(null)) defined in jquery.min.js
      uses function fpow(int,int) defined in fr::labri::gumtree::tree::DigestGenerator
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
   function rdmDigest(String) in line 115
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function s((null)) defined in jquery.min.js
   variable B in line 94
   variable digests in line 96
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/tree/Pair.java
module fr::labri::gumtree::tree::Pair
   function equals(Object) in line 35
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getFirst() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSecond() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFirst(T1) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSecond(T2) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Pair(T1,T2) in line 9
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable first in line 5
   variable second in line 7
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/tree/Tree.java
module fr::labri::gumtree::tree::Tree
   function addChild(Tree) in line 415
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in fr::labri::gumtree::tree::Tree
      uses variable t defined in jquery.min.js
   function areDescendantsMatched() in line 108
      protection public
      4 lines of code
      0 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses function getDescendants() defined in fr::labri::gumtree::tree::Tree
   function copy() in line 166
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function Tree(int) defined in fr::labri::gumtree::tree::Tree
      uses function getType() defined in fr::labri::gumtree::tree::Tree
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses function setTypeLabel(String) defined in fr::labri::gumtree::tree::Tree
      uses function getTypeLabel() defined in fr::labri::gumtree::tree::Tree
      uses function setId(int) defined in fr::labri::gumtree::tree::Tree
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function setMatched(boolean) defined in fr::labri::gumtree::tree::Tree
      uses function isMatched() defined in fr::labri::gumtree::tree::Tree
      uses function setPos(int) defined in fr::labri::gumtree::tree::Tree
      uses function getPos() defined in fr::labri::gumtree::tree::Tree
      uses function setLength(int) defined in fr::labri::gumtree::tree::Tree
      uses function getLength() defined in fr::labri::gumtree::tree::Tree
      uses function setHeight(int) defined in fr::labri::gumtree::tree::Tree
      uses function getHeight() defined in fr::labri::gumtree::tree::Tree
      uses function setSize(int) defined in fr::labri::gumtree::tree::Tree
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses function setDepth(int) defined in fr::labri::gumtree::tree::Tree
      uses function getDepth() defined in fr::labri::gumtree::tree::Tree
      uses function setDigest(int) defined in fr::labri::gumtree::tree::Tree
      uses function getDigest() defined in fr::labri::gumtree::tree::Tree
      uses function setTmpData(Object) defined in fr::labri::gumtree::tree::Tree
      uses function getTmpData() defined in fr::labri::gumtree::tree::Tree
   function deepCopy() in line 156
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function copy() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function addChild(Tree) defined in fr::labri::gumtree::tree::Tree
   function equals(Object) in line 229
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function Tree(int) defined in fr::labri::gumtree::tree::Tree
      uses variable NO_ID defined in fr::labri::gumtree::tree::Tree
      uses variable id defined in fr::labri::gumtree::tree::Tree
   function getChildPosition(Tree) in line 218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in fr::labri::gumtree::tree::Tree
   function getChildren() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in fr::labri::gumtree::tree::Tree
   function getChildrenLabels() in line 222
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses function b((null),(null)) defined in jquery.min.js
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function equals(Object) defined in fr::labri::gumtree::tree::Tree
   function getDepth() in line 331
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable depth defined in fr::labri::gumtree::tree::Tree
   function getDescendants() in line 193
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getDigest() in line 335
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable digest defined in fr::labri::gumtree::tree::Tree
   function getEndPos() in line 319
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pos defined in fr::labri::gumtree::tree::Tree
      uses variable length defined in fr::labri::gumtree::tree::Tree
   function getHeight() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable height defined in fr::labri::gumtree::tree::Tree
   function getId() in line 339
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in fr::labri::gumtree::tree::Tree
   function getLabel() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in fr::labri::gumtree::tree::Tree
   function getLeaves() in line 238
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   function getLength() in line 351
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable length defined in fr::labri::gumtree::tree::Tree
   function getParent() in line 359
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in fr::labri::gumtree::tree::Tree
   function getParents() in line 203
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getParent() defined in fr::labri::gumtree::tree::Tree
   function getPos() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pos defined in fr::labri::gumtree::tree::Tree
   function getShortLabel() in line 343
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in fr::labri::gumtree::tree::Tree
   function getSize() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable size defined in fr::labri::gumtree::tree::Tree
   function getTmpData() in line 439
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tmpData defined in fr::labri::gumtree::tree::Tree
   function getTrees() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in fr::labri::gumtree::tree::Tree
   function getTypeLabel() in line 367
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeLabel defined in fr::labri::gumtree::tree::Tree
   function hashCode() in line 245
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable NO_ID defined in fr::labri::gumtree::tree::Tree
      uses variable id defined in fr::labri::gumtree::tree::Tree
   function indent(Tree) in line 293
      5 lines of code
      1 parameters
      2 conditional paths
      uses function b((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable t defined in jquery.min.js
   function isClone(Tree) in line 137
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getDigest() defined in fr::labri::gumtree::tree::Tree
      uses function toDigestTreeString() defined in fr::labri::gumtree::tree::Tree
   function isCompatible(Tree) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in fr::labri::gumtree::tree::Tree
   function isLeaf() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function isMatchable(Tree) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isCompatible(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function isMatched() defined in fr::labri::gumtree::tree::Tree
   function isMatched() in line 371
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matched defined in fr::labri::gumtree::tree::Tree
   function isRoot() in line 375
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in fr::labri::gumtree::tree::Tree
   function isSimilar(Tree) in line 126
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses function isCompatible(Tree) defined in fr::labri::gumtree::tree::Tree
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses function equals(Object) defined in fr::labri::gumtree::tree::Tree
   function positionInParent() in line 447
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable parent defined in fr::labri::gumtree::tree::Tree
      uses variable children defined in fr::labri::gumtree::tree::Tree
   function refresh() in line 145
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function setChildren(List< Tree >) in line 420
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable children defined in fr::labri::gumtree::tree::Tree
      uses function c((null),(null)) defined in jquery.min.js
   function setDepth(int) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in fr::labri::gumtree::tree::Tree
   function setDigest(int) in line 383
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable digest defined in fr::labri::gumtree::tree::Tree
   function setHeight(int) in line 403
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable height defined in fr::labri::gumtree::tree::Tree
   function setId(int) in line 387
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable id defined in fr::labri::gumtree::tree::Tree
   function setLabel(String) in line 391
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in fr::labri::gumtree::tree::Tree
   function setLength(int) in line 395
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable length defined in fr::labri::gumtree::tree::Tree
   function setMatched(boolean) in line 399
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable matched defined in fr::labri::gumtree::tree::Tree
   function setParent(Tree) in line 407
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in fr::labri::gumtree::tree::Tree
   function setParentAndUpdateChildren(Tree) in line 425
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses variable parent defined in fr::labri::gumtree::tree::Tree
   function setPos(int) in line 323
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pos defined in fr::labri::gumtree::tree::Tree
   function setSize(int) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable size defined in fr::labri::gumtree::tree::Tree
   function setTmpData(Object) in line 443
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tmpData defined in fr::labri::gumtree::tree::Tree
   function setType(int) in line 431
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in fr::labri::gumtree::tree::Tree
   function setTypeLabel(String) in line 435
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeLabel defined in fr::labri::gumtree::tree::Tree
   function toCompleteString() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in fr::labri::gumtree::tree::Tree
      uses variable typeLabel defined in fr::labri::gumtree::tree::Tree
      uses variable type defined in fr::labri::gumtree::tree::Tree
      uses variable depth defined in fr::labri::gumtree::tree::Tree
      uses variable height defined in fr::labri::gumtree::tree::Tree
      uses variable digest defined in fr::labri::gumtree::tree::Tree
      uses variable pos defined in fr::labri::gumtree::tree::Tree
      uses variable length defined in fr::labri::gumtree::tree::Tree
   function toCompleteTreeString() in line 303
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function isLeaf() defined in fr::labri::gumtree::tree::Tree
      uses function toString() defined in fr::labri::gumtree::tree::Tree
      uses function b((null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function toDigestString() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses variable SEPARATE_SYMBOL defined in fr::labri::gumtree::tree::Tree
      uses function getType() defined in fr::labri::gumtree::tree::Tree
   function toDigestTreeString() in line 254
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function b((null),(null)) defined in jquery.min.js
      uses variable OPEN_SYMBOL defined in fr::labri::gumtree::tree::Tree
      uses function toDigestString() defined in fr::labri::gumtree::tree::Tree
      uses function c((null),(null)) defined in jquery.min.js
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses variable CLOSE_SYMBOL defined in fr::labri::gumtree::tree::Tree
   function toString() in line 264
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function equals(Object) defined in fr::labri::gumtree::tree::Tree
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
      uses function getTypeLabel() defined in fr::labri::gumtree::tree::Tree
   function toTreeString() in line 274
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses function b((null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function indent(Tree) defined in fr::labri::gumtree::tree::Tree
   function Tree(int) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in fr::labri::gumtree::tree::Tree
      uses variable NO_LABEL defined in fr::labri::gumtree::tree::Tree
   function Tree(int,String) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in fr::labri::gumtree::tree::Tree
      uses variable label defined in fr::labri::gumtree::tree::Tree
   function Tree(int,String,String) in line 64
      protection public
      13 lines of code
      3 parameters
      1 conditional paths
      uses variable type defined in fr::labri::gumtree::tree::Tree
      uses variable label defined in fr::labri::gumtree::tree::Tree
      uses variable typeLabel defined in fr::labri::gumtree::tree::Tree
      uses variable NO_ID defined in fr::labri::gumtree::tree::Tree
      uses variable NO_VALUE defined in fr::labri::gumtree::tree::Tree
   variable children in line 31
   variable CLOSE_SYMBOL in line 16
   variable depth in line 33
   variable digest in line 35
   variable height in line 40
   variable id in line 21
   variable label in line 27
   variable length in line 48
   variable matched in line 38
   variable NO_ID in line 8
      protection public
   variable NO_LABEL in line 10
      protection public
   variable NO_VALUE in line 12
      protection public
   variable OPEN_SYMBOL in line 14
   variable parent in line 29
   variable pos in line 46
   variable SEPARATE_SYMBOL in line 18
   variable size in line 42
   variable tmpData in line 54
   variable type in line 24
   variable typeLabel in line 51
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/tree/TreeMap.java
module fr::labri::gumtree::tree::TreeMap
   function getTree(int) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trees defined in fr::labri::gumtree::tree::TreeMap
   function TreeMap(Tree) in line 10
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable trees defined in fr::labri::gumtree::tree::TreeMap
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   variable trees in line 8
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/main/java/fr/labri/gumtree/tree/TreeUtils.java
module fr::labri::gumtree::tree::TreeUtils
   function bfsOrder(Tree) in line 121
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
   function bfsOrderNumbering(Tree) in line 133
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function bfsOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses variable i defined in jquery.min.js
   function computeDepth(Tree) in line 49
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function preOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses variable t defined in jquery.min.js
   function computeDigest(Tree) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
   function computeDigest(Tree,DigestGenerator) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
   function computeHeight(Tree) in line 63
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses function postOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses variable t defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function computeSize(Tree) in line 21
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses function postOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses variable t defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function order(Tree) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable POST_ORDER defined in fr::labri::gumtree::tree::TreeUtils::OrderKind
   function order(Tree,OrderKind) in line 82
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
      uses function preOrderNumbering(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses function postOrderNumbering(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses function bfsOrderNumbering(Tree) defined in fr::labri::gumtree::tree::TreeUtils
   function postOrder(Tree) in line 143
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function postOrder(Tree,List< Tree >) in line 149
      4 lines of code
      2 parameters
      3 conditional paths
      uses function isLeaf() defined in fr::labri::gumtree::tree::Tree
      uses function c((null),(null)) defined in jquery.min.js
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function postOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
   function postOrderNumbering(Tree) in line 154
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function postOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses variable i defined in jquery.min.js
   function preOrder(Tree) in line 100
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function preOrder(Tree,List< Tree >) in line 106
      4 lines of code
      2 parameters
      3 conditional paths
      uses function isLeaf() defined in fr::labri::gumtree::tree::Tree
      uses function c((null),(null)) defined in jquery.min.js
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function preOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
   function preOrderNumbering(Tree) in line 111
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function preOrder(Tree) defined in fr::labri::gumtree::tree::TreeUtils
      uses variable i defined in jquery.min.js
   function removeCompletelyMapped(Tree) in line 201
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   function removeMapped(Collection<?extends Mapping >) in line 159
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
   function removeMapped(List< Tree >) in line 167
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
   function removeMatched(Tree) in line 183
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable t defined in jquery.min.js
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
      uses function refresh() defined in fr::labri::gumtree::tree::Tree
   function TreeUtils() in line 13
      2 lines of code
      0 parameters
      1 conditional paths
module fr::labri::gumtree::tree::TreeUtils::OrderKind
   variable POST_ORDER in line 213
      protection public
   variable PRE_ORDER in line 212
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/test/java/fr/labri/gumtree/test/TestConstants.java
module fr::labri::gumtree::test::TestConstants
   variable DUMMY_DST in line 7
      protection public
   variable DUMMY_SRC in line 5
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/test/java/fr/labri/gumtree/test/TestSerializeTree.java
module fr::labri::gumtree::test::TestSerializeTree
   function testSerializeTree() in line 13
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function d((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function getType() defined in fr::labri::gumtree::tree::Tree
      uses function getTypeLabel() defined in fr::labri::gumtree::tree::Tree
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/test/java/fr/labri/gumtree/test/TestTree.java
module fr::labri::gumtree::test::TestTree
   function testDeepCopy() in line 53
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function deepCopy() defined in fr::labri::gumtree::tree::Tree
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
      uses function setLabel(String) defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function getLabel() defined in fr::labri::gumtree::tree::Tree
   function testGetParents() in line 41
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
      uses variable n defined in jquery.min.js
   function testHashCode() in line 31
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function hashCode() defined in fr::labri::gumtree::tree::Tree
      uses function setId(int) defined in fr::labri::gumtree::tree::Tree
   function testIdComparator() in line 20
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getTrees() defined in fr::labri::gumtree::tree::Tree
   function testIsClone() in line 70
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function deepCopy() defined in fr::labri::gumtree::tree::Tree
      uses function equals(Object) defined in fr::labri::gumtree::tree::Tree
      uses function isClone(Tree) defined in fr::labri::gumtree::tree::Tree
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/core/src/test/java/fr/labri/gumtree/test/TestTreeUtils.java
module fr::labri::gumtree::test::TestTreeUtils
   function testBreadthFirstNumbering() in line 60
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function testDepth() in line 28
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getDepth() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function testDigest() in line 71
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function deepCopy() defined in fr::labri::gumtree::tree::Tree
      uses function getDigest() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function toDigestTreeString() defined in fr::labri::gumtree::tree::Tree
   function testHeight() in line 39
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getHeight() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function testPostOrderNumbering() in line 17
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function testPreOrderNumbering() in line 49
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getId() defined in fr::labri::gumtree::tree::Tree
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
   function testRemoveCompletelyMappedDescendants() in line 84
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getChildren() defined in fr::labri::gumtree::tree::Tree
      uses function getSize() defined in fr::labri::gumtree::tree::Tree
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.antlr-antlr/src/main/java/fr/labri/gumtree/gen/antlrantlr/AntlrGrammarTreeGenerator.java
module fr::labri::gumtree::gen::antlrantlr::AntlrGrammarTreeGenerator
   inherits from fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getEmptyParser() in line 24
      6 lines of code
      0 parameters
      1 conditional paths
      uses function l() defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getName() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStartSymbol(String) in line 15
      7 lines of code
      1 parameters
      1 conditional paths
      uses function l() defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function p((null)) defined in jquery.min.js
   function handleFile(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.antlr/src/main/java/fr/labri/gumtree/gen/antlr/AbstractAntlrTreeGenerator.java
module fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   inherits from fr::labri::gumtree::io::TreeGenerator
   abstract class
   function generate(String) in line 37
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function loadChars(String) defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses variable ct defined in jquery.min.js
      uses function getStartSymbol(String) defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses variable trees defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function toTree(CommonTree) defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses variable e defined in jquery.min.js
      uses function getEmptyParser() defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getEmptyParser() in line 50
      1 lines of code
      0 parameters
      1 conditional paths
   function getPosAndLength(CommonTree) in line 107
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable ct defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getStartSymbol(String) in line 34
      1 lines of code
      1 parameters
      1 conditional paths
   function loadChars(String) in line 92
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable chars defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses variable r defined in jquery.min.js
   function loadNames() in line 78
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable names defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function p((null)) defined in jquery.min.js
      uses function getEmptyParser() defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function toTree(CommonTree) in line 52
      24 lines of code
      1 parameters
      5 conditional paths
      uses variable t defined in jquery.min.js
      uses variable ct defined in jquery.min.js
      uses variable names defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function getPosAndLength(CommonTree) defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses variable trees defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function AbstractAntlrTreeGenerator() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadNames() defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function getStartSymbol(String) defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   variable chars in line 26
   variable names in line 24
   variable tokens in line 28
   variable trees in line 22
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/AbstractJdtTreeProducer.java
module fr::labri::gumtree::gen::jdt::AbstractJdtTreeProducer
   inherits from fr::labri::gumtree::io::TreeGenerator
   abstract class
   function createVisitor() in line 33
      1 lines of code
      0 parameters
      1 conditional paths
   function generate(String) in line 15
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function createVisitor() defined in fr::labri::gumtree::gen::jdt::AbstractJdtTreeProducer
      uses function getVisitor() defined in fr::labri::gumtree::gen::jdt::Requestor
      uses function getTree() defined in fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
   function handleFile(String) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createVisitor() defined in fr::labri::gumtree::gen::jdt::AbstractJdtTreeProducer
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/AbstractJdtVisitor.java
module fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
   inherits from org::eclipse::jdt::core::dom::ASTVisitor
   function getTree() in line 11
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
   variable root in line 9
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/cd/CdJdtTreeGenerator.java
module fr::labri::gumtree::gen::jdt::cd::CdJdtTreeGenerator
   inherits from fr::labri::gumtree::gen::jdt::AbstractJdtTreeProducer
   function createVisitor() in line 14
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 9
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/cd/CdJdtVisitor.java
module fr::labri::gumtree::gen::jdt::cd::CdJdtVisitor
   inherits from fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
   function checkEmptyJavaDoc(String) in line 120
      15 lines of code
      1 parameters
      3 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function endVisit(Block) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(FieldDeclaration) in line 84
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function endVisit(Javadoc) in line 113
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function endVisit(MethodDeclaration) in line 172
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function endVisit(Modifier) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(ParameterizedType) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(PrimitiveType) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(QualifiedType) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(SimpleType) in line 269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(SingleVariableDeclaration) in line 292
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(TypeDeclaration) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(TypeDeclarationStatement) in line 350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(TypeLiteral) in line 367
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(TypeParameter) in line 386
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(VariableDeclarationExpression) in line 407
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(VariableDeclarationFragment) in line 424
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(WildcardType) in line 443
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(AssertStatement) in line 577
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(BreakStatement) in line 595
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(CatchClause) in line 614
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(ConstructorInvocation) in line 631
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(ContinueStatement) in line 648
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(DoStatement) in line 665
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(EmptyStatement) in line 682
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(EnhancedForStatement) in line 699
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(ExpressionStatement) in line 716
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(ForStatement) in line 737
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(IfStatement) in line 768
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(LabeledStatement) in line 786
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(ReturnStatement) in line 803
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(SuperConstructorInvocation) in line 820
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(SwitchCase) in line 837
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(SwitchStatement) in line 856
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(SynchronizedStatement) in line 873
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(ThrowStatement) in line 890
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(TryStatement) in line 919
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(VariableDeclarationStatement) in line 936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function endVisit(WhileStatement) in line 953
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function extractPosition(List< ASTNode >) in line 546
      11 lines of code
      1 parameters
      2 conditional paths
   function getCurrentParent() in line 542
      3 lines of code
      0 parameters
      1 conditional paths
   function getRoot() in line 481
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function pop() in line 529
      3 lines of code
      0 parameters
      1 conditional paths
   function pop(ASTNode) in line 537
      4 lines of code
      1 parameters
      1 conditional paths
   function push(ASTNode,String) in line 485
      21 lines of code
      2 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
   function push(int,String,String,int,int) in line 507
      20 lines of code
      5 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
   function pushEmptyNode(ASTNode) in line 466
      5 lines of code
      1 parameters
      1 conditional paths
   function pushValuedNode(ASTNode,String) in line 472
      5 lines of code
      2 parameters
      1 conditional paths
   function visit(Block) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(FieldDeclaration) in line 64
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable MODIFIERS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable FRAGMENTS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(Javadoc) in line 93
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
   function visit(MethodDeclaration) in line 141
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable MODIFIERS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable TYPE_ARGUMENTS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable PARAMETERS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable THROW defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(Modifier) in line 181
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(ParameterizedType) in line 199
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable TYPE_ARGUMENTS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(PrimitiveType) in line 218
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function visit(QualifiedType) in line 239
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(SimpleType) in line 256
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function visit(SingleVariableDeclaration) in line 278
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable PARAMETERS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(TypeDeclaration) in line 301
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses variable MODIFIERS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable TYPE_ARGUMENTS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable SUPER_INTERFACE_TYPES defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(TypeDeclarationStatement) in line 341
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(TypeLiteral) in line 358
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(TypeParameter) in line 376
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(VariableDeclarationExpression) in line 395
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable MODIFIERS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable FRAGMENTS defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(VariableDeclarationFragment) in line 415
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(WildcardType) in line 433
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(AssertStatement) in line 564
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function visit(BreakStatement) in line 586
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(CatchClause) in line 603
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(ConstructorInvocation) in line 622
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(ContinueStatement) in line 639
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(DoStatement) in line 656
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(EmptyStatement) in line 673
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(EnhancedForStatement) in line 690
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(ExpressionStatement) in line 707
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(ForStatement) in line 724
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function visit(IfStatement) in line 745
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable THEN_STATEMENT defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable ELSE_STATEMENT defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(LabeledStatement) in line 776
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(ReturnStatement) in line 794
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(SuperConstructorInvocation) in line 811
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(SwitchCase) in line 828
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(SwitchStatement) in line 846
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(SynchronizedStatement) in line 864
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(ThrowStatement) in line 881
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(TryStatement) in line 899
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable BODY defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable CATCH_CLAUSES defined in fr::labri::gumtree::gen::jdt::cd::EntityType
      uses variable FINALLY defined in fr::labri::gumtree::gen::jdt::cd::EntityType
   function visit(VariableDeclarationStatement) in line 927
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(WhileStatement) in line 944
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitList(List< ASTNode >) in line 447
      5 lines of code
      1 parameters
      2 conditional paths
   function visitList(EntityType,List< ASTNode >) in line 453
      12 lines of code
      2 parameters
      2 conditional paths
   function CdJdtVisitor(Tree) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function CdJdtVisitor() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable COLON in line 559
   variable COLON_SPACE in line 18
   variable fEmptyJavaDoc in line 19
   variable fInMethodDeclaration in line 21
   variable fLastAddedNode in line 534
   variable fLastVisitedNode in line 533
   variable fNodeStack in line 20
   variable root in line 479
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/cd/EntityType.java
module fr::labri::gumtree::gen::jdt::cd::EntityType
   function getNumberOfEntityTypes() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAtStatementLevel(EntityType) in line 187
      protection public
      31 lines of code
      1 parameters
      25 conditional paths
   function isType(EntityType) in line 166
      protection public
      13 lines of code
      1 parameters
      7 conditional paths
   function isValidChange() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EntityType(boolean) in line 135
      3 lines of code
      1 parameters
      1 conditional paths
   variable ANNOTATION_TYPE_DECLARATION in line 28
      protection public
   variable ANNOTATION_TYPE_MEMBER_DECLARATION in line 29
      protection public
   variable ARGUMENTS in line 30
      protection public
   variable ARRAY_ACCESS in line 31
      protection public
   variable ARRAY_CREATION in line 32
      protection public
   variable ARRAY_DIMENSION in line 33
      protection public
   variable ARRAY_INITIALIZER in line 34
      protection public
   variable ARRAY_TYPE in line 35
      protection public
   variable ASSERT_STATEMENT in line 36
      protection public
   variable ASSIGNMENT in line 37
      protection public
   variable ATTRIBUTE in line 38
      protection public
   variable BLOCK in line 39
      protection public
   variable BLOCK_COMMENT in line 40
      protection public
   variable BODY in line 41
      protection public
   variable BODY_DECLARATIONS in line 42
      protection public
   variable BOOLEAN_LITERAL in line 43
      protection public
   variable BREAK_STATEMENT in line 44
      protection public
   variable CAST_EXPRESSION in line 45
      protection public
   variable CATCH_CLAUSE in line 46
      protection public
   variable CATCH_CLAUSES in line 47
      protection public
   variable CHARACTER_LITERAL in line 48
      protection public
   variable CLASS in line 49
      protection public
   variable CLASS_INSTANCE_CREATION in line 50
      protection public
   variable COMPILATION_UNIT in line 51
      protection public
   variable CONDITIONAL_EXPRESSION in line 52
      protection public
   variable CONSTRUCTOR_INVOCATION in line 53
      protection public
   variable CONTINUE_STATEMENT in line 54
      protection public
   variable DO_STATEMENT in line 55
      protection public
   variable ELSE_STATEMENT in line 56
      protection public
   variable EMPTY_STATEMENT in line 57
      protection public
   variable ENHANCED_FOR_STATEMENT in line 58
      protection public
   variable ENUM_CONSTANT_DECLARATION in line 59
      protection public
   variable ENUM_CONSTANTS in line 60
      protection public
   variable ENUM_DECLARATION in line 61
      protection public
   variable EXPRESSION_STATEMENT in line 62
      protection public
   variable EXTENDED_OPERANDS in line 63
      protection public
   variable FIELD_ACCESS in line 64
      protection public
   variable FIELD_DECLARATION in line 65
      protection public
   variable FINALLY in line 66
      protection public
   variable fIsValidChange in line 133
   variable FOR_STATEMENT in line 67
      protection public
   variable FRAGMENTS in line 68
      protection public
   variable IF_STATEMENT in line 69
      protection public
   variable IMPORT_DECLARATION in line 70
      protection public
   variable INFIX_EXPRESSION in line 71
      protection public
   variable INITIALIZER in line 72
      protection public
   variable INITIALIZERS in line 73
      protection public
   variable INSTANCEOF_EXPRESSION in line 74
      protection public
   variable JAVADOC in line 75
      protection public
   variable LABELED_STATEMENT in line 76
      protection public
   variable LINE_COMMENT in line 77
      protection public
   variable MARKER_ANNOTATION in line 78
      protection public
   variable MEMBER_REF in line 79
      protection public
   variable MEMBER_VALUE_PAIR in line 80
      protection public
   variable METHOD in line 81
      protection public
   variable METHOD_DECLARATION in line 82
      protection public
   variable METHOD_INVOCATION in line 83
      protection public
   variable METHOD_REF in line 84
      protection public
   variable METHOD_REF_PARAMETER in line 85
      protection public
   variable MODIFIER in line 86
      protection public
   variable MODIFIERS in line 87
      protection public
   variable NORMAL_ANNOTATION in line 88
      protection public
   variable NULL_LITERAL in line 89
      protection public
   variable NUMBER_LITERAL in line 90
      protection public
   variable PACKAGE_DECLARATION in line 91
      protection public
   variable PARAMETERIZED_TYPE in line 92
      protection public
   variable PARAMETERS in line 93
      protection public
   variable PARENTHESIZED_EXPRESSION in line 94
      protection public
   variable POSTFIX_EXPRESSION in line 95
      protection public
   variable PREFIX_EXPRESSION in line 96
      protection public
   variable PRIMITIVE_TYPE in line 97
      protection public
   variable QUALIFIED_NAME in line 98
      protection public
   variable QUALIFIED_TYPE in line 99
      protection public
   variable RETURN_STATEMENT in line 100
      protection public
   variable ROOT_NODE in line 101
      protection public
   variable SIMPLE_NAME in line 102
      protection public
   variable SIMPLE_TYPE in line 103
      protection public
   variable SINGLE_MEMBER_ANNOTATION in line 104
      protection public
   variable SINGLE_VARIABLE_DECLARATION in line 105
      protection public
   variable STRING_LITERAL in line 106
      protection public
   variable SUPER_CONSTRUCTOR_INVOCATION in line 107
      protection public
   variable SUPER_FIELD_ACCESS in line 108
      protection public
   variable SUPER_INTERFACE_TYPES in line 109
      protection public
   variable SUPER_METHOD_INVOCATION in line 110
      protection public
   variable SWITCH_CASE in line 111
      protection public
   variable SWITCH_STATEMENT in line 112
      protection public
   variable SYNCHRONIZED_STATEMENT in line 113
      protection public
   variable TAG_ELEMENT in line 114
      protection public
   variable TEXT_ELEMENT in line 115
      protection public
   variable THEN_STATEMENT in line 116
      protection public
   variable THIS_EXPRESSION in line 117
      protection public
   variable THROW in line 118
      protection public
   variable THROW_STATEMENT in line 119
      protection public
   variable TRY_STATEMENT in line 120
      protection public
   variable TYPE_ARGUMENTS in line 121
      protection public
   variable TYPE_DECLARATION in line 122
      protection public
   variable TYPE_DECLARATION_STATEMENT in line 123
      protection public
   variable TYPE_LITERAL in line 124
      protection public
   variable TYPE_PARAMETER in line 125
      protection public
   variable UPDATERS in line 126
      protection public
   variable VARIABLE_DECLARATION_EXPRESSION in line 127
      protection public
   variable VARIABLE_DECLARATION_FRAGMENT in line 128
      protection public
   variable VARIABLE_DECLARATION_STATEMENT in line 129
      protection public
   variable WHILE_STATEMENT in line 130
      protection public
   variable WILDCARD_TYPE in line 131
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/JdtTreeGenerator.java
module fr::labri::gumtree::gen::jdt::JdtTreeGenerator
   inherits from fr::labri::gumtree::gen::jdt::AbstractJdtTreeProducer
   function createVisitor() in line 35
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleFile(String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/JdtVisitor.java
module fr::labri::gumtree::gen::jdt::JdtVisitor
   inherits from fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
   function getRoot() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
   function postVisit(ASTNode) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trees defined in fr::labri::gumtree::gen::jdt::JdtVisitor
   function preVisit(ASTNode) in line 42
      protection public
      27 lines of code
      1 parameters
      12 conditional paths
      uses variable n defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable root defined in fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
      uses variable trees defined in fr::labri::gumtree::gen::jdt::JdtVisitor
   function visit(QualifiedName) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function JdtVisitor() in line 31
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in fr::labri::gumtree::gen::jdt::AbstractJdtVisitor
   variable trees in line 29
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.jdt/src/main/java/fr/labri/gumtree/gen/jdt/Requestor.java
module fr::labri::gumtree::gen::jdt::Requestor
   inherits from org::eclipse::jdt::core::dom::FileASTRequestor
   function acceptAST(String,CompilationUnit) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable visitor defined in fr::labri::gumtree::gen::jdt::Requestor
   function getVisitor() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable visitor defined in fr::labri::gumtree::gen::jdt::Requestor
   function Requestor(AbstractJdtVisitor) in line 10
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in fr::labri::gumtree::gen::jdt::Requestor
   variable visitor in line 8
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.js/src/main/java/fr/labri/gumtree/gen/js/RhinoTreeGenerator.java
module fr::labri::gumtree::gen::js::RhinoTreeGenerator
   inherits from fr::labri::gumtree::io::TreeGenerator
   function generate(String) in line 32
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getTree() defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
      uses variable e defined in jquery.min.js
   function getName() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleFile(String) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.js/src/main/java/fr/labri/gumtree/gen/js/RhinoTreeVisitor.java
module fr::labri::gumtree::gen::js::RhinoTreeVisitor
   inherits from org::mozilla::javascript::ast::NodeVisitor
   function buildTree(AstNode) in line 54
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses variable trees defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
   function getTree() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tree defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
   function visit(AstNode) in line 27
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable t defined in jquery.min.js
      uses function buildTree(AstNode) defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
      uses function p((null)) defined in jquery.min.js
      uses variable trees defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
      uses function l() defined in jquery.min.js
   function RhinoTreeVisitor(AstRoot) in line 22
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable trees defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
      uses variable tree defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
      uses function buildTree(AstNode) defined in fr::labri::gumtree::gen::js::RhinoTreeVisitor
   variable tree in line 18
   variable trees in line 20
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.php/src/main/java/fr/labri/gumtree/gen/php/PhpTreeGenerator.java
module fr::labri::gumtree::gen::php::PhpTreeGenerator
   inherits from fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getEmptyParser() in line 22
      6 lines of code
      0 parameters
      1 conditional paths
      uses function l() defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStartSymbol(String) in line 13
      7 lines of code
      1 parameters
      1 conditional paths
      uses function l() defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function p((null)) defined in jquery.min.js
   function handleFile(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.r/src/main/java/fr/labri/gumtree/gen/r/RTreeProducer.java
module fr::labri::gumtree::gen::r::RTreeProducer
   inherits from fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getEmptyParser() in line 27
      6 lines of code
      0 parameters
      1 conditional paths
      uses function l() defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStartSymbol(String) in line 18
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function handleFile(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/gen.xml/src/main/java/fr/labri/gumtree/gen/xml/XMLTreeGenerator.java
module fr::labri::gumtree::gen::xml::XMLTreeGenerator
   inherits from fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function generate(String) in line 19
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable t defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function getEmptyParser() in line 39
      6 lines of code
      0 parameters
      1 conditional paths
      uses function l() defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
   function getName() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStartSymbol(String) in line 30
      7 lines of code
      1 parameters
      1 conditional paths
      uses function l() defined in jquery.min.js
      uses variable tokens defined in fr::labri::gumtree::gen::antlr::AbstractAntlrTreeGenerator
      uses function p((null)) defined in jquery.min.js
   function handleFile(String) in line 47
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/README.md
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/BoardView1_1.214_1.215_v0.java
module megamek::client::ui::AWT::BoardView1
   inherits from Canvas
   inherits from IBoardView
   inherits from megamek::common::event::BoardListener
   inherits from MouseListener
   inherits from MouseMotionListener
   inherits from KeyListener
   inherits from AdjustmentListener
   inherits from Canvas
   inherits from IBoardView
   inherits from megamek::common::event::BoardListener
   inherits from MouseListener
   inherits from MouseMotionListener
   inherits from KeyListener
   inherits from AdjustmentListener
   function addAttack(AttackAction) in line 1759
      protection public
      67 lines of code
      1 parameters
      17 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function addWeapon(WeaponAttackAction) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function addAttack(AttackAction) in line 1759
      protection public
      67 lines of code
      1 parameters
      17 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function addWeapon(WeaponAttackAction) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function addBoardViewListener(BoardViewListener) in line 280
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function addBoardViewListener(BoardViewListener) in line 280
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function addC3Link(Entity) in line 1733
      protection public
      22 lines of code
      1 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function addC3Link(Entity) in line 1733
      protection public
      22 lines of code
      1 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function addDisplayable(Displayable) in line 353
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function addDisplayable(Displayable) in line 353
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function addMovingUnit(Entity,java.util.Vector) in line 337
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function addMovingUnit(Entity,java.util.Vector) in line 337
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function adjustmentValueChanged(AdjustmentEvent) in line 381
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable event defined in gumtree.js
   function adjustmentValueChanged(AdjustmentEvent) in line 381
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable event defined in gumtree.js
   function baseFor(IHex) in line 1870
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function baseFor(IHex) in line 1870
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function boardChangedHex(BoardEvent) in line 4123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function b((null),(null)) defined in jquery.min.js
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAround(Coords) defined in megamek::client::ui::AWT::BoardView1
   function boardChangedHex(BoardEvent) in line 4123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function b((null),(null)) defined in jquery.min.js
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAround(Coords) defined in megamek::client::ui::AWT::BoardView1
   function boardNewBoard(BoardEvent) in line 4116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function updateBoard() defined in megamek::client::ui::AWT::BoardView1
   function boardNewBoard(BoardEvent) in line 4116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function updateBoard() defined in megamek::client::ui::AWT::BoardView1
   function centerOnHex(Coords) in line 1664
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function centerOnHex(Coords) in line 1664
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function checkLOS(Coords) in line 4057
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
      uses function setFirstLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function firstLOSHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
      uses function secondLOSHex(Coords,Coords) defined in megamek::client::ui::AWT::BoardView1
   function checkLOS(Coords) in line 4057
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
      uses function setFirstLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function firstLOSHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
      uses function secondLOSHex(Coords,Coords) defined in megamek::client::ui::AWT::BoardView1
   function checkScrollBounds() in line 2000
      protection public
      21 lines of code
      0 parameters
      7 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
   function checkScrollBounds() in line 2000
      protection public
      21 lines of code
      0 parameters
      7 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
   function checkTooltip() in line 1511
      9 lines of code
      0 parameters
      4 conditional paths
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function showTooltip() defined in megamek::client::ui::AWT::BoardView1
   function checkTooltip() in line 1511
      9 lines of code
      0 parameters
      4 conditional paths
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function showTooltip() defined in megamek::client::ui::AWT::BoardView1
   function checkZoomIndex() in line 2473
      6 lines of code
      0 parameters
      3 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
   function checkZoomIndex() in line 2473
      6 lines of code
      0 parameters
      3 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
   function clearAllAttacks() in line 1866
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
   function clearAllAttacks() in line 1866
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
   function clearC3Networks() in line 1859
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function clearC3Networks() in line 1859
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function clearMovementData() in line 1704
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
   function clearMovementData() in line 1704
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
   function cursor(Coords) in line 4033
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getLastCursor() defined in megamek::client::ui::AWT::BoardView1
      uses function setLastCursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function cursor(Coords) in line 4033
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getLastCursor() defined in megamek::client::ui::AWT::BoardView1
      uses function setLastCursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function cursor(int,int) in line 4053
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function cursor(int,int) in line 4053
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function die() in line 4135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function stop() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
   function die() in line 4135
      protection public
      3 lines of code
      0 parameters
      5 conditional paths
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function stop() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
      uses variable gameListener defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function redrawAllEntities() defined in megamek::client::ui::AWT::BoardView1
      uses function addMovingUnit(Entity,java.util.Vector) defined in megamek::client::ui::AWT::BoardView1
      uses function redrawEntity(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses function addAttack(AttackAction) defined in megamek::client::ui::AWT::BoardView1
      uses function b((null),(null)) defined in jquery.min.js
      uses function updateBoard() defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
   function doMoveUnits(long) in line 2128
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable moveWait defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function redrawMovingEntity(Entity,Coords,int) defined in megamek::client::ui::AWT::BoardView1
      uses function redrawEntity(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function doMoveUnits(long) in line 2128
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable moveWait defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function redrawMovingEntity(Entity,Coords,int) defined in megamek::client::ui::AWT::BoardView1
      uses function redrawEntity(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function doScroll() in line 1956
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
   function doScroll() in line 1956
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
   function drawArtilleryHexes() in line 740
      70 lines of code
      0 parameters
      13 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
   function drawArtilleryHexes() in line 740
      70 lines of code
      0 parameters
      13 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
   function drawCenteredString(String,int,int,Font,Graphics) in line 932
      9 lines of code
      5 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
   function drawCenteredString(String,int,int,Font,Graphics) in line 932
      9 lines of code
      5 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
   function drawDeployment() in line 692
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawDeployment() in line 692
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawElevationLine(Coords,int) in line 1224
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function drawElevationLine(Coords,int) in line 1224
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function drawHex(Coords) in line 1089
      128 lines of code
      1 parameters
      22 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses function drawElevationLine(Coords,int) defined in megamek::client::ui::AWT::BoardView1
   function drawHex(Coords) in line 1089
      128 lines of code
      1 parameters
      22 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses function drawElevationLine(Coords,int) defined in megamek::client::ui::AWT::BoardView1
   function drawHexes(Rectangle) in line 1026
      42 lines of code
      1 parameters
      7 conditional paths
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function drawHexes(Rectangle) in line 1026
      42 lines of code
      1 parameters
      7 conditional paths
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function drawMinefields() in line 826
      105 lines of code
      0 parameters
      14 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function drawMinefields() in line 826
      105 lines of code
      0 parameters
      14 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function drawMovementData(Entity,MovePath) in line 1679
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses function clearMovementData() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function getStep() defined in megamek::client::ui::AWT::BoardView1::StepSprite
   function drawMovementData(Entity,MovePath) in line 1679
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses function clearMovementData() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function getStep() defined in megamek::client::ui::AWT::BoardView1::StepSprite
   function drawRuler(Coords,Coords,Color,Color) in line 3909
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
   function drawRuler(Coords,Coords,Color,Color) in line 3909
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
   function drawSprite(Sprite) in line 594
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function isReady() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function prepare() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function drawOnto(Graphics,int,int,ImageObserver) defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawSprite(Sprite) in line 594
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function isReady() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function prepare() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function drawOnto(Graphics,int,int,ImageObserver) defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawSprites(Vector) in line 584
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
   function drawSprites(Vector) in line 584
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
   function firstLOSHex(Coords) in line 1878
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function firstLOSHex(Coords) in line 1878
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function getArtilleryAttacksAtLocation(Coords) in line 811
      11 lines of code
      1 parameters
      3 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function getArtilleryAttacksAtLocation(Coords) in line 811
      11 lines of code
      1 parameters
      3 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function getCentreHexLocation(int,int) in line 1248
      6 lines of code
      2 parameters
      1 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getCentreHexLocation(int,int) in line 1248
      6 lines of code
      2 parameters
      1 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getCentreHexLocation(Coords) in line 1254
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getCentreHexLocation(Coords) in line 1254
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getEntireBoardImage() in line 980
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function getEntireBoardImage() in line 980
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function getFirstLOS() in line 3971
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function getFirstLOS() in line 3971
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function getHexLocation(int,int) in line 1234
      5 lines of code
      2 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getHexLocation(int,int) in line 1234
      5 lines of code
      2 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getHexLocation(Coords) in line 1239
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function getHexLocation(Coords) in line 1239
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function getHighlighted() in line 3943
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function getHighlighted() in line 3943
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function getImageBounds(Image) in line 652
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getImageBounds(Image) in line 652
      3 lines of code
      1 parameters
      1 conditional paths
   function getLastCursor() in line 3929
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function getLastCursor() in line 3929
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function getLocalPlayer() in line 1717
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function getLocalPlayer() in line 1717
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function getOptimalOffset(Dimension) in line 559
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getOptimalOffset(Dimension) in line 559
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getOptimalView(Dimension) in line 550
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getOptimalView(Dimension) in line 550
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getScaledImage(Image) in line 608
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses function d((null),(null)) defined in jquery.min.js
      uses function getImageBounds(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function getScaledImage(Image) in line 608
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses function d((null),(null)) defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function getSelected() in line 3957
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function getSelected() in line 3957
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function getSelectedArtilleryWeapon() in line 722
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getSelectedArtilleryWeapon() in line 722
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getTilesetManager() in line 3904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function getTilesetManager() in line 3904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function getTipText(Point) in line 1312
      180 lines of code
      1 parameters
      33 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable weaponDescs defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getArtilleryAttacksAtLocation(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function s((null)) defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getTipText(Point) in line 1312
      180 lines of code
      1 parameters
      33 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable weaponDescs defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getArtilleryAttacksAtLocation(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function s((null)) defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getZoomIndex() in line 2469
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
   function getZoomIndex() in line 2469
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
   function hideTooltip() in line 1496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function hideTooltip() in line 1496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function highlight(Coords) in line 4007
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setHighlighted(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function highlight(Coords) in line 4007
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setHighlighted(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function highlight(int,int) in line 4023
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function highlight(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function highlight(int,int) in line 4023
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function highlight(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function initPolys() in line 2030
      protection public
      97 lines of code
      0 parameters
      1 conditional paths
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function initPolys() in line 2030
      protection public
      97 lines of code
      0 parameters
      1 conditional paths
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function isMovingUnits() in line 1557
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
   function isMovingUnits() in line 1557
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
   function isTileImagesLoaded() in line 3896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTileImagesLoaded() in line 3896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTipShowing() in line 1503
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function isTipShowing() in line 1503
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function keyPressed(KeyEvent) in line 2183
      protection public
      54 lines of code
      1 parameters
      14 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function keyPressed(KeyEvent) in line 2183
      protection public
      54 lines of code
      1 parameters
      14 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function keyReleased(KeyEvent) in line 2238
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
   function keyReleased(KeyEvent) in line 2238
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
   function keyTyped(KeyEvent) in line 2243
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function keyTyped(KeyEvent) in line 2243
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function markDeploymentHexesFor(Player) in line 1725
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function markDeploymentHexesFor(Player) in line 1725
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function mayDrawPopup() in line 4109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
   function mayDrawPopup() in line 4109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(int,int,int,int) in line 4076
      protection public
      20 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function checkLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(int,int,int,int) in line 4076
      protection public
      20 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function checkLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(Coords,int,int) in line 4102
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(Coords,int,int) in line 4102
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseClicked(MouseEvent) in line 2333
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseClicked(MouseEvent) in line 2333
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseDragged(MouseEvent) in line 2339
      protection public
      53 lines of code
      1 parameters
      9 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseDragged(MouseEvent) in line 2339
      protection public
      53 lines of code
      1 parameters
      9 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseEntered(MouseEvent) in line 2327
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseEntered(MouseEvent) in line 2327
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseExited(MouseEvent) in line 2330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
   function mouseExited(MouseEvent) in line 2330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
   function mouseMoved(MouseEvent) in line 2393
      protection public
      36 lines of code
      1 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseX defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseY defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
   function mouseMoved(MouseEvent) in line 2393
      protection public
      36 lines of code
      1 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseX defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseY defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
   function mousePressed(MouseEvent) in line 2249
      protection public
      55 lines of code
      1 parameters
      10 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mousePressed(MouseEvent) in line 2249
      protection public
      55 lines of code
      1 parameters
      10 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseReleased(MouseEvent) in line 2305
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseReleased(MouseEvent) in line 2305
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function moveBoardImage() in line 992
      30 lines of code
      0 parameters
      5 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function moveBoardImage() in line 992
      30 lines of code
      0 parameters
      5 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function moveCursor(CursorSprite,Coords) in line 1650
      12 lines of code
      2 parameters
      2 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function moveCursor(CursorSprite,Coords) in line 1650
      12 lines of code
      2 parameters
      2 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function paint(Graphics) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function paint(Graphics) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function processBoardViewEvent(BoardViewEvent) in line 300
      protection public
      36 lines of code
      1 parameters
      13 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function l() defined in jquery.min.js
      uses variable event defined in gumtree.js
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
   function processBoardViewEvent(BoardViewEvent) in line 300
      protection public
      36 lines of code
      1 parameters
      13 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function l() defined in jquery.min.js
      uses variable event defined in gumtree.js
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
   function redrawAllEntities() in line 1614
      32 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function clearC3Networks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
   function redrawAllEntities() in line 1614
      32 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function clearC3Networks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
   function redrawAround(Coords) in line 1074
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function redrawAround(Coords) in line 1074
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function redrawEntity(Entity) in line 1567
      protection public
      43 lines of code
      1 parameters
      8 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entityId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable masterId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
   function redrawEntity(Entity) in line 1567
      protection public
      43 lines of code
      1 parameters
      8 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entityId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable masterId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
   function redrawMovingEntity(Entity,Coords,int) in line 1521
      protection public
      35 lines of code
      3 parameters
      4 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
   function redrawMovingEntity(Entity,Coords,int) in line 1521
      protection public
      35 lines of code
      3 parameters
      4 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
   function refreshAttacks() in line 1843
      protection public
      15 lines of code
      0 parameters
      5 conditional paths
      uses function clearAllAttacks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addAttack(AttackAction) defined in megamek::client::ui::AWT::BoardView1
   function refreshAttacks() in line 1843
      protection public
      15 lines of code
      0 parameters
      5 conditional paths
      uses function clearAllAttacks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addAttack(AttackAction) defined in megamek::client::ui::AWT::BoardView1
   function removeAttacksFor(int) in line 1828
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function removeAttacksFor(int) in line 1828
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function removeBoardViewListener(BoardViewListener) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function removeBoardViewListener(BoardViewListener) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function removeDisplayable(Displayable) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function removeDisplayable(Displayable) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function repaintBounds(Rectangle) in line 574
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function repaintBounds(Rectangle) in line 574
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function scale(Image,int,int) in line 640
      11 lines of code
      3 parameters
      1 conditional paths
   function scale(Image,int,int) in line 640
      11 lines of code
      3 parameters
      1 conditional paths
   function secondLOSHex(Coords,Coords) in line 1885
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function secondLOSHex(Coords,Coords) in line 1885
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function select(Coords) in line 3981
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setSelected(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function select(Coords) in line 3981
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setSelected(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function select(int,int) in line 3997
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function select(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function select(int,int) in line 3997
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function select(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function setFirstLOS(Coords) in line 3964
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function setFirstLOS(Coords) in line 3964
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function setHighlighted(Coords) in line 3936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function setHighlighted(Coords) in line 3936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function setLastCursor(Coords) in line 3922
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function setLastCursor(Coords) in line 3922
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function setLocalPlayer(Player) in line 1713
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function setLocalPlayer(Player) in line 1713
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function setScrollbars(Scrollbar,Scrollbar) in line 367
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function setScrollbars(Scrollbar,Scrollbar) in line 367
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function setSelected(Coords) in line 3950
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function setSelected(Coords) in line 3950
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function setUseLOSTool(boolean) in line 3900
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
   function setUseLOSTool(boolean) in line 3900
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
   function setZoomIndex(int) in line 2462
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function setZoomIndex(int) in line 2462
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function showTooltip() in line 1271
      37 lines of code
      0 parameters
      5 conditional paths
      uses function getTipText(Point) defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function showTooltip() in line 1271
      37 lines of code
      0 parameters
      5 conditional paths
      uses function getTipText(Point) defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function stopScrolling() in line 2022
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
   function stopScrolling() in line 2022
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
   function supersFor(IHex) in line 1874
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function supersFor(IHex) in line 1874
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function update(Graphics) in line 400
      protection public
      136 lines of code
      1 parameters
      13 conditional paths
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function isTileImagesLoaded() defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprites(Vector) defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
      uses function drawMinefields() defined in megamek::client::ui::AWT::BoardView1
      uses function drawArtilleryHexes() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function drawDeployment() defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function update(Graphics) in line 400
      protection public
      136 lines of code
      1 parameters
      13 conditional paths
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function isTileImagesLoaded() defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprites(Vector) defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
      uses function drawMinefields() defined in megamek::client::ui::AWT::BoardView1
      uses function drawArtilleryHexes() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function drawDeployment() defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function updateBoard() in line 4184
      10 lines of code
      0 parameters
      1 conditional paths
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAllEntities() defined in megamek::client::ui::AWT::BoardView1
   function updateBoard() in line 4184
      10 lines of code
      0 parameters
      1 conditional paths
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAllEntities() defined in megamek::client::ui::AWT::BoardView1
   function updateBoardImage() in line 945
      30 lines of code
      0 parameters
      3 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function moveBoardImage() defined in megamek::client::ui::AWT::BoardView1
   function updateBoardImage() in line 945
      30 lines of code
      0 parameters
      3 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function moveBoardImage() defined in megamek::client::ui::AWT::BoardView1
   function updateBoardSize() in line 540
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function updateBoardSize() in line 540
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function updateFontSizes() in line 2509
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_7 defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_8 defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_9 defined in megamek::client::ui::AWT::BoardView1
   function updateFontSizes() in line 2509
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_7 defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_8 defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_9 defined in megamek::client::ui::AWT::BoardView1
   function zoom() in line 2483
      25 lines of code
      0 parameters
      1 conditional paths
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
   function zoom() in line 2483
      25 lines of code
      0 parameters
      1 conditional paths
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
   function zoomIn() in line 2434
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function zoomIn() in line 2434
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function zoomOut() in line 2446
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function zoomOut() in line 2446
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function BoardView1(IGame,Frame) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function BoardView1(IGame,Frame,ClientGUI) in line 209
      protection public
      64 lines of code
      3 parameters
      3 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable gameListener defined in megamek::client::ui::AWT::BoardView1
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function start() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
      uses function p((null)) defined in jquery.min.js
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses function initPolys() defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
   function BoardView1(IGame,Frame) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function BoardView1(IGame,Frame,ClientGUI) in line 209
      protection public
      64 lines of code
      3 parameters
      3 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable gameListener defined in megamek::client::ui::AWT::BoardView1
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function start() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
      uses function p((null)) defined in jquery.min.js
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses function initPolys() defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
   variable attackSprites in line 131
   variable backGraph in line 109
   variable backImage in line 107
   variable backSize in line 108
   variable BASE_ZOOM_INDEX in line 70
   variable boardGraph in line 114
   variable boardImage in line 112
   variable boardListeners in line 174
   variable boardRect in line 113
   variable boardSize in line 94
   variable C3_LINE_WIDTH in line 73
   variable C3Sprites in line 134
   variable clientgui in line 195
   variable ctlKeyHeld in line 102
   variable cursorSprite in line 121
   variable displayables in line 164
   variable entitySpriteIds in line 118
   variable entitySprites in line 117
   variable facingPolys in line 145
   variable firstLOS in line 193
   variable firstLOSSprite in line 124
   variable FONT_10 in line 78
   variable FONT_12 in line 79
   variable FONT_7 in line 75
   variable FONT_8 in line 76
   variable FONT_9 in line 77
   variable font_elev in line 85
   variable font_hexnum in line 84
   variable font_minefield in line 86
   variable frame in line 89
   variable game in line 88
   variable gameListener in line 4139
   variable ghostEntitySprites in line 173
   variable hasZoomed in line 158
   variable HEX_H in line 55
   variable hex_size in line 81
   variable HEX_W in line 54
   variable HEX_WC in line 56
   variable hexPoly in line 144
   variable highlighted in line 191
   variable highlightSprite in line 122
   variable hScrollbar in line 98
   variable initCtlScroll in line 101
   variable isJ2RE in line 82
   variable isScrolling in line 99
   variable isTipPossible in line 138
   variable lastCursor in line 190
   variable lastIdle in line 139
   variable localPlayer in line 149
   variable m_plDeployer in line 152
   variable mousePos in line 91
   variable movementPolys in line 146
   variable moveWait in line 168
   variable movingEntitySpriteIds in line 172
   variable movingEntitySprites in line 171
   variable movingUnits in line 167
   variable offset in line 93
   variable oldMousePosition in line 185
   variable pathSprites in line 128
   variable previousMouseX in line 103
   variable previousMouseY in line 104
   variable redrawWorker in line 197
   variable rulerEnd in line 180
   variable rulerEndColor in line 182
   variable rulerStart in line 179
   variable rulerStartColor in line 181
   variable scale in line 160
   variable scaledImageCache in line 161
   variable scaledImageCaches in line 67
   variable scroll in line 100
   variable scrolled in line 188
   variable secondLOSSprite in line 125
   variable selected in line 192
   variable selectedSprite in line 123
   variable tileManager in line 141
   variable tipWindow in line 137
   variable TRANSPARENT in line 51
   variable useLOSTool in line 155
   variable view in line 92
   variable vScrollbar in line 97
   variable wreckSprites in line 177
   variable ZOOM_FACTORS in line 60
   variable zoomIndex in line 159
      protection public
module megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function equals(Object) in line 669
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function ScaledCacheKey(Image,Dimension) defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function equals(Object) in line 669
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function ScaledCacheKey(Image,Dimension) defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function hashCode() in line 681
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function hashCode() in line 681
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function ScaledCacheKey(Image,Dimension) in line 664
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function ScaledCacheKey(Image,Dimension) in line 664
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   variable base in line 661
   variable bounds in line 662
module megamek::client::ui::AWT::BoardView1::TooltipCanvas
   inherits from Canvas
   inherits from Canvas
   function paint(Graphics) in line 2557
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function paint(Graphics) in line 2557
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function TooltipCanvas(String[]) in line 2537
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function TooltipCanvas(String[]) in line 2537
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   variable size in line 2535
   variable tipStrings in line 2534
module megamek::client::ui::AWT::BoardView1::Sprite
   inherits from ImageObserver
   inherits from ImageObserver
   abstract class
   function drawOnto(Graphics,int,int,ImageObserver) in line 2623
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 2623
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver,boolean) in line 2627
      protection public
      21 lines of code
      5 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver,boolean) in line 2627
      protection public
      21 lines of code
      5 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function getBounds() in line 2608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getBounds() in line 2608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getTooltip() in line 2663
      3 lines of code
      0 parameters
      1 conditional paths
   function getTooltip() in line 2663
      3 lines of code
      0 parameters
      1 conditional paths
   function imageUpdate(Image,int,int,int,int,int) in line 2592
      protection public
      10 lines of code
      6 parameters
      2 conditional paths
   function imageUpdate(Image,int,int,int,int,int) in line 2592
      protection public
      10 lines of code
      6 parameters
      2 conditional paths
   function isInside(Point) in line 2655
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function isInside(Point) in line 2655
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function isReady() in line 2616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 2616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 2585
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 2585
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable bounds in line 2578
   variable image in line 2579
module megamek::client::ui::AWT::BoardView1::CursorSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function getBounds() in line 2713
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2713
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2686
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2686
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   function setHexLocation(Coords) in line 2708
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function setHexLocation(Coords) in line 2708
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function setOffScreen() in line 2703
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function setOffScreen() in line 2703
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function CursorSprite(Color) in line 2676
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   function CursorSprite(Color) in line 2676
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   variable color in line 2673
   variable hexLoc in line 2674
module megamek::client::ui::AWT::BoardView1::GhostEntitySprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawOnto(Graphics,int,int,ImageObserver) in line 2789
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 2789
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function getBounds() in line 2776
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2776
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2752
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2752
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function GhostEntitySprite(Entity) in line 2728
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function GhostEntitySprite(Entity) in line 2728
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2724
   variable entityRect in line 2725
   variable modelRect in line 2726
module megamek::client::ui::AWT::BoardView1::MovingEntitySprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function prepare() in line 2825
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2825
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function MovingEntitySprite(Entity,Coords,int) in line 2801
      protection public
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function MovingEntitySprite(Entity,Coords,int) in line 2801
      protection public
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2797
   variable entityRect in line 2798
   variable facing in line 2796
   variable modelRect in line 2799
module megamek::client::ui::AWT::BoardView1::WreckSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function getBounds() in line 2882
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2882
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 2956
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isInside(Point) in line 2956
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function prepare() in line 2900
      protection public
      52 lines of code
      0 parameters
      3 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
   function prepare() in line 2900
      protection public
      52 lines of code
      0 parameters
      3 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
   function WreckSprite(Entity) in line 2861
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function WreckSprite(Entity) in line 2861
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2857
   variable entityRect in line 2858
   variable modelRect in line 2859
module megamek::client::ui::AWT::BoardView1::EntitySprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawOnto(Graphics,int,int,ImageObserver) in line 3009
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 3009
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function getBounds() in line 2995
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2995
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getStatusBarColor(double) in line 3243
      8 lines of code
      1 parameters
      3 conditional paths
   function getStatusBarColor(double) in line 3243
      8 lines of code
      1 parameters
      3 conditional paths
   function getTooltip() in line 3260
      45 lines of code
      0 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function getTooltip() in line 3260
      45 lines of code
      0 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3255
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3255
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3023
      protection public
      200 lines of code
      0 parameters
      22 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3023
      protection public
      200 lines of code
      0 parameters
      22 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
   function trackThisEntitiesVisibilityInfo(Entity) in line 3228
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getLocalPlayer() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function trackThisEntitiesVisibilityInfo(Entity) in line 3228
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getLocalPlayer() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function EntitySprite(Entity) in line 2972
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function EntitySprite(Entity) in line 2972
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2968
   variable entityRect in line 2969
   variable modelRect in line 2970
module megamek::client::ui::AWT::BoardView1::StepSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawMovementCost(MoveStep,Point,Graphics,Color,boolean) in line 3472
      44 lines of code
      5 parameters
      7 conditional paths
   function drawMovementCost(MoveStep,Point,Graphics,Color,boolean) in line 3472
      44 lines of code
      5 parameters
      7 conditional paths
   function getBounds() in line 3463
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 3463
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   function getStep() in line 3468
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStep() in line 3468
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 3324
      protection public
      138 lines of code
      0 parameters
      23 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3324
      protection public
      138 lines of code
      0 parameters
      23 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function StepSprite(MoveStep) in line 3316
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   function StepSprite(MoveStep) in line 3316
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   variable step in line 3314
module megamek::client::ui::AWT::BoardView1::C3Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawOnto(Graphics,int,int,ImageObserver) in line 3610
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 3610
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function getBounds() in line 3593
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getBounds() in line 3593
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function isInside(Point) in line 3625
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3625
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
   function isReady() in line 3606
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 3606
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makePoly() in line 3570
      22 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable C3_LINE_WIDTH defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function makePoly() in line 3570
      22 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable C3_LINE_WIDTH defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3567
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 3567
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function C3Sprite(Entity,Entity) in line 3534
      protection public
      32 lines of code
      2 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function C3Sprite(Entity,Entity) in line 3534
      protection public
      32 lines of code
      2 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   variable C3Poly in line 3525
   variable entityE in line 3529
   variable entityId in line 3527
   variable entityM in line 3530
   variable masterId in line 3528
module megamek::client::ui::AWT::BoardView1::AttackSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function addWeapon(WeaponAttackAction) in line 3802
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(WeaponAttackAction) in line 3802
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(KickAttackAction) in line 3809
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(KickAttackAction) in line 3809
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PunchAttackAction) in line 3832
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PunchAttackAction) in line 3832
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PushAttackAction) in line 3855
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PushAttackAction) in line 3855
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ClubAttackAction) in line 3860
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ClubAttackAction) in line 3860
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ChargeAttackAction) in line 3866
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ChargeAttackAction) in line 3866
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(DfaAttackAction) in line 3870
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(DfaAttackAction) in line 3870
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ProtomechPhysicalAttackAction) in line 3874
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ProtomechPhysicalAttackAction) in line 3874
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function drawOnto(Graphics,int,int,ImageObserver) in line 3773
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 3773
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function getBounds() in line 3731
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getBounds() in line 3731
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getEntityId() in line 3791
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEntityId() in line 3791
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTargetId() in line 3795
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTargetId() in line 3795
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTooltip() in line 3879
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
   function getTooltip() in line 3879
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
   function isInside(Point) in line 3786
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3786
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isMutualAttack() in line 3755
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function rebuildToHalvedPolygon() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function isMutualAttack() in line 3755
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function rebuildToHalvedPolygon() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function isReady() in line 3769
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 3769
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makePoly() in line 3708
      22 lines of code
      0 parameters
      2 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function makePoly() in line 3708
      22 lines of code
      0 parameters
      2 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3766
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 3766
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function rebuildToHalvedPolygon() in line 3745
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function rebuildToHalvedPolygon() in line 3745
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function AttackSprite(AttackAction) in line 3656
      protection public
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function AttackSprite(AttackAction) in line 3656
      protection public
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   variable a in line 3642
   variable ae in line 3653
   variable an in line 3644
   variable attackColor in line 3646
   variable attackerDesc in line 3650
   variable attackPoly in line 3645
   variable attacks in line 3641
   variable entityId in line 3647
   variable t in line 3643
   variable target in line 3654
   variable targetDesc in line 3651
   variable targetId in line 3649
   variable targetType in line 3648
   variable weaponDescs in line 3652
module megamek::client::ui::AWT::BoardView1::RedrawWorker
   inherits from Runnable
   inherits from Runnable
   function run() in line 4212
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses function doMoveUnits(long) defined in megamek::client::ui::AWT::BoardView1
      uses function doScroll() defined in megamek::client::ui::AWT::BoardView1
      uses function checkTooltip() defined in megamek::client::ui::AWT::BoardView1
   function run() in line 4212
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses function doMoveUnits(long) defined in megamek::client::ui::AWT::BoardView1
      uses function doScroll() defined in megamek::client::ui::AWT::BoardView1
      uses function checkTooltip() defined in megamek::client::ui::AWT::BoardView1
   function start() in line 4202
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function start() in line 4202
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function stop() in line 4208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function stop() in line 4208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable finished in line 4200
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/BoardView1_1.214_1.215_v1.java
module megamek::client::ui::AWT::BoardView1
   inherits from Canvas
   inherits from IBoardView
   inherits from megamek::common::event::BoardListener
   inherits from MouseListener
   inherits from MouseMotionListener
   inherits from KeyListener
   inherits from AdjustmentListener
   inherits from Canvas
   inherits from IBoardView
   inherits from megamek::common::event::BoardListener
   inherits from MouseListener
   inherits from MouseMotionListener
   inherits from KeyListener
   inherits from AdjustmentListener
   function addAttack(AttackAction) in line 1759
      protection public
      67 lines of code
      1 parameters
      17 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function addWeapon(WeaponAttackAction) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function addAttack(AttackAction) in line 1759
      protection public
      67 lines of code
      1 parameters
      17 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function addWeapon(WeaponAttackAction) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function addBoardViewListener(BoardViewListener) in line 280
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function addBoardViewListener(BoardViewListener) in line 280
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function addC3Link(Entity) in line 1733
      protection public
      22 lines of code
      1 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function addC3Link(Entity) in line 1733
      protection public
      22 lines of code
      1 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function addDisplayable(Displayable) in line 353
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function addDisplayable(Displayable) in line 353
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function addMovingUnit(Entity,java.util.Vector) in line 337
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function addMovingUnit(Entity,java.util.Vector) in line 337
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function adjustmentValueChanged(AdjustmentEvent) in line 381
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable event defined in gumtree.js
   function adjustmentValueChanged(AdjustmentEvent) in line 381
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable event defined in gumtree.js
   function baseFor(IHex) in line 1870
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function baseFor(IHex) in line 1870
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function boardChangedHex(BoardEvent) in line 4123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function b((null),(null)) defined in jquery.min.js
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAround(Coords) defined in megamek::client::ui::AWT::BoardView1
   function boardChangedHex(BoardEvent) in line 4123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function b((null),(null)) defined in jquery.min.js
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAround(Coords) defined in megamek::client::ui::AWT::BoardView1
   function boardNewBoard(BoardEvent) in line 4116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function updateBoard() defined in megamek::client::ui::AWT::BoardView1
   function boardNewBoard(BoardEvent) in line 4116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function updateBoard() defined in megamek::client::ui::AWT::BoardView1
   function centerOnHex(Coords) in line 1664
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function centerOnHex(Coords) in line 1664
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function checkLOS(Coords) in line 4057
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
      uses function setFirstLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function firstLOSHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
      uses function secondLOSHex(Coords,Coords) defined in megamek::client::ui::AWT::BoardView1
   function checkLOS(Coords) in line 4057
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
      uses function setFirstLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function firstLOSHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
      uses function secondLOSHex(Coords,Coords) defined in megamek::client::ui::AWT::BoardView1
   function checkScrollBounds() in line 2000
      protection public
      21 lines of code
      0 parameters
      7 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
   function checkScrollBounds() in line 2000
      protection public
      21 lines of code
      0 parameters
      7 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
   function checkTooltip() in line 1511
      9 lines of code
      0 parameters
      4 conditional paths
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function showTooltip() defined in megamek::client::ui::AWT::BoardView1
   function checkTooltip() in line 1511
      9 lines of code
      0 parameters
      4 conditional paths
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function showTooltip() defined in megamek::client::ui::AWT::BoardView1
   function checkZoomIndex() in line 2473
      6 lines of code
      0 parameters
      3 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
   function checkZoomIndex() in line 2473
      6 lines of code
      0 parameters
      3 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
   function clearAllAttacks() in line 1866
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
   function clearAllAttacks() in line 1866
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
   function clearC3Networks() in line 1859
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function clearC3Networks() in line 1859
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
   function clearMovementData() in line 1704
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
   function clearMovementData() in line 1704
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
   function cursor(Coords) in line 4033
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getLastCursor() defined in megamek::client::ui::AWT::BoardView1
      uses function setLastCursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function cursor(Coords) in line 4033
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function getLastCursor() defined in megamek::client::ui::AWT::BoardView1
      uses function setLastCursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function cursor(int,int) in line 4053
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function cursor(int,int) in line 4053
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function die() in line 4135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function stop() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
   function die() in line 4135
      protection public
      3 lines of code
      0 parameters
      5 conditional paths
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function stop() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
      uses variable gameListener defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function redrawAllEntities() defined in megamek::client::ui::AWT::BoardView1
      uses function addMovingUnit(Entity,java.util.Vector) defined in megamek::client::ui::AWT::BoardView1
      uses function redrawEntity(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses function addAttack(AttackAction) defined in megamek::client::ui::AWT::BoardView1
      uses function b((null),(null)) defined in jquery.min.js
      uses function updateBoard() defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
   function doMoveUnits(long) in line 2128
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable moveWait defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function redrawMovingEntity(Entity,Coords,int) defined in megamek::client::ui::AWT::BoardView1
      uses function redrawEntity(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function doMoveUnits(long) in line 2128
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
      uses variable moveWait defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function redrawMovingEntity(Entity,Coords,int) defined in megamek::client::ui::AWT::BoardView1
      uses function redrawEntity(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function doScroll() in line 1956
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
   function doScroll() in line 1956
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
   function drawArtilleryHexes() in line 740
      70 lines of code
      0 parameters
      13 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
   function drawArtilleryHexes() in line 740
      70 lines of code
      0 parameters
      13 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
   function drawCenteredString(String,int,int,Font,Graphics) in line 932
      9 lines of code
      5 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
   function drawCenteredString(String,int,int,Font,Graphics) in line 932
      9 lines of code
      5 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
   function drawDeployment() in line 692
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawDeployment() in line 692
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawElevationLine(Coords,int) in line 1224
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function drawElevationLine(Coords,int) in line 1224
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function drawHex(Coords) in line 1089
      128 lines of code
      1 parameters
      22 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses function drawElevationLine(Coords,int) defined in megamek::client::ui::AWT::BoardView1
   function drawHex(Coords) in line 1089
      128 lines of code
      1 parameters
      22 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses function drawElevationLine(Coords,int) defined in megamek::client::ui::AWT::BoardView1
   function drawHexes(Rectangle) in line 1026
      42 lines of code
      1 parameters
      7 conditional paths
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function drawHexes(Rectangle) in line 1026
      42 lines of code
      1 parameters
      7 conditional paths
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
   function drawMinefields() in line 826
      105 lines of code
      0 parameters
      14 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function drawMinefields() in line 826
      105 lines of code
      0 parameters
      14 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawCenteredString(String,int,int,Font,Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function drawMovementData(Entity,MovePath) in line 1679
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses function clearMovementData() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function getStep() defined in megamek::client::ui::AWT::BoardView1::StepSprite
   function drawMovementData(Entity,MovePath) in line 1679
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses function clearMovementData() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function getStep() defined in megamek::client::ui::AWT::BoardView1::StepSprite
   function drawRuler(Coords,Coords,Color,Color) in line 3909
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
   function drawRuler(Coords,Coords,Color,Color) in line 3909
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function s((null)) defined in jquery.min.js
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
   function drawSprite(Sprite) in line 594
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function isReady() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function prepare() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function drawOnto(Graphics,int,int,ImageObserver) defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawSprite(Sprite) in line 594
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function getBounds() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function isReady() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function prepare() defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses function drawOnto(Graphics,int,int,ImageObserver) defined in megamek::client::ui::AWT::BoardView1::Sprite
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
   function drawSprites(Vector) in line 584
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
   function drawSprites(Vector) in line 584
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
   function firstLOSHex(Coords) in line 1878
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function firstLOSHex(Coords) in line 1878
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function getArtilleryAttacksAtLocation(Coords) in line 811
      11 lines of code
      1 parameters
      3 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function getArtilleryAttacksAtLocation(Coords) in line 811
      11 lines of code
      1 parameters
      3 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
   function getCentreHexLocation(int,int) in line 1248
      6 lines of code
      2 parameters
      1 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getCentreHexLocation(int,int) in line 1248
      6 lines of code
      2 parameters
      1 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getCentreHexLocation(Coords) in line 1254
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getCentreHexLocation(Coords) in line 1254
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getEntireBoardImage() in line 980
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function getEntireBoardImage() in line 980
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function getFirstLOS() in line 3971
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function getFirstLOS() in line 3971
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function getHexLocation(int,int) in line 1234
      5 lines of code
      2 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getHexLocation(int,int) in line 1234
      5 lines of code
      2 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses function y((null),(null)) defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function getHexLocation(Coords) in line 1239
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function getHexLocation(Coords) in line 1239
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function getHighlighted() in line 3943
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function getHighlighted() in line 3943
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function getImageBounds(Image) in line 652
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getImageBounds(Image) in line 652
      3 lines of code
      1 parameters
      1 conditional paths
   function getLastCursor() in line 3929
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function getLastCursor() in line 3929
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function getLocalPlayer() in line 1717
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function getLocalPlayer() in line 1717
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
   function getOptimalOffset(Dimension) in line 559
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getOptimalOffset(Dimension) in line 559
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getOptimalView(Dimension) in line 550
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getOptimalView(Dimension) in line 550
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function getScaledImage(Image) in line 608
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses function d((null),(null)) defined in jquery.min.js
      uses function getImageBounds(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function getScaledImage(Image) in line 608
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses function d((null),(null)) defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function getSelected() in line 3957
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function getSelected() in line 3957
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function getSelectedArtilleryWeapon() in line 722
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getSelectedArtilleryWeapon() in line 722
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getTilesetManager() in line 3904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function getTilesetManager() in line 3904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function getTipText(Point) in line 1312
      180 lines of code
      1 parameters
      33 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable weaponDescs defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getArtilleryAttacksAtLocation(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function s((null)) defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getTipText(Point) in line 1312
      180 lines of code
      1 parameters
      33 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function isInside(Point) defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses variable weaponDescs defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getArtilleryAttacksAtLocation(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function getSelectedArtilleryWeapon() defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::EntitySprite
      uses function getTooltip() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function s((null)) defined in jquery.min.js
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
   function getZoomIndex() in line 2469
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
   function getZoomIndex() in line 2469
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
   function hideTooltip() in line 1496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function hideTooltip() in line 1496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function highlight(Coords) in line 4007
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setHighlighted(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function highlight(Coords) in line 4007
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setHighlighted(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function highlight(int,int) in line 4023
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function highlight(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function highlight(int,int) in line 4023
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function highlight(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function initPolys() in line 2030
      protection public
      97 lines of code
      0 parameters
      1 conditional paths
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function initPolys() in line 2030
      protection public
      97 lines of code
      0 parameters
      1 conditional paths
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function isMovingUnits() in line 1557
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
   function isMovingUnits() in line 1557
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable movingUnits defined in megamek::client::ui::AWT::BoardView1
   function isTileImagesLoaded() in line 3896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTileImagesLoaded() in line 3896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTipShowing() in line 1503
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function isTipShowing() in line 1503
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
   function keyPressed(KeyEvent) in line 2183
      protection public
      54 lines of code
      1 parameters
      14 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function keyPressed(KeyEvent) in line 2183
      protection public
      54 lines of code
      1 parameters
      14 conditional paths
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function centerOnHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
   function keyReleased(KeyEvent) in line 2238
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
   function keyReleased(KeyEvent) in line 2238
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
   function keyTyped(KeyEvent) in line 2243
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function keyTyped(KeyEvent) in line 2243
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function markDeploymentHexesFor(Player) in line 1725
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function markDeploymentHexesFor(Player) in line 1725
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function mayDrawPopup() in line 4109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
   function mayDrawPopup() in line 4109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(int,int,int,int) in line 4076
      protection public
      20 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function checkLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(int,int,int,int) in line 4076
      protection public
      20 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function checkLOS(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(Coords,int,int) in line 4102
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseAction(Coords,int,int) in line 4102
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseClicked(MouseEvent) in line 2333
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseClicked(MouseEvent) in line 2333
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseDragged(MouseEvent) in line 2339
      protection public
      53 lines of code
      1 parameters
      9 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseDragged(MouseEvent) in line 2339
      protection public
      53 lines of code
      1 parameters
      9 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseEntered(MouseEvent) in line 2327
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseEntered(MouseEvent) in line 2327
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseExited(MouseEvent) in line 2330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
   function mouseExited(MouseEvent) in line 2330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
   function mouseMoved(MouseEvent) in line 2393
      protection public
      36 lines of code
      1 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseX defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseY defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
   function mouseMoved(MouseEvent) in line 2393
      protection public
      36 lines of code
      1 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses variable ctlKeyHeld defined in megamek::client::ui::AWT::BoardView1
      uses variable initCtlScroll defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseX defined in megamek::client::ui::AWT::BoardView1
      uses variable previousMouseY defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses variable lastIdle defined in megamek::client::ui::AWT::BoardView1
   function mousePressed(MouseEvent) in line 2249
      protection public
      55 lines of code
      1 parameters
      10 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mousePressed(MouseEvent) in line 2249
      protection public
      55 lines of code
      1 parameters
      10 conditional paths
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses function isTipShowing() defined in megamek::client::ui::AWT::BoardView1
      uses function hideTooltip() defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseReleased(MouseEvent) in line 2305
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function mouseReleased(MouseEvent) in line 2305
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable isTipPossible defined in megamek::client::ui::AWT::BoardView1
      uses variable oldMousePosition defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
      uses variable scrolled defined in megamek::client::ui::AWT::BoardView1
      uses function mouseAction(int,int,int,int) defined in megamek::client::ui::AWT::BoardView1
   function moveBoardImage() in line 992
      30 lines of code
      0 parameters
      5 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function moveBoardImage() in line 992
      30 lines of code
      0 parameters
      5 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function moveCursor(CursorSprite,Coords) in line 1650
      12 lines of code
      2 parameters
      2 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function moveCursor(CursorSprite,Coords) in line 1650
      12 lines of code
      2 parameters
      2 conditional paths
      uses function cursor(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function repaintBounds(Rectangle) defined in megamek::client::ui::AWT::BoardView1
   function paint(Graphics) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function paint(Graphics) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function processBoardViewEvent(BoardViewEvent) in line 300
      protection public
      36 lines of code
      1 parameters
      13 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function l() defined in jquery.min.js
      uses variable event defined in gumtree.js
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
   function processBoardViewEvent(BoardViewEvent) in line 300
      protection public
      36 lines of code
      1 parameters
      13 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function l() defined in jquery.min.js
      uses variable event defined in gumtree.js
      uses function getFirstLOS() defined in megamek::client::ui::AWT::BoardView1
   function redrawAllEntities() in line 1614
      32 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function clearC3Networks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
   function redrawAllEntities() in line 1614
      32 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
      uses function clearC3Networks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
   function redrawAround(Coords) in line 1074
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function redrawAround(Coords) in line 1074
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function drawHex(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function c((null),(null)) defined in jquery.min.js
   function redrawEntity(Entity) in line 1567
      protection public
      43 lines of code
      1 parameters
      8 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entityId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable masterId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
   function redrawEntity(Entity) in line 1567
      protection public
      43 lines of code
      1 parameters
      8 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entityId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable masterId defined in megamek::client::ui::AWT::BoardView1::C3Sprite
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addC3Link(Entity) defined in megamek::client::ui::AWT::BoardView1
   function redrawMovingEntity(Entity,Coords,int) in line 1521
      protection public
      35 lines of code
      3 parameters
      4 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
   function redrawMovingEntity(Entity,Coords,int) in line 1521
      protection public
      35 lines of code
      3 parameters
      4 conditional paths
      uses variable entitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySpriteIds defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
   function refreshAttacks() in line 1843
      protection public
      15 lines of code
      0 parameters
      5 conditional paths
      uses function clearAllAttacks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addAttack(AttackAction) defined in megamek::client::ui::AWT::BoardView1
   function refreshAttacks() in line 1843
      protection public
      15 lines of code
      0 parameters
      5 conditional paths
      uses function clearAllAttacks() defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function addAttack(AttackAction) defined in megamek::client::ui::AWT::BoardView1
   function removeAttacksFor(int) in line 1828
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function removeAttacksFor(int) in line 1828
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function removeBoardViewListener(BoardViewListener) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function removeBoardViewListener(BoardViewListener) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable boardListeners defined in megamek::client::ui::AWT::BoardView1
   function removeDisplayable(Displayable) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function removeDisplayable(Displayable) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
   function repaintBounds(Rectangle) in line 574
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function repaintBounds(Rectangle) in line 574
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function scale(Image,int,int) in line 640
      11 lines of code
      3 parameters
      1 conditional paths
   function scale(Image,int,int) in line 640
      11 lines of code
      3 parameters
      1 conditional paths
   function secondLOSHex(Coords,Coords) in line 1885
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function secondLOSHex(Coords,Coords) in line 1885
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function select(Coords) in line 3981
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setSelected(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function select(Coords) in line 3981
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses function setSelected(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function moveCursor(CursorSprite,Coords) defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses function processBoardViewEvent(BoardViewEvent) defined in megamek::client::ui::AWT::BoardView1
   function select(int,int) in line 3997
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function select(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function select(int,int) in line 3997
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function select(Coords) defined in megamek::client::ui::AWT::BoardView1
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function setFirstLOS(Coords) in line 3964
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function setFirstLOS(Coords) in line 3964
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable firstLOS defined in megamek::client::ui::AWT::BoardView1
   function setHighlighted(Coords) in line 3936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function setHighlighted(Coords) in line 3936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable highlighted defined in megamek::client::ui::AWT::BoardView1
   function setLastCursor(Coords) in line 3922
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function setLastCursor(Coords) in line 3922
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastCursor defined in megamek::client::ui::AWT::BoardView1
   function setLocalPlayer(Player) in line 1713
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function setLocalPlayer(Player) in line 1713
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable localPlayer defined in megamek::client::ui::AWT::BoardView1
      uses function p((null)) defined in jquery.min.js
   function setScrollbars(Scrollbar,Scrollbar) in line 367
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function setScrollbars(Scrollbar,Scrollbar) in line 367
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function setSelected(Coords) in line 3950
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function setSelected(Coords) in line 3950
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable selected defined in megamek::client::ui::AWT::BoardView1
   function setUseLOSTool(boolean) in line 3900
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
   function setUseLOSTool(boolean) in line 3900
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLOSTool defined in megamek::client::ui::AWT::BoardView1
   function setZoomIndex(int) in line 2462
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function setZoomIndex(int) in line 2462
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function showTooltip() in line 1271
      37 lines of code
      0 parameters
      5 conditional paths
      uses function getTipText(Point) defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function showTooltip() in line 1271
      37 lines of code
      0 parameters
      5 conditional paths
      uses function getTipText(Point) defined in megamek::client::ui::AWT::BoardView1
      uses variable mousePos defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function stopScrolling() in line 2022
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
   function stopScrolling() in line 2022
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isScrolling defined in megamek::client::ui::AWT::BoardView1
   function supersFor(IHex) in line 1874
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function supersFor(IHex) in line 1874
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function update(Graphics) in line 400
      protection public
      136 lines of code
      1 parameters
      13 conditional paths
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function isTileImagesLoaded() defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprites(Vector) defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
      uses function drawMinefields() defined in megamek::client::ui::AWT::BoardView1
      uses function drawArtilleryHexes() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function drawDeployment() defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function update(Graphics) in line 400
      protection public
      136 lines of code
      1 parameters
      13 conditional paths
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function isTileImagesLoaded() defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprites(Vector) defined in megamek::client::ui::AWT::BoardView1
      uses variable wreckSprites defined in megamek::client::ui::AWT::BoardView1
      uses function drawMinefields() defined in megamek::client::ui::AWT::BoardView1
      uses function drawArtilleryHexes() defined in megamek::client::ui::AWT::BoardView1
      uses function drawSprite(Sprite) defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable m_plDeployer defined in megamek::client::ui::AWT::BoardView1
      uses function drawDeployment() defined in megamek::client::ui::AWT::BoardView1
      uses variable C3Sprites defined in megamek::client::ui::AWT::BoardView1
      uses variable entitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable movingEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable ghostEntitySprites defined in megamek::client::ui::AWT::BoardView1
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable pathSprites defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStart defined in megamek::client::ui::AWT::BoardView1
      uses function getCentreHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEnd defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerEndColor defined in megamek::client::ui::AWT::BoardView1
      uses variable rulerStartColor defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
   function updateBoard() in line 4184
      10 lines of code
      0 parameters
      1 conditional paths
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAllEntities() defined in megamek::client::ui::AWT::BoardView1
   function updateBoard() in line 4184
      10 lines of code
      0 parameters
      1 conditional paths
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backImage defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses function redrawAllEntities() defined in megamek::client::ui::AWT::BoardView1
   function updateBoardImage() in line 945
      30 lines of code
      0 parameters
      3 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function moveBoardImage() defined in megamek::client::ui::AWT::BoardView1
   function updateBoardImage() in line 945
      30 lines of code
      0 parameters
      3 conditional paths
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable boardRect defined in megamek::client::ui::AWT::BoardView1
      uses variable boardImage defined in megamek::client::ui::AWT::BoardView1
      uses function checkScrollBounds() defined in megamek::client::ui::AWT::BoardView1
      uses function drawHexes(Rectangle) defined in megamek::client::ui::AWT::BoardView1
      uses function moveBoardImage() defined in megamek::client::ui::AWT::BoardView1
   function updateBoardSize() in line 540
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function updateBoardSize() in line 540
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_WC defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardSize defined in megamek::client::ui::AWT::BoardView1
   function updateFontSizes() in line 2509
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_7 defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_8 defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_9 defined in megamek::client::ui::AWT::BoardView1
   function updateFontSizes() in line 2509
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable font_elev defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_7 defined in megamek::client::ui::AWT::BoardView1
      uses variable font_hexnum defined in megamek::client::ui::AWT::BoardView1
      uses variable font_minefield defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_8 defined in megamek::client::ui::AWT::BoardView1
      uses variable FONT_9 defined in megamek::client::ui::AWT::BoardView1
   function zoom() in line 2483
      25 lines of code
      0 parameters
      1 conditional paths
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
   function zoom() in line 2483
      25 lines of code
      0 parameters
      1 conditional paths
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses variable boardGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable backGraph defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable scroll defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalView(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function getOptimalOffset(Dimension) defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardImage() defined in megamek::client::ui::AWT::BoardView1
      uses function update(Graphics) defined in megamek::client::ui::AWT::BoardView1
   function zoomIn() in line 2434
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function zoomIn() in line 2434
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function zoomOut() in line 2446
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function zoomOut() in line 2446
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses function zoom() defined in megamek::client::ui::AWT::BoardView1
   function BoardView1(IGame,Frame) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function BoardView1(IGame,Frame,ClientGUI) in line 209
      protection public
      64 lines of code
      3 parameters
      3 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable gameListener defined in megamek::client::ui::AWT::BoardView1
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function start() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
      uses function p((null)) defined in jquery.min.js
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses function initPolys() defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
   function BoardView1(IGame,Frame) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
   function BoardView1(IGame,Frame,ClientGUI) in line 209
      protection public
      64 lines of code
      3 parameters
      3 conditional paths
      uses variable clientgui defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable frame defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable gameListener defined in megamek::client::ui::AWT::BoardView1
      uses variable redrawWorker defined in megamek::client::ui::AWT::BoardView1
      uses function start() defined in megamek::client::ui::AWT::BoardView1::RedrawWorker
      uses function p((null)) defined in jquery.min.js
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function checkZoomIndex() defined in megamek::client::ui::AWT::BoardView1
      uses variable hasZoomed defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable ZOOM_FACTORS defined in megamek::client::ui::AWT::BoardView1
      uses function updateFontSizes() defined in megamek::client::ui::AWT::BoardView1
      uses function updateBoardSize() defined in megamek::client::ui::AWT::BoardView1
      uses variable tipWindow defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
      uses function initPolys() defined in megamek::client::ui::AWT::BoardView1
      uses variable cursorSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable highlightSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable selectedSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable firstLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable secondLOSSprite defined in megamek::client::ui::AWT::BoardView1
      uses variable scaledImageCaches defined in megamek::client::ui::AWT::BoardView1
      uses variable i defined in jquery.min.js
   variable attackSprites in line 131
   variable backGraph in line 109
   variable backImage in line 107
   variable backSize in line 108
   variable BASE_ZOOM_INDEX in line 70
   variable boardGraph in line 114
   variable boardImage in line 112
   variable boardListeners in line 174
   variable boardRect in line 113
   variable boardSize in line 94
   variable C3_LINE_WIDTH in line 73
   variable C3Sprites in line 134
   variable clientgui in line 195
   variable ctlKeyHeld in line 102
   variable cursorSprite in line 121
   variable displayables in line 164
   variable entitySpriteIds in line 118
   variable entitySprites in line 117
   variable facingPolys in line 145
   variable firstLOS in line 193
   variable firstLOSSprite in line 124
   variable FONT_10 in line 78
   variable FONT_12 in line 79
   variable FONT_7 in line 75
   variable FONT_8 in line 76
   variable FONT_9 in line 77
   variable font_elev in line 85
   variable font_hexnum in line 84
   variable font_minefield in line 86
   variable frame in line 89
   variable game in line 88
   variable gameListener in line 4139
   variable ghostEntitySprites in line 173
   variable hasZoomed in line 158
   variable HEX_H in line 55
   variable hex_size in line 81
   variable HEX_W in line 54
   variable HEX_WC in line 56
   variable hexPoly in line 144
   variable highlighted in line 191
   variable highlightSprite in line 122
   variable hScrollbar in line 98
   variable initCtlScroll in line 101
   variable isJ2RE in line 82
   variable isScrolling in line 99
   variable isTipPossible in line 138
   variable lastCursor in line 190
   variable lastIdle in line 139
   variable localPlayer in line 149
   variable m_plDeployer in line 152
   variable mousePos in line 91
   variable movementPolys in line 146
   variable moveWait in line 168
   variable movingEntitySpriteIds in line 172
   variable movingEntitySprites in line 171
   variable movingUnits in line 167
   variable offset in line 93
   variable oldMousePosition in line 185
   variable pathSprites in line 128
   variable previousMouseX in line 103
   variable previousMouseY in line 104
   variable redrawWorker in line 197
   variable rulerEnd in line 180
   variable rulerEndColor in line 182
   variable rulerStart in line 179
   variable rulerStartColor in line 181
   variable scale in line 160
   variable scaledImageCache in line 161
   variable scaledImageCaches in line 67
   variable scroll in line 100
   variable scrolled in line 188
   variable secondLOSSprite in line 125
   variable selected in line 192
   variable selectedSprite in line 123
   variable tileManager in line 141
   variable tipWindow in line 137
   variable TRANSPARENT in line 51
   variable useLOSTool in line 155
   variable view in line 92
   variable vScrollbar in line 97
   variable wreckSprites in line 177
   variable ZOOM_FACTORS in line 60
   variable zoomIndex in line 159
      protection public
module megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function equals(Object) in line 669
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function ScaledCacheKey(Image,Dimension) defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function equals(Object) in line 669
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function ScaledCacheKey(Image,Dimension) defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function hashCode() in line 681
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function hashCode() in line 681
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function ScaledCacheKey(Image,Dimension) in line 664
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function ScaledCacheKey(Image,Dimension) in line 664
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable base defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   variable base in line 661
   variable bounds in line 662
module megamek::client::ui::AWT::BoardView1::TooltipCanvas
   inherits from Canvas
   inherits from Canvas
   function paint(Graphics) in line 2557
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function paint(Graphics) in line 2557
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function TooltipCanvas(String[]) in line 2537
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function TooltipCanvas(String[]) in line 2537
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   variable size in line 2535
   variable tipStrings in line 2534
module megamek::client::ui::AWT::BoardView1::Sprite
   inherits from ImageObserver
   inherits from ImageObserver
   abstract class
   function drawOnto(Graphics,int,int,ImageObserver) in line 2623
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 2623
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver,boolean) in line 2627
      protection public
      21 lines of code
      5 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver,boolean) in line 2627
      protection public
      21 lines of code
      5 parameters
      4 conditional paths
      uses variable zoomIndex defined in megamek::client::ui::AWT::BoardView1
      uses variable BASE_ZOOM_INDEX defined in megamek::client::ui::AWT::BoardView1
      uses function getScaledImage(Image) defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function getBounds() in line 2608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getBounds() in line 2608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getTooltip() in line 2663
      3 lines of code
      0 parameters
      1 conditional paths
   function getTooltip() in line 2663
      3 lines of code
      0 parameters
      1 conditional paths
   function imageUpdate(Image,int,int,int,int,int) in line 2592
      protection public
      10 lines of code
      6 parameters
      2 conditional paths
   function imageUpdate(Image,int,int,int,int,int) in line 2592
      protection public
      10 lines of code
      6 parameters
      2 conditional paths
   function isInside(Point) in line 2655
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function isInside(Point) in line 2655
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function isReady() in line 2616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 2616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 2585
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 2585
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable bounds in line 2578
   variable image in line 2579
module megamek::client::ui::AWT::BoardView1::CursorSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function getBounds() in line 2713
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2713
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2686
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2686
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   function setHexLocation(Coords) in line 2708
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function setHexLocation(Coords) in line 2708
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
   function setOffScreen() in line 2703
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function setOffScreen() in line 2703
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function CursorSprite(Color) in line 2676
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   function CursorSprite(Color) in line 2676
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable hexPoly defined in megamek::client::ui::AWT::BoardView1
   variable color in line 2673
   variable hexLoc in line 2674
module megamek::client::ui::AWT::BoardView1::GhostEntitySprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawOnto(Graphics,int,int,ImageObserver) in line 2789
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 2789
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function getBounds() in line 2776
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2776
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2752
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2752
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function GhostEntitySprite(Entity) in line 2728
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function GhostEntitySprite(Entity) in line 2728
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2724
   variable entityRect in line 2725
   variable modelRect in line 2726
module megamek::client::ui::AWT::BoardView1::MovingEntitySprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function prepare() in line 2825
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 2825
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
   function MovingEntitySprite(Entity,Coords,int) in line 2801
      protection public
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function MovingEntitySprite(Entity,Coords,int) in line 2801
      protection public
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2797
   variable entityRect in line 2798
   variable facing in line 2796
   variable modelRect in line 2799
module megamek::client::ui::AWT::BoardView1::WreckSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function getBounds() in line 2882
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2882
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 2956
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isInside(Point) in line 2956
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function prepare() in line 2900
      protection public
      52 lines of code
      0 parameters
      3 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
   function prepare() in line 2900
      protection public
      52 lines of code
      0 parameters
      3 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
   function WreckSprite(Entity) in line 2861
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function WreckSprite(Entity) in line 2861
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2857
   variable entityRect in line 2858
   variable modelRect in line 2859
module megamek::client::ui::AWT::BoardView1::EntitySprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawOnto(Graphics,int,int,ImageObserver) in line 3009
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 3009
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function getBounds() in line 2995
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 2995
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function getStatusBarColor(double) in line 3243
      8 lines of code
      1 parameters
      3 conditional paths
   function getStatusBarColor(double) in line 3243
      8 lines of code
      1 parameters
      3 conditional paths
   function getTooltip() in line 3260
      45 lines of code
      0 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function getTooltip() in line 3260
      45 lines of code
      0 parameters
      3 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3255
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3255
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3023
      protection public
      200 lines of code
      0 parameters
      22 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3023
      protection public
      200 lines of code
      0 parameters
      22 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses variable tileManager defined in megamek::client::ui::AWT::BoardView1
      uses variable text defined in jquery.min.js
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable isJ2RE defined in megamek::client::ui::AWT::BoardView1
   function trackThisEntitiesVisibilityInfo(Entity) in line 3228
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getLocalPlayer() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function trackThisEntitiesVisibilityInfo(Entity) in line 3228
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getLocalPlayer() defined in megamek::client::ui::AWT::BoardView1
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable e defined in jquery.min.js
   function EntitySprite(Entity) in line 2972
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   function EntitySprite(Entity) in line 2972
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
   variable entity in line 2968
   variable entityRect in line 2969
   variable modelRect in line 2970
module megamek::client::ui::AWT::BoardView1::StepSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawMovementCost(MoveStep,Point,Graphics,Color,boolean) in line 3472
      44 lines of code
      5 parameters
      7 conditional paths
   function drawMovementCost(MoveStep,Point,Graphics,Color,boolean) in line 3472
      44 lines of code
      5 parameters
      7 conditional paths
   function getBounds() in line 3463
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   function getBounds() in line 3463
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   function getStep() in line 3468
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStep() in line 3468
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 3324
      protection public
      138 lines of code
      0 parameters
      23 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3324
      protection public
      138 lines of code
      0 parameters
      23 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable TRANSPARENT defined in megamek::client::ui::AWT::BoardView1
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable facingPolys defined in megamek::client::ui::AWT::BoardView1
      uses variable movementPolys defined in megamek::client::ui::AWT::BoardView1
   function StepSprite(MoveStep) in line 3316
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   function StepSprite(MoveStep) in line 3316
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable hex_size defined in megamek::client::ui::AWT::BoardView1
   variable step in line 3314
module megamek::client::ui::AWT::BoardView1::C3Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function drawOnto(Graphics,int,int,ImageObserver) in line 3610
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 3610
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function getBounds() in line 3593
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getBounds() in line 3593
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function isInside(Point) in line 3625
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3625
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
   function isReady() in line 3606
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 3606
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makePoly() in line 3570
      22 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable C3_LINE_WIDTH defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function makePoly() in line 3570
      22 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable C3_LINE_WIDTH defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3567
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 3567
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function C3Sprite(Entity,Entity) in line 3534
      protection public
      32 lines of code
      2 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function C3Sprite(Entity,Entity) in line 3534
      protection public
      32 lines of code
      2 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   variable C3Poly in line 3525
   variable entityE in line 3529
   variable entityId in line 3527
   variable entityM in line 3530
   variable masterId in line 3528
module megamek::client::ui::AWT::BoardView1::AttackSprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   inherits from megamek::client::ui::AWT::BoardView1::Sprite
   function addWeapon(WeaponAttackAction) in line 3802
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(WeaponAttackAction) in line 3802
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(KickAttackAction) in line 3809
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(KickAttackAction) in line 3809
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PunchAttackAction) in line 3832
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PunchAttackAction) in line 3832
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PushAttackAction) in line 3855
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(PushAttackAction) in line 3855
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ClubAttackAction) in line 3860
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ClubAttackAction) in line 3860
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ChargeAttackAction) in line 3866
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ChargeAttackAction) in line 3866
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(DfaAttackAction) in line 3870
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(DfaAttackAction) in line 3870
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ProtomechPhysicalAttackAction) in line 3874
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function addWeapon(ProtomechPhysicalAttackAction) in line 3874
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
   function drawOnto(Graphics,int,int,ImageObserver) in line 3773
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function drawOnto(Graphics,int,int,ImageObserver) in line 3773
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function g((null)) defined in jquery.min.js
   function getBounds() in line 3731
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getBounds() in line 3731
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function getEntityId() in line 3791
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEntityId() in line 3791
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTargetId() in line 3795
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTargetId() in line 3795
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTooltip() in line 3879
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
   function getTooltip() in line 3879
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
   function isInside(Point) in line 3786
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isInside(Point) in line 3786
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable view defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
      uses variable offset defined in megamek::client::ui::AWT::BoardView1
   function isMutualAttack() in line 3755
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function rebuildToHalvedPolygon() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function isMutualAttack() in line 3755
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable attackSprites defined in megamek::client::ui::AWT::BoardView1
      uses function getEntityId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function getTargetId() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
      uses function rebuildToHalvedPolygon() defined in megamek::client::ui::AWT::BoardView1::AttackSprite
   function isReady() in line 3769
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 3769
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makePoly() in line 3708
      22 lines of code
      0 parameters
      2 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function makePoly() in line 3708
      22 lines of code
      0 parameters
      2 conditional paths
      uses function getHexLocation(int,int) defined in megamek::client::ui::AWT::BoardView1
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable HEX_W defined in megamek::client::ui::AWT::BoardView1
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable t defined in jquery.min.js
      uses variable HEX_H defined in megamek::client::ui::AWT::BoardView1
   function prepare() in line 3766
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function prepare() in line 3766
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function rebuildToHalvedPolygon() in line 3745
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function rebuildToHalvedPolygon() in line 3745
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses variable scale defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function AttackSprite(AttackAction) in line 3656
      protection public
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   function AttackSprite(AttackAction) in line 3656
      protection public
      51 lines of code
      1 parameters
      9 conditional paths
      uses variable game defined in megamek::client::ui::AWT::BoardView1
      uses variable bounds defined in megamek::client::ui::AWT::BoardView1::ScaledCacheKey
   variable a in line 3642
   variable ae in line 3653
   variable an in line 3644
   variable attackColor in line 3646
   variable attackerDesc in line 3650
   variable attackPoly in line 3645
   variable attacks in line 3641
   variable entityId in line 3647
   variable t in line 3643
   variable target in line 3654
   variable targetDesc in line 3651
   variable targetId in line 3649
   variable targetType in line 3648
   variable weaponDescs in line 3652
module megamek::client::ui::AWT::BoardView1::RedrawWorker
   inherits from Runnable
   inherits from Runnable
   function run() in line 4212
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses function doMoveUnits(long) defined in megamek::client::ui::AWT::BoardView1
      uses function doScroll() defined in megamek::client::ui::AWT::BoardView1
      uses function checkTooltip() defined in megamek::client::ui::AWT::BoardView1
   function run() in line 4212
      protection public
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable displayables defined in megamek::client::ui::AWT::BoardView1
      uses variable backSize defined in megamek::client::ui::AWT::BoardView1
      uses function doMoveUnits(long) defined in megamek::client::ui::AWT::BoardView1
      uses function doScroll() defined in megamek::client::ui::AWT::BoardView1
      uses function checkTooltip() defined in megamek::client::ui::AWT::BoardView1
   function start() in line 4202
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function start() in line 4202
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function stop() in line 4208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function stop() in line 4208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable finished in line 4200
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/IndexWriter_1.2_1.3_v0.java
module org::apache::lucene::index::IndexWriter
   function addDocument(Document) in line 166
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses variable maxFieldLength defined in org::apache::lucene::index::IndexWriter
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function maybeMergeSegments() defined in org::apache::lucene::index::IndexWriter
   function addDocument(Document) in line 166
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses variable maxFieldLength defined in org::apache::lucene::index::IndexWriter
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function maybeMergeSegments() defined in org::apache::lucene::index::IndexWriter
   function addIndexes(Directory[]) in line 224
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function optimize() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function addIndexes(Directory[]) in line 225
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function optimize() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function close() in line 140
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function close() in line 140
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Directory) in line 353
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Directory) in line 354
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Vector) in line 359
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable e defined in jquery.min.js
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Vector) in line 360
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable e defined in jquery.min.js
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
   function deleteSegments(Vector) in line 337
      15 lines of code
      1 parameters
      3 conditional paths
      uses function deleteFiles(Vector,Directory) defined in org::apache::lucene::index::IndexWriter
      uses function readDeleteableFiles() defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function writeDeleteableFiles(Vector) defined in org::apache::lucene::index::IndexWriter
   function deleteSegments(Vector) in line 338
      15 lines of code
      1 parameters
      3 conditional paths
      uses function deleteFiles(Vector,Directory) defined in org::apache::lucene::index::IndexWriter
      uses function readDeleteableFiles() defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function writeDeleteableFiles(Vector) defined in org::apache::lucene::index::IndexWriter
   function docCount() in line 148
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable maxFieldLength defined in org::apache::lucene::index::IndexWriter
   function docCount() in line 148
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   function flushRamSegments() in line 246
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function docCount() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function flushRamSegments() in line 247
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function docCount() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function maybeMergeSegments() in line 264
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses variable maxMergeDocs defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function maybeMergeSegments() in line 265
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses variable maxMergeDocs defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function mergeSegments(int) in line 288
      3 lines of code
      1 parameters
      1 conditional paths
   function mergeSegments(int) in line 289
      3 lines of code
      1 parameters
      1 conditional paths
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function mergeSegments(int,boolean) in line 294
      37 lines of code
      2 parameters
      6 conditional paths
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function deleteSegments(Vector) defined in org::apache::lucene::index::IndexWriter
   function mergeSegments(int,boolean) in line 295
      37 lines of code
      2 parameters
      6 conditional paths
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function deleteSegments(Vector) defined in org::apache::lucene::index::IndexWriter
   function newSegmentName() in line 177
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   function newSegmentName() in line 177
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses variable maxMergeDocs defined in org::apache::lucene::index::IndexWriter
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
   function optimize() in line 205
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function optimize() in line 205
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function readDeleteableFiles() in line 375
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function readDeleteableFiles() in line 376
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function writeDeleteableFiles(Vector) in line 390
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function writeDeleteableFiles(Vector) in line 391
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function IndexWriter(String,Analyzer,boolean) in line 98
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(File,Analyzer,boolean) in line 107
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(Directory,Analyzer,final boolean) in line 116
      protection public
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses function d((null),(null)) defined in jquery.min.js
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   function IndexWriter(String,Analyzer,boolean) in line 98
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(File,Analyzer,boolean) in line 107
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(Directory,Analyzer,final boolean) in line 116
      protection public
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses function d((null),(null)) defined in jquery.min.js
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   variable analyzer in line 89
   variable directory in line 88
   variable infoStream in line 201
      protection public
   variable maxFieldLength in line 163
      protection public
   variable maxMergeDocs in line 198
      protection public
   variable mergeFactor in line 190
      protection public
   variable ramDirectory in line 92
   variable segmentInfos in line 91
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/IndexWriter_1.2_1.3_v1.java
module org::apache::lucene::index::IndexWriter
   function addDocument(Document) in line 166
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses variable maxFieldLength defined in org::apache::lucene::index::IndexWriter
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function maybeMergeSegments() defined in org::apache::lucene::index::IndexWriter
   function addDocument(Document) in line 166
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses variable maxFieldLength defined in org::apache::lucene::index::IndexWriter
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function maybeMergeSegments() defined in org::apache::lucene::index::IndexWriter
   function addIndexes(Directory[]) in line 224
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function optimize() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function addIndexes(Directory[]) in line 225
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function optimize() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function close() in line 140
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function close() in line 140
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Directory) in line 353
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Directory) in line 354
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Vector) in line 359
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable e defined in jquery.min.js
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
   function deleteFiles(Vector,Vector) in line 360
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable e defined in jquery.min.js
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
   function deleteSegments(Vector) in line 337
      15 lines of code
      1 parameters
      3 conditional paths
      uses function deleteFiles(Vector,Directory) defined in org::apache::lucene::index::IndexWriter
      uses function readDeleteableFiles() defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function writeDeleteableFiles(Vector) defined in org::apache::lucene::index::IndexWriter
   function deleteSegments(Vector) in line 338
      15 lines of code
      1 parameters
      3 conditional paths
      uses function deleteFiles(Vector,Directory) defined in org::apache::lucene::index::IndexWriter
      uses function readDeleteableFiles() defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses function writeDeleteableFiles(Vector) defined in org::apache::lucene::index::IndexWriter
   function docCount() in line 148
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable maxFieldLength defined in org::apache::lucene::index::IndexWriter
   function docCount() in line 148
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   function flushRamSegments() in line 246
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function docCount() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function flushRamSegments() in line 247
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function docCount() defined in org::apache::lucene::index::IndexWriter
      uses variable ramDirectory defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function maybeMergeSegments() in line 264
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses variable maxMergeDocs defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function maybeMergeSegments() in line 265
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses variable maxMergeDocs defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function mergeSegments(int) in line 288
      3 lines of code
      1 parameters
      1 conditional paths
   function mergeSegments(int) in line 289
      3 lines of code
      1 parameters
      1 conditional paths
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function mergeSegments(int,boolean) in line 294
      37 lines of code
      2 parameters
      6 conditional paths
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function deleteSegments(Vector) defined in org::apache::lucene::index::IndexWriter
   function mergeSegments(int,boolean) in line 295
      37 lines of code
      2 parameters
      6 conditional paths
      uses function newSegmentName() defined in org::apache::lucene::index::IndexWriter
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses function deleteSegments(Vector) defined in org::apache::lucene::index::IndexWriter
   function newSegmentName() in line 177
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   function newSegmentName() in line 177
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses variable maxMergeDocs defined in org::apache::lucene::index::IndexWriter
      uses variable infoStream defined in org::apache::lucene::index::IndexWriter
   function optimize() in line 205
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function optimize() in line 205
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function flushRamSegments() defined in org::apache::lucene::index::IndexWriter
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
      uses variable mergeFactor defined in org::apache::lucene::index::IndexWriter
      uses function mergeSegments(int) defined in org::apache::lucene::index::IndexWriter
   function readDeleteableFiles() in line 375
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function readDeleteableFiles() in line 376
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function writeDeleteableFiles(Vector) in line 390
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function writeDeleteableFiles(Vector) in line 391
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses variable i defined in jquery.min.js
   function IndexWriter(String,Analyzer,boolean) in line 98
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(File,Analyzer,boolean) in line 107
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(Directory,Analyzer,final boolean) in line 116
      protection public
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses function d((null),(null)) defined in jquery.min.js
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   function IndexWriter(String,Analyzer,boolean) in line 98
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(File,Analyzer,boolean) in line 107
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
   function IndexWriter(Directory,Analyzer,final boolean) in line 116
      protection public
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable directory defined in org::apache::lucene::index::IndexWriter
      uses function d((null),(null)) defined in jquery.min.js
      uses variable analyzer defined in org::apache::lucene::index::IndexWriter
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses variable segmentInfos defined in org::apache::lucene::index::IndexWriter
   variable analyzer in line 89
   variable directory in line 88
   variable infoStream in line 201
      protection public
   variable maxFieldLength in line 163
      protection public
   variable maxMergeDocs in line 198
      protection public
   variable mergeFactor in line 190
      protection public
   variable ramDirectory in line 92
   variable segmentInfos in line 91
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/Install_1.9_1.10_v0.java
module installer::Install
   function copy(InputStream,String,Progress) in line 91
      protection public
      26 lines of code
      3 parameters
      4 conditional paths
      uses variable buf defined in installer::Install
   function copy(InputStream,String,Progress) in line 91
      protection public
      26 lines of code
      3 parameters
      4 conditional paths
      uses variable buf defined in installer::Install
      uses variable props defined in installer::Install
   function getIntegerProperty(String) in line 79
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable e defined in jquery.min.js
   function getIntegerProperty(String) in line 79
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable e defined in jquery.min.js
   function getProperty(String) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable props defined in installer::Install
   function getProperty(String) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable props defined in installer::Install
   function main(String[]) in line 22
      protection public
      33 lines of code
      1 parameters
      5 conditional paths
   function main(String[]) in line 22
      protection public
      33 lines of code
      1 parameters
      5 conditional paths
   function Install() in line 56
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable buf defined in installer::Install
   function Install() in line 56
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable buf defined in installer::Install
   variable buf in line 120
   variable props in line 119
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/Install_1.9_1.10_v1.java
module installer::Install
   function copy(InputStream,String,Progress) in line 91
      protection public
      26 lines of code
      3 parameters
      4 conditional paths
      uses variable buf defined in installer::Install
   function copy(InputStream,String,Progress) in line 91
      protection public
      26 lines of code
      3 parameters
      4 conditional paths
      uses variable buf defined in installer::Install
      uses variable props defined in installer::Install
   function getIntegerProperty(String) in line 79
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable e defined in jquery.min.js
   function getIntegerProperty(String) in line 79
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable e defined in jquery.min.js
   function getProperty(String) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable props defined in installer::Install
   function getProperty(String) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable props defined in installer::Install
   function main(String[]) in line 22
      protection public
      33 lines of code
      1 parameters
      5 conditional paths
   function main(String[]) in line 22
      protection public
      33 lines of code
      1 parameters
      5 conditional paths
   function Install() in line 56
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable buf defined in installer::Install
   function Install() in line 56
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable props defined in installer::Install
      uses variable buf defined in installer::Install
   variable buf in line 120
   variable props in line 119
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/IntrospectionUtils_1.1_1.2_v0.java
module org::apache::tomcat::util::IntrospectionUtils
   function hasHook(Object,String) in line 72
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
   function hasHook(Object,String) in line 72
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/IntrospectionUtils_1.1_1.2_v1.java
module org::apache::tomcat::util::IntrospectionUtils
   function hasHook(Object,String) in line 72
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
   function hasHook(Object,String) in line 72
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/IRMILocalContext_1.1_1.2_v0.java
module org::objectweb::carol::jndi::spi::IRMILocalContext
   inherits from IRMIContext
   inherits from javax::naming::Context
   inherits from IRMIContext
   inherits from javax::naming::Context
   function unwrapObject(Object,Name) in line 68
      16 lines of code
      2 parameters
      4 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function IRMILocalContext(Context) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IRMILocalContext(Context) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/IRMILocalContext_1.1_1.2_v1.java
module org::objectweb::carol::jndi::spi::IRMILocalContext
   inherits from IRMIContext
   inherits from javax::naming::Context
   inherits from IRMIContext
   inherits from javax::naming::Context
   function unwrapObject(Object,Name) in line 68
      16 lines of code
      2 parameters
      4 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function IRMILocalContext(Context) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IRMILocalContext(Context) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/JacORBPRODelegate_1.1_1.2_v0.java
module org::objectweb::carol::rmi::multi::JacORBPRODelegate
   inherits from com::sun::corba::se::internal::javax::rmi::PortableRemoteObject
   inherits from com::sun::corba::se::internal::javax::rmi::PortableRemoteObject
   function exportObject(Remote) in line 53
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/JacORBPRODelegate_1.1_1.2_v1.java
module org::objectweb::carol::rmi::multi::JacORBPRODelegate
   inherits from com::sun::corba::se::internal::javax::rmi::PortableRemoteObject
   inherits from com::sun::corba::se::internal::javax::rmi::PortableRemoteObject
   function exportObject(Remote) in line 53
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/MetricsInterceptor_1.18_1.19_v0.java
module org::jboss::ejb::plugins::MetricsInterceptor
   inherits from AbstractInterceptor
   inherits from org::jboss::monitor::MetricsConstants
   inherits from AbstractInterceptor
   inherits from org::jboss::monitor::MetricsConstants
   function addEntry(Invocation,long,long) in line 115
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
   function addEntry(Invocation,long,long) in line 115
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
   function create() in line 74
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function create() in line 74
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function createMessage(Session,String,int,String,String,long) in line 135
      37 lines of code
      6 parameters
      4 conditional paths
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
      uses variable running defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable delay defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable connection defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
   function createMessage(Session,String,int,String,String,long) in line 135
      37 lines of code
      6 parameters
      4 conditional paths
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
   function destroy() in line 87
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function destroy() in line 87
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function invoke(Invocation) in line 92
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function addEntry(Invocation,long,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
   function invoke(Invocation) in line 92
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function addEntry(Invocation,long,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
   variable applicationName in line 50
   variable beanName in line 55
   variable msgQueue in line 69
   variable publisher in line 60
module org::jboss::ejb::plugins::MetricsInterceptor::Publisher
   inherits from Runnable
   inherits from Runnable
   function run() in line 200
      protection public
      94 lines of code
      0 parameters
      6 conditional paths
      uses variable connection defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable running defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable delay defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable i defined in jquery.min.js
      uses function createMessage(Session,String,int,String,String,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
   function run() in line 200
      protection public
      94 lines of code
      0 parameters
      6 conditional paths
      uses variable connection defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable running defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable delay defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable i defined in jquery.min.js
      uses function createMessage(Session,String,int,String,String,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
   variable connection in line 183
   variable delay in line 181
   variable running in line 179
module org::jboss::ejb::plugins::MetricsInterceptor::Entry
   function Entry(Principal,Method,Transaction,long,String) in line 309
      protection public
      22 lines of code
      5 parameters
      3 conditional paths
   function Entry(Principal,Method,Transaction,long,String) in line 309
      protection public
      22 lines of code
      5 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/MetricsInterceptor_1.18_1.19_v1.java
module org::jboss::ejb::plugins::MetricsInterceptor
   inherits from AbstractInterceptor
   inherits from org::jboss::monitor::MetricsConstants
   inherits from AbstractInterceptor
   inherits from org::jboss::monitor::MetricsConstants
   function addEntry(Invocation,long,long) in line 115
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
   function addEntry(Invocation,long,long) in line 115
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
   function create() in line 74
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function create() in line 74
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function createMessage(Session,String,int,String,String,long) in line 135
      37 lines of code
      6 parameters
      4 conditional paths
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
      uses variable running defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable delay defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable connection defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
   function createMessage(Session,String,int,String,String,long) in line 135
      37 lines of code
      6 parameters
      4 conditional paths
      uses variable beanName defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
   function destroy() in line 87
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function destroy() in line 87
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable publisher defined in org::jboss::ejb::plugins::MetricsInterceptor
   function invoke(Invocation) in line 92
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function addEntry(Invocation,long,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
   function invoke(Invocation) in line 92
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function addEntry(Invocation,long,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
   variable applicationName in line 50
   variable beanName in line 55
   variable msgQueue in line 69
   variable publisher in line 60
module org::jboss::ejb::plugins::MetricsInterceptor::Publisher
   inherits from Runnable
   inherits from Runnable
   function run() in line 200
      protection public
      94 lines of code
      0 parameters
      6 conditional paths
      uses variable connection defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable running defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable delay defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable i defined in jquery.min.js
      uses function createMessage(Session,String,int,String,String,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
   function run() in line 200
      protection public
      94 lines of code
      0 parameters
      6 conditional paths
      uses variable connection defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable running defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable delay defined in org::jboss::ejb::plugins::MetricsInterceptor::Publisher
      uses variable msgQueue defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable i defined in jquery.min.js
      uses function createMessage(Session,String,int,String,String,long) defined in org::jboss::ejb::plugins::MetricsInterceptor
      uses variable e defined in jquery.min.js
   variable connection in line 183
   variable delay in line 181
   variable running in line 179
module org::jboss::ejb::plugins::MetricsInterceptor::Entry
   function Entry(Principal,Method,Transaction,long,String) in line 309
      protection public
      22 lines of code
      5 parameters
      3 conditional paths
   function Entry(Principal,Method,Transaction,long,String) in line 309
      protection public
      22 lines of code
      5 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/MirrorListHandler_1.2_1.3_v0.java
module org::gjt::sp::jedit::pluginmgr::MirrorListHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function characters(char[],int,int) in line 58
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
   function characters(char[],int,int) in line 58
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
   function endDocument() in line 118
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function endDocument() in line 120
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function endElement(String,String,String) in line 85
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
   function endElement(String,String,String) in line 87
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
   function peekElement() in line 148
      4 lines of code
      0 parameters
      1 conditional paths
   function peekElement() in line 150
      4 lines of code
      0 parameters
      1 conditional paths
   function popElement() in line 153
      4 lines of code
      0 parameters
      1 conditional paths
   function popElement() in line 155
      4 lines of code
      0 parameters
      1 conditional paths
   function pushElement(String) in line 139
      8 lines of code
      1 parameters
      1 conditional paths
   function pushElement(String) in line 141
      8 lines of code
      1 parameters
      1 conditional paths
   function resolveEntity(String,String) in line 51
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function resolveEntity(String,String) in line 51
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function startDocument() in line 105
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function startDocument() in line 107
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function startElement(String,String,String,Attributes) in line 74
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
   function startElement(String,String,String,Attributes) in line 74
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
   variable continent in line 130
   variable country in line 129
   variable description in line 127
   variable id in line 126
   variable location in line 128
   variable mirror in line 133
   variable mirrors in line 132
   variable path in line 136
   variable stateStack in line 135
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/MirrorListHandler_1.2_1.3_v1.java
module org::gjt::sp::jedit::pluginmgr::MirrorListHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function characters(char[],int,int) in line 58
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
   function characters(char[],int,int) in line 58
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
   function endDocument() in line 118
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function endDocument() in line 120
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function endElement(String,String,String) in line 85
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
   function endElement(String,String,String) in line 87
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
   function peekElement() in line 148
      4 lines of code
      0 parameters
      1 conditional paths
   function peekElement() in line 150
      4 lines of code
      0 parameters
      1 conditional paths
   function popElement() in line 153
      4 lines of code
      0 parameters
      1 conditional paths
   function popElement() in line 155
      4 lines of code
      0 parameters
      1 conditional paths
   function pushElement(String) in line 139
      8 lines of code
      1 parameters
      1 conditional paths
   function pushElement(String) in line 141
      8 lines of code
      1 parameters
      1 conditional paths
   function resolveEntity(String,String) in line 51
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function resolveEntity(String,String) in line 51
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function startDocument() in line 105
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function startDocument() in line 107
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function startElement(String,String,String,Attributes) in line 74
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
   function startElement(String,String,String,Attributes) in line 74
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
   variable continent in line 130
   variable country in line 129
   variable description in line 127
   variable id in line 126
   variable location in line 128
   variable mirror in line 133
   variable mirrors in line 132
   variable path in line 136
   variable stateStack in line 135
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/RQueryUser_1.1_1.2_v0.java
module org::tigris::scarab::om::RQueryUser
   inherits from org::tigris::scarab::om::BaseRQueryUser
   inherits from org::apache::torque::om::UnsecurePersistent
   inherits from org::tigris::scarab::om::BaseRQueryUser
   inherits from org::apache::torque::om::UnsecurePersistent
   function delete(ScarabUser,ScarabModule) in line 25
      protection public
      18 lines of code
      2 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/RQueryUser_1.1_1.2_v1.java
module org::tigris::scarab::om::RQueryUser
   inherits from org::tigris::scarab::om::BaseRQueryUser
   inherits from org::apache::torque::om::UnsecurePersistent
   inherits from org::tigris::scarab::om::BaseRQueryUser
   inherits from org::apache::torque::om::UnsecurePersistent
   function delete(ScarabUser,ScarabModule) in line 25
      protection public
      18 lines of code
      2 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/SegmentTermDocs_1.6_1.7_v0.java
module org::apache::lucene::index::SegmentTermDocs
   inherits from TermDocs
   inherits from TermDocs
   function close() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function close() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function doc() in line 122
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function doc() in line 122
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function freq() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function freq() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function next() in line 128
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function next() in line 128
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function read(final int[],final int[]) in line 150
      protection public
      23 lines of code
      2 parameters
      1 conditional paths
   function read(final int[],final int[]) in line 150
      protection public
      23 lines of code
      2 parameters
      1 conditional paths
   function seek(Term) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function seek(Term) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function seek(TermEnum) in line 92
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function seek(TermEnum) in line 92
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function skippingDoc() in line 125
      2 lines of code
      0 parameters
      1 conditional paths
   function skippingDoc() in line 125
      2 lines of code
      0 parameters
      1 conditional paths
   function skipProx(long) in line 175
      1 lines of code
      1 parameters
      1 conditional paths
   function skipProx(long) in line 175
      1 lines of code
      1 parameters
      1 conditional paths
   function skipTo(int) in line 178
      protection public
      52 lines of code
      1 parameters
      1 conditional paths
   function skipTo(int) in line 178
      protection public
      52 lines of code
      1 parameters
      1 conditional paths
   variable count in line 64
   variable deletedDocs in line 66
   variable df in line 65
   variable freqPointer in line 74
   variable freqStream in line 63
   variable haveSkipped in line 77
   variable parent in line 62
   variable proxPointer in line 75
   variable skipCount in line 71
   variable skipDoc in line 73
   variable skipInterval in line 70
   variable skipPointer in line 76
   variable skipStream in line 72
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/SegmentTermDocs_1.6_1.7_v1.java
module org::apache::lucene::index::SegmentTermDocs
   inherits from TermDocs
   inherits from TermDocs
   function close() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function close() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function doc() in line 122
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function doc() in line 122
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function freq() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function freq() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function next() in line 128
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function next() in line 128
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function read(final int[],final int[]) in line 150
      protection public
      23 lines of code
      2 parameters
      1 conditional paths
   function read(final int[],final int[]) in line 150
      protection public
      23 lines of code
      2 parameters
      1 conditional paths
   function seek(Term) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function seek(Term) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function seek(TermEnum) in line 92
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function seek(TermEnum) in line 92
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function skippingDoc() in line 125
      2 lines of code
      0 parameters
      1 conditional paths
   function skippingDoc() in line 125
      2 lines of code
      0 parameters
      1 conditional paths
   function skipProx(long) in line 175
      1 lines of code
      1 parameters
      1 conditional paths
   function skipProx(long) in line 175
      1 lines of code
      1 parameters
      1 conditional paths
   function skipTo(int) in line 178
      protection public
      52 lines of code
      1 parameters
      1 conditional paths
   function skipTo(int) in line 178
      protection public
      52 lines of code
      1 parameters
      1 conditional paths
   variable count in line 64
   variable deletedDocs in line 66
   variable df in line 65
   variable freqPointer in line 74
   variable freqStream in line 63
   variable haveSkipped in line 77
   variable parent in line 62
   variable proxPointer in line 75
   variable skipCount in line 71
   variable skipDoc in line 73
   variable skipInterval in line 70
   variable skipPointer in line 76
   variable skipStream in line 72
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/Server_1.925_1.926_v0.java
module megamek::server::Server
   inherits from Runnable
   inherits from Runnable
   function abandonEntity(Entity) in line 17325
      protection public
      55 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function abandonEntity(Entity) in line 17326
      protection public
      55 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function addAffectedBldg(Building,boolean) in line 2575
      15 lines of code
      2 parameters
      2 conditional paths
      uses variable affectedBldgs defined in megamek::server::Server
   function addAffectedBldg(Building,boolean) in line 2575
      15 lines of code
      2 parameters
      2 conditional paths
      uses variable affectedBldgs defined in megamek::server::Server
   function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) in line 6369
      42 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) in line 6369
      42 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function addL3Smoke(int,int) in line 14329
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function addL3Smoke(int,int) in line 14330
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function addMovementHeat() in line 5009
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function addMovementHeat() in line 5009
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function addNewLines() in line 17796
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addNewLines() in line 17797
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Vector) in line 17749
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Vector) in line 17750
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Report) in line 17765
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Report) in line 17766
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addSmoke(int,int,int) in line 14312
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function addSmoke(int,int,int) in line 14313
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function addTeammates(Vector,Player) in line 14568
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
   function addTeammates(Vector,Player) in line 14569
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
   function applyAffectedBldgs() in line 2597
      79 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyAffectedBldgs() in line 2597
      79 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyBoardSettings() in line 1965
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable mapSettings defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function applyBoardSettings() in line 1965
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable mapSettings defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function applyBuildingDamage() in line 16326
      57 lines of code
      0 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyBuildingDamage() in line 16327
      57 lines of code
      0 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyCriticalHit(Entity,int,CriticalSlot,boolean) in line 12538
      protection public
      404 lines of code
      4 parameters
      61 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
   function applyCriticalHit(Entity,int,CriticalSlot,boolean) in line 12538
      protection public
      404 lines of code
      4 parameters
      61 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
   function assignAMS() in line 5796
      35 lines of code
      0 parameters
      7 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function v((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function assignAMS() in line 5796
      35 lines of code
      0 parameters
      7 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function v((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function autoSave() in line 691
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function autoSave() in line 691
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function breachCheck(Entity,int,IHex) in line 13394
      49 lines of code
      3 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
   function breachCheck(Entity,int,IHex) in line 13395
      49 lines of code
      3 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
   function breachLocation(Entity,int,IHex,boolean) in line 13456
      108 lines of code
      4 parameters
      29 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
   function breachLocation(Entity,int,IHex,boolean) in line 13457
      108 lines of code
      4 parameters
      29 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
   function cancelVictory() in line 1148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function cancelVictory() in line 1148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function canSee(Player,Entity) in line 14548
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function canSee(Player,Entity) in line 14549
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function changePhase(int) in line 1313
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function prepareForPhase(int) defined in megamek::server::Server
      uses function isPhasePlayable(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function executePhase(int) defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function changePhase(int) in line 1313
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function prepareForPhase(int) defined in megamek::server::Server
      uses function isPhasePlayable(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function executePhase(int) defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function changeToNextTurn() in line 1757
      21 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function sendTurnErrorSkipMessage(Player) defined in megamek::server::Server
   function changeToNextTurn() in line 1757
      21 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function sendTurnErrorSkipMessage(Player) defined in megamek::server::Server
   function checkBuildingCollapseWhileMoving(Building,Entity,Coords) in line 15909
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
   function checkBuildingCollapseWhileMoving(Building,Entity,Coords) in line 15910
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
   function checkEngineExplosion(Entity,Vector,int) in line 12363
      145 lines of code
      3 parameters
      20 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function checkEngineExplosion(Entity,Vector,int) in line 12363
      145 lines of code
      3 parameters
      20 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) in line 17059
      44 lines of code
      4 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
   function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) in line 17060
      44 lines of code
      4 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
   function checkFor20Damage() in line 10993
      41 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function checkFor20Damage() in line 10993
      41 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function checkForCollapse(Building,Hashtable) in line 16026
      protection public
      125 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
   function checkForCollapse(Building,Hashtable) in line 16027
      protection public
      125 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
   function checkForFlamingDeath() in line 11039
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
   function checkForFlamingDeath() in line 11039
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
   function checkForObservers() in line 652
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function checkForObservers() in line 652
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function checkForSuffocation() in line 11087
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
   function checkForSuffocation() in line 11087
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
   function checkForVacuumDeath() in line 11065
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function checkForVacuumDeath() in line 11065
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function checkForVehicleFire(Tank,boolean) in line 17613
      44 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
   function checkForVehicleFire(Tank,boolean) in line 17614
      44 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
   function checkReady() in line 1158
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function clearReports() defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function checkReady() in line 1158
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function clearReports() defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function checkVibrabombs(Entity,Coords,boolean) in line 4755
      3 lines of code
      3 parameters
      1 conditional paths
   function checkVibrabombs(Entity,Coords,boolean) in line 4755
      3 lines of code
      3 parameters
      1 conditional paths
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
   function checkVibrabombs(Entity,Coords,boolean,Coords,Coords) in line 4759
      56 lines of code
      5 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
   function checkVibrabombs(Entity,Coords,boolean,Coords,Coords) in line 4759
      56 lines of code
      5 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
   function cleanupPhysicalAttacks() in line 8780
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeDuplicateAttacks(int) defined in megamek::server::Server
      uses function removeDeadAttacks() defined in megamek::server::Server
   function cleanupPhysicalAttacks() in line 8780
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeDuplicateAttacks(int) defined in megamek::server::Server
      uses function removeDeadAttacks() defined in megamek::server::Server
   function clearArtillerySpotters(int,int) in line 16600
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function clearArtillerySpotters(int,int) in line 16601
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function clearReports() in line 17780
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function clearReports() in line 17781
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function collapseBuilding(Building,Hashtable) in line 16163
      protection public
      124 lines of code
      2 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createCollapseBuildingPacket(Building) defined in megamek::server::Server
   function collapseBuilding(Building,Hashtable) in line 16164
      protection public
      124 lines of code
      2 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createCollapseBuildingPacket(Building) defined in megamek::server::Server
   function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) in line 16622
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) in line 16623
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function correctDupeName(String) in line 367
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function correctDupeName(String) defined in megamek::server::Server
   function correctDupeName(String) in line 367
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function crashVTOL(VTOL,Coords,int) in line 12961
      3 lines of code
      3 parameters
      1 conditional paths
   function crashVTOL(VTOL,Coords,int) in line 12961
      3 lines of code
      3 parameters
      1 conditional paths
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
   function crashVTOL(VTOL) in line 12964
      3 lines of code
      1 parameters
      1 conditional paths
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
   function crashVTOL(VTOL) in line 12964
      3 lines of code
      1 parameters
      1 conditional paths
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
   function crashVTOL(VTOL,boolean,int,Coords,int,int) in line 12980
      171 lines of code
      6 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
   function crashVTOL(VTOL,boolean,int,Coords,int,int) in line 12980
      171 lines of code
      6 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
   function createAddEntityPacket(int) in line 15355
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createAddEntityPacket(int) in line 15356
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createAllReportsPacket(Player) in line 15314
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterPastReports(Vector,Player) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function createAllReportsPacket(Player) in line 15315
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterPastReports(Vector,Player) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function createArtilleryPacket(Player) in line 15489
      16 lines of code
      1 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function createArtilleryPacket(Player) in line 15490
      16 lines of code
      1 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function createAttackPacket(Vector,int) in line 15467
      6 lines of code
      2 parameters
      1 conditional paths
   function createAttackPacket(Vector,int) in line 15468
      6 lines of code
      2 parameters
      1 conditional paths
   function createAttackPacket(EntityAction,int) in line 15477
      8 lines of code
      2 parameters
      1 conditional paths
   function createAttackPacket(EntityAction,int) in line 15478
      8 lines of code
      2 parameters
      1 conditional paths
   function createBoardPacket() in line 15263
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createBoardPacket() in line 15264
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createCollapseBuildingPacket(Building) in line 16294
      5 lines of code
      1 parameters
      1 conditional paths
   function createCollapseBuildingPacket(Building) in line 16295
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createCollapseBuildingPacket(Building) defined in megamek::server::Server
   function createCollapseBuildingPacket(Vector) in line 16307
      3 lines of code
      1 parameters
      1 conditional paths
   function createCollapseBuildingPacket(Vector) in line 16308
      3 lines of code
      1 parameters
      1 conditional paths
   function createEndOfGamePacket() in line 15408
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDetailedVictoryReport() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function createEndOfGamePacket() in line 15409
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDetailedVictoryReport() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function createEntitiesPacket() in line 15321
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createEntitiesPacket() in line 15322
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createEntityPacket(int) in line 15270
      3 lines of code
      1 parameters
      1 conditional paths
   function createEntityPacket(int) in line 15271
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createEntityPacket(int) defined in megamek::server::Server
   function createEntityPacket(int,Vector) in line 15273
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createEntityPacket(int,Vector) in line 15274
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFilteredEntitiesPacket(Player) in line 15338
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFilteredEntitiesPacket(Player) in line 15339
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFilteredFullEntitiesPacket(Player) in line 15345
      6 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFilteredFullEntitiesPacket(Player) in line 15346
      6 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFlarePacket() in line 15509
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFlarePacket() in line 15510
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFullEntitiesPacket() in line 15328
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFullEntitiesPacket() in line 15329
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createGameSettingsPacket() in line 15256
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createGameSettingsPacket() in line 15257
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createHexChangePacket(Coords,IHex) in line 15442
      6 lines of code
      2 parameters
      1 conditional paths
   function createHexChangePacket(Coords,IHex) in line 15443
      6 lines of code
      2 parameters
      1 conditional paths
   function createMapQueryPacket(MapSettings) in line 15249
      3 lines of code
      1 parameters
      1 conditional paths
   function createMapQueryPacket(MapSettings) in line 15250
      3 lines of code
      1 parameters
      1 conditional paths
   function createMapSettingsPacket() in line 15241
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mapSettings defined in megamek::server::Server
   function createMapSettingsPacket() in line 15242
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mapSettings defined in megamek::server::Server
   function createMotd() in line 237
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable L defined in jquery.min.js
   function createMotd() in line 237
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable L defined in jquery.min.js
   function createPlayerConnectPacket(int) in line 15178
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerConnectPacket(int) in line 15179
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerDonePacket(int) in line 15221
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerDonePacket(int) in line 15222
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerUpdatePacket(int) in line 15188
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerUpdatePacket(int) in line 15189
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createRemoveEntityPacket(int) in line 15370
      3 lines of code
      1 parameters
      1 conditional paths
   function createRemoveEntityPacket(int) in line 15371
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function createRemoveEntityPacket(int,int) in line 15387
      17 lines of code
      2 parameters
      2 conditional paths
   function createRemoveEntityPacket(int,int) in line 15388
      17 lines of code
      2 parameters
      2 conditional paths
   function createReportPacket(Player) in line 15285
      8 lines of code
      1 parameters
      2 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function createReportPacket(Player) in line 15286
      8 lines of code
      1 parameters
      2 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function createSpecialReportPacket() in line 15298
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createSpecialReportPacket() in line 15299
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createTacticalGeniusReportPacket() in line 15307
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createTacticalGeniusReportPacket() in line 15308
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createTurnIndexPacket() in line 15234
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createTurnIndexPacket() in line 15235
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createTurnVectorPacket() in line 15229
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createTurnVectorPacket() in line 15230
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createUpdateBuildingCFPacket(Vector) in line 16318
      3 lines of code
      1 parameters
      1 conditional paths
   function createUpdateBuildingCFPacket(Vector) in line 16319
      3 lines of code
      1 parameters
      1 conditional paths
   function creditKill(Entity,Entity) in line 16885
      5 lines of code
      2 parameters
      2 conditional paths
   function creditKill(Entity,Entity) in line 16886
      5 lines of code
      2 parameters
      2 conditional paths
   function criticalEntity(Entity,int) in line 12946
      3 lines of code
      2 parameters
      1 conditional paths
   function criticalEntity(Entity,int) in line 12946
      3 lines of code
      2 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function criticalEntity(Entity,int,int) in line 12950
      3 lines of code
      3 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function criticalEntity(Entity,int,int) in line 12950
      3 lines of code
      3 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function criticalEntity(Entity,int,int,boolean) in line 13185
      196 lines of code
      4 parameters
      26 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
   function criticalEntity(Entity,int,int,boolean) in line 13185
      197 lines of code
      4 parameters
      26 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
   function damageBuilding(Building,int) in line 16398
      4 lines of code
      2 parameters
      1 conditional paths
   function damageBuilding(Building,int) in line 16399
      4 lines of code
      2 parameters
      1 conditional paths
      uses function damageBuilding(Building,int) defined in megamek::server::Server
   function damageBuilding(Building,int,String) in line 16416
      23 lines of code
      3 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
   function damageBuilding(Building,int,String) in line 16417
      23 lines of code
      3 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
   function damageCrew(Entity,int) in line 11321
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function damageCrew(Entity,int) in line 11321
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean) in line 11454
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function damageEntity(Entity,HitData,int,boolean) in line 11454
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int) in line 11458
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int) in line 11458
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int) in line 11462
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int) in line 11462
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean) in line 11468
      protection public
      6 lines of code
      6 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean) in line 11468
      protection public
      6 lines of code
      6 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean) in line 11475
      protection public
      6 lines of code
      7 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean) in line 11475
      protection public
      6 lines of code
      7 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean,boolean) in line 11501
      849 lines of code
      8 parameters
      125 conditional paths
      uses variable r defined in jquery.min.js
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean,boolean) in line 11501
      849 lines of code
      8 parameters
      125 conditional paths
      uses variable r defined in jquery.min.js
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function damageInfantryIn(Building,int) in line 15939
      70 lines of code
      2 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageInfantryIn(Building,int) in line 15940
      70 lines of code
      2 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function deadEntitiesCleanup() in line 17587
      13 lines of code
      0 parameters
      1 conditional paths
   function deadEntitiesCleanup() in line 17588
      13 lines of code
      0 parameters
      1 conditional paths
   function deliverArtilleryFlare(Coords,int) in line 4588
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverArtilleryFlare(Coords,int) in line 4588
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverArtilleryInferno(Coords,int) in line 4608
      58 lines of code
      2 parameters
      8 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverArtilleryInferno(Coords,int) in line 4608
      58 lines of code
      2 parameters
      8 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverArtillerySmoke(Coords) in line 4593
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverArtillerySmoke(Coords) in line 4593
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverFASCAMMinefield(Coords,int) in line 4493
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
   function deliverFASCAMMinefield(Coords,int) in line 4493
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
   function deliverFlare(Coords,int) in line 4583
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverFlare(Coords,int) in line 4583
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverThunderActiveMinefield(Coords,int,int) in line 4519
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderActiveMinefield(Coords,int,int) in line 4519
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderAugMinefield(Coords,int,int) in line 4362
      56 lines of code
      3 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderAugMinefield(Coords,int,int) in line 4362
      56 lines of code
      3 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderInfernoMinefield(Coords,int,int) in line 4461
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderInfernoMinefield(Coords,int,int) in line 4461
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderMinefield(Coords,int,int) in line 4425
      29 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderMinefield(Coords,int,int) in line 4425
      29 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderVibraMinefield(Coords,int,int,int) in line 4551
      28 lines of code
      4 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderVibraMinefield(Coords,int,int,int) in line 4551
      28 lines of code
      4 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function destroyEntity(Entity,String) in line 13619
      3 lines of code
      2 parameters
      1 conditional paths
   function destroyEntity(Entity,String) in line 13620
      3 lines of code
      2 parameters
      1 conditional paths
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean) in line 13636
      5 lines of code
      3 parameters
      1 conditional paths
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean) in line 13637
      5 lines of code
      3 parameters
      1 conditional paths
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean,boolean) in line 13659
      136 lines of code
      4 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean,boolean) in line 13660
      136 lines of code
      4 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrder(int) in line 2064
      237 lines of code
      1 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function determineTurnOrderIUI(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrder(int) in line 2064
      237 lines of code
      1 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function determineTurnOrderIUI(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrderIUI(int) in line 2008
      52 lines of code
      1 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrderIUI(int) in line 2008
      52 lines of code
      1 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function die() in line 283
      protection public
      31 lines of code
      0 parameters
      5 conditional paths
      uses variable connector defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
   function die() in line 283
      protection public
      31 lines of code
      0 parameters
      5 conditional paths
      uses variable connector defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
   function doAssaultDrop(Entity) in line 17808
      protection public
      70 lines of code
      1 parameters
      49 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function doAssaultDrop(Entity) in line 17809
      protection public
      70 lines of code
      1 parameters
      49 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function doAssaultDrop(Entity) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function doBlind() in line 14457
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function doBlind() in line 14458
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) in line 5136
      35 lines of code
      3 parameters
      2 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) in line 5136
      35 lines of code
      3 parameters
      2 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) in line 5405
      79 lines of code
      4 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) in line 5405
      79 lines of code
      4 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) in line 5485
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
   function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) in line 5485
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,int,PilotingRollData) in line 13944
      220 lines of code
      5 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,int,PilotingRollData) in line 13945
      220 lines of code
      5 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,PilotingRollData) in line 14168
      3 lines of code
      4 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,PilotingRollData) in line 14169
      3 lines of code
      4 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFall(Entity,PilotingRollData) in line 14175
      3 lines of code
      2 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFall(Entity,PilotingRollData) in line 14176
      3 lines of code
      2 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) in line 5256
      3 lines of code
      4 parameters
      1 conditional paths
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) in line 5256
      3 lines of code
      4 parameters
      1 conditional paths
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData,boolean) in line 5272
      126 lines of code
      5 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData,boolean) in line 5272
      126 lines of code
      5 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doExtremeGravityDamage(Entity,int) in line 17110
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function doExtremeGravityDamage(Entity,int) in line 17111
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function doFlamingDeath(Entity) in line 10939
      49 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function doFlamingDeath(Entity) in line 10939
      49 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function doSetLocationsExposure(Entity,IHex,boolean,int) in line 5037
      protection public
      41 lines of code
      4 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
   function doSetLocationsExposure(Entity,IHex,boolean,int) in line 5037
      protection public
      41 lines of code
      4 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
   function doSkillCheckInPlace(Entity,PilotingRollData) in line 5089
      38 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
   function doSkillCheckInPlace(Entity,PilotingRollData) in line 5089
      38 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
   function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) in line 5186
      58 lines of code
      5 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) in line 5186
      58 lines of code
      5 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doTryUnstuck() in line 17502
      47 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function doTryUnstuck() in line 17503
      47 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function drownSwarmer(Entity,Coords) in line 4941
      20 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function drownSwarmer(Entity,Coords) in line 4941
      20 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function ejectEntity(Entity,boolean) in line 17135
      protection public
      183 lines of code
      2 parameters
      28 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function ejectEntity(Entity,boolean) in line 17136
      protection public
      183 lines of code
      2 parameters
      28 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function endCurrentPhase() in line 1558
      185 lines of code
      0 parameters
      33 conditional paths
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addMovementHeat() defined in megamek::server::Server
      uses function applyBuildingDamage() defined in megamek::server::Server
      uses function checkFor20Damage() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function checkForFlamingDeath() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses function assignAMS() defined in megamek::server::Server
      uses function resolveOnlyWeaponAttacks() defined in megamek::server::Server
      uses function resolvePhysicalAttacks() defined in megamek::server::Server
      uses function resolveSinkVees() defined in megamek::server::Server
      uses function enqueueIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function resolveIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function victory() defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function endCurrentPhase() in line 1558
      185 lines of code
      0 parameters
      33 conditional paths
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addMovementHeat() defined in megamek::server::Server
      uses function applyBuildingDamage() defined in megamek::server::Server
      uses function checkFor20Damage() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function checkForFlamingDeath() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses function assignAMS() defined in megamek::server::Server
      uses function resolveOnlyWeaponAttacks() defined in megamek::server::Server
      uses function resolvePhysicalAttacks() defined in megamek::server::Server
      uses function resolveSinkVees() defined in megamek::server::Server
      uses function enqueueIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function resolveIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function victory() defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function endCurrentTurn(Entity) in line 1194
      113 lines of code
      1 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function endCurrentTurn(Entity) in line 1194
      113 lines of code
      1 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function enqueueIndirectArtilleryAttacks() in line 16823
      55 lines of code
      0 parameters
      9 conditional paths
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function clearArtillerySpotters(int,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function enqueueIndirectArtilleryAttacks() in line 16824
      55 lines of code
      0 parameters
      9 conditional paths
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function clearArtillerySpotters(int,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean) in line 4670
      3 lines of code
      5 parameters
      1 conditional paths
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean) in line 4670
      3 lines of code
      5 parameters
      1 conditional paths
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean,int) in line 4684
      67 lines of code
      6 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean,int) in line 4684
      67 lines of code
      6 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function entityAllUpdate() in line 14582
      12 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
   function entityAllUpdate() in line 14583
      12 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
   function entityUpdate(int) in line 14466
      3 lines of code
      1 parameters
      1 conditional paths
   function entityUpdate(int) in line 14467
      3 lines of code
      1 parameters
      1 conditional paths
      uses function entityUpdate(int) defined in megamek::server::Server
   function entityUpdate(int,Vector) in line 14470
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function createEntityPacket(int) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function entityUpdate(int,Vector) in line 14471
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function createEntityPacket(int) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function executePhase(int) in line 1522
      32 lines of code
      1 parameters
      12 conditional paths
      uses function resetPlayersDone() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function applyBoardSettings() defined in megamek::server::Server
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
   function executePhase(int) in line 1522
      32 lines of code
      1 parameters
      12 conditional paths
      uses function resetPlayersDone() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function applyBoardSettings() defined in megamek::server::Server
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
   function explodeAmmoFromHeat(Entity) in line 13888
      52 lines of code
      1 parameters
      9 conditional paths
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
   function explodeAmmoFromHeat(Entity) in line 13889
      52 lines of code
      1 parameters
      9 conditional paths
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
   function explodeEquipment(Entity,int,int) in line 13801
      3 lines of code
      3 parameters
      1 conditional paths
   function explodeEquipment(Entity,int,int) in line 13802
      3 lines of code
      3 parameters
      1 conditional paths
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
   function explodeEquipment(Entity,int,Mounted) in line 13805
      79 lines of code
      3 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function explodeEquipment(Entity,int,Mounted) in line 13806
      79 lines of code
      3 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function explodeInfernoAmmoFromHeat(Entity) in line 15776
      66 lines of code
      1 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
   function explodeInfernoAmmoFromHeat(Entity) in line 15777
      66 lines of code
      1 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
   function explodeVibrabomb(Minefield) in line 4885
      50 lines of code
      1 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function explodeVibrabomb(Minefield) in line 4885
      50 lines of code
      1 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function explodeVTOL(VTOL) in line 13157
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function explodeVTOL(VTOL) in line 13157
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function filterEntities(Player,Vector) in line 14599
      37 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function filterEntities(Player,Vector) in line 14600
      37 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function filterPastReports(Vector,Player) in line 14701
      36 lines of code
      2 parameters
      5 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
   function filterPastReports(Vector,Player) in line 14702
      36 lines of code
      2 parameters
      5 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
   function filterReport(Report,Player,boolean) in line 14663
      37 lines of code
      3 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
   function filterReport(Report,Player,boolean) in line 14664
      37 lines of code
      3 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
   function filterReportVector(Vector,Player) in line 14638
      14 lines of code
      2 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function filterReportVector(Vector,Player) in line 14639
      14 lines of code
      2 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function forceVictory(Player) in line 1130
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function forceVictory(Player) in line 1130
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function getAllCommandNames() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getAllCommandNames() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getClient(int) in line 820
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConnection(int) defined in megamek::server::Server
   function getClient(int) in line 820
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConnection(int) defined in megamek::server::Server
   function getCommand(String) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getCommand(String) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getConnection(int) in line 834
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable connectionIds defined in megamek::server::Server
   function getConnection(int) in line 834
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable connectionIds defined in megamek::server::Server
   function getConnections() in line 827
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable connections defined in megamek::server::Server
   function getConnections() in line 827
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable connections defined in megamek::server::Server
   function getDetailedVictoryReport() in line 1061
      64 lines of code
      0 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function getDetailedVictoryReport() in line 1061
      64 lines of code
      0 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function getFreeConnectionId() in line 333
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable connectionCounter defined in megamek::server::Server
      uses function getConnection(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function getFreeConnectionId() in line 333
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable connectionCounter defined in megamek::server::Server
      uses function getConnection(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function getFreeEntityId() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getFreeEntityId() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getGame() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getGame() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getKickPushPSRMod(Entity,Entity,int) in line 10436
      39 lines of code
      3 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
   function getKickPushPSRMod(Entity,Entity,int) in line 10436
      39 lines of code
      3 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
   function getPendingConnection(int) in line 841
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
   function getPendingConnection(int) in line 841
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
   function getPlayer(int) in line 789
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getPlayer(int) in line 789
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function greeting(int) in line 325
      4 lines of code
      1 parameters
      1 conditional paths
      uses function sendToPending(int,Packet) defined in megamek::server::Server
      uses variable cn defined in jquery.min.js
   function greeting(int) in line 325
      4 lines of code
      1 parameters
      1 conditional paths
      uses function sendToPending(int,Packet) defined in megamek::server::Server
      uses variable cn defined in jquery.min.js
   function handle(int,Packet) in line 15613
      129 lines of code
      2 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function getConnection(int) defined in megamek::server::Server
      uses function receivePlayerName(Packet,int) defined in megamek::server::Server
      uses function receivePlayerInfo(Packet,int) defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function receivePlayerDone(Packet,int) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function receiveInitiativeRerollRequest(Packet,int) defined in megamek::server::Server
      uses function processCommand(int,String) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable DUNE_CALL defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable DUNE_RESPONSE defined in megamek::server::Server
      uses variable STAR_WARS_CALL defined in megamek::server::Server
      uses variable STAR_WARS_RESPONSE defined in megamek::server::Server
      uses function receiveMovement(Packet,int) defined in megamek::server::Server
      uses function receiveDeployment(Packet,int) defined in megamek::server::Server
      uses function receiveDeployMinefields(Packet,int) defined in megamek::server::Server
      uses function receiveAttack(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAdd(Packet,int) defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function receiveEntityUpdate(Packet,int) defined in megamek::server::Server
      uses function receiveEntityModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntitySystemModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAmmoChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityDelete(Packet,int) defined in megamek::server::Server
      uses function receiveGameOptions(Packet,int) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses function receiveGameOptionsAux(Packet,int) defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function createMapQueryPacket(MapSettings) defined in megamek::server::Server
      uses function receiveUnloadStranded(Packet,int) defined in megamek::server::Server
      uses function receiveArtyAutoHitHexes(Packet,int) defined in megamek::server::Server
   function handle(int,Packet) in line 15614
      129 lines of code
      2 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function getConnection(int) defined in megamek::server::Server
      uses function receivePlayerName(Packet,int) defined in megamek::server::Server
      uses function receivePlayerInfo(Packet,int) defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function receivePlayerDone(Packet,int) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function receiveInitiativeRerollRequest(Packet,int) defined in megamek::server::Server
      uses function processCommand(int,String) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable DUNE_CALL defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable DUNE_RESPONSE defined in megamek::server::Server
      uses variable STAR_WARS_CALL defined in megamek::server::Server
      uses variable STAR_WARS_RESPONSE defined in megamek::server::Server
      uses function receiveMovement(Packet,int) defined in megamek::server::Server
      uses function receiveDeployment(Packet,int) defined in megamek::server::Server
      uses function receiveDeployMinefields(Packet,int) defined in megamek::server::Server
      uses function receiveAttack(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAdd(Packet,int) defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function receiveEntityUpdate(Packet,int) defined in megamek::server::Server
      uses function receiveEntityModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntitySystemModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAmmoChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityDelete(Packet,int) defined in megamek::server::Server
      uses function receiveGameOptions(Packet,int) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses function receiveGameOptionsAux(Packet,int) defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function createMapQueryPacket(MapSettings) defined in megamek::server::Server
      uses function receiveUnloadStranded(Packet,int) defined in megamek::server::Server
      uses function receiveArtyAutoHitHexes(Packet,int) defined in megamek::server::Server
   function ignite(IHex,int,boolean,int) in line 14230
      protection public
      37 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function ignite(IHex,int,boolean,int) in line 14231
      protection public
      37 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function ignite(IHex,int,boolean) in line 14279
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function ignite(IHex,int,boolean) in line 14280
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function ignite(IHex,int) in line 14283
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function ignite(IHex,int) in line 14284
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function incrementAndSendGameRound() in line 1747
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function incrementAndSendGameRound() in line 1747
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function isPassword(Object) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPassword(Object) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPassworded() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPassworded() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPhasePlayable(int) in line 1499
      18 lines of code
      1 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
   function isPhasePlayable(int) in line 1499
      18 lines of code
      1 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
   function isTurnSkippable() in line 1845
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function isTurnSkippable() in line 1845
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function loadGame(File) in line 767
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function setGame(IGame) defined in megamek::server::Server
   function loadGame(File) in line 767
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function setGame(IGame) defined in megamek::server::Server
   function loadUnit(Entity,Entity) in line 2461
      19 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function loadUnit(Entity,Entity) in line 2461
      19 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function oneCriticalEntity(Entity,int) in line 12957
      3 lines of code
      2 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function oneCriticalEntity(Entity,int) in line 12957
      3 lines of code
      2 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function passBuildingWall(Entity,Building,Coords,Coords,int,String) in line 15861
      47 lines of code
      6 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
   function passBuildingWall(Entity,Building,Coords,Coords,int,String) in line 15862
      47 lines of code
      6 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
   function prepareForPhase(int) in line 1337
      158 lines of code
      1 parameters
      29 conditional paths
      uses function clearReports() defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function resetEntityRound() defined in megamek::server::Server
      uses function resetEntityPhase(int) defined in megamek::server::Server
      uses function checkForObservers() defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function rollInitiative() defined in megamek::server::Server
      uses function incrementAndSendGameRound() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function setIneligible(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable gt defined in jquery.min.js
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function doTryUnstuck() defined in megamek::server::Server
      uses function resolveHeat() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function checkForSuffocation() defined in megamek::server::Server
      uses function checkForVacuumDeath() defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
      uses function resolveExtremeTempInfantryDeath() defined in megamek::server::Server
      uses function resolveAmmoDumps() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolveCrewWakeUp() defined in megamek::server::Server
      uses function resolveMechWarriorPickUp() defined in megamek::server::Server
      uses function resolveVeeINarcPodRemoval() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function prepareVictoryReport() defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
      uses function createEndOfGamePacket() defined in megamek::server::Server
   function prepareForPhase(int) in line 1337
      158 lines of code
      1 parameters
      29 conditional paths
      uses function clearReports() defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function resetEntityRound() defined in megamek::server::Server
      uses function resetEntityPhase(int) defined in megamek::server::Server
      uses function checkForObservers() defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function rollInitiative() defined in megamek::server::Server
      uses function incrementAndSendGameRound() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function setIneligible(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable gt defined in jquery.min.js
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function doTryUnstuck() defined in megamek::server::Server
      uses function resolveHeat() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function checkForSuffocation() defined in megamek::server::Server
      uses function checkForVacuumDeath() defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
      uses function resolveExtremeTempInfantryDeath() defined in megamek::server::Server
      uses function resolveAmmoDumps() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolveCrewWakeUp() defined in megamek::server::Server
      uses function resolveMechWarriorPickUp() defined in megamek::server::Server
      uses function resolveVeeINarcPodRemoval() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function prepareVictoryReport() defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
      uses function createEndOfGamePacket() defined in megamek::server::Server
   function prepareVictoryReport() in line 971
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function prepareVictoryReport() in line 971
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function preTreatPhysicalAttack(AbstractAttackAction) in line 16900
      78 lines of code
      1 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
   function preTreatPhysicalAttack(AbstractAttackAction) in line 16901
      78 lines of code
      1 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
   function preTreatWeaponAttack(WeaponAttackAction) in line 6284
      78 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
      uses function resolveAmsFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
   function preTreatWeaponAttack(WeaponAttackAction) in line 6284
      78 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
      uses function resolveAmsFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
   function processAttack(Entity,Vector) in line 5703
      89 lines of code
      2 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function processAttack(Entity,Vector) in line 5703
      89 lines of code
      2 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function processCommand(int,String) in line 15578
      21 lines of code
      2 parameters
      3 conditional paths
      uses variable st defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function getCommand(String) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function processCommand(int,String) in line 15579
      21 lines of code
      2 parameters
      3 conditional paths
      uses variable st defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function getCommand(String) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable DUNE_CALL defined in megamek::server::Server
      uses variable DUNE_RESPONSE defined in megamek::server::Server
      uses variable STAR_WARS_CALL defined in megamek::server::Server
      uses variable STAR_WARS_RESPONSE defined in megamek::server::Server
   function processDeployment(Entity,Coords,int,Vector,boolean) in line 5544
      54 lines of code
      5 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function processDeployment(Entity,Coords,int,Vector,boolean) in line 5544
      54 lines of code
      5 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function processDeployMinefields(Vector) in line 5628
      37 lines of code
      1 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function processDeployMinefields(Vector) in line 5628
      37 lines of code
      1 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function processMovement(Entity,MovePath) in line 2717
      1639 lines of code
      2 parameters
      189 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function doSkillCheckInPlace(Entity,PilotingRollData) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) defined in megamek::server::Server
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addAffectedBldg(Building,boolean) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function drownSwarmer(Entity,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function passBuildingWall(Entity,Building,Coords,Coords,int,String) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function createSpecialReportPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function processMovement(Entity,MovePath) in line 2717
      1639 lines of code
      2 parameters
      189 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function doSkillCheckInPlace(Entity,PilotingRollData) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) defined in megamek::server::Server
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addAffectedBldg(Building,boolean) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function drownSwarmer(Entity,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function passBuildingWall(Entity,Building,Coords,Coords,int,String) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function createSpecialReportPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function receiveArtyAutoHitHexes(Packet,int) in line 5599
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveArtyAutoHitHexes(Packet,int) in line 5599
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveAttack(Packet,int) in line 5669
      29 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveAttack(Packet,int) in line 5669
      29 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployment(Packet,int) in line 5500
      38 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function processDeployment(Entity,Coords,int,Vector,boolean) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployment(Packet,int) in line 5500
      38 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function processDeployment(Entity,Coords,int,Vector,boolean) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployMinefields(Packet,int) in line 5614
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processDeployMinefields(Vector) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployMinefields(Packet,int) in line 5614
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processDeployMinefields(Vector) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveEntityAdd(Packet,int) in line 14767
      61 lines of code
      2 parameters
      11 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable entityVerifier defined in megamek::server::Server
      uses variable VERIFIER_CONFIG_FILENAME defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
   function receiveEntityAdd(Packet,int) in line 14768
      61 lines of code
      2 parameters
      11 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable entityVerifier defined in megamek::server::Server
      uses variable VERIFIER_CONFIG_FILENAME defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
   function receiveEntityAmmoChange(Packet,int) in line 14896
      90 lines of code
      2 parameters
      9 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntityAmmoChange(Packet,int) in line 14897
      90 lines of code
      2 parameters
      9 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntityDelete(Packet,int) in line 14990
      60 lines of code
      2 parameters
      6 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function receiveEntityDelete(Packet,int) in line 14991
      60 lines of code
      2 parameters
      6 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function receiveEntityModeChange(Packet,int) in line 14863
      19 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
   function receiveEntityModeChange(Packet,int) in line 14864
      19 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
   function receiveEntitySystemModeChange(Packet,int) in line 14883
      12 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntitySystemModeChange(Packet,int) in line 14884
      12 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntityUpdate(Packet,int) in line 14833
      29 lines of code
      2 parameters
      5 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function receiveEntityUpdate(Packet,int) in line 14834
      29 lines of code
      2 parameters
      5 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function receiveGameOptions(Packet,int) in line 15092
      44 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable password defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function receiveGameOptions(Packet,int) in line 15093
      44 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable password defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function receiveGameOptionsAux(Packet,int) in line 15145
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
   function receiveGameOptionsAux(Packet,int) in line 15146
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
   function receiveInitiativeRerollRequest(Packet,int) in line 15062
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
   function receiveInitiativeRerollRequest(Packet,int) in line 15063
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
   function receiveMovement(Packet,int) in line 2682
      31 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function applyAffectedBldgs() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveMovement(Packet,int) in line 2682
      31 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function applyAffectedBldgs() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receivePlayerDone(Packet,int) in line 15054
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function receivePlayerDone(Packet,int) in line 15055
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function receivePlayerInfo(Packet,int) in line 352
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
   function receivePlayerInfo(Packet,int) in line 352
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
   function receivePlayerName(Packet,int) in line 394
      97 lines of code
      2 parameters
      11 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function correctDupeName(String) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
      uses function sendCurrentInfo(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getClient(int) defined in megamek::server::Server
   function receivePlayerName(Packet,int) in line 394
      97 lines of code
      2 parameters
      11 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function correctDupeName(String) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
      uses function sendCurrentInfo(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getClient(int) defined in megamek::server::Server
   function receiveUnloadStranded(Packet,int) in line 16450
      143 lines of code
      2 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function receiveUnloadStranded(Packet,int) in line 16451
      143 lines of code
      2 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function registerCommand(ServerCommand) in line 269
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function registerCommand(ServerCommand) in line 269
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function removeAllEntitesOwnedBy(Player) in line 798
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function removeAllEntitesOwnedBy(Player) in line 798
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function removeDeadAttacks() in line 8823
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function removeDeadAttacks() in line 8823
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function removeDuplicateAttacks(int) in line 8792
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function removeDuplicateAttacks(int) in line 8792
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function removeFire(int,int,IHex) in line 14288
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function removeSmoke(int,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function removeFire(int,int,IHex) in line 14289
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function removeSmoke(int,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function removeMinefield(Minefield) in line 4832
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
   function removeMinefield(Minefield) in line 4832
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function removeMinefield(Player,Minefield) in line 4850
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function removeMinefield(Player,Minefield) in line 4850
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function removeMinefieldsFrom(Coords) in line 4819
      8 lines of code
      1 parameters
      2 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function removeMinefieldsFrom(Coords) in line 4819
      8 lines of code
      1 parameters
      2 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function removeSmoke(int,int,int) in line 14378
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function removeSmoke(int,int,int) in line 14379
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resetActivePlayersDone() in line 958
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
   function resetActivePlayersDone() in line 958
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
   function resetEntityPhase(int) in line 868
      74 lines of code
      1 parameters
      10 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function resetEntityPhase(int) in line 868
      74 lines of code
      1 parameters
      10 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function resetEntityRound() in line 856
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resetEntityRound() in line 856
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resetGame() in line 666
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
   function resetGame() in line 666
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
   function resetPlayersDone() in line 947
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resetPlayersDone() in line 947
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resolveAllButWeaponAttacks() in line 5836
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function resolveFindClub(Entity) defined in megamek::server::Server
      uses function resolveUnjam(Entity) defined in megamek::server::Server
      uses function triggerAPPod(Entity,int) defined in megamek::server::Server
      uses function resolveClearMinefieldAttempts(Vector) defined in megamek::server::Server
   function resolveAllButWeaponAttacks() in line 5836
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function resolveFindClub(Entity) defined in megamek::server::Server
      uses function resolveUnjam(Entity) defined in megamek::server::Server
      uses function triggerAPPod(Entity,int) defined in megamek::server::Server
      uses function resolveClearMinefieldAttempts(Vector) defined in megamek::server::Server
   function resolveAmmoDumps() in line 14184
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveAmmoDumps() in line 14185
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveAmsFor(WeaponAttackAction,WeaponResult) in line 6417
      42 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
   function resolveAmsFor(WeaponAttackAction,WeaponResult) in line 6417
      42 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
   function resolveBrushOffAttack(PhysicalResult,int) in line 9324
      119 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveBrushOffAttack(PhysicalResult,int) in line 9324
      119 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveChargeAttack(PhysicalResult,int) in line 9887
      174 lines of code
      2 parameters
      15 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
   function resolveChargeAttack(PhysicalResult,int) in line 9887
      174 lines of code
      2 parameters
      15 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
   function resolveChargeDamage(Entity,Entity,ToHitData,int) in line 10065
      3 lines of code
      4 parameters
      1 conditional paths
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
   function resolveChargeDamage(Entity,Entity,ToHitData,int) in line 10065
      3 lines of code
      4 parameters
      1 conditional paths
   function resolveChargeDamage(Entity,Entity,ToHitData,int,boolean,boolean) in line 10069
      92 lines of code
      6 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function resolveChargeDamage(Entity,Entity,ToHitData,int,boolean,boolean) in line 10069
      92 lines of code
      6 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function resolveClearMinefieldAttempts(Vector) in line 5923
      94 lines of code
      1 parameters
      16 conditional paths
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function removeMinefieldsFrom(Coords) defined in megamek::server::Server
   function resolveClearMinefieldAttempts(Vector) in line 5923
      94 lines of code
      1 parameters
      16 conditional paths
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function removeMinefieldsFrom(Coords) defined in megamek::server::Server
   function resolveClubAttack(PhysicalResult,int) in line 9576
      171 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolveClubAttack(PhysicalResult,int) in line 9576
      171 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolveCrewDamage() in line 11350
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveCrewDamage() in line 11350
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addNewLines() defined in megamek::server::Server
   function resolveCrewDamage(Entity,boolean) in line 11366
      51 lines of code
      2 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveCrewDamage(Entity,boolean) in line 11366
      51 lines of code
      2 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveCrewWakeUp() in line 11421
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveCrewWakeUp() in line 11421
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveDfaAttack(PhysicalResult,int) in line 10192
      236 lines of code
      2 parameters
      23 conditional paths
      uses variable game defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveDfaAttack(PhysicalResult,int) in line 10192
      236 lines of code
      2 parameters
      23 conditional paths
      uses variable game defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveExtremeTempInfantryDeath() in line 10914
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveExtremeTempInfantryDeath() in line 10914
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveFindClub(Entity) in line 6180
      99 lines of code
      1 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveFindClub(Entity) in line 6180
      99 lines of code
      1 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveHeat() in line 10480
      426 lines of code
      0 parameters
      58 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses variable at defined in jquery.min.js
      uses function explodeInfernoAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function explodeAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function resolveHeat() in line 10480
      426 lines of code
      0 parameters
      58 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses variable at defined in jquery.min.js
      uses function explodeInfernoAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function explodeAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function resolveIceBroken(Coords) in line 17601
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveIceBroken(Coords) in line 17602
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveIndirectArtilleryAttacks() in line 16691
      128 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function resolveIndirectArtilleryAttacks() in line 16692
      128 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function resolveKickAttack(PhysicalResult,int) in line 9000
      168 lines of code
      2 parameters
      17 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
   function resolveKickAttack(PhysicalResult,int) in line 9000
      168 lines of code
      2 parameters
      17 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
   function resolveLayExplosivesAttack(PhysicalResult,int) in line 10162
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveLayExplosivesAttack(PhysicalResult,int) in line 10162
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveMechWarriorPickUp() in line 17385
      84 lines of code
      0 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function resolveMechWarriorPickUp() in line 17386
      84 lines of code
      0 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function resolveOnlyWeaponAttacks() in line 6021
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveOnlyWeaponAttacks() in line 6021
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolvePhysicalAttack(PhysicalResult,int) in line 16986
      64 lines of code
      2 parameters
      14 conditional paths
      uses function resolvePunchAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveKickAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveBrushOffAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveThrashAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveProtoAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveClubAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolvePushAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveChargeAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveDfaAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveLayExplosivesAttack(PhysicalResult,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function resolvePhysicalAttack(PhysicalResult,int) in line 16987
      64 lines of code
      2 parameters
      14 conditional paths
      uses function resolvePunchAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveKickAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveBrushOffAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveThrashAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveProtoAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveClubAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolvePushAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveChargeAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveDfaAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveLayExplosivesAttack(PhysicalResult,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function resolvePhysicalAttacks() in line 8733
      41 lines of code
      0 parameters
      6 conditional paths
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function cleanupPhysicalAttacks() defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function preTreatPhysicalAttack(AbstractAttackAction) defined in megamek::server::Server
      uses function resolvePhysicalAttack(PhysicalResult,int) defined in megamek::server::Server
   function resolvePhysicalAttacks() in line 8733
      41 lines of code
      0 parameters
      6 conditional paths
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function cleanupPhysicalAttacks() defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function preTreatPhysicalAttack(AbstractAttackAction) defined in megamek::server::Server
      uses function resolvePhysicalAttack(PhysicalResult,int) defined in megamek::server::Server
   function resolvePilotingRolls() in line 11112
      6 lines of code
      0 parameters
      29 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function doExtremeGravityDamage(Entity,int) defined in megamek::server::Server
      uses variable k defined in jquery.min.js
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolvePilotingRolls() in line 11112
      6 lines of code
      0 parameters
      29 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function doExtremeGravityDamage(Entity,int) defined in megamek::server::Server
      uses variable k defined in jquery.min.js
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveProtoAttack(PhysicalResult,int) in line 9173
      146 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolveProtoAttack(PhysicalResult,int) in line 9173
      146 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolvePunchAttack(PhysicalResult,int) in line 8845
      151 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolvePunchAttack(PhysicalResult,int) in line 8845
      151 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolvePushAttack(PhysicalResult,int) in line 9751
      132 lines of code
      2 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolvePushAttack(PhysicalResult,int) in line 9751
      132 lines of code
      2 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveSinkVees() in line 17473
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveSinkVees() in line 17474
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveThrashAttack(PhysicalResult,int) in line 9447
      125 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveThrashAttack(PhysicalResult,int) in line 9447
      125 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveUnjam(Entity) in line 6149
      30 lines of code
      1 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function resolveUnjam(Entity) in line 6149
      30 lines of code
      1 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function resolveVeeINarcPodRemoval() in line 17557
      29 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveVeeINarcPodRemoval() in line 17558
      29 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveVehicleFire(Tank,boolean) in line 17658
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveVehicleFire(Tank,boolean) in line 17659
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int) in line 6618
      3 lines of code
      2 parameters
      1 conditional paths
   function resolveWeaponAttack(WeaponResult,int) in line 6618
      3 lines of code
      2 parameters
      1 conditional paths
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean) in line 6622
      3 lines of code
      3 parameters
      1 conditional paths
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean) in line 6622
      3 lines of code
      3 parameters
      1 conditional paths
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean,int) in line 6639
      2090 lines of code
      4 parameters
      286 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function deliverThunderAugMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderInfernoMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses function deliverThunderActiveMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryInferno(Coords,int) defined in megamek::server::Server
      uses function deliverFASCAMMinefield(Coords,int) defined in megamek::server::Server
      uses function deliverArtillerySmoke(Coords) defined in megamek::server::Server
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function tryClearHex(Coords,int,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean,int) in line 6639
      2090 lines of code
      4 parameters
      286 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function deliverThunderAugMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderInfernoMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses function deliverThunderActiveMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryInferno(Coords,int) defined in megamek::server::Server
      uses function deliverFASCAMMinefield(Coords,int) defined in megamek::server::Server
      uses function deliverArtillerySmoke(Coords) defined in megamek::server::Server
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function tryClearHex(Coords,int,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function revealMinefield(Minefield) in line 4861
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
   function revealMinefield(Minefield) in line 4861
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
   function revealMinefield(Player,Minefield) in line 4874
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function revealMinefield(Player,Minefield) in line 4874
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function rollInitiative() in line 1993
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerUpdates() defined in megamek::server::Server
   function rollInitiative() in line 1993
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerUpdates() defined in megamek::server::Server
   function run() in line 15747
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable connector defined in megamek::server::Server
      uses function s((null)) defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getFreeConnectionId() defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable connectionListener defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses function greeting(int) defined in megamek::server::Server
   function run() in line 15748
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable connector defined in megamek::server::Server
      uses function s((null)) defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getFreeConnectionId() defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable connectionListener defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses function greeting(int) defined in megamek::server::Server
   function saveGame(String,boolean) in line 730
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function saveGame(String,boolean) in line 730
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function saveGame(String) in line 758
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
   function saveGame(String) in line 758
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
   function scanForBoards(int,int) in line 14410
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function scanForBoards(int,int) in line 14411
      3 lines of code
      2 parameters
      1 conditional paths
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function scanForBoards(int,int,boolean) in line 14414
      42 lines of code
      3 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function scanForBoardsInDir(File,String,int,int) defined in megamek::server::Server
   function scanForBoards(int,int,boolean) in line 14415
      42 lines of code
      3 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function scanForBoardsInDir(File,String,int,int) defined in megamek::server::Server
   function scanForBoardsInDir(File,String,int,int) in line 14395
      14 lines of code
      4 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
   function scanForBoardsInDir(File,String,int,int) in line 14396
      14 lines of code
      4 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
   function send(Packet) in line 15517
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function send(Packet) in line 15518
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function send(int,Packet) in line 15554
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getClient(int) defined in megamek::server::Server
   function send(int,Packet) in line 15555
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getClient(int) defined in megamek::server::Server
   function sendChangedCFBuildings(Vector< Building >) in line 16440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createUpdateBuildingCFPacket(Vector) defined in megamek::server::Server
   function sendChangedCFBuildings(Vector< Building >) in line 16441
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createUpdateBuildingCFPacket(Vector) defined in megamek::server::Server
   function sendChangedHex(Coords) in line 15452
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createHexChangePacket(Coords,IHex) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function sendChangedHex(Coords) in line 15453
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createHexChangePacket(Coords,IHex) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function sendChat(int,String,String) in line 15419
      3 lines of code
      3 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendChat(int,String,String) in line 15420
      3 lines of code
      3 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendChat(String,String) in line 15426
      4 lines of code
      2 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendChat(String,String) in line 15427
      4 lines of code
      2 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendCurrentInfo(int) in line 496
      61 lines of code
      1 parameters
      7 conditional paths
      uses function transmitAllPlayerConnects(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredFullEntitiesPacket(Player) defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createAllReportsPacket(Player) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
   function sendCurrentInfo(int) in line 496
      61 lines of code
      1 parameters
      7 conditional paths
      uses function transmitAllPlayerConnects(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredFullEntitiesPacket(Player) defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createAllReportsPacket(Player) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
   function sendGhostSkipMessage(Player) in line 1786
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendGhostSkipMessage(Player) in line 1786
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendReport() in line 15527
      3 lines of code
      0 parameters
      1 conditional paths
   function sendReport() in line 15528
      3 lines of code
      0 parameters
      1 conditional paths
      uses function sendReport() defined in megamek::server::Server
   function sendReport(boolean) in line 15534
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function createTacticalGeniusReportPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
   function sendReport(boolean) in line 15535
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function createTacticalGeniusReportPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
   function sendSaveGame(int,String) in line 704
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function sendSaveGame(int,String) in line 704
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function sendServerChat(int,String) in line 15431
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendServerChat(int,String) in line 15432
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendServerChat(String) in line 15435
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendServerChat(String) in line 15436
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendToPending(int,Packet) in line 15566
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
   function sendToPending(int,Packet) in line 15567
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
   function sendTurnErrorSkipMessage(Player) in line 1801
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendTurnErrorSkipMessage(Player) in line 1801
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendVisibilityIndicator(Entity) in line 15456
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
   function sendVisibilityIndicator(Entity) in line 15457
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
   function setGame(IGame) in line 211
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function setGame(IGame) in line 211
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function setIneligible(int) in line 2434
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function setIneligible(int) in line 2434
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function skipCurrentTurn() in line 1813
      protection public
      27 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
   function skipCurrentTurn() in line 1813
      protection public
      27 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
   function transmitAllPlayerConnects(int) in line 15165
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
   function transmitAllPlayerConnects(int) in line 15166
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
   function transmitAllPlayerDones() in line 15210
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
   function transmitAllPlayerDones() in line 15211
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
   function transmitAllPlayerUpdates() in line 15198
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
   function transmitAllPlayerUpdates() in line 15199
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
   function triggerAPPod(Entity,int) in line 6051
      94 lines of code
      2 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function triggerAPPod(Entity,int) in line 6051
      94 lines of code
      2 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function tryClearHex(Coords,int,int) in line 6531
      86 lines of code
      3 parameters
      10 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryClearHex(Coords,int,int) in line 6531
      86 lines of code
      3 parameters
      10 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryIgniteHex(Coords,int,boolean,int,boolean) in line 6474
      40 lines of code
      5 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryIgniteHex(Coords,int,boolean,int,boolean) in line 6474
      40 lines of code
      5 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryIgniteHex(Coords,int,boolean,int) in line 6526
      4 lines of code
      4 parameters
      1 conditional paths
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
   function tryIgniteHex(Coords,int,boolean,int) in line 6526
      4 lines of code
      4 parameters
      1 conditional paths
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
   function unloadUnit(Entity,Targetable,Coords,int,int) in line 2494
      71 lines of code
      5 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function unloadUnit(Entity,Targetable,Coords,int,int) in line 2494
      71 lines of code
      5 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function updateVisibilityIndicator() in line 14742
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function y((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function sendVisibilityIndicator(Entity) defined in megamek::server::Server
   function updateVisibilityIndicator() in line 14743
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function y((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function sendVisibilityIndicator(Entity) defined in megamek::server::Server
   function validatePlayerInfo(int) in line 561
      protection public
      35 lines of code
      1 parameters
      11 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeAllEntitesOwnedBy(Player) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function validatePlayerInfo(int) in line 561
      protection public
      35 lines of code
      1 parameters
      11 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeAllEntitesOwnedBy(Player) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function vehicleMotiveDamage(Tank,int) in line 17676
      67 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function vehicleMotiveDamage(Tank,int) in line 17677
      67 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function victory() in line 1857
      protection public
      103 lines of code
      0 parameters
      22 conditional paths
      uses variable game defined in megamek::server::Server
      uses function forceVictory(Player) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function cancelVictory() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function victory() in line 1857
      protection public
      103 lines of code
      0 parameters
      22 conditional paths
      uses variable game defined in megamek::server::Server
      uses function forceVictory(Player) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function cancelVictory() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function whoCanSee(Entity) in line 14508
      39 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addTeammates(Vector,Player) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function whoCanSee(Entity) in line 14509
      39 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addTeammates(Vector,Player) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function writeInitiativeReport(boolean) in line 2305
      125 lines of code
      1 parameters
      19 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function addNewLines() defined in megamek::server::Server
   function writeInitiativeReport(boolean) in line 2305
      125 lines of code
      1 parameters
      19 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function addNewLines() defined in megamek::server::Server
   function Server(String,int) in line 147
      protection public
      57 lines of code
      2 parameters
      4 conditional paths
      uses variable password defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createMotd() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable connector defined in megamek::server::Server
      uses function registerCommand(ServerCommand) defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
   function Server(String,int) in line 147
      protection public
      57 lines of code
      2 parameters
      4 conditional paths
      uses variable password defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createMotd() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable connector defined in megamek::server::Server
      uses function registerCommand(ServerCommand) defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
   variable affectedBldgs in line 89
   variable commandsHash in line 83
   variable connectionCounter in line 73
   variable connectionIds in line 71
   variable connectionListener in line 111
   variable connections in line 69
   variable connectionsPending in line 70
   variable connector in line 86
   variable DEFAULT_BOARD in line 59
      protection public
   variable DUNE_CALL in line 15601
   variable DUNE_RESPONSE in line 15602
   variable entityCounter in line 74
   variable entityVerifier in line 109
   variable game in line 76
   variable mapSettings in line 80
   variable motd in line 66
   variable password in line 64
   variable physicalResults in line 93
   variable serverSocket in line 65
   variable STAR_WARS_CALL in line 15603
   variable STAR_WARS_RESPONSE in line 15604
   variable terrainProcessors in line 95
   variable VERIFIER_CONFIG_FILENAME in line 60
   variable vPhaseReport in line 78
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/Server_1.925_1.926_v1.java
module megamek::server::Server
   inherits from Runnable
   inherits from Runnable
   function abandonEntity(Entity) in line 17325
      protection public
      55 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function abandonEntity(Entity) in line 17326
      protection public
      55 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function addAffectedBldg(Building,boolean) in line 2575
      15 lines of code
      2 parameters
      2 conditional paths
      uses variable affectedBldgs defined in megamek::server::Server
   function addAffectedBldg(Building,boolean) in line 2575
      15 lines of code
      2 parameters
      2 conditional paths
      uses variable affectedBldgs defined in megamek::server::Server
   function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) in line 6369
      42 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) in line 6369
      42 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function addL3Smoke(int,int) in line 14329
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function addL3Smoke(int,int) in line 14330
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function addMovementHeat() in line 5009
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function addMovementHeat() in line 5009
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function addNewLines() in line 17796
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addNewLines() in line 17797
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Vector) in line 17749
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Vector) in line 17750
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Report) in line 17765
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addReport(Report) in line 17766
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function addSmoke(int,int,int) in line 14312
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function addSmoke(int,int,int) in line 14313
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function addTeammates(Vector,Player) in line 14568
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
   function addTeammates(Vector,Player) in line 14569
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
   function applyAffectedBldgs() in line 2597
      79 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyAffectedBldgs() in line 2597
      79 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyBoardSettings() in line 1965
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable mapSettings defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function applyBoardSettings() in line 1965
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable mapSettings defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function applyBuildingDamage() in line 16326
      57 lines of code
      0 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyBuildingDamage() in line 16327
      57 lines of code
      0 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function sendChangedCFBuildings(Vector< Building >) defined in megamek::server::Server
   function applyCriticalHit(Entity,int,CriticalSlot,boolean) in line 12538
      protection public
      404 lines of code
      4 parameters
      61 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
   function applyCriticalHit(Entity,int,CriticalSlot,boolean) in line 12538
      protection public
      404 lines of code
      4 parameters
      61 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
   function assignAMS() in line 5796
      35 lines of code
      0 parameters
      7 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function v((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function assignAMS() in line 5796
      35 lines of code
      0 parameters
      7 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function v((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function autoSave() in line 691
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function autoSave() in line 691
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function breachCheck(Entity,int,IHex) in line 13394
      49 lines of code
      3 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
   function breachCheck(Entity,int,IHex) in line 13395
      49 lines of code
      3 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function breachLocation(Entity,int,IHex,boolean) defined in megamek::server::Server
   function breachLocation(Entity,int,IHex,boolean) in line 13456
      108 lines of code
      4 parameters
      29 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
   function breachLocation(Entity,int,IHex,boolean) in line 13457
      108 lines of code
      4 parameters
      29 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
   function cancelVictory() in line 1148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function cancelVictory() in line 1148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function canSee(Player,Entity) in line 14548
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function canSee(Player,Entity) in line 14549
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function changePhase(int) in line 1313
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function prepareForPhase(int) defined in megamek::server::Server
      uses function isPhasePlayable(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function executePhase(int) defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function changePhase(int) in line 1313
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function prepareForPhase(int) defined in megamek::server::Server
      uses function isPhasePlayable(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function executePhase(int) defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function changeToNextTurn() in line 1757
      21 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function sendTurnErrorSkipMessage(Player) defined in megamek::server::Server
   function changeToNextTurn() in line 1757
      21 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function sendTurnErrorSkipMessage(Player) defined in megamek::server::Server
   function checkBuildingCollapseWhileMoving(Building,Entity,Coords) in line 15909
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
   function checkBuildingCollapseWhileMoving(Building,Entity,Coords) in line 15910
      21 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
   function checkEngineExplosion(Entity,Vector,int) in line 12363
      145 lines of code
      3 parameters
      20 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function checkEngineExplosion(Entity,Vector,int) in line 12363
      145 lines of code
      3 parameters
      20 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) in line 17059
      44 lines of code
      4 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
   function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) in line 17060
      44 lines of code
      4 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
   function checkFor20Damage() in line 10993
      41 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function checkFor20Damage() in line 10993
      41 lines of code
      0 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function checkForCollapse(Building,Hashtable) in line 16026
      protection public
      125 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
   function checkForCollapse(Building,Hashtable) in line 16027
      protection public
      125 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function collapseBuilding(Building,Hashtable) defined in megamek::server::Server
   function checkForFlamingDeath() in line 11039
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
   function checkForFlamingDeath() in line 11039
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
   function checkForObservers() in line 652
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function checkForObservers() in line 652
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function checkForSuffocation() in line 11087
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
   function checkForSuffocation() in line 11087
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
   function checkForVacuumDeath() in line 11065
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function checkForVacuumDeath() in line 11065
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function checkForVehicleFire(Tank,boolean) in line 17613
      44 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
   function checkForVehicleFire(Tank,boolean) in line 17614
      44 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
   function checkReady() in line 1158
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function clearReports() defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function checkReady() in line 1158
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function clearReports() defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function endCurrentPhase() defined in megamek::server::Server
   function checkVibrabombs(Entity,Coords,boolean) in line 4755
      3 lines of code
      3 parameters
      1 conditional paths
   function checkVibrabombs(Entity,Coords,boolean) in line 4755
      3 lines of code
      3 parameters
      1 conditional paths
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
   function checkVibrabombs(Entity,Coords,boolean,Coords,Coords) in line 4759
      56 lines of code
      5 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
   function checkVibrabombs(Entity,Coords,boolean,Coords,Coords) in line 4759
      56 lines of code
      5 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
   function cleanupPhysicalAttacks() in line 8780
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeDuplicateAttacks(int) defined in megamek::server::Server
      uses function removeDeadAttacks() defined in megamek::server::Server
   function cleanupPhysicalAttacks() in line 8780
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeDuplicateAttacks(int) defined in megamek::server::Server
      uses function removeDeadAttacks() defined in megamek::server::Server
   function clearArtillerySpotters(int,int) in line 16600
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function clearArtillerySpotters(int,int) in line 16601
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function clearReports() in line 17780
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function clearReports() in line 17781
      11 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connections defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function collapseBuilding(Building,Hashtable) in line 16163
      protection public
      124 lines of code
      2 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createCollapseBuildingPacket(Building) defined in megamek::server::Server
   function collapseBuilding(Building,Hashtable) in line 16164
      protection public
      124 lines of code
      2 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function b((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createCollapseBuildingPacket(Building) defined in megamek::server::Server
   function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) in line 16622
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) in line 16623
      65 lines of code
      2 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function correctDupeName(String) in line 367
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function correctDupeName(String) defined in megamek::server::Server
   function correctDupeName(String) in line 367
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function crashVTOL(VTOL,Coords,int) in line 12961
      3 lines of code
      3 parameters
      1 conditional paths
   function crashVTOL(VTOL,Coords,int) in line 12961
      3 lines of code
      3 parameters
      1 conditional paths
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
   function crashVTOL(VTOL) in line 12964
      3 lines of code
      1 parameters
      1 conditional paths
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
   function crashVTOL(VTOL) in line 12964
      3 lines of code
      1 parameters
      1 conditional paths
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
   function crashVTOL(VTOL,boolean,int,Coords,int,int) in line 12980
      171 lines of code
      6 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
   function crashVTOL(VTOL,boolean,int,Coords,int,int) in line 12980
      171 lines of code
      6 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function explodeVTOL(VTOL) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
   function createAddEntityPacket(int) in line 15355
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createAddEntityPacket(int) in line 15356
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createAllReportsPacket(Player) in line 15314
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterPastReports(Vector,Player) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function createAllReportsPacket(Player) in line 15315
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterPastReports(Vector,Player) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function createArtilleryPacket(Player) in line 15489
      16 lines of code
      1 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function createArtilleryPacket(Player) in line 15490
      16 lines of code
      1 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function createAttackPacket(Vector,int) in line 15467
      6 lines of code
      2 parameters
      1 conditional paths
   function createAttackPacket(Vector,int) in line 15468
      6 lines of code
      2 parameters
      1 conditional paths
   function createAttackPacket(EntityAction,int) in line 15477
      8 lines of code
      2 parameters
      1 conditional paths
   function createAttackPacket(EntityAction,int) in line 15478
      8 lines of code
      2 parameters
      1 conditional paths
   function createBoardPacket() in line 15263
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createBoardPacket() in line 15264
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createCollapseBuildingPacket(Building) in line 16294
      5 lines of code
      1 parameters
      1 conditional paths
   function createCollapseBuildingPacket(Building) in line 16295
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createCollapseBuildingPacket(Building) defined in megamek::server::Server
   function createCollapseBuildingPacket(Vector) in line 16307
      3 lines of code
      1 parameters
      1 conditional paths
   function createCollapseBuildingPacket(Vector) in line 16308
      3 lines of code
      1 parameters
      1 conditional paths
   function createEndOfGamePacket() in line 15408
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDetailedVictoryReport() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function createEndOfGamePacket() in line 15409
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDetailedVictoryReport() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function createEntitiesPacket() in line 15321
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createEntitiesPacket() in line 15322
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createEntityPacket(int) in line 15270
      3 lines of code
      1 parameters
      1 conditional paths
   function createEntityPacket(int) in line 15271
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createEntityPacket(int) defined in megamek::server::Server
   function createEntityPacket(int,Vector) in line 15273
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createEntityPacket(int,Vector) in line 15274
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFilteredEntitiesPacket(Player) in line 15338
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFilteredEntitiesPacket(Player) in line 15339
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFilteredFullEntitiesPacket(Player) in line 15345
      6 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFilteredFullEntitiesPacket(Player) in line 15346
      6 lines of code
      1 parameters
      1 conditional paths
      uses function filterEntities(Player,Vector) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function createFlarePacket() in line 15509
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFlarePacket() in line 15510
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFullEntitiesPacket() in line 15328
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createFullEntitiesPacket() in line 15329
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createGameSettingsPacket() in line 15256
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createGameSettingsPacket() in line 15257
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createHexChangePacket(Coords,IHex) in line 15442
      6 lines of code
      2 parameters
      1 conditional paths
   function createHexChangePacket(Coords,IHex) in line 15443
      6 lines of code
      2 parameters
      1 conditional paths
   function createMapQueryPacket(MapSettings) in line 15249
      3 lines of code
      1 parameters
      1 conditional paths
   function createMapQueryPacket(MapSettings) in line 15250
      3 lines of code
      1 parameters
      1 conditional paths
   function createMapSettingsPacket() in line 15241
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mapSettings defined in megamek::server::Server
   function createMapSettingsPacket() in line 15242
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mapSettings defined in megamek::server::Server
   function createMotd() in line 237
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable L defined in jquery.min.js
   function createMotd() in line 237
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable L defined in jquery.min.js
   function createPlayerConnectPacket(int) in line 15178
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerConnectPacket(int) in line 15179
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerDonePacket(int) in line 15221
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerDonePacket(int) in line 15222
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerUpdatePacket(int) in line 15188
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createPlayerUpdatePacket(int) in line 15189
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function createRemoveEntityPacket(int) in line 15370
      3 lines of code
      1 parameters
      1 conditional paths
   function createRemoveEntityPacket(int) in line 15371
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function createRemoveEntityPacket(int,int) in line 15387
      17 lines of code
      2 parameters
      2 conditional paths
   function createRemoveEntityPacket(int,int) in line 15388
      17 lines of code
      2 parameters
      2 conditional paths
   function createReportPacket(Player) in line 15285
      8 lines of code
      1 parameters
      2 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function createReportPacket(Player) in line 15286
      8 lines of code
      1 parameters
      2 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses function filterReportVector(Vector,Player) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function createSpecialReportPacket() in line 15298
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createSpecialReportPacket() in line 15299
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createTacticalGeniusReportPacket() in line 15307
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createTacticalGeniusReportPacket() in line 15308
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vPhaseReport defined in megamek::server::Server
   function createTurnIndexPacket() in line 15234
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createTurnIndexPacket() in line 15235
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createTurnVectorPacket() in line 15229
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createTurnVectorPacket() in line 15230
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function createUpdateBuildingCFPacket(Vector) in line 16318
      3 lines of code
      1 parameters
      1 conditional paths
   function createUpdateBuildingCFPacket(Vector) in line 16319
      3 lines of code
      1 parameters
      1 conditional paths
   function creditKill(Entity,Entity) in line 16885
      5 lines of code
      2 parameters
      2 conditional paths
   function creditKill(Entity,Entity) in line 16886
      5 lines of code
      2 parameters
      2 conditional paths
   function criticalEntity(Entity,int) in line 12946
      3 lines of code
      2 parameters
      1 conditional paths
   function criticalEntity(Entity,int) in line 12946
      3 lines of code
      2 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function criticalEntity(Entity,int,int) in line 12950
      3 lines of code
      3 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function criticalEntity(Entity,int,int) in line 12950
      3 lines of code
      3 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function criticalEntity(Entity,int,int,boolean) in line 13185
      196 lines of code
      4 parameters
      26 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
   function criticalEntity(Entity,int,int,boolean) in line 13185
      197 lines of code
      4 parameters
      26 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
   function damageBuilding(Building,int) in line 16398
      4 lines of code
      2 parameters
      1 conditional paths
   function damageBuilding(Building,int) in line 16399
      4 lines of code
      2 parameters
      1 conditional paths
      uses function damageBuilding(Building,int) defined in megamek::server::Server
   function damageBuilding(Building,int,String) in line 16416
      23 lines of code
      3 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
   function damageBuilding(Building,int,String) in line 16417
      23 lines of code
      3 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
   function damageCrew(Entity,int) in line 11321
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function damageCrew(Entity,int) in line 11321
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean) in line 11454
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function damageEntity(Entity,HitData,int,boolean) in line 11454
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int) in line 11458
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int) in line 11458
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int) in line 11462
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int) in line 11462
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean) in line 11468
      protection public
      6 lines of code
      6 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean) in line 11468
      protection public
      6 lines of code
      6 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean) in line 11475
      protection public
      6 lines of code
      7 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean) in line 11475
      protection public
      6 lines of code
      7 parameters
      1 conditional paths
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean,boolean) in line 11501
      849 lines of code
      8 parameters
      125 conditional paths
      uses variable r defined in jquery.min.js
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function damageEntity(Entity,HitData,int,boolean,int,boolean,boolean,boolean) in line 11501
      849 lines of code
      8 parameters
      125 conditional paths
      uses variable r defined in jquery.min.js
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function checkEngineExplosion(Entity,Vector,int) defined in megamek::server::Server
      uses function abandonEntity(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function damageInfantryIn(Building,int) in line 15939
      70 lines of code
      2 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function damageInfantryIn(Building,int) in line 15940
      70 lines of code
      2 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function deadEntitiesCleanup() in line 17587
      13 lines of code
      0 parameters
      1 conditional paths
   function deadEntitiesCleanup() in line 17588
      13 lines of code
      0 parameters
      1 conditional paths
   function deliverArtilleryFlare(Coords,int) in line 4588
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverArtilleryFlare(Coords,int) in line 4588
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverArtilleryInferno(Coords,int) in line 4608
      58 lines of code
      2 parameters
      8 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverArtilleryInferno(Coords,int) in line 4608
      58 lines of code
      2 parameters
      8 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverArtillerySmoke(Coords) in line 4593
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverArtillerySmoke(Coords) in line 4593
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function deliverFASCAMMinefield(Coords,int) in line 4493
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
   function deliverFASCAMMinefield(Coords,int) in line 4493
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
   function deliverFlare(Coords,int) in line 4583
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverFlare(Coords,int) in line 4583
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function deliverThunderActiveMinefield(Coords,int,int) in line 4519
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderActiveMinefield(Coords,int,int) in line 4519
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderAugMinefield(Coords,int,int) in line 4362
      56 lines of code
      3 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderAugMinefield(Coords,int,int) in line 4362
      56 lines of code
      3 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderInfernoMinefield(Coords,int,int) in line 4461
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderInfernoMinefield(Coords,int,int) in line 4461
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderMinefield(Coords,int,int) in line 4425
      29 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderMinefield(Coords,int,int) in line 4425
      29 lines of code
      3 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderVibraMinefield(Coords,int,int,int) in line 4551
      28 lines of code
      4 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function deliverThunderVibraMinefield(Coords,int,int,int) in line 4551
      28 lines of code
      4 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function destroyEntity(Entity,String) in line 13619
      3 lines of code
      2 parameters
      1 conditional paths
   function destroyEntity(Entity,String) in line 13620
      3 lines of code
      2 parameters
      1 conditional paths
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean) in line 13636
      5 lines of code
      3 parameters
      1 conditional paths
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean) in line 13637
      5 lines of code
      3 parameters
      1 conditional paths
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean,boolean) in line 13659
      136 lines of code
      4 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function destroyEntity(Entity,String,boolean,boolean) in line 13660
      136 lines of code
      4 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrder(int) in line 2064
      237 lines of code
      1 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function determineTurnOrderIUI(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrder(int) in line 2064
      237 lines of code
      1 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function determineTurnOrderIUI(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrderIUI(int) in line 2008
      52 lines of code
      1 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function determineTurnOrderIUI(int) in line 2008
      52 lines of code
      1 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
   function die() in line 283
      protection public
      31 lines of code
      0 parameters
      5 conditional paths
      uses variable connector defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
   function die() in line 283
      protection public
      31 lines of code
      0 parameters
      5 conditional paths
      uses variable connector defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
   function doAssaultDrop(Entity) in line 17808
      protection public
      70 lines of code
      1 parameters
      49 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function doAssaultDrop(Entity) in line 17809
      protection public
      70 lines of code
      1 parameters
      49 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function doAssaultDrop(Entity) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function vehicleMotiveDamage(Tank,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function doBlind() in line 14457
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function doBlind() in line 14458
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) in line 5136
      35 lines of code
      3 parameters
      2 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) in line 5136
      35 lines of code
      3 parameters
      2 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) in line 5405
      79 lines of code
      4 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) in line 5405
      79 lines of code
      4 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) in line 5485
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
   function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) in line 5485
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,int,PilotingRollData) in line 13944
      220 lines of code
      5 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,int,PilotingRollData) in line 13945
      220 lines of code
      5 parameters
      24 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,PilotingRollData) in line 14168
      3 lines of code
      4 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFall(Entity,Coords,int,PilotingRollData) in line 14169
      3 lines of code
      4 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFall(Entity,PilotingRollData) in line 14175
      3 lines of code
      2 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFall(Entity,PilotingRollData) in line 14176
      3 lines of code
      2 parameters
      1 conditional paths
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) in line 5256
      3 lines of code
      4 parameters
      1 conditional paths
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) in line 5256
      3 lines of code
      4 parameters
      1 conditional paths
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData,boolean) in line 5272
      126 lines of code
      5 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData,boolean) in line 5272
      126 lines of code
      5 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doExtremeGravityDamage(Entity,int) in line 17110
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function doExtremeGravityDamage(Entity,int) in line 17111
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function doFlamingDeath(Entity) in line 10939
      49 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function doFlamingDeath(Entity) in line 10939
      49 lines of code
      1 parameters
      7 conditional paths
      uses variable r defined in jquery.min.js
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function doSetLocationsExposure(Entity,IHex,boolean,int) in line 5037
      protection public
      41 lines of code
      4 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
   function doSetLocationsExposure(Entity,IHex,boolean,int) in line 5037
      protection public
      41 lines of code
      4 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function breachCheck(Entity,int,IHex) defined in megamek::server::Server
   function doSkillCheckInPlace(Entity,PilotingRollData) in line 5089
      38 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
   function doSkillCheckInPlace(Entity,PilotingRollData) in line 5089
      38 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
   function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) in line 5186
      58 lines of code
      5 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) in line 5186
      58 lines of code
      5 parameters
      4 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function doTryUnstuck() in line 17502
      47 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function doTryUnstuck() in line 17503
      47 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function drownSwarmer(Entity,Coords) in line 4941
      20 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function drownSwarmer(Entity,Coords) in line 4941
      20 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function ejectEntity(Entity,boolean) in line 17135
      protection public
      183 lines of code
      2 parameters
      28 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function ejectEntity(Entity,boolean) in line 17136
      protection public
      183 lines of code
      2 parameters
      28 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
      uses function v((null),(null)) defined in jquery.min.js
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function endCurrentPhase() in line 1558
      185 lines of code
      0 parameters
      33 conditional paths
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addMovementHeat() defined in megamek::server::Server
      uses function applyBuildingDamage() defined in megamek::server::Server
      uses function checkFor20Damage() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function checkForFlamingDeath() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses function assignAMS() defined in megamek::server::Server
      uses function resolveOnlyWeaponAttacks() defined in megamek::server::Server
      uses function resolvePhysicalAttacks() defined in megamek::server::Server
      uses function resolveSinkVees() defined in megamek::server::Server
      uses function enqueueIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function resolveIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function victory() defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function endCurrentPhase() in line 1558
      185 lines of code
      0 parameters
      33 conditional paths
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addMovementHeat() defined in megamek::server::Server
      uses function applyBuildingDamage() defined in megamek::server::Server
      uses function checkFor20Damage() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function checkForFlamingDeath() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses function assignAMS() defined in megamek::server::Server
      uses function resolveOnlyWeaponAttacks() defined in megamek::server::Server
      uses function resolvePhysicalAttacks() defined in megamek::server::Server
      uses function resolveSinkVees() defined in megamek::server::Server
      uses function enqueueIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function resolveIndirectArtilleryAttacks() defined in megamek::server::Server
      uses function victory() defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function endCurrentTurn(Entity) in line 1194
      113 lines of code
      1 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function endCurrentTurn(Entity) in line 1194
      113 lines of code
      1 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function enqueueIndirectArtilleryAttacks() in line 16823
      55 lines of code
      0 parameters
      9 conditional paths
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function clearArtillerySpotters(int,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function enqueueIndirectArtilleryAttacks() in line 16824
      55 lines of code
      0 parameters
      9 conditional paths
      uses function resolveAllButWeaponAttacks() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function clearArtillerySpotters(int,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean) in line 4670
      3 lines of code
      5 parameters
      1 conditional paths
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean) in line 4670
      3 lines of code
      5 parameters
      1 conditional paths
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean,int) in line 4684
      67 lines of code
      6 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function enterMinefield(Entity,Minefield,Coords,Coords,boolean,int) in line 4684
      67 lines of code
      6 parameters
      11 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function entityAllUpdate() in line 14582
      12 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
   function entityAllUpdate() in line 14583
      12 lines of code
      0 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
   function entityUpdate(int) in line 14466
      3 lines of code
      1 parameters
      1 conditional paths
   function entityUpdate(int) in line 14467
      3 lines of code
      1 parameters
      1 conditional paths
      uses function entityUpdate(int) defined in megamek::server::Server
   function entityUpdate(int,Vector) in line 14470
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function createEntityPacket(int) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function entityUpdate(int,Vector) in line 14471
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function createEntityPacket(int) defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function executePhase(int) in line 1522
      32 lines of code
      1 parameters
      12 conditional paths
      uses function resetPlayersDone() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function applyBoardSettings() defined in megamek::server::Server
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
   function executePhase(int) in line 1522
      32 lines of code
      1 parameters
      12 conditional paths
      uses function resetPlayersDone() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function applyBoardSettings() defined in megamek::server::Server
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
   function explodeAmmoFromHeat(Entity) in line 13888
      52 lines of code
      1 parameters
      9 conditional paths
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
   function explodeAmmoFromHeat(Entity) in line 13889
      52 lines of code
      1 parameters
      9 conditional paths
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
   function explodeEquipment(Entity,int,int) in line 13801
      3 lines of code
      3 parameters
      1 conditional paths
   function explodeEquipment(Entity,int,int) in line 13802
      3 lines of code
      3 parameters
      1 conditional paths
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
   function explodeEquipment(Entity,int,Mounted) in line 13805
      79 lines of code
      3 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function explodeEquipment(Entity,int,Mounted) in line 13806
      79 lines of code
      3 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function explodeInfernoAmmoFromHeat(Entity) in line 15776
      66 lines of code
      1 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
   function explodeInfernoAmmoFromHeat(Entity) in line 15777
      66 lines of code
      1 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses function explodeEquipment(Entity,int,int) defined in megamek::server::Server
   function explodeVibrabomb(Minefield) in line 4885
      50 lines of code
      1 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function explodeVibrabomb(Minefield) in line 4885
      50 lines of code
      1 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function explodeVTOL(VTOL) in line 13157
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function explodeVTOL(VTOL) in line 13157
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function filterEntities(Player,Vector) in line 14599
      37 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function filterEntities(Player,Vector) in line 14600
      37 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
   function filterPastReports(Vector,Player) in line 14701
      36 lines of code
      2 parameters
      5 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
   function filterPastReports(Vector,Player) in line 14702
      36 lines of code
      2 parameters
      5 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
   function filterReport(Report,Player,boolean) in line 14663
      37 lines of code
      3 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
   function filterReport(Report,Player,boolean) in line 14664
      37 lines of code
      3 parameters
      10 conditional paths
      uses variable r defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
   function filterReportVector(Vector,Player) in line 14638
      14 lines of code
      2 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function filterReportVector(Vector,Player) in line 14639
      14 lines of code
      2 parameters
      3 conditional paths
      uses function doBlind() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function filterReport(Report,Player,boolean) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function forceVictory(Player) in line 1130
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function forceVictory(Player) in line 1130
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function getAllCommandNames() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getAllCommandNames() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getClient(int) in line 820
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConnection(int) defined in megamek::server::Server
   function getClient(int) in line 820
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConnection(int) defined in megamek::server::Server
   function getCommand(String) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getCommand(String) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function getConnection(int) in line 834
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable connectionIds defined in megamek::server::Server
   function getConnection(int) in line 834
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable connectionIds defined in megamek::server::Server
   function getConnections() in line 827
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable connections defined in megamek::server::Server
   function getConnections() in line 827
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable connections defined in megamek::server::Server
   function getDetailedVictoryReport() in line 1061
      64 lines of code
      0 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function getDetailedVictoryReport() in line 1061
      64 lines of code
      0 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function getFreeConnectionId() in line 333
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable connectionCounter defined in megamek::server::Server
      uses function getConnection(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function getFreeConnectionId() in line 333
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable connectionCounter defined in megamek::server::Server
      uses function getConnection(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function getFreeEntityId() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getFreeEntityId() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getGame() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getGame() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getKickPushPSRMod(Entity,Entity,int) in line 10436
      39 lines of code
      3 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
   function getKickPushPSRMod(Entity,Entity,int) in line 10436
      39 lines of code
      3 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
   function getPendingConnection(int) in line 841
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
   function getPendingConnection(int) in line 841
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable connectionsPending defined in megamek::server::Server
   function getPlayer(int) in line 789
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function getPlayer(int) in line 789
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function greeting(int) in line 325
      4 lines of code
      1 parameters
      1 conditional paths
      uses function sendToPending(int,Packet) defined in megamek::server::Server
      uses variable cn defined in jquery.min.js
   function greeting(int) in line 325
      4 lines of code
      1 parameters
      1 conditional paths
      uses function sendToPending(int,Packet) defined in megamek::server::Server
      uses variable cn defined in jquery.min.js
   function handle(int,Packet) in line 15613
      129 lines of code
      2 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function getConnection(int) defined in megamek::server::Server
      uses function receivePlayerName(Packet,int) defined in megamek::server::Server
      uses function receivePlayerInfo(Packet,int) defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function receivePlayerDone(Packet,int) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function receiveInitiativeRerollRequest(Packet,int) defined in megamek::server::Server
      uses function processCommand(int,String) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable DUNE_CALL defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable DUNE_RESPONSE defined in megamek::server::Server
      uses variable STAR_WARS_CALL defined in megamek::server::Server
      uses variable STAR_WARS_RESPONSE defined in megamek::server::Server
      uses function receiveMovement(Packet,int) defined in megamek::server::Server
      uses function receiveDeployment(Packet,int) defined in megamek::server::Server
      uses function receiveDeployMinefields(Packet,int) defined in megamek::server::Server
      uses function receiveAttack(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAdd(Packet,int) defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function receiveEntityUpdate(Packet,int) defined in megamek::server::Server
      uses function receiveEntityModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntitySystemModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAmmoChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityDelete(Packet,int) defined in megamek::server::Server
      uses function receiveGameOptions(Packet,int) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses function receiveGameOptionsAux(Packet,int) defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function createMapQueryPacket(MapSettings) defined in megamek::server::Server
      uses function receiveUnloadStranded(Packet,int) defined in megamek::server::Server
      uses function receiveArtyAutoHitHexes(Packet,int) defined in megamek::server::Server
   function handle(int,Packet) in line 15614
      129 lines of code
      2 parameters
      30 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function getConnection(int) defined in megamek::server::Server
      uses function receivePlayerName(Packet,int) defined in megamek::server::Server
      uses function receivePlayerInfo(Packet,int) defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function receivePlayerDone(Packet,int) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function receiveInitiativeRerollRequest(Packet,int) defined in megamek::server::Server
      uses function processCommand(int,String) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable DUNE_CALL defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable DUNE_RESPONSE defined in megamek::server::Server
      uses variable STAR_WARS_CALL defined in megamek::server::Server
      uses variable STAR_WARS_RESPONSE defined in megamek::server::Server
      uses function receiveMovement(Packet,int) defined in megamek::server::Server
      uses function receiveDeployment(Packet,int) defined in megamek::server::Server
      uses function receiveDeployMinefields(Packet,int) defined in megamek::server::Server
      uses function receiveAttack(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAdd(Packet,int) defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function receiveEntityUpdate(Packet,int) defined in megamek::server::Server
      uses function receiveEntityModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntitySystemModeChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityAmmoChange(Packet,int) defined in megamek::server::Server
      uses function receiveEntityDelete(Packet,int) defined in megamek::server::Server
      uses function receiveGameOptions(Packet,int) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses function receiveGameOptionsAux(Packet,int) defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function createMapQueryPacket(MapSettings) defined in megamek::server::Server
      uses function receiveUnloadStranded(Packet,int) defined in megamek::server::Server
      uses function receiveArtyAutoHitHexes(Packet,int) defined in megamek::server::Server
   function ignite(IHex,int,boolean,int) in line 14230
      protection public
      37 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function ignite(IHex,int,boolean,int) in line 14231
      protection public
      37 lines of code
      4 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function ignite(IHex,int,boolean) in line 14279
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function ignite(IHex,int,boolean) in line 14280
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function ignite(IHex,int) in line 14283
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function ignite(IHex,int) in line 14284
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
   function incrementAndSendGameRound() in line 1747
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function incrementAndSendGameRound() in line 1747
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function isPassword(Object) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPassword(Object) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPassworded() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPassworded() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable password defined in megamek::server::Server
   function isPhasePlayable(int) in line 1499
      18 lines of code
      1 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
   function isPhasePlayable(int) in line 1499
      18 lines of code
      1 parameters
      11 conditional paths
      uses variable game defined in megamek::server::Server
   function isTurnSkippable() in line 1845
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function isTurnSkippable() in line 1845
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function loadGame(File) in line 767
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function setGame(IGame) defined in megamek::server::Server
   function loadGame(File) in line 767
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function setGame(IGame) defined in megamek::server::Server
   function loadUnit(Entity,Entity) in line 2461
      19 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function loadUnit(Entity,Entity) in line 2461
      19 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function oneCriticalEntity(Entity,int) in line 12957
      3 lines of code
      2 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function oneCriticalEntity(Entity,int) in line 12957
      3 lines of code
      2 parameters
      1 conditional paths
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
   function passBuildingWall(Entity,Building,Coords,Coords,int,String) in line 15861
      47 lines of code
      6 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
   function passBuildingWall(Entity,Building,Coords,Coords,int,String) in line 15862
      47 lines of code
      6 parameters
      3 conditional paths
      uses variable r defined in jquery.min.js
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
   function prepareForPhase(int) in line 1337
      158 lines of code
      1 parameters
      29 conditional paths
      uses function clearReports() defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function resetEntityRound() defined in megamek::server::Server
      uses function resetEntityPhase(int) defined in megamek::server::Server
      uses function checkForObservers() defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function rollInitiative() defined in megamek::server::Server
      uses function incrementAndSendGameRound() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function setIneligible(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable gt defined in jquery.min.js
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function doTryUnstuck() defined in megamek::server::Server
      uses function resolveHeat() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function checkForSuffocation() defined in megamek::server::Server
      uses function checkForVacuumDeath() defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
      uses function resolveExtremeTempInfantryDeath() defined in megamek::server::Server
      uses function resolveAmmoDumps() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolveCrewWakeUp() defined in megamek::server::Server
      uses function resolveMechWarriorPickUp() defined in megamek::server::Server
      uses function resolveVeeINarcPodRemoval() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function prepareVictoryReport() defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
      uses function createEndOfGamePacket() defined in megamek::server::Server
   function prepareForPhase(int) in line 1337
      158 lines of code
      1 parameters
      29 conditional paths
      uses function clearReports() defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function resetEntityRound() defined in megamek::server::Server
      uses function resetEntityPhase(int) defined in megamek::server::Server
      uses function checkForObservers() defined in megamek::server::Server
      uses function resetActivePlayersDone() defined in megamek::server::Server
      uses function rollInitiative() defined in megamek::server::Server
      uses function incrementAndSendGameRound() defined in megamek::server::Server
      uses function determineTurnOrder(int) defined in megamek::server::Server
      uses function writeInitiativeReport(boolean) defined in megamek::server::Server
      uses function setIneligible(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable gt defined in jquery.min.js
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function entityAllUpdate() defined in megamek::server::Server
      uses function doTryUnstuck() defined in megamek::server::Server
      uses function resolveHeat() defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses function checkForSuffocation() defined in megamek::server::Server
      uses function checkForVacuumDeath() defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
      uses function resolveExtremeTempInfantryDeath() defined in megamek::server::Server
      uses function resolveAmmoDumps() defined in megamek::server::Server
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function resolveCrewWakeUp() defined in megamek::server::Server
      uses function resolveMechWarriorPickUp() defined in megamek::server::Server
      uses function resolveVeeINarcPodRemoval() defined in megamek::server::Server
      uses function autoSave() defined in megamek::server::Server
      uses function sendReport() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function prepareVictoryReport() defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
      uses function createEndOfGamePacket() defined in megamek::server::Server
   function prepareVictoryReport() in line 971
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function prepareVictoryReport() in line 971
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function preTreatPhysicalAttack(AbstractAttackAction) in line 16900
      78 lines of code
      1 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
   function preTreatPhysicalAttack(AbstractAttackAction) in line 16901
      78 lines of code
      1 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
   function preTreatWeaponAttack(WeaponAttackAction) in line 6284
      78 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
      uses function resolveAmsFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
   function preTreatWeaponAttack(WeaponAttackAction) in line 6284
      78 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addHeatUseAmmoFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
      uses function resolveAmsFor(WeaponAttackAction,WeaponResult) defined in megamek::server::Server
   function processAttack(Entity,Vector) in line 5703
      89 lines of code
      2 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function processAttack(Entity,Vector) in line 5703
      89 lines of code
      2 parameters
      13 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function processCommand(int,String) in line 15578
      21 lines of code
      2 parameters
      3 conditional paths
      uses variable st defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function getCommand(String) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function processCommand(int,String) in line 15579
      21 lines of code
      2 parameters
      3 conditional paths
      uses variable st defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function getCommand(String) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable DUNE_CALL defined in megamek::server::Server
      uses variable DUNE_RESPONSE defined in megamek::server::Server
      uses variable STAR_WARS_CALL defined in megamek::server::Server
      uses variable STAR_WARS_RESPONSE defined in megamek::server::Server
   function processDeployment(Entity,Coords,int,Vector,boolean) in line 5544
      54 lines of code
      5 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function processDeployment(Entity,Coords,int,Vector,boolean) in line 5544
      54 lines of code
      5 parameters
      10 conditional paths
      uses variable i defined in jquery.min.js
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function processDeployMinefields(Vector) in line 5628
      37 lines of code
      1 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function processDeployMinefields(Vector) in line 5628
      37 lines of code
      1 parameters
      9 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
   function processMovement(Entity,MovePath) in line 2717
      1639 lines of code
      2 parameters
      189 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function doSkillCheckInPlace(Entity,PilotingRollData) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) defined in megamek::server::Server
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addAffectedBldg(Building,boolean) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function drownSwarmer(Entity,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function passBuildingWall(Entity,Building,Coords,Coords,int,String) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function createSpecialReportPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function processMovement(Entity,MovePath) in line 2717
      1639 lines of code
      2 parameters
      189 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function ejectEntity(Entity,boolean) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function applyCriticalHit(Entity,int,CriticalSlot,boolean) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function doSkillCheckInPlace(Entity,PilotingRollData) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkExtremeGravityMovement(Entity,MoveStep,Coords,int) defined in megamek::server::Server
      uses function doSkillCheckWhileMoving(Entity,Coords,Coords,PilotingRollData,boolean) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacementMinefieldCheck(Entity,Coords,Coords) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addAffectedBldg(Building,boolean) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function checkVibrabombs(Entity,Coords,boolean) defined in megamek::server::Server
      uses function enterMinefield(Entity,Minefield,Coords,Coords,boolean) defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
      uses function drownSwarmer(Entity,Coords) defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function loadUnit(Entity,Entity) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function passBuildingWall(Entity,Building,Coords,Coords,int,String) defined in megamek::server::Server
      uses function checkBuildingCollapseWhileMoving(Building,Entity,Coords) defined in megamek::server::Server
      uses function doDislodgeSwarmerSkillCheck(Entity,PilotingRollData,Coords) defined in megamek::server::Server
      uses function checkForCollapse(Building,Hashtable) defined in megamek::server::Server
      uses function createSpecialReportPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredEntitiesPacket(Player) defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
   function receiveArtyAutoHitHexes(Packet,int) in line 5599
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveArtyAutoHitHexes(Packet,int) in line 5599
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveAttack(Packet,int) in line 5669
      29 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveAttack(Packet,int) in line 5669
      29 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployment(Packet,int) in line 5500
      38 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function processDeployment(Entity,Coords,int,Vector,boolean) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployment(Packet,int) in line 5500
      38 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function processDeployment(Entity,Coords,int,Vector,boolean) defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployMinefields(Packet,int) in line 5614
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processDeployMinefields(Vector) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveDeployMinefields(Packet,int) in line 5614
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processDeployMinefields(Vector) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveEntityAdd(Packet,int) in line 14767
      61 lines of code
      2 parameters
      11 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable entityVerifier defined in megamek::server::Server
      uses variable VERIFIER_CONFIG_FILENAME defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
   function receiveEntityAdd(Packet,int) in line 14768
      61 lines of code
      2 parameters
      11 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable entityVerifier defined in megamek::server::Server
      uses variable VERIFIER_CONFIG_FILENAME defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function getFreeEntityId() defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createAddEntityPacket(int) defined in megamek::server::Server
   function receiveEntityAmmoChange(Packet,int) in line 14896
      90 lines of code
      2 parameters
      9 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntityAmmoChange(Packet,int) in line 14897
      90 lines of code
      2 parameters
      9 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntityDelete(Packet,int) in line 14990
      60 lines of code
      2 parameters
      6 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function receiveEntityDelete(Packet,int) in line 14991
      60 lines of code
      2 parameters
      6 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function receiveEntityModeChange(Packet,int) in line 14863
      19 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
   function receiveEntityModeChange(Packet,int) in line 14864
      19 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
   function receiveEntitySystemModeChange(Packet,int) in line 14883
      12 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntitySystemModeChange(Packet,int) in line 14884
      12 lines of code
      2 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
   function receiveEntityUpdate(Packet,int) in line 14833
      29 lines of code
      2 parameters
      5 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function receiveEntityUpdate(Packet,int) in line 14834
      29 lines of code
      2 parameters
      5 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function receiveGameOptions(Packet,int) in line 15092
      44 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable password defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function receiveGameOptions(Packet,int) in line 15093
      44 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable password defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function receiveGameOptionsAux(Packet,int) in line 15145
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
   function receiveGameOptionsAux(Packet,int) in line 15146
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable mapSettings defined in megamek::server::Server
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable DEFAULT_BOARD defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
   function receiveInitiativeRerollRequest(Packet,int) in line 15062
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
   function receiveInitiativeRerollRequest(Packet,int) in line 15063
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
   function receiveMovement(Packet,int) in line 2682
      31 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function applyAffectedBldgs() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receiveMovement(Packet,int) in line 2682
      31 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function applyAffectedBldgs() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function updateVisibilityIndicator() defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
   function receivePlayerDone(Packet,int) in line 15054
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function receivePlayerDone(Packet,int) in line 15055
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
   function receivePlayerInfo(Packet,int) in line 352
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
   function receivePlayerInfo(Packet,int) in line 352
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
   function receivePlayerName(Packet,int) in line 394
      97 lines of code
      2 parameters
      11 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function correctDupeName(String) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
      uses function sendCurrentInfo(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getClient(int) defined in megamek::server::Server
   function receivePlayerName(Packet,int) in line 394
      97 lines of code
      2 parameters
      11 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function correctDupeName(String) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses variable connections defined in megamek::server::Server
      uses variable connectionIds defined in megamek::server::Server
      uses function validatePlayerInfo(int) defined in megamek::server::Server
      uses function getPlayer(int) defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
      uses function sendCurrentInfo(int) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getClient(int) defined in megamek::server::Server
   function receiveUnloadStranded(Packet,int) in line 16450
      143 lines of code
      2 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function receiveUnloadStranded(Packet,int) in line 16451
      143 lines of code
      2 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function unloadUnit(Entity,Targetable,Coords,int,int) defined in megamek::server::Server
      uses function changeToNextTurn() defined in megamek::server::Server
   function registerCommand(ServerCommand) in line 269
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function registerCommand(ServerCommand) in line 269
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commandsHash defined in megamek::server::Server
   function removeAllEntitesOwnedBy(Player) in line 798
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function removeAllEntitesOwnedBy(Player) in line 798
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function removeDeadAttacks() in line 8823
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function removeDeadAttacks() in line 8823
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function removeDuplicateAttacks(int) in line 8792
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function removeDuplicateAttacks(int) in line 8792
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function removeFire(int,int,IHex) in line 14288
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function removeSmoke(int,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function removeFire(int,int,IHex) in line 14289
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function removeSmoke(int,int,int) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function removeMinefield(Minefield) in line 4832
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
   function removeMinefield(Minefield) in line 4832
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function removeMinefield(Player,Minefield) in line 4850
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function removeMinefield(Player,Minefield) in line 4850
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function removeMinefieldsFrom(Coords) in line 4819
      8 lines of code
      1 parameters
      2 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function removeMinefieldsFrom(Coords) in line 4819
      8 lines of code
      1 parameters
      2 conditional paths
      uses function v((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
   function removeSmoke(int,int,int) in line 14378
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function removeSmoke(int,int,int) in line 14379
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function x((null)) defined in jquery.min.js
      uses function y((null),(null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resetActivePlayersDone() in line 958
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
   function resetActivePlayersDone() in line 958
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
   function resetEntityPhase(int) in line 868
      74 lines of code
      1 parameters
      10 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function resetEntityPhase(int) in line 868
      74 lines of code
      1 parameters
      10 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createRemoveEntityPacket(int) defined in megamek::server::Server
   function resetEntityRound() in line 856
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resetEntityRound() in line 856
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resetGame() in line 666
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
   function resetGame() in line 666
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createEntitiesPacket() defined in megamek::server::Server
      uses function resetPlayersDone() defined in megamek::server::Server
      uses function transmitAllPlayerDones() defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
   function resetPlayersDone() in line 947
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resetPlayersDone() in line 947
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
   function resolveAllButWeaponAttacks() in line 5836
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function resolveFindClub(Entity) defined in megamek::server::Server
      uses function resolveUnjam(Entity) defined in megamek::server::Server
      uses function triggerAPPod(Entity,int) defined in megamek::server::Server
      uses function resolveClearMinefieldAttempts(Vector) defined in megamek::server::Server
   function resolveAllButWeaponAttacks() in line 5836
      86 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function resolveFindClub(Entity) defined in megamek::server::Server
      uses function resolveUnjam(Entity) defined in megamek::server::Server
      uses function triggerAPPod(Entity,int) defined in megamek::server::Server
      uses function resolveClearMinefieldAttempts(Vector) defined in megamek::server::Server
   function resolveAmmoDumps() in line 14184
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveAmmoDumps() in line 14185
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function m((null),(null)) defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveAmsFor(WeaponAttackAction,WeaponResult) in line 6417
      42 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
   function resolveAmsFor(WeaponAttackAction,WeaponResult) in line 6417
      42 lines of code
      2 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
   function resolveBrushOffAttack(PhysicalResult,int) in line 9324
      119 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveBrushOffAttack(PhysicalResult,int) in line 9324
      119 lines of code
      2 parameters
      7 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveChargeAttack(PhysicalResult,int) in line 9887
      174 lines of code
      2 parameters
      15 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
   function resolveChargeAttack(PhysicalResult,int) in line 9887
      174 lines of code
      2 parameters
      15 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
   function resolveChargeDamage(Entity,Entity,ToHitData,int) in line 10065
      3 lines of code
      4 parameters
      1 conditional paths
      uses function resolveChargeDamage(Entity,Entity,ToHitData,int) defined in megamek::server::Server
   function resolveChargeDamage(Entity,Entity,ToHitData,int) in line 10065
      3 lines of code
      4 parameters
      1 conditional paths
   function resolveChargeDamage(Entity,Entity,ToHitData,int,boolean,boolean) in line 10069
      92 lines of code
      6 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function resolveChargeDamage(Entity,Entity,ToHitData,int,boolean,boolean) in line 10069
      92 lines of code
      6 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
   function resolveClearMinefieldAttempts(Vector) in line 5923
      94 lines of code
      1 parameters
      16 conditional paths
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function removeMinefieldsFrom(Coords) defined in megamek::server::Server
   function resolveClearMinefieldAttempts(Vector) in line 5923
      94 lines of code
      1 parameters
      16 conditional paths
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function explodeVibrabomb(Minefield) defined in megamek::server::Server
      uses function removeMinefieldsFrom(Coords) defined in megamek::server::Server
   function resolveClubAttack(PhysicalResult,int) in line 9576
      171 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolveClubAttack(PhysicalResult,int) in line 9576
      171 lines of code
      2 parameters
      19 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolveCrewDamage() in line 11350
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function resolveCrewDamage() defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveCrewDamage() in line 11350
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addNewLines() defined in megamek::server::Server
   function resolveCrewDamage(Entity,boolean) in line 11366
      51 lines of code
      2 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveCrewDamage(Entity,boolean) in line 11366
      51 lines of code
      2 parameters
      9 conditional paths
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable vPhaseReport defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveCrewWakeUp() in line 11421
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveCrewWakeUp() in line 11421
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveDfaAttack(PhysicalResult,int) in line 10192
      236 lines of code
      2 parameters
      23 conditional paths
      uses variable game defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveDfaAttack(PhysicalResult,int) in line 10192
      236 lines of code
      2 parameters
      23 conditional paths
      uses variable game defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveExtremeTempInfantryDeath() in line 10914
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveExtremeTempInfantryDeath() in line 10914
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveFindClub(Entity) in line 6180
      99 lines of code
      1 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveFindClub(Entity) in line 6180
      99 lines of code
      1 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveHeat() in line 10480
      426 lines of code
      0 parameters
      58 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses variable at defined in jquery.min.js
      uses function explodeInfernoAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function explodeAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function resolveHeat() in line 10480
      426 lines of code
      0 parameters
      58 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resolveVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function doFlamingDeath(Entity) defined in megamek::server::Server
      uses function m((null),(null)) defined in jquery.min.js
      uses variable at defined in jquery.min.js
      uses function explodeInfernoAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses function explodeAmmoFromHeat(Entity) defined in megamek::server::Server
      uses function damageCrew(Entity,int) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function oneCriticalEntity(Entity,int) defined in megamek::server::Server
      uses variable vPhaseReport defined in megamek::server::Server
   function resolveIceBroken(Coords) in line 17601
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveIceBroken(Coords) in line 17602
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveIndirectArtilleryAttacks() in line 16691
      128 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function resolveIndirectArtilleryAttacks() in line 16692
      128 lines of code
      0 parameters
      16 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function convertHomingShotToEntityTarget(ArtilleryAttackAction,Entity) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
   function resolveKickAttack(PhysicalResult,int) in line 9000
      168 lines of code
      2 parameters
      17 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
   function resolveKickAttack(PhysicalResult,int) in line 9000
      168 lines of code
      2 parameters
      17 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
   function resolveLayExplosivesAttack(PhysicalResult,int) in line 10162
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveLayExplosivesAttack(PhysicalResult,int) in line 10162
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveMechWarriorPickUp() in line 17385
      84 lines of code
      0 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function resolveMechWarriorPickUp() in line 17386
      84 lines of code
      0 parameters
      13 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function resolveOnlyWeaponAttacks() in line 6021
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveOnlyWeaponAttacks() in line 6021
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolvePhysicalAttack(PhysicalResult,int) in line 16986
      64 lines of code
      2 parameters
      14 conditional paths
      uses function resolvePunchAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveKickAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveBrushOffAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveThrashAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveProtoAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveClubAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolvePushAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveChargeAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveDfaAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveLayExplosivesAttack(PhysicalResult,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function resolvePhysicalAttack(PhysicalResult,int) in line 16987
      64 lines of code
      2 parameters
      14 conditional paths
      uses function resolvePunchAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveKickAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveBrushOffAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveThrashAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveProtoAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveClubAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolvePushAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveChargeAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveDfaAttack(PhysicalResult,int) defined in megamek::server::Server
      uses function resolveLayExplosivesAttack(PhysicalResult,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function resolvePhysicalAttacks() in line 8733
      41 lines of code
      0 parameters
      6 conditional paths
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function cleanupPhysicalAttacks() defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function preTreatPhysicalAttack(AbstractAttackAction) defined in megamek::server::Server
      uses function resolvePhysicalAttack(PhysicalResult,int) defined in megamek::server::Server
   function resolvePhysicalAttacks() in line 8733
      41 lines of code
      0 parameters
      6 conditional paths
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function cleanupPhysicalAttacks() defined in megamek::server::Server
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function preTreatPhysicalAttack(AbstractAttackAction) defined in megamek::server::Server
      uses function resolvePhysicalAttack(PhysicalResult,int) defined in megamek::server::Server
   function resolvePilotingRolls() in line 11112
      6 lines of code
      0 parameters
      29 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function doExtremeGravityDamage(Entity,int) defined in megamek::server::Server
      uses variable k defined in jquery.min.js
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolvePilotingRolls() in line 11112
      6 lines of code
      0 parameters
      29 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function resolvePilotingRolls() defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function doExtremeGravityDamage(Entity,int) defined in megamek::server::Server
      uses variable k defined in jquery.min.js
      uses function doEntityFallsInto(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveProtoAttack(PhysicalResult,int) in line 9173
      146 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolveProtoAttack(PhysicalResult,int) in line 9173
      146 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolvePunchAttack(PhysicalResult,int) in line 8845
      151 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolvePunchAttack(PhysicalResult,int) in line 8845
      151 lines of code
      2 parameters
      14 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function resolvePushAttack(PhysicalResult,int) in line 9751
      132 lines of code
      2 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolvePushAttack(PhysicalResult,int) in line 9751
      132 lines of code
      2 parameters
      12 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable physicalResults defined in megamek::server::Server
      uses function getKickPushPSRMod(Entity,Entity,int) defined in megamek::server::Server
      uses function doEntityDisplacement(Entity,Coords,Coords,PilotingRollData) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveSinkVees() in line 17473
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveSinkVees() in line 17474
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
   function resolveThrashAttack(PhysicalResult,int) in line 9447
      125 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveThrashAttack(PhysicalResult,int) in line 9447
      125 lines of code
      2 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function doEntityFall(Entity,Coords,int,int,PilotingRollData) defined in megamek::server::Server
   function resolveUnjam(Entity) in line 6149
      30 lines of code
      1 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function resolveUnjam(Entity) in line 6149
      30 lines of code
      1 parameters
      5 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function resolveVeeINarcPodRemoval() in line 17557
      29 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveVeeINarcPodRemoval() in line 17558
      29 lines of code
      0 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
   function resolveVehicleFire(Tank,boolean) in line 17658
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveVehicleFire(Tank,boolean) in line 17659
      17 lines of code
      2 parameters
      6 conditional paths
      uses variable i defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int) in line 6618
      3 lines of code
      2 parameters
      1 conditional paths
   function resolveWeaponAttack(WeaponResult,int) in line 6618
      3 lines of code
      2 parameters
      1 conditional paths
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean) in line 6622
      3 lines of code
      3 parameters
      1 conditional paths
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean) in line 6622
      3 lines of code
      3 parameters
      1 conditional paths
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean,int) in line 6639
      2090 lines of code
      4 parameters
      286 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function deliverThunderAugMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderInfernoMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses function deliverThunderActiveMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryInferno(Coords,int) defined in megamek::server::Server
      uses function deliverFASCAMMinefield(Coords,int) defined in megamek::server::Server
      uses function deliverArtillerySmoke(Coords) defined in megamek::server::Server
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function tryClearHex(Coords,int,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function resolveWeaponAttack(WeaponResult,int,boolean,int) in line 6639
      2090 lines of code
      4 parameters
      286 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable r defined in jquery.min.js
      uses function canSee(Player,Entity) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function preTreatWeaponAttack(WeaponAttackAction) defined in megamek::server::Server
      uses function resolveWeaponAttack(WeaponResult,int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
      uses function deliverThunderAugMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderInfernoMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverThunderVibraMinefield(Coords,int,int,int) defined in megamek::server::Server
      uses function deliverThunderActiveMinefield(Coords,int,int) defined in megamek::server::Server
      uses function deliverFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryFlare(Coords,int) defined in megamek::server::Server
      uses function deliverArtilleryInferno(Coords,int) defined in megamek::server::Server
      uses function deliverFASCAMMinefield(Coords,int) defined in megamek::server::Server
      uses function deliverArtillerySmoke(Coords) defined in megamek::server::Server
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function removeMinefield(Minefield) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
      uses function sendChangedHex(Coords) defined in megamek::server::Server
      uses function damageBuilding(Building,int) defined in megamek::server::Server
      uses function addNewLines() defined in megamek::server::Server
      uses function checkForVehicleFire(Tank,boolean) defined in megamek::server::Server
      uses function tryClearHex(Coords,int,int) defined in megamek::server::Server
      uses function damageInfantryIn(Building,int) defined in megamek::server::Server
      uses function criticalEntity(Entity,int) defined in megamek::server::Server
      uses function creditKill(Entity,Entity) defined in megamek::server::Server
   function revealMinefield(Minefield) in line 4861
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function revealMinefield(Minefield) defined in megamek::server::Server
   function revealMinefield(Minefield) in line 4861
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
   function revealMinefield(Player,Minefield) in line 4874
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function revealMinefield(Player,Minefield) in line 4874
      6 lines of code
      2 parameters
      2 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function rollInitiative() in line 1993
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerUpdates() defined in megamek::server::Server
   function rollInitiative() in line 1993
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable game defined in megamek::server::Server
      uses function transmitAllPlayerUpdates() defined in megamek::server::Server
   function run() in line 15747
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable connector defined in megamek::server::Server
      uses function s((null)) defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getFreeConnectionId() defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable connectionListener defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses function greeting(int) defined in megamek::server::Server
   function run() in line 15748
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable connector defined in megamek::server::Server
      uses function s((null)) defined in jquery.min.js
      uses variable serverSocket defined in megamek::server::Server
      uses function getFreeConnectionId() defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable connectionListener defined in megamek::server::Server
      uses variable connectionsPending defined in megamek::server::Server
      uses function greeting(int) defined in megamek::server::Server
   function saveGame(String,boolean) in line 730
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function saveGame(String,boolean) in line 730
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function saveGame(String) in line 758
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
   function saveGame(String) in line 758
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
   function scanForBoards(int,int) in line 14410
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable game defined in megamek::server::Server
   function scanForBoards(int,int) in line 14411
      3 lines of code
      2 parameters
      1 conditional paths
      uses function scanForBoards(int,int) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function scanForBoards(int,int,boolean) in line 14414
      42 lines of code
      3 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function scanForBoardsInDir(File,String,int,int) defined in megamek::server::Server
   function scanForBoards(int,int,boolean) in line 14415
      42 lines of code
      3 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses function x((null)) defined in jquery.min.js
      uses function scanForBoardsInDir(File,String,int,int) defined in megamek::server::Server
   function scanForBoardsInDir(File,String,int,int) in line 14395
      14 lines of code
      4 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
   function scanForBoardsInDir(File,String,int,int) in line 14396
      14 lines of code
      4 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
      uses function w((null),(null)) defined in jquery.min.js
      uses function h((null)) defined in jquery.min.js
   function send(Packet) in line 15517
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function send(Packet) in line 15518
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function send(int,Packet) in line 15554
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getClient(int) defined in megamek::server::Server
   function send(int,Packet) in line 15555
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getClient(int) defined in megamek::server::Server
   function sendChangedCFBuildings(Vector< Building >) in line 16440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createUpdateBuildingCFPacket(Vector) defined in megamek::server::Server
   function sendChangedCFBuildings(Vector< Building >) in line 16441
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createUpdateBuildingCFPacket(Vector) defined in megamek::server::Server
   function sendChangedHex(Coords) in line 15452
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createHexChangePacket(Coords,IHex) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function sendChangedHex(Coords) in line 15453
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
      uses function createHexChangePacket(Coords,IHex) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
   function sendChat(int,String,String) in line 15419
      3 lines of code
      3 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendChat(int,String,String) in line 15420
      3 lines of code
      3 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendChat(String,String) in line 15426
      4 lines of code
      2 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendChat(String,String) in line 15427
      4 lines of code
      2 parameters
      1 conditional paths
      uses function send(Packet) defined in megamek::server::Server
   function sendCurrentInfo(int) in line 496
      61 lines of code
      1 parameters
      7 conditional paths
      uses function transmitAllPlayerConnects(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredFullEntitiesPacket(Player) defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createAllReportsPacket(Player) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
   function sendCurrentInfo(int) in line 496
      61 lines of code
      1 parameters
      7 conditional paths
      uses function transmitAllPlayerConnects(int) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createGameSettingsPacket() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function createMapSettingsPacket() defined in megamek::server::Server
      uses function doBlind() defined in megamek::server::Server
      uses function createFilteredFullEntitiesPacket(Player) defined in megamek::server::Server
      uses function createFullEntitiesPacket() defined in megamek::server::Server
      uses function createAllReportsPacket(Player) defined in megamek::server::Server
      uses function createBoardPacket() defined in megamek::server::Server
      uses function createAttackPacket(Vector,int) defined in megamek::server::Server
      uses function createTurnVectorPacket() defined in megamek::server::Server
      uses function createTurnIndexPacket() defined in megamek::server::Server
      uses function createArtilleryPacket(Player) defined in megamek::server::Server
      uses function createFlarePacket() defined in megamek::server::Server
   function sendGhostSkipMessage(Player) in line 1786
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendGhostSkipMessage(Player) in line 1786
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendReport() in line 15527
      3 lines of code
      0 parameters
      1 conditional paths
   function sendReport() in line 15528
      3 lines of code
      0 parameters
      1 conditional paths
      uses function sendReport() defined in megamek::server::Server
   function sendReport(boolean) in line 15534
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function createTacticalGeniusReportPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
   function sendReport(boolean) in line 15535
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable connections defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function createTacticalGeniusReportPacket() defined in megamek::server::Server
      uses function createReportPacket(Player) defined in megamek::server::Server
   function sendSaveGame(int,String) in line 704
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function sendSaveGame(int,String) in line 704
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function saveGame(String,boolean) defined in megamek::server::Server
      uses function f((null),(null),(null)) defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
      uses function sendChat(int,String,String) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function sendServerChat(int,String) in line 15431
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendServerChat(int,String) in line 15432
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendServerChat(String) in line 15435
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendServerChat(String) in line 15436
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function sendChat(int,String,String) defined in megamek::server::Server
   function sendToPending(int,Packet) in line 15566
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
   function sendToPending(int,Packet) in line 15567
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getPendingConnection(int) defined in megamek::server::Server
   function sendTurnErrorSkipMessage(Player) in line 1801
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendTurnErrorSkipMessage(Player) in line 1801
      7 lines of code
      1 parameters
      1 conditional paths
      uses function sendServerChat(int,String) defined in megamek::server::Server
   function sendVisibilityIndicator(Entity) in line 15456
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
   function sendVisibilityIndicator(Entity) in line 15457
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
      uses function send(Packet) defined in megamek::server::Server
   function setGame(IGame) in line 211
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function setGame(IGame) in line 211
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function g((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
   function setIneligible(int) in line 2434
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function setIneligible(int) in line 2434
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable e defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses variable i defined in jquery.min.js
   function skipCurrentTurn() in line 1813
      protection public
      27 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
   function skipCurrentTurn() in line 1813
      protection public
      27 lines of code
      0 parameters
      9 conditional paths
      uses variable game defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function processMovement(Entity,MovePath) defined in megamek::server::Server
      uses function endCurrentTurn(Entity) defined in megamek::server::Server
      uses function processAttack(Entity,Vector) defined in megamek::server::Server
   function transmitAllPlayerConnects(int) in line 15165
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
   function transmitAllPlayerConnects(int) in line 15166
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerConnectPacket(int) defined in megamek::server::Server
   function transmitAllPlayerDones() in line 15210
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
   function transmitAllPlayerDones() in line 15211
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerDonePacket(int) defined in megamek::server::Server
   function transmitAllPlayerUpdates() in line 15198
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
   function transmitAllPlayerUpdates() in line 15199
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
   function triggerAPPod(Entity,int) in line 6051
      94 lines of code
      2 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function triggerAPPod(Entity,int) in line 6051
      94 lines of code
      2 parameters
      8 conditional paths
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function damageEntity(Entity,HitData,int,boolean) defined in megamek::server::Server
   function tryClearHex(Coords,int,int) in line 6531
      86 lines of code
      3 parameters
      10 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryClearHex(Coords,int,int) in line 6531
      86 lines of code
      3 parameters
      10 conditional paths
      uses function h((null)) defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function resolveIceBroken(Coords) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryIgniteHex(Coords,int,boolean,int,boolean) in line 6474
      40 lines of code
      5 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryIgniteHex(Coords,int,boolean,int,boolean) in line 6474
      40 lines of code
      5 parameters
      6 conditional paths
      uses variable game defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addReport(Vector) defined in megamek::server::Server
      uses function ignite(IHex,int,boolean,int) defined in megamek::server::Server
      uses function sendChangedHex(Coords) defined in megamek::server::Server
   function tryIgniteHex(Coords,int,boolean,int) in line 6526
      4 lines of code
      4 parameters
      1 conditional paths
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
   function tryIgniteHex(Coords,int,boolean,int) in line 6526
      4 lines of code
      4 parameters
      1 conditional paths
      uses function tryIgniteHex(Coords,int,boolean,int,boolean) defined in megamek::server::Server
      uses function c((null),(null)) defined in jquery.min.js
   function unloadUnit(Entity,Targetable,Coords,int,int) in line 2494
      71 lines of code
      5 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function unloadUnit(Entity,Targetable,Coords,int,int) in line 2494
      71 lines of code
      5 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function doSetLocationsExposure(Entity,IHex,boolean,int) defined in megamek::server::Server
      uses function entityUpdate(int) defined in megamek::server::Server
   function updateVisibilityIndicator() in line 14742
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function y((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function sendVisibilityIndicator(Entity) defined in megamek::server::Server
   function updateVisibilityIndicator() in line 14743
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable game defined in megamek::server::Server
      uses function x((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function whoCanSee(Entity) defined in megamek::server::Server
      uses function y((null),(null)) defined in jquery.min.js
      uses function p((null)) defined in jquery.min.js
      uses function sendVisibilityIndicator(Entity) defined in megamek::server::Server
   function validatePlayerInfo(int) in line 561
      protection public
      35 lines of code
      1 parameters
      11 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeAllEntitesOwnedBy(Player) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function validatePlayerInfo(int) in line 561
      protection public
      35 lines of code
      1 parameters
      11 conditional paths
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function removeAllEntitesOwnedBy(Player) defined in megamek::server::Server
      uses function send(Packet) defined in megamek::server::Server
      uses function createPlayerUpdatePacket(int) defined in megamek::server::Server
      uses function sendGhostSkipMessage(Player) defined in megamek::server::Server
      uses function checkReady() defined in megamek::server::Server
      uses function sendServerChat(int,String) defined in megamek::server::Server
      uses function resetGame() defined in megamek::server::Server
   function vehicleMotiveDamage(Tank,int) in line 17676
      67 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function vehicleMotiveDamage(Tank,int) in line 17677
      67 lines of code
      2 parameters
      9 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function destroyEntity(Entity,String) defined in megamek::server::Server
      uses function crashVTOL(VTOL,Coords,int) defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
   function victory() in line 1857
      protection public
      103 lines of code
      0 parameters
      22 conditional paths
      uses variable game defined in megamek::server::Server
      uses function forceVictory(Player) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function cancelVictory() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function victory() in line 1857
      protection public
      103 lines of code
      0 parameters
      22 conditional paths
      uses variable game defined in megamek::server::Server
      uses function forceVictory(Player) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function cancelVictory() defined in megamek::server::Server
      uses variable e defined in jquery.min.js
   function whoCanSee(Entity) in line 14508
      39 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addTeammates(Vector,Player) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function whoCanSee(Entity) in line 14509
      39 lines of code
      1 parameters
      10 conditional paths
      uses variable game defined in megamek::server::Server
      uses function addTeammates(Vector,Player) defined in megamek::server::Server
      uses function p((null)) defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function writeInitiativeReport(boolean) in line 2305
      125 lines of code
      1 parameters
      19 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function addNewLines() defined in megamek::server::Server
   function writeInitiativeReport(boolean) in line 2305
      125 lines of code
      1 parameters
      19 conditional paths
      uses variable r defined in jquery.min.js
      uses variable game defined in megamek::server::Server
      uses function addReport(Vector) defined in megamek::server::Server
      uses variable e defined in jquery.min.js
      uses variable t defined in jquery.min.js
      uses function getPlayer(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function addNewLines() defined in megamek::server::Server
   function Server(String,int) in line 147
      protection public
      57 lines of code
      2 parameters
      4 conditional paths
      uses variable password defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createMotd() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable connector defined in megamek::server::Server
      uses function registerCommand(ServerCommand) defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
   function Server(String,int) in line 147
      protection public
      57 lines of code
      2 parameters
      4 conditional paths
      uses variable password defined in megamek::server::Server
      uses variable serverSocket defined in megamek::server::Server
      uses variable motd defined in megamek::server::Server
      uses function createMotd() defined in megamek::server::Server
      uses variable game defined in megamek::server::Server
      uses function changePhase(int) defined in megamek::server::Server
      uses variable i defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable connector defined in megamek::server::Server
      uses function registerCommand(ServerCommand) defined in megamek::server::Server
      uses variable terrainProcessors defined in megamek::server::Server
   variable affectedBldgs in line 89
   variable commandsHash in line 83
   variable connectionCounter in line 73
   variable connectionIds in line 71
   variable connectionListener in line 111
   variable connections in line 69
   variable connectionsPending in line 70
   variable connector in line 86
   variable DEFAULT_BOARD in line 59
      protection public
   variable DUNE_CALL in line 15601
   variable DUNE_RESPONSE in line 15602
   variable entityCounter in line 74
   variable entityVerifier in line 109
   variable game in line 76
   variable mapSettings in line 80
   variable motd in line 66
   variable password in line 64
   variable physicalResults in line 93
   variable serverSocket in line 65
   variable STAR_WARS_CALL in line 15603
   variable STAR_WARS_RESPONSE in line 15604
   variable terrainProcessors in line 95
   variable VERIFIER_CONFIG_FILENAME in line 60
   variable vPhaseReport in line 78
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/UMLModelElementStereotypeComboBoxModel_1.3_1.4_v0.java
module org::argouml::uml::ui::foundation::core::UMLModelElementStereotypeComboBoxModel
   inherits from org::argouml::uml::ui::UMLComboBoxModel2
   inherits from org::argouml::uml::ui::UMLComboBoxModel2
   function buildModelList() in line 68
      4 lines of code
      0 parameters
      1 conditional paths
   function buildModelList() in line 70
      4 lines of code
      0 parameters
      1 conditional paths
   function getSelectedModelElement() in line 76
      6 lines of code
      0 parameters
      2 conditional paths
   function getSelectedModelElement() in line 78
      6 lines of code
      0 parameters
      2 conditional paths
   function isValidPropertySet(MElementEvent) in line 61
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
   function isValidPropertySet(MElementEvent) in line 61
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
   function isValidRoleAdded(MElementEvent) in line 52
      5 lines of code
      1 parameters
      1 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function isValidRoleAdded(MElementEvent) in line 52
      5 lines of code
      1 parameters
      1 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function UMLModelElementStereotypeComboBoxModel(UMLUserInterfaceContainer) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function UMLModelElementStereotypeComboBoxModel(UMLUserInterfaceContainer) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/cvsvintage/UMLModelElementStereotypeComboBoxModel_1.3_1.4_v1.java
module org::argouml::uml::ui::foundation::core::UMLModelElementStereotypeComboBoxModel
   inherits from org::argouml::uml::ui::UMLComboBoxModel2
   inherits from org::argouml::uml::ui::UMLComboBoxModel2
   function buildModelList() in line 68
      4 lines of code
      0 parameters
      1 conditional paths
   function buildModelList() in line 70
      4 lines of code
      0 parameters
      1 conditional paths
   function getSelectedModelElement() in line 76
      6 lines of code
      0 parameters
      2 conditional paths
   function getSelectedModelElement() in line 78
      6 lines of code
      0 parameters
      2 conditional paths
   function isValidPropertySet(MElementEvent) in line 61
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
   function isValidPropertySet(MElementEvent) in line 61
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in jquery.min.js
   function isValidRoleAdded(MElementEvent) in line 52
      5 lines of code
      1 parameters
      1 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function isValidRoleAdded(MElementEvent) in line 52
      5 lines of code
      1 parameters
      1 conditional paths
      uses function o((null),(null),(null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function UMLModelElementStereotypeComboBoxModel(UMLUserInterfaceContainer) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function UMLModelElementStereotypeComboBoxModel(UMLUserInterfaceContainer) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/AlterTableAlterColumn_4076_4129_v0.java
module org::h2::command::ddl::AlterTableAlterColumn
   inherits from SchemaCommand
   inherits from SchemaCommand
   function checkDefaultReferencesTable(Expression) in line 164
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkDefaultReferencesTable(Expression) in line 173
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNoNullValues() in line 439
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNoNullValues() in line 450
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNullable() in line 427
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNullable() in line 438
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkViews(SchemaObject,SchemaObject) in line 380
      20 lines of code
      2 parameters
      3 conditional paths
      uses function checkViewsAreValid(DbObject) defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkViews(SchemaObject,SchemaObject) in line 391
      20 lines of code
      2 parameters
      3 conditional paths
      uses function checkViewsAreValid(DbObject) defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkViewsAreValid(DbObject) in line 406
      12 lines of code
      1 parameters
      3 conditional paths
   function checkViewsAreValid(DbObject) in line 417
      12 lines of code
      1 parameters
      3 conditional paths
      uses function checkViewsAreValid(DbObject) defined in org::h2::command::ddl::AlterTableAlterColumn
   function cloneTableStructure(Column[],Database,String,ArrayList< Column >) in line 255
      121 lines of code
      4 parameters
      25 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable addBefore defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable r defined in jquery.min.js
   function cloneTableStructure(Column[],Database,String,ArrayList< Column >) in line 264
      123 lines of code
      4 parameters
      26 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable addBefore defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable columnsToAdd defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable r defined in jquery.min.js
   function convertAutoIncrementColumn(Column) in line 176
      10 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function convertAutoIncrementColumn(Column) in line 185
      10 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function copyData() in line 196
      58 lines of code
      0 parameters
      15 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function cloneTableStructure(Column[],Database,String,ArrayList< Column >) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkViews(SchemaObject,SchemaObject) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable e defined in jquery.min.js
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
   function copyData() in line 205
      58 lines of code
      0 parameters
      15 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function cloneTableStructure(Column[],Database,String,ArrayList< Column >) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkViews(SchemaObject,SchemaObject) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable e defined in jquery.min.js
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
   function execute(String,boolean) in line 419
      7 lines of code
      2 parameters
      2 conditional paths
   function execute(String,boolean) in line 430
      7 lines of code
      2 parameters
      2 conditional paths
   function getType() in line 465
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function getType() in line 476
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function removeSequence(Sequence) in line 187
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function removeSequence(Sequence) in line 196
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function setAddBefore(String) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAddBefore(String) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefaultExpression(Expression) in line 457
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
   function setDefaultExpression(Expression) in line 468
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
   function setIfNotExists(boolean) in line 469
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
   function setIfNotExists(boolean) in line 480
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
   function setNewColumn(Column) in line 461
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setNewColumn(Column) in line 472
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setNewColumns(ArrayList< Column >) in line 484
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable columnsToAdd defined in org::h2::command::ddl::AlterTableAlterColumn
   function setOldColumn(Column) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setOldColumn(Column) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setSelectivity(Expression) in line 453
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function setSelectivity(Expression) in line 464
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function setTable(Table) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function setTable(Table) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function setType(int) in line 449
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function setType(int) in line 460
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function update() in line 75
      protection public
      88 lines of code
      0 parameters
      16 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkDefaultReferencesTable(Expression) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNoNullValues() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNullable() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function removeSequence(Sequence) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function convertAutoIncrementColumn(Column) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function copyData() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function update() in line 76
      protection public
      96 lines of code
      0 parameters
      19 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkDefaultReferencesTable(Expression) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable columnsToAdd defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNoNullValues() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNullable() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function removeSequence(Sequence) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function convertAutoIncrementColumn(Column) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function copyData() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function AlterTableAlterColumn(Session,Schema) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function AlterTableAlterColumn(Session,Schema) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable addBefore in line 56
   variable columnsToAdd in line 58
   variable defaultExpression in line 54
   variable ifNotExists in line 57
   variable newColumn in line 52
   variable newSelectivity in line 55
   variable oldColumn in line 51
   variable table in line 50
   variable type in line 53
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/AlterTableAlterColumn_4076_4129_v1.java
module org::h2::command::ddl::AlterTableAlterColumn
   inherits from SchemaCommand
   inherits from SchemaCommand
   function checkDefaultReferencesTable(Expression) in line 164
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkDefaultReferencesTable(Expression) in line 173
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNoNullValues() in line 439
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNoNullValues() in line 450
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNullable() in line 427
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkNullable() in line 438
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkViews(SchemaObject,SchemaObject) in line 380
      20 lines of code
      2 parameters
      3 conditional paths
      uses function checkViewsAreValid(DbObject) defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkViews(SchemaObject,SchemaObject) in line 391
      20 lines of code
      2 parameters
      3 conditional paths
      uses function checkViewsAreValid(DbObject) defined in org::h2::command::ddl::AlterTableAlterColumn
   function checkViewsAreValid(DbObject) in line 406
      12 lines of code
      1 parameters
      3 conditional paths
   function checkViewsAreValid(DbObject) in line 417
      12 lines of code
      1 parameters
      3 conditional paths
      uses function checkViewsAreValid(DbObject) defined in org::h2::command::ddl::AlterTableAlterColumn
   function cloneTableStructure(Column[],Database,String,ArrayList< Column >) in line 255
      121 lines of code
      4 parameters
      25 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable addBefore defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable r defined in jquery.min.js
   function cloneTableStructure(Column[],Database,String,ArrayList< Column >) in line 264
      123 lines of code
      4 parameters
      26 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable addBefore defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable columnsToAdd defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable r defined in jquery.min.js
   function convertAutoIncrementColumn(Column) in line 176
      10 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function convertAutoIncrementColumn(Column) in line 185
      10 lines of code
      1 parameters
      3 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function copyData() in line 196
      58 lines of code
      0 parameters
      15 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function cloneTableStructure(Column[],Database,String,ArrayList< Column >) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkViews(SchemaObject,SchemaObject) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable e defined in jquery.min.js
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
   function copyData() in line 205
      58 lines of code
      0 parameters
      15 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function cloneTableStructure(Column[],Database,String,ArrayList< Column >) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkViews(SchemaObject,SchemaObject) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable e defined in jquery.min.js
      uses function execute(String,boolean) defined in org::h2::command::ddl::AlterTableAlterColumn
   function execute(String,boolean) in line 419
      7 lines of code
      2 parameters
      2 conditional paths
   function execute(String,boolean) in line 430
      7 lines of code
      2 parameters
      2 conditional paths
   function getType() in line 465
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function getType() in line 476
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function removeSequence(Sequence) in line 187
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function removeSequence(Sequence) in line 196
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function setAddBefore(String) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAddBefore(String) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefaultExpression(Expression) in line 457
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
   function setDefaultExpression(Expression) in line 468
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
   function setIfNotExists(boolean) in line 469
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
   function setIfNotExists(boolean) in line 480
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
   function setNewColumn(Column) in line 461
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setNewColumn(Column) in line 472
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setNewColumns(ArrayList< Column >) in line 484
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable columnsToAdd defined in org::h2::command::ddl::AlterTableAlterColumn
   function setOldColumn(Column) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setOldColumn(Column) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
   function setSelectivity(Expression) in line 453
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function setSelectivity(Expression) in line 464
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function setTable(Table) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function setTable(Table) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
   function setType(int) in line 449
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function setType(int) in line 460
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
   function update() in line 75
      protection public
      88 lines of code
      0 parameters
      16 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkDefaultReferencesTable(Expression) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNoNullValues() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNullable() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function removeSequence(Sequence) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function convertAutoIncrementColumn(Column) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function copyData() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function update() in line 76
      protection public
      96 lines of code
      0 parameters
      19 conditional paths
      uses variable table defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable oldColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newColumn defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkDefaultReferencesTable(Expression) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable columnsToAdd defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable type defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNoNullValues() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function checkNullable() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable defaultExpression defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function removeSequence(Sequence) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function convertAutoIncrementColumn(Column) defined in org::h2::command::ddl::AlterTableAlterColumn
      uses function copyData() defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable ifNotExists defined in org::h2::command::ddl::AlterTableAlterColumn
      uses variable newSelectivity defined in org::h2::command::ddl::AlterTableAlterColumn
   function AlterTableAlterColumn(Session,Schema) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function AlterTableAlterColumn(Session,Schema) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable addBefore in line 56
   variable columnsToAdd in line 58
   variable defaultExpression in line 54
   variable ifNotExists in line 57
   variable newColumn in line 52
   variable newSelectivity in line 55
   variable oldColumn in line 51
   variable table in line 50
   variable type in line 53
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/BasicClient_1018_1024_v0.java
module com::google::code::facebookapi::BasicClient
   function batch_run(String,boolean) in line 288
      15 lines of code
      2 parameters
      3 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
      uses function l() defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function batch_run(String,boolean) in line 291
      15 lines of code
      2 parameters
      3 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
      uses function l() defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function beginBatch() in line 256
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function beginBatch() in line 259
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function beginPermissionsMode(String) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function beginPermissionsMode(String) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) in line 141
      3 lines of code
      3 parameters
      1 conditional paths
   function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) in line 141
      3 lines of code
      3 parameters
      1 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 155
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 155
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>,String,InputStream) in line 198
      protection public
      57 lines of code
      5 parameters
      12 conditional paths
      uses function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) defined in com::google::code::facebookapi::BasicClient
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>,String,InputStream) in line 201
      protection public
      57 lines of code
      5 parameters
      12 conditional paths
      uses function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) defined in com::google::code::facebookapi::BasicClient
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   function encodeMethods(List< BatchQuery >) in line 304
      10 lines of code
      1 parameters
      3 conditional paths
   function encodeMethods(List< BatchQuery >) in line 307
      10 lines of code
      1 parameters
      3 conditional paths
   function endPermissionsMode() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function endPermissionsMode() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function executeBatch(boolean) in line 265
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses function q((null),(null)) defined in jquery.min.js
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses function batch_run(String,boolean) defined in com::google::code::facebookapi::BasicClient
   function executeBatch(boolean) in line 268
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses function q((null),(null)) defined in jquery.min.js
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses function batch_run(String,boolean) defined in com::google::code::facebookapi::BasicClient
      uses function encodeMethods(List< BatchQuery >) defined in com::google::code::facebookapi::BasicClient
   function getApiKey() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function getApiKey() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function getQueries() in line 48
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function getQueries() in line 48
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function getSecret() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function getSecret() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function getSessionKey() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function getSessionKey() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function isBatchMode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
   function isBatchMode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
   function isSessionSecret() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function isSessionSecret() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 159
      38 lines of code
      3 parameters
      7 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable permissionsApiKey defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 159
      41 lines of code
      3 parameters
      8 conditional paths
      uses variable permissionsApiKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses function p((null)) defined in jquery.min.js
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function setServerUrl(String) in line 103
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
   function setServerUrl(String) in line 103
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
   function setServerUrlHttps(String) in line 117
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
   function setServerUrlHttps(String) in line 117
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
   function setSessionKey(String) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSessionKey(String) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function BasicClient(String,String,boolean) in line 52
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function BasicClient(String,String,boolean,String) in line 56
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function BasicClient(URL,URL,String,String,boolean,String,CommunicationStrategy) in line 60
      13 lines of code
      7 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   function BasicClient(String,String,boolean) in line 52
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function BasicClient(String,String,boolean,String) in line 56
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function BasicClient(URL,URL,String,String,boolean,String,CommunicationStrategy) in line 60
      13 lines of code
      7 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   variable apiKey in line 34
   variable batchMode in line 40
   variable communicationStrategy in line 32
   variable CRLF in line 26
   variable log in line 24
   variable permissionsApiKey in line 42
   variable PREF in line 27
   variable queries in line 41
   variable secret in line 35
   variable serverUrl in line 30
   variable serverUrlHttps in line 31
   variable sessionKey in line 38
   variable sessionSecret in line 36
   variable UPLOAD_BUFFER_SIZE in line 28
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/BasicClient_1018_1024_v1.java
module com::google::code::facebookapi::BasicClient
   function batch_run(String,boolean) in line 288
      15 lines of code
      2 parameters
      3 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
      uses function l() defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function batch_run(String,boolean) in line 291
      15 lines of code
      2 parameters
      3 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
      uses function l() defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function beginBatch() in line 256
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function beginBatch() in line 259
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function beginPermissionsMode(String) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function beginPermissionsMode(String) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) in line 141
      3 lines of code
      3 parameters
      1 conditional paths
   function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) in line 141
      3 lines of code
      3 parameters
      1 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 155
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 155
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function callMethod(String,IFacebookMethod,Pair< String, CharSequence >...) defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>,String,InputStream) in line 198
      protection public
      57 lines of code
      5 parameters
      12 conditional paths
      uses function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) defined in com::google::code::facebookapi::BasicClient
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   function callMethod(String,IFacebookMethod,Collection< Pair< String, CharSequence >>,String,InputStream) in line 201
      protection public
      57 lines of code
      5 parameters
      12 conditional paths
      uses function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) defined in com::google::code::facebookapi::BasicClient
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   function encodeMethods(List< BatchQuery >) in line 304
      10 lines of code
      1 parameters
      3 conditional paths
   function encodeMethods(List< BatchQuery >) in line 307
      10 lines of code
      1 parameters
      3 conditional paths
   function endPermissionsMode() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function endPermissionsMode() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function executeBatch(boolean) in line 265
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses function q((null),(null)) defined in jquery.min.js
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses function batch_run(String,boolean) defined in com::google::code::facebookapi::BasicClient
   function executeBatch(boolean) in line 268
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
      uses function q((null),(null)) defined in jquery.min.js
      uses variable queries defined in com::google::code::facebookapi::BasicClient
      uses function batch_run(String,boolean) defined in com::google::code::facebookapi::BasicClient
      uses function encodeMethods(List< BatchQuery >) defined in com::google::code::facebookapi::BasicClient
   function getApiKey() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function getApiKey() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
   function getQueries() in line 48
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function getQueries() in line 48
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable queries defined in com::google::code::facebookapi::BasicClient
   function getSecret() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function getSecret() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function getSessionKey() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function getSessionKey() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function isBatchMode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
   function isBatchMode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable batchMode defined in com::google::code::facebookapi::BasicClient
   function isSessionSecret() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function isSessionSecret() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 159
      38 lines of code
      3 parameters
      7 conditional paths
      uses function p((null)) defined in jquery.min.js
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable permissionsApiKey defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function prepareRequestParams(String,IFacebookMethod,Collection< Pair< String, CharSequence >>) in line 159
      41 lines of code
      3 parameters
      8 conditional paths
      uses variable permissionsApiKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses function p((null)) defined in jquery.min.js
      uses variable log defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
   function setServerUrl(String) in line 103
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
   function setServerUrl(String) in line 103
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
   function setServerUrlHttps(String) in line 117
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
   function setServerUrlHttps(String) in line 117
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
   function setSessionKey(String) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSessionKey(String) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function BasicClient(String,String,boolean) in line 52
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function BasicClient(String,String,boolean,String) in line 56
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function BasicClient(URL,URL,String,String,boolean,String,CommunicationStrategy) in line 60
      13 lines of code
      7 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   function BasicClient(String,String,boolean) in line 52
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
   function BasicClient(String,String,boolean,String) in line 56
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
   function BasicClient(URL,URL,String,String,boolean,String,CommunicationStrategy) in line 60
      13 lines of code
      7 parameters
      1 conditional paths
      uses variable sessionKey defined in com::google::code::facebookapi::BasicClient
      uses variable apiKey defined in com::google::code::facebookapi::BasicClient
      uses variable secret defined in com::google::code::facebookapi::BasicClient
      uses variable sessionSecret defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrl defined in com::google::code::facebookapi::BasicClient
      uses variable serverUrlHttps defined in com::google::code::facebookapi::BasicClient
      uses variable communicationStrategy defined in com::google::code::facebookapi::BasicClient
   variable apiKey in line 34
   variable batchMode in line 40
   variable communicationStrategy in line 32
   variable CRLF in line 26
   variable log in line 24
   variable permissionsApiKey in line 42
   variable PREF in line 27
   variable queries in line 41
   variable secret in line 35
   variable serverUrl in line 30
   variable serverUrlHttps in line 31
   variable sessionKey in line 38
   variable sessionSecret in line 36
   variable UPLOAD_BUFFER_SIZE in line 28
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/EPerm_v0.java
module Test
   variable f1 in line 3
      protection public
   variable f2 in line 5
      protection public
   variable f3 in line 7
      protection public
   variable f4 in line 9
      protection public
   variable f5 in line 11
      protection public
   variable f6 in line 13
      protection public
   variable T1 in line 3
      protection public
   variable T2 in line 5
      protection public
   variable T3 in line 3
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/EPerm_v1.java
module Test
   variable f1 in line 3
      protection public
   variable f2 in line 5
      protection public
   variable f3 in line 7
      protection public
   variable f4 in line 9
      protection public
   variable f5 in line 11
      protection public
   variable f6 in line 13
      protection public
   variable T1 in line 3
      protection public
   variable T2 in line 5
      protection public
   variable T3 in line 3
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/Inventory_287c56f97631_5ff114b22264_v0.java
module org::rsbuddy::tabs::Inventory
   function clickSelectedItem(boolean) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSelectedItem() defined in org::rsbuddy::tabs::Inventory
   function clickSelectedItem(boolean) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function clickSelectedItem() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clickSelectedItem() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function contains(int) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function contains(int) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsAll(int...) in line 80
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function containsAll(int...) in line 81
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function containsOneOf(int...) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function containsOneOf(int...) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function drag(int,int) in line 108
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function drag(int,int) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function drag(Item,int) in line 120
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function drag(Item,int) in line 121
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
   function dragItem(int,int) in line 151
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function dragItem(int,int) in line 152
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function dragItem(Item,int) in line 164
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function dragItem(Item,int) in line 165
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
   function dropAllExcept(boolean,int...) in line 194
      protection public
      32 lines of code
      2 parameters
      11 conditional paths
      uses function getCountExcept(int...) defined in org::rsbuddy::tabs::Inventory
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function getAllItems() defined in org::rsbuddy::tabs::Inventory
      uses function dropItem(int,int) defined in org::rsbuddy::tabs::Inventory
   function dropAllExcept(boolean,int...) in line 195
      protection public
      32 lines of code
      2 parameters
      11 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function dropAllExcept(int...) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function dropAllExcept(boolean,int...) defined in org::rsbuddy::tabs::Inventory
   function dropAllExcept(int...) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function dropItem(int,int) in line 244
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getAllItems() defined in org::rsbuddy::tabs::Inventory
      uses function p((null)) defined in jquery.min.js
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function dropItem(int,int) in line 245
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
   function getAllItems() in line 466
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function getAllItems() in line 482
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function getCachedItems() in line 269
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
      uses function getItemId(String) defined in org::rsbuddy::tabs::Inventory
   function getCachedItems() in line 270
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function getComponent() in line 291
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable ALT_WIDGETS defined in org::rsbuddy::tabs::Inventory
      uses function openTab() defined in org::rsbuddy::tabs::Inventory
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
   function getComponent() in line 292
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable ALT_WIDGETS defined in org::rsbuddy::tabs::Inventory
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
   function getCount() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount() in line 312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount(boolean) in line 322
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getCount(boolean) in line 323
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
   function getCount(int...) in line 344
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCount() defined in org::rsbuddy::tabs::Inventory
   function getCount(int...) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCount(boolean,int...) in line 357
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getCount(boolean,int...) in line 358
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
   function getCountExcept(int...) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCountExcept(int...) in line 380
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCountExcept(boolean,int...) in line 392
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getCountExcept(boolean,int...) in line 393
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
   function getItem(int...) in line 416
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getItem(int...) in line 417
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getItem(final Filter< Item >) in line 433
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getItemAt(int) in line 432
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function getItemAt(int) in line 448
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getItemId(String) in line 508
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getItemId(String) in line 558
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getItems() in line 443
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
      uses function getItemId(String) defined in org::rsbuddy::tabs::Inventory
   function getItems() in line 459
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
   function getItems(int...) in line 486
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getItems(final Filter< Item >) in line 502
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function getItems(final int...) in line 520
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function getItems(final String...) in line 539
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function getSelectedItem() in line 528
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getSelectedItemIndex() defined in org::rsbuddy::tabs::Inventory
      uses function getItemAt(int) defined in org::rsbuddy::tabs::Inventory
   function getSelectedItem() in line 573
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getSelectedItemIndex() in line 539
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getSelectedItemIndex() in line 584
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
   function indexOf(int) in line 560
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function indexOf(String) in line 577
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function indexOf(int) in line 605
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function indexOf(String) in line 622
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function isFull() in line 594
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCount() defined in org::rsbuddy::tabs::Inventory
   function isFull() in line 639
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isItemSelected() in line 604
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSelectedItemIndex() defined in org::rsbuddy::tabs::Inventory
   function isItemSelected() in line 649
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openTab() in line 611
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function openTab() in line 656
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function useItem(Item,Item) in line 626
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function useItem(Item,GameObject) in line 638
      protection public
      38 lines of code
      2 parameters
      11 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function isItemSelected() defined in org::rsbuddy::tabs::Inventory
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function useItem(Item,Item) in line 671
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function useItem(Item,GameObject) in line 683
      protection public
      38 lines of code
      2 parameters
      11 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function useItem(Item,Object) in line 687
      40 lines of code
      2 parameters
      12 conditional paths
      uses function isItemSelected() defined in org::rsbuddy::tabs::Inventory
      uses function getSelectedItem() defined in org::rsbuddy::tabs::Inventory
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function useItem(Item,Object) in line 732
      40 lines of code
      2 parameters
      12 conditional paths
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses variable e defined in jquery.min.js
   variable ALT_WIDGETS in line 30
      protection public
   variable WIDGET in line 21
      protection public
   variable WIDGET_BANK in line 24
      protection public
   variable WIDGET_BEAST_OF_BURDEN_STORAGE in line 28
      protection public
   variable WIDGET_DUNGEONEERING_SHOP in line 27
      protection public
   variable WIDGET_EQUIPMENT_BONUSES in line 23
      protection public
   variable WIDGET_EXCHANGE in line 25
      protection public
   variable WIDGET_PRICE_CHECK in line 22
      protection public
   variable WIDGET_SHOP in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/Inventory_287c56f97631_5ff114b22264_v1.java
module org::rsbuddy::tabs::Inventory
   function clickSelectedItem(boolean) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSelectedItem() defined in org::rsbuddy::tabs::Inventory
   function clickSelectedItem(boolean) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function clickSelectedItem() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clickSelectedItem() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function contains(int) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function contains(int) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsAll(int...) in line 80
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function containsAll(int...) in line 81
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function containsOneOf(int...) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function containsOneOf(int...) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function drag(int,int) in line 108
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function drag(int,int) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function drag(Item,int) in line 120
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function drag(Item,int) in line 121
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
   function dragItem(int,int) in line 151
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getItem(int...) defined in org::rsbuddy::tabs::Inventory
   function dragItem(int,int) in line 152
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function dragItem(Item,int) in line 164
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function dragItem(Item,int) in line 165
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
   function dropAllExcept(boolean,int...) in line 194
      protection public
      32 lines of code
      2 parameters
      11 conditional paths
      uses function getCountExcept(int...) defined in org::rsbuddy::tabs::Inventory
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function getAllItems() defined in org::rsbuddy::tabs::Inventory
      uses function dropItem(int,int) defined in org::rsbuddy::tabs::Inventory
   function dropAllExcept(boolean,int...) in line 195
      protection public
      32 lines of code
      2 parameters
      11 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function dropAllExcept(int...) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function dropAllExcept(boolean,int...) defined in org::rsbuddy::tabs::Inventory
   function dropAllExcept(int...) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function dropItem(int,int) in line 244
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getAllItems() defined in org::rsbuddy::tabs::Inventory
      uses function p((null)) defined in jquery.min.js
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function dropItem(int,int) in line 245
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function p((null)) defined in jquery.min.js
   function getAllItems() in line 466
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function getAllItems() in line 482
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function getCachedItems() in line 269
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
      uses function getItemId(String) defined in org::rsbuddy::tabs::Inventory
   function getCachedItems() in line 270
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function getComponent() in line 291
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable ALT_WIDGETS defined in org::rsbuddy::tabs::Inventory
      uses function openTab() defined in org::rsbuddy::tabs::Inventory
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
   function getComponent() in line 292
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable ALT_WIDGETS defined in org::rsbuddy::tabs::Inventory
      uses variable WIDGET defined in org::rsbuddy::tabs::Inventory
   function getCount() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount() in line 312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount(boolean) in line 322
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getCount(boolean) in line 323
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
   function getCount(int...) in line 344
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCount() defined in org::rsbuddy::tabs::Inventory
   function getCount(int...) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCount(boolean,int...) in line 357
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getCount(boolean,int...) in line 358
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
   function getCountExcept(int...) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCountExcept(int...) in line 380
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCountExcept(boolean,int...) in line 392
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getCountExcept(boolean,int...) in line 393
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
   function getItem(int...) in line 416
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getItem(int...) in line 417
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getItem(final Filter< Item >) in line 433
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getItemAt(int) in line 432
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
   function getItemAt(int) in line 448
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getItemId(String) in line 508
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getItemId(String) in line 558
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getItems() in line 443
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses function getComponent() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
      uses function getItemId(String) defined in org::rsbuddy::tabs::Inventory
   function getItems() in line 459
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
   function getItems(int...) in line 486
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getItems(final Filter< Item >) in line 502
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function getItems(final int...) in line 520
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function getItems(final String...) in line 539
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function getSelectedItem() in line 528
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getSelectedItemIndex() defined in org::rsbuddy::tabs::Inventory
      uses function getItemAt(int) defined in org::rsbuddy::tabs::Inventory
   function getSelectedItem() in line 573
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getSelectedItemIndex() in line 539
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
   function getSelectedItemIndex() in line 584
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
   function indexOf(int) in line 560
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function indexOf(String) in line 577
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses function getItems() defined in org::rsbuddy::tabs::Inventory
      uses variable i defined in jquery.min.js
   function indexOf(int) in line 605
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function indexOf(String) in line 622
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function isFull() in line 594
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCount() defined in org::rsbuddy::tabs::Inventory
   function isFull() in line 639
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isItemSelected() in line 604
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSelectedItemIndex() defined in org::rsbuddy::tabs::Inventory
   function isItemSelected() in line 649
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openTab() in line 611
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function openTab() in line 656
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function useItem(Item,Item) in line 626
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function useItem(Item,GameObject) in line 638
      protection public
      38 lines of code
      2 parameters
      11 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function isItemSelected() defined in org::rsbuddy::tabs::Inventory
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function useItem(Item,Item) in line 671
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function useItem(Item,GameObject) in line 683
      protection public
      38 lines of code
      2 parameters
      11 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function useItem(Item,Object) in line 687
      40 lines of code
      2 parameters
      12 conditional paths
      uses function isItemSelected() defined in org::rsbuddy::tabs::Inventory
      uses function getSelectedItem() defined in org::rsbuddy::tabs::Inventory
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses variable e defined in jquery.min.js
   function useItem(Item,Object) in line 732
      40 lines of code
      2 parameters
      12 conditional paths
      uses variable t defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
      uses variable k defined in jquery.min.js
      uses variable e defined in jquery.min.js
   variable ALT_WIDGETS in line 30
      protection public
   variable WIDGET in line 21
      protection public
   variable WIDGET_BANK in line 24
      protection public
   variable WIDGET_BEAST_OF_BURDEN_STORAGE in line 28
      protection public
   variable WIDGET_DUNGEONEERING_SHOP in line 27
      protection public
   variable WIDGET_EQUIPMENT_BONUSES in line 23
      protection public
   variable WIDGET_EXCHANGE in line 25
      protection public
   variable WIDGET_PRICE_CHECK in line 22
      protection public
   variable WIDGET_SHOP in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/jnamed_1.68_1.69_v0.java
module jnamed
   function addAdditional(Message,int) in line 255
      4 lines of code
      2 parameters
      46 conditional paths
      uses function addAdditional2(Message,int,int) defined in jnamed
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function addCacheNS(Message,Cache,Name) defined in jnamed
      uses function addSOA(Message,Zone) defined in jnamed
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function addNS(Message,Zone,int) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses function errorMessage(Message,short) defined in jnamed
      uses function formerrMessage(byte   []) defined in jnamed
      uses function truncate(Message,int,int) defined in jnamed
   function addAdditional2(Message,int,int) in line 225
      28 lines of code
      3 parameters
      53 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addGlue(Message,Name,int) defined in jnamed
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function addCacheNS(Message,Cache,Name) defined in jnamed
      uses function addSOA(Message,Zone) defined in jnamed
      uses variable e defined in jquery.min.js
      uses function addNS(Message,Zone,int) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses function errorMessage(Message,short) defined in jnamed
      uses function formerrMessage(byte   []) defined in jnamed
      uses function truncate(Message,int,int) defined in jnamed
   function addAdditional2(Message,int,int) in line 225
      28 lines of code
      3 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addGlue(Message,Name,int) defined in jnamed
   function addCacheNS(Message,Cache,Name) in line 204
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function addCacheNS(Message,Cache,Name) in line 204
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function addGlue(Message,Name,int) in line 217
      6 lines of code
      3 parameters
      2 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function findExactMatch(Name,short,short,boolean) defined in jnamed
   function addGlue(Message,Name,int) in line 217
      6 lines of code
      3 parameters
      2 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function findExactMatch(Name,short,short,boolean) defined in jnamed
   function addNS(Message,Zone,int) in line 197
      5 lines of code
      3 parameters
      1 conditional paths
   function addNS(Message,Zone,int) in line 197
      5 lines of code
      3 parameters
      1 conditional paths
   function addPrimaryZone(String,String) in line 98
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getCache(short) defined in jnamed
   function addPrimaryZone(String,String) in line 98
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getCache(short) defined in jnamed
   function addSecondaryZone(String,String) in line 108
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getCache(short) defined in jnamed
   function addSecondaryZone(String,String) in line 108
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getCache(short) defined in jnamed
   function addSOA(Message,Zone) in line 192
      3 lines of code
      2 parameters
      1 conditional paths
   function addSOA(Message,Zone) in line 192
      3 lines of code
      2 parameters
      1 conditional paths
   function addTCP(final InetAddress,final short) in line 664
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveTCP(InetAddress,short) defined in jnamed
   function addTCP(final InetAddress,final short) in line 666
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveTCP(InetAddress,short) defined in jnamed
   function addTSIG(String,String) in line 116
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addTSIG(String,String) in line 116
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addUDP(final InetAddress,final short) in line 672
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveUDP(InetAddress,short) defined in jnamed
   function addUDP(final InetAddress,final short) in line 674
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveUDP(InetAddress,short) defined in jnamed
   function errorMessage(Message,short) in line 559
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function errorMessage(Message,short) in line 561
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function findBestZone(Name) in line 132
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function findBestZone(Name) in line 132
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function findExactMatch(Name,short,short,boolean) in line 148
      protection public
      17 lines of code
      4 parameters
      12 conditional paths
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function findExactMatch(Name,short,short,boolean) in line 148
      protection public
      17 lines of code
      4 parameters
      12 conditional paths
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function formerrMessage(byte   []) in line 542
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function formerrMessage(byte   []) in line 544
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function getCache(short) in line 122
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
   function getCache(short) in line 122
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
   function main(String   []) in line 679
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses function jnamed(String) defined in jnamed
      uses variable e defined in jquery.min.js
   function main(String   []) in line 681
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses function jnamed(String) defined in jnamed
      uses variable e defined in jquery.min.js
   function serveTCP(InetAddress,short) in line 572
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function serveTCP(InetAddress,short) in line 574
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function serveUDP(InetAddress,short) in line 622
      protection public
      40 lines of code
      2 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function serveUDP(InetAddress,short) in line 624
      protection public
      40 lines of code
      2 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function truncate(Message,int,int) in line 520
      protection public
      20 lines of code
      3 parameters
      5 conditional paths
      uses function truncateSection(Message,int,int,int) defined in jnamed
   function truncate(Message,int,int) in line 522
      protection public
      20 lines of code
      3 parameters
      5 conditional paths
      uses function truncateSection(Message,int,int,int) defined in jnamed
   function truncateSection(Message,int,int,int) in line 492
      protection public
      26 lines of code
      4 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
   function truncateSection(Message,int,int,int) in line 494
      protection public
      26 lines of code
      4 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
   function jnamed(String) in line 20
      protection public
      76 lines of code
      1 parameters
      17 conditional paths
      uses variable e defined in jquery.min.js
      uses variable st defined in jquery.min.js
      uses function addPrimaryZone(String,String) defined in jnamed
      uses function addSecondaryZone(String,String) defined in jnamed
      uses function addTSIG(String,String) defined in jnamed
      uses function addUDP(final InetAddress,final short) defined in jnamed
      uses function addTCP(final InetAddress,final short) defined in jnamed
   function jnamed(String) in line 20
      protection public
      76 lines of code
      1 parameters
      17 conditional paths
      uses variable e defined in jquery.min.js
      uses variable st defined in jquery.min.js
      uses function addPrimaryZone(String,String) defined in jnamed
      uses function addSecondaryZone(String,String) defined in jnamed
      uses function addTSIG(String,String) defined in jnamed
      uses function addUDP(final InetAddress,final short) defined in jnamed
      uses function addTCP(final InetAddress,final short) defined in jnamed
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/jnamed_1.68_1.69_v1.java
module jnamed
   function addAdditional(Message,int) in line 255
      4 lines of code
      2 parameters
      46 conditional paths
      uses function addAdditional2(Message,int,int) defined in jnamed
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function addCacheNS(Message,Cache,Name) defined in jnamed
      uses function addSOA(Message,Zone) defined in jnamed
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function addNS(Message,Zone,int) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses function errorMessage(Message,short) defined in jnamed
      uses function formerrMessage(byte   []) defined in jnamed
      uses function truncate(Message,int,int) defined in jnamed
   function addAdditional2(Message,int,int) in line 225
      28 lines of code
      3 parameters
      53 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addGlue(Message,Name,int) defined in jnamed
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function addCacheNS(Message,Cache,Name) defined in jnamed
      uses function addSOA(Message,Zone) defined in jnamed
      uses variable e defined in jquery.min.js
      uses function addNS(Message,Zone,int) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses function errorMessage(Message,short) defined in jnamed
      uses function formerrMessage(byte   []) defined in jnamed
      uses function truncate(Message,int,int) defined in jnamed
   function addAdditional2(Message,int,int) in line 225
      28 lines of code
      3 parameters
      8 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function addGlue(Message,Name,int) defined in jnamed
   function addCacheNS(Message,Cache,Name) in line 204
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function addCacheNS(Message,Cache,Name) in line 204
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function addGlue(Message,Name,int) in line 217
      6 lines of code
      3 parameters
      2 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function findExactMatch(Name,short,short,boolean) defined in jnamed
   function addGlue(Message,Name,int) in line 217
      6 lines of code
      3 parameters
      2 conditional paths
      uses function a((null),(null),(null)) defined in jquery.min.js
      uses function findExactMatch(Name,short,short,boolean) defined in jnamed
   function addNS(Message,Zone,int) in line 197
      5 lines of code
      3 parameters
      1 conditional paths
   function addNS(Message,Zone,int) in line 197
      5 lines of code
      3 parameters
      1 conditional paths
   function addPrimaryZone(String,String) in line 98
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getCache(short) defined in jnamed
   function addPrimaryZone(String,String) in line 98
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getCache(short) defined in jnamed
   function addSecondaryZone(String,String) in line 108
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getCache(short) defined in jnamed
   function addSecondaryZone(String,String) in line 108
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getCache(short) defined in jnamed
   function addSOA(Message,Zone) in line 192
      3 lines of code
      2 parameters
      1 conditional paths
   function addSOA(Message,Zone) in line 192
      3 lines of code
      2 parameters
      1 conditional paths
   function addTCP(final InetAddress,final short) in line 664
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveTCP(InetAddress,short) defined in jnamed
   function addTCP(final InetAddress,final short) in line 666
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveTCP(InetAddress,short) defined in jnamed
   function addTSIG(String,String) in line 116
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addTSIG(String,String) in line 116
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addUDP(final InetAddress,final short) in line 672
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveUDP(InetAddress,short) defined in jnamed
   function addUDP(final InetAddress,final short) in line 674
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in jquery.min.js
      uses function serveUDP(InetAddress,short) defined in jnamed
   function errorMessage(Message,short) in line 559
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function errorMessage(Message,short) in line 561
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in jquery.min.js
   function findBestZone(Name) in line 132
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function findBestZone(Name) in line 132
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable i defined in jquery.min.js
   function findExactMatch(Name,short,short,boolean) in line 148
      protection public
      17 lines of code
      4 parameters
      12 conditional paths
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function findExactMatch(Name,short,short,boolean) in line 148
      protection public
      17 lines of code
      4 parameters
      12 conditional paths
      uses function findBestZone(Name) defined in jnamed
      uses function getCache(short) defined in jnamed
      uses function s((null)) defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable r defined in jquery.min.js
   function formerrMessage(byte   []) in line 542
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function formerrMessage(byte   []) in line 544
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
   function getCache(short) in line 122
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
   function getCache(short) in line 122
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function c((null),(null)) defined in jquery.min.js
   function main(String   []) in line 679
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses function jnamed(String) defined in jnamed
      uses variable e defined in jquery.min.js
   function main(String   []) in line 681
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses function jnamed(String) defined in jnamed
      uses variable e defined in jquery.min.js
   function serveTCP(InetAddress,short) in line 572
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function serveTCP(InetAddress,short) in line 574
      protection public
      48 lines of code
      2 parameters
      7 conditional paths
      uses function s((null)) defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function serveUDP(InetAddress,short) in line 622
      protection public
      40 lines of code
      2 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function serveUDP(InetAddress,short) in line 624
      protection public
      40 lines of code
      2 parameters
      7 conditional paths
      uses variable e defined in jquery.min.js
      uses function formerrMessage(byte   []) defined in jnamed
   function truncate(Message,int,int) in line 520
      protection public
      20 lines of code
      3 parameters
      5 conditional paths
      uses function truncateSection(Message,int,int,int) defined in jnamed
   function truncate(Message,int,int) in line 522
      protection public
      20 lines of code
      3 parameters
      5 conditional paths
      uses function truncateSection(Message,int,int,int) defined in jnamed
   function truncateSection(Message,int,int,int) in line 492
      protection public
      26 lines of code
      4 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
   function truncateSection(Message,int,int,int) in line 494
      protection public
      26 lines of code
      4 parameters
      5 conditional paths
      uses variable i defined in jquery.min.js
      uses variable r defined in jquery.min.js
      uses function j((null),(null),(null),(null)) defined in jquery.min.js
   function jnamed(String) in line 20
      protection public
      76 lines of code
      1 parameters
      17 conditional paths
      uses variable e defined in jquery.min.js
      uses variable st defined in jquery.min.js
      uses function addPrimaryZone(String,String) defined in jnamed
      uses function addSecondaryZone(String,String) defined in jnamed
      uses function addTSIG(String,String) defined in jnamed
      uses function addUDP(final InetAddress,final short) defined in jnamed
      uses function addTCP(final InetAddress,final short) defined in jnamed
   function jnamed(String) in line 20
      protection public
      76 lines of code
      1 parameters
      17 conditional paths
      uses variable e defined in jquery.min.js
      uses variable st defined in jquery.min.js
      uses function addPrimaryZone(String,String) defined in jnamed
      uses function addSecondaryZone(String,String) defined in jnamed
      uses function addTSIG(String,String) defined in jnamed
      uses function addUDP(final InetAddress,final short) defined in jnamed
      uses function addTCP(final InetAddress,final short) defined in jnamed
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/Perm_v0.java
module Test
   variable f1 in line 3
      protection public
   variable f2 in line 5
      protection public
   variable f3 in line 7
      protection public
   variable f4 in line 9
      protection public
   variable f5 in line 11
      protection public
   variable f6 in line 13
      protection public
   variable T1 in line 3
      protection public
   variable T2 in line 5
      protection public
   variable T3 in line 3
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/Perm_v1.java
module Test
   variable f1 in line 3
      protection public
   variable f2 in line 5
      protection public
   variable f3 in line 7
      protection public
   variable f4 in line 9
      protection public
   variable f5 in line 11
      protection public
   variable f6 in line 13
      protection public
   variable T1 in line 3
      protection public
   variable T2 in line 5
      protection public
   variable T3 in line 3
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/ResultsProducer_v0.java
module fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendCSS() in line 152
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendCSS() in line 167
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendHTMLHeader() in line 140
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendCSS() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendHTMLHeader() in line 154
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendCSS() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendRows(Set< Pair< String, String >>,String) in line 135
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function enc(String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendRows(Set< Pair< String, String >>,String) in line 149
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function enc(String) in line 175
      3 lines of code
      1 parameters
      1 conditional paths
      uses function s((null)) defined in jquery.min.js
   function enc(String) in line 208
      3 lines of code
      1 parameters
      1 conditional paths
      uses function s((null)) defined in jquery.min.js
   function handleRevision(long) in line 79
      protection public
      55 lines of code
      1 parameters
      5 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function D((null)) defined in jquery.min.js
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expValsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendRows(Set< Pair< String, String >>,String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function handleRevision(long) in line 88
      protection public
      60 lines of code
      1 parameters
      5 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function D((null)) defined in jquery.min.js
      uses variable ttime defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expMappingsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendRows(Set< Pair< String, String >>,String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function loadExpertData() in line 172
      35 lines of code
      0 parameters
      6 conditional paths
      uses variable expMappingsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expTransfsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable r defined in jquery.min.js
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable n defined in jquery.min.js
      uses function l() defined in jquery.min.js
   function loadExpValsMap() in line 157
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable expValsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable r defined in jquery.min.js
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function l() defined in jquery.min.js
   function main(String[]) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable r defined in jquery.min.js
      uses function ResultsProducer(String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function main(String[]) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable r defined in jquery.min.js
      uses function ResultsProducer(String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function run() in line 50
      protection public
      28 lines of code
      0 parameters
      3 conditional paths
      uses function loadExpValsMap() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendHTMLHeader() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expValsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function handleRevision(long) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable e defined in jquery.min.js
   function run() in line 54
      protection public
      33 lines of code
      0 parameters
      3 conditional paths
      uses function loadExpertData() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendHTMLHeader() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expMappingsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function handleRevision(long) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable ttime defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable e defined in jquery.min.js
   function ResultsProducer(String) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function ResultsProducer(String) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   variable CSVWriter in line 32
   variable expMappingsMap in line 36
   variable expTransfsMap in line 38
   variable expValsMap in line 36
   variable HTMLWriter in line 34
   variable nb in line 44
   variable rootPath in line 30
   variable texact in line 40
   variable texpert in line 42
   variable tfound in line 38
   variable ttime in line 46
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/ResultsProducer_v1.java
module fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendCSS() in line 152
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendCSS() in line 167
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendHTMLHeader() in line 140
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendCSS() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendHTMLHeader() in line 154
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendCSS() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendRows(Set< Pair< String, String >>,String) in line 135
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function enc(String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function appendRows(Set< Pair< String, String >>,String) in line 149
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function enc(String) in line 175
      3 lines of code
      1 parameters
      1 conditional paths
      uses function s((null)) defined in jquery.min.js
   function enc(String) in line 208
      3 lines of code
      1 parameters
      1 conditional paths
      uses function s((null)) defined in jquery.min.js
   function handleRevision(long) in line 79
      protection public
      55 lines of code
      1 parameters
      5 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function D((null)) defined in jquery.min.js
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expValsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendRows(Set< Pair< String, String >>,String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function handleRevision(long) in line 88
      protection public
      60 lines of code
      1 parameters
      5 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function D((null)) defined in jquery.min.js
      uses variable ttime defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expMappingsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendRows(Set< Pair< String, String >>,String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function loadExpertData() in line 172
      35 lines of code
      0 parameters
      6 conditional paths
      uses variable expMappingsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expTransfsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable r defined in jquery.min.js
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable n defined in jquery.min.js
      uses function l() defined in jquery.min.js
   function loadExpValsMap() in line 157
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable expValsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable r defined in jquery.min.js
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function l() defined in jquery.min.js
   function main(String[]) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable r defined in jquery.min.js
      uses function ResultsProducer(String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function main(String[]) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable r defined in jquery.min.js
      uses function ResultsProducer(String) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function run() in line 50
      protection public
      28 lines of code
      0 parameters
      3 conditional paths
      uses function loadExpValsMap() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendHTMLHeader() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expValsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function handleRevision(long) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable e defined in jquery.min.js
   function run() in line 54
      protection public
      33 lines of code
      0 parameters
      3 conditional paths
      uses function loadExpertData() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable CSVWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable HTMLWriter defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function appendHTMLHeader() defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable expMappingsMap defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses function handleRevision(long) defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texact defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable tfound defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable texpert defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable nb defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable ttime defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
      uses variable e defined in jquery.min.js
   function ResultsProducer(String) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   function ResultsProducer(String) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rootPath defined in fr::labri::vpraxis::refact::benchmark::ResultsProducer
   variable CSVWriter in line 32
   variable expMappingsMap in line 36
   variable expTransfsMap in line 38
   variable expValsMap in line 36
   variable HTMLWriter in line 34
   variable nb in line 44
   variable rootPath in line 30
   variable texact in line 40
   variable texpert in line 42
   variable tfound in line 38
   variable ttime in line 46
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/Slides_v0.java
module Test
   variable f1 in line 3
      protection public
   variable f2 in line 5
      protection public
   variable f3 in line 7
      protection public
   variable f4 in line 9
      protection public
   variable f5 in line 11
      protection public
   variable f6 in line 13
      protection public
   variable T1 in line 3
      protection public
   variable T2 in line 5
      protection public
   variable T3 in line 3
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/Slides_v1.java
module Test
   variable f1 in line 3
      protection public
   variable f2 in line 5
      protection public
   variable f3 in line 7
      protection public
   variable f4 in line 9
      protection public
   variable f5 in line 11
      protection public
   variable f6 in line 13
      protection public
   variable T1 in line 3
      protection public
   variable T2 in line 5
      protection public
   variable T3 in line 3
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/update_1.70_1.71_v0.java
module update
   function main(String) in line 680
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses function u() defined in jquery.min.js
      uses function update(InputStream) defined in update
   function main(String) in line 683
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses function u() defined in jquery.min.js
      uses function update(InputStream) defined in update
   function update(InputStream) in line 30
      protection public
      216 lines of code
      1 parameters
      120 conditional paths
      uses variable st defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function update(InputStream) in line 30
      protection public
      214 lines of code
      1 parameters
      119 conditional paths
      uses variable st defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/java/oldies/update_1.70_1.71_v1.java
module update
   function main(String) in line 680
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses function u() defined in jquery.min.js
      uses function update(InputStream) defined in update
   function main(String) in line 683
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in jquery.min.js
      uses function u() defined in jquery.min.js
      uses function update(InputStream) defined in update
   function update(InputStream) in line 30
      protection public
      216 lines of code
      1 parameters
      120 conditional paths
      uses variable st defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
   function update(InputStream) in line 30
      protection public
      214 lines of code
      1 parameters
      119 conditional paths
      uses variable st defined in jquery.min.js
      uses variable it defined in jquery.min.js
      uses variable e defined in jquery.min.js
      uses variable i defined in jquery.min.js
      uses function s((null)) defined in jquery.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/gumtree/gumtree-1.0.0/samples/php/hashids_src.php
module hashids
   function _consistent_shuffle((null),(null)) in line 207
      63 lines of code
      2 parameters
      10 conditional paths
      uses variable $alphabet defined in hashids
   function _decode((null)) in line 161
      45 lines of code
      1 parameters
      8 conditional paths
      uses variable $alphabet defined in hashids
      uses function _consistent_shuffle((null),(null)) defined in hashids
      uses function _unhash((null),(null)) defined in hashids
   function _encode((null),(null),(null),(null)) in line 86
      74 lines of code
      4 parameters
      10 conditional paths
      uses function _consistent_shuffle((null),(null)) defined in hashids
      uses variable $alphabet defined in hashids
      uses function _hash((null),(null)) defined in hashids
      uses variable $min_hash_length defined in hashids
   function _hash((null),(null)) in line 271
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable $alphabet defined in hashids
   function _unhash((null),(null)) in line 286
      19 lines of code
      2 parameters
      3 conditional paths
      uses variable $alphabet defined in hashids
   function decrypt((null)) in line 75
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function _decode((null)) defined in hashids
   function encrypt() in line 58
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function _encode((null),(null),(null),(null)) defined in hashids
   function __construct((null),(null),(null)) in line 19
      protection public
      38 lines of code
      3 parameters
      8 conditional paths
      uses variable $min_hash_length defined in hashids
      uses variable $alphabet defined in hashids
      uses function _consistent_shuffle((null),(null)) defined in hashids
   variable $alphabet in line 15
   variable $min_hash_length in line 17
   variable $primes in line 16
   variable $version in line 13
      protection public
