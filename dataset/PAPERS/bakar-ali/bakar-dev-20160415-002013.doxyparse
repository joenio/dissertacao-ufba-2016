file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-compiler/src/main/java/org/sireum/bakar/symbol/Mode.java
module org::sireum::bakar::symbol::Mode
   variable IN in line 4
      protection public
   variable IN_OUT in line 4
      protection public
   variable OUT in line 5
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-compiler/src/main/java/org/sireum/bakar/symbol/TestCaseMode.java
module org::sireum::bakar::symbol::TestCaseMode
   variable Nominal in line 4
      protection public
   variable Robustness in line 5
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/__init__.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/__init__.py
module email/__init__.py
   variable __version__ in line 7
   variable __all__ in line 9
   variable _LOWERNAMES in line 85
   variable _MIMENAMES in line 101
   variable importer in line 113
      protection public
   function message_from_string((null),(null),(null)) in line 51
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
   function message_from_file((null),(null),(null)) in line 60
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
module src::email::LazyImporter
   inherits from object
   function __getattr__((null),(null)) in line 78
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable __name__ defined in src::email::LazyImporter
   function __init__((null),(null)) in line 75
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable __name__ in line 76
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/__init__.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/test/__init__.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/__init__.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/__init__.py
module kiasan_v1/simplejson/__init__.py
   variable __version__ in line 102
   variable __all__ in line 103
   variable __author__ in line 109
   variable OrderedDict in line 122
      protection public
   variable _default_encoder in line 131
   variable _default_decoder in line 339
   function _import_OrderedDict() in line 115
      7 lines of code
      0 parameters
      1 conditional paths
   function _import_c_make_encoder() in line 124
      7 lines of code
      0 parameters
      1 conditional paths
   function dump((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 147
      protection public
      95 lines of code
      18 parameters
      1 conditional paths
      uses function dumps((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in kiasan_v1/simplejson/__init__.py
   function dumps((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 247
      protection public
      87 lines of code
      17 parameters
      1 conditional paths
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function load((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 343
      protection public
      54 lines of code
      12 parameters
      1 conditional paths
      uses function loads((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in kiasan_v1/simplejson/__init__.py
   function loads((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 400
      protection public
      71 lines of code
      10 parameters
      1 conditional paths
      uses function decode((null),(null)) defined in base64mime.py
   function _toggle_speedups((null)) in line 473
      35 lines of code
      1 parameters
      1 conditional paths
      uses function _import_c_make_encoder() defined in kiasan_v1/simplejson/__init__.py
   function simple_first((null)) in line 508
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/__init__.py
module kiasan_v1/simplejson/tests/__init__.py
   function additional_tests((null)) in line 26
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function all_tests_suite() in line 38
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function additional_tests((null)) defined in kiasan_v1/simplejson/tests/__init__.py
   function main() in line 67
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function all_tests_suite() defined in kiasan_v1/simplejson/tests/__init__.py
module src::kiasan_v1::simplejson::tests::OptionalExtensionTestSuite
   inherits from unittest::TestSuite
   function run((null),(null)) in line 7
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::tests::TestMissingSpeedups
   inherits from unittest::TestCase
   function runTest((null)) in line 20
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/__init__.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/test/__init__.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/_parseaddr.py
module _parseaddr.py
   variable __all__ in line 9
   variable SPACE in line 18
      protection public
   variable EMPTYSTRING in line 19
      protection public
   variable COMMASPACE in line 20
      protection public
   variable _monthnames in line 23
   variable _daynames in line 28
   variable _timezones in line 36
   function parsedate_tz((null)) in line 45
      protection public
      86 lines of code
      1 parameters
      1 conditional paths
   function parsedate((null)) in line 131
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function parsedate_tz((null)) defined in _parseaddr.py
   function mktime_tz((null)) in line 140
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function quote((null)) in line 150
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
module src::email::_parseaddr::AddrlistClass
   function getaddress((null)) in line 208
      protection public
      59 lines of code
      1 parameters
      1 conditional paths
      uses variable commentlist defined in src::email::_parseaddr::AddrlistClass
      uses function gotonext((null)) defined in src::email::_parseaddr::AddrlistClass
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses function getphraselist((null)) defined in src::email::_parseaddr::AddrlistClass
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses function getaddrspec((null)) defined in src::email::_parseaddr::AddrlistClass
      uses function getaddress((null)) defined in src::email::_parseaddr::AddrlistClass
      uses function getrouteaddr((null)) defined in src::email::_parseaddr::AddrlistClass
      uses variable specials defined in src::email::_parseaddr::AddrlistClass
   function getaddrlist((null)) in line 194
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses function getaddress((null)) defined in src::email::_parseaddr::AddrlistClass
   function getaddrspec((null)) in line 299
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
      uses function gotonext((null)) defined in src::email::_parseaddr::AddrlistClass
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses function getquote((null)) defined in src::email::_parseaddr::AddrlistClass
      uses variable atomends defined in src::email::_parseaddr::AddrlistClass
      uses function getatom((null),(null)) defined in src::email::_parseaddr::AddrlistClass
      uses function getdomain((null)) defined in src::email::_parseaddr::AddrlistClass
   function getatom((null),(null)) in line 392
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
      uses variable atomends defined in src::email::_parseaddr::AddrlistClass
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses variable field defined in src::email::_parseaddr::AddrlistClass
   function getcomment((null)) in line 384
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getdelimited((null),(null),(null),(null)) defined in src::email::_parseaddr::AddrlistClass
   function getdelimited((null),(null),(null),(null)) in line 343
      protection public
      37 lines of code
      4 parameters
      1 conditional paths
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses function getcomment((null)) defined in src::email::_parseaddr::AddrlistClass
   function getdomain((null)) in line 324
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses variable LWS defined in src::email::_parseaddr::AddrlistClass
      uses function getcomment((null)) defined in src::email::_parseaddr::AddrlistClass
      uses function getdomainliteral((null)) defined in src::email::_parseaddr::AddrlistClass
      uses variable atomends defined in src::email::_parseaddr::AddrlistClass
      uses function getatom((null),(null)) defined in src::email::_parseaddr::AddrlistClass
   function getdomainliteral((null)) in line 388
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getdelimited((null),(null),(null),(null)) defined in src::email::_parseaddr::AddrlistClass
   function getphraselist((null)) in line 412
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses variable FWS defined in src::email::_parseaddr::AddrlistClass
      uses function getquote((null)) defined in src::email::_parseaddr::AddrlistClass
      uses function getcomment((null)) defined in src::email::_parseaddr::AddrlistClass
      uses variable phraseends defined in src::email::_parseaddr::AddrlistClass
      uses function getatom((null),(null)) defined in src::email::_parseaddr::AddrlistClass
   function getquote((null)) in line 380
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getdelimited((null),(null),(null),(null)) defined in src::email::_parseaddr::AddrlistClass
   function getrouteaddr((null)) in line 267
      protection public
      32 lines of code
      1 parameters
      1 conditional paths
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses function gotonext((null)) defined in src::email::_parseaddr::AddrlistClass
      uses function getdomain((null)) defined in src::email::_parseaddr::AddrlistClass
      uses function getaddrspec((null)) defined in src::email::_parseaddr::AddrlistClass
   function gotonext((null)) in line 184
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable pos defined in src::email::_parseaddr::AddrlistClass
      uses variable field defined in src::email::_parseaddr::AddrlistClass
      uses variable LWS defined in src::email::_parseaddr::AddrlistClass
      uses function getcomment((null)) defined in src::email::_parseaddr::AddrlistClass
   function __init__((null),(null)) in line 165
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
   variable atomends in line 176
      protection public
   variable commentlist in line 182
      protection public
   variable CR in line 174
      protection public
   variable field in line 181
      protection public
   variable FWS in line 175
      protection public
   variable LWS in line 173
      protection public
   variable phraseends in line 180
      protection public
   variable pos in line 172
      protection public
   variable specials in line 171
      protection public
module src::email::_parseaddr::AddressList
   inherits from src::email::_parseaddr::AddrlistClass
   function __add__((null),(null)) in line 447
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable addresslist defined in src::email::_parseaddr::AddressList
   function __getitem__((null),(null)) in line 478
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable addresslist defined in src::email::_parseaddr::AddressList
   function __iadd__((null),(null)) in line 456
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable addresslist defined in src::email::_parseaddr::AddressList
   function __isub__((null),(null)) in line 471
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable addresslist defined in src::email::_parseaddr::AddressList
   function __len__((null)) in line 444
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable addresslist defined in src::email::_parseaddr::AddressList
   function __sub__((null),(null)) in line 463
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable addresslist defined in src::email::_parseaddr::AddressList
   function __init__((null),(null)) in line 437
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   variable addresslist in line 440
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/base64mime.py
module base64mime.py
   variable __all__ in line 27
   variable CRLF in line 42
      protection public
   variable NL in line 43
      protection public
   variable EMPTYSTRING in line 44
      protection public
   variable MISC_LEN in line 47
      protection public
   variable body_encode in line 155
      protection public
   variable encodestring in line 156
      protection public
   variable body_decode in line 182
      protection public
   variable decodestring in line 183
      protection public
   function base64_len((null)) in line 52
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function header_encode((null),(null),(null),(null),(null)) defined in base64mime.py
   function header_encode((null),(null),(null),(null),(null)) in line 64
      protection public
      57 lines of code
      5 parameters
      1 conditional paths
      uses function fix_eols((null)) defined in utils.py
   function encode((null),(null),(null),(null)) in line 122
      protection public
      33 lines of code
      4 parameters
      1 conditional paths
      uses function fix_eols((null)) defined in utils.py
   function decode((null),(null)) in line 160
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/charset.py
module charset.py
   variable __all__ in line 5
   variable QP in line 21
      protection public
   variable BASE64 in line 22
      protection public
   variable SHORTEST in line 23
      protection public
   variable MISC_LEN in line 26
      protection public
   variable DEFAULT_CHARSET in line 28
      protection public
   variable CHARSETS in line 33
      protection public
   function add_charset((null),(null),(null),(null)) in line 107
      protection public
      28 lines of code
      4 parameters
      1 conditional paths
   function add_alias((null),(null)) in line 135
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function add_codec((null),(null)) in line 144
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
module src::email::charset::Charset
   function __eq__((null),(null)) in line 237
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function __ne__((null),(null)) in line 240
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function __eq__((null),(null)) defined in src::email::charset::Charset
   function __str__((null)) in line 232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function body_encode((null),(null),(null)) in line 372
      protection public
      21 lines of code
      3 parameters
      1 conditional paths
      uses function convert((null),(null)) defined in src::email::charset::Charset
      uses variable body_encoding defined in src::email::charset::Charset
   function convert((null),(null)) in line 264
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable input_codec defined in src::email::charset::Charset
      uses variable output_codec defined in src::email::charset::Charset
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function encoded_header_len((null),(null)) in line 326
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
      uses function get_output_charset((null)) defined in src::email::charset::Charset
      uses variable header_encoding defined in src::email::charset::Charset
   function from_splittable((null),(null),(null)) in line 293
      protection public
      25 lines of code
      3 parameters
      1 conditional paths
      uses variable output_codec defined in src::email::charset::Charset
      uses variable input_codec defined in src::email::charset::Charset
   function get_body_encoding((null)) in line 243
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses variable body_encoding defined in src::email::charset::Charset
   function get_output_charset((null)) in line 318
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable output_charset defined in src::email::charset::Charset
      uses variable input_charset defined in src::email::charset::Charset
   function header_encode((null),(null),(null)) in line 341
      protection public
      31 lines of code
      3 parameters
      1 conditional paths
      uses function get_output_charset((null)) defined in src::email::charset::Charset
      uses function convert((null),(null)) defined in src::email::charset::Charset
      uses variable header_encoding defined in src::email::charset::Charset
   function to_splittable((null),(null)) in line 271
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
      uses variable input_codec defined in src::email::charset::Charset
   function __init__((null),(null)) in line 199
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
   variable __repr__ in line 235
   variable body_encoding in line 223
      protection public
   variable header_encoding in line 222
      protection public
   variable input_charset in line 213
      protection public
   variable input_codec in line 227
      protection public
   variable output_charset in line 224
      protection public
   variable output_codec in line 229
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/encoders.py
module encoders.py
   variable __all__ in line 7
   function _qencode((null)) in line 20
      6 lines of code
      1 parameters
      1 conditional paths
   function _bencode((null)) in line 26
      13 lines of code
      1 parameters
      1 conditional paths
   function encode_base64((null)) in line 39
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function _bencode((null)) defined in encoders.py
   function encode_quopri((null)) in line 51
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function _qencode((null)) defined in encoders.py
   function encode_7or8bit((null)) in line 63
      protection public
      24 lines of code
      1 parameters
      1 conditional paths
   function encode_noop((null)) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/errors.py
module src::email::errors::MessageError
   inherits from Exception
module src::email::errors::MessageParseError
   inherits from src::email::errors::MessageError
module src::email::errors::HeaderParseError
   inherits from src::email::errors::MessageParseError
module src::email::errors::BoundaryError
   inherits from src::email::errors::MessageParseError
module src::email::errors::MultipartConversionError
   inherits from src::email::errors::MessageError
   inherits from TypeError
module src::email::errors::CharsetError
   inherits from src::email::errors::MessageError
module src::email::errors::MessageDefect
   function __init__((null),(null)) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable line in line 39
      protection public
module src::email::errors::NoBoundaryInMultipartDefect
   inherits from src::email::errors::MessageDefect
module src::email::errors::StartBoundaryNotFoundDefect
   inherits from src::email::errors::MessageDefect
module src::email::errors::FirstHeaderLineIsContinuationDefect
   inherits from src::email::errors::MessageDefect
module src::email::errors::MisplacedEnvelopeHeaderDefect
   inherits from src::email::errors::MessageDefect
module src::email::errors::MalformedHeaderDefect
   inherits from src::email::errors::MessageDefect
module src::email::errors::MultipartInvariantViolationDefect
   inherits from src::email::errors::MessageDefect
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/feedparser.py
module feedparser.py
   variable __all__ in line 22
   variable NLCRE in line 29
      protection public
   variable NLCRE_bol in line 30
      protection public
   variable NLCRE_eol in line 31
      protection public
   variable NLCRE_crack in line 32
      protection public
   variable headerRE in line 35
      protection public
   variable EMPTYSTRING in line 36
      protection public
   variable NL in line 37
      protection public
   variable NeedMoreData in line 39
      protection public
module src::email::feedparser::BufferedSubFile
   inherits from object
   function __iter__((null)) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function close((null)) in line 67
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable _partial defined in src::email::feedparser::BufferedSubFile
      uses variable _closed defined in src::email::feedparser::BufferedSubFile
   function is_closed((null)) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _closed defined in src::email::feedparser::BufferedSubFile
   function next((null)) in line 129
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function readline((null)) defined in src::email::feedparser::BufferedSubFile
   function pop_eof_matcher((null)) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function push((null),(null)) in line 96
      protection public
      23 lines of code
      2 parameters
      1 conditional paths
      uses variable _partial defined in src::email::feedparser::BufferedSubFile
      uses function pushlines((null),(null)) defined in src::email::feedparser::BufferedSubFile
   function push_eof_matcher((null),(null)) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function pushlines((null),(null)) in line 119
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable _lines defined in src::email::feedparser::BufferedSubFile
   function readline((null)) in line 73
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
      uses variable _lines defined in src::email::feedparser::BufferedSubFile
      uses variable _closed defined in src::email::feedparser::BufferedSubFile
      uses variable _eofstack defined in src::email::feedparser::BufferedSubFile
   function unreadline((null),(null)) in line 91
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function __init__((null)) in line 51
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   variable _closed in line 59
   variable _eofstack in line 57
   variable _lines in line 55
   variable _partial in line 53
module src::email::feedparser::FeedParser
   function _call_parse((null)) in line 159
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable _parse defined in src::email::feedparser::FeedParser
   function _new_message((null)) in line 177
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable _factory defined in src::email::feedparser::FeedParser
      uses variable _cur defined in src::email::feedparser::FeedParser
      uses variable _msgstack defined in src::email::feedparser::FeedParser
      uses variable _last defined in src::email::feedparser::FeedParser
   function _parse_headers((null),(null)) in line 431
      55 lines of code
      2 parameters
      1 conditional paths
      uses variable _cur defined in src::email::feedparser::FeedParser
   function _parsegen((null)) in line 195
      236 lines of code
      1 parameters
      1 conditional paths
      uses function _new_message((null)) defined in src::email::feedparser::FeedParser
      uses variable _input defined in src::email::feedparser::FeedParser
      uses function _parse_headers((null),(null)) defined in src::email::feedparser::FeedParser
      uses variable _headersonly defined in src::email::feedparser::FeedParser
      uses function _parsegen((null)) defined in src::email::feedparser::FeedParser
      uses function _pop_message((null)) defined in src::email::feedparser::FeedParser
      uses variable _last defined in src::email::feedparser::FeedParser
      uses variable _cur defined in src::email::feedparser::FeedParser
   function _pop_message((null)) in line 187
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable _msgstack defined in src::email::feedparser::FeedParser
      uses variable _cur defined in src::email::feedparser::FeedParser
   function _set_headersonly((null)) in line 151
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _headersonly defined in src::email::feedparser::FeedParser
   function close((null)) in line 165
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function _call_parse((null)) defined in src::email::feedparser::FeedParser
      uses function _pop_message((null)) defined in src::email::feedparser::FeedParser
      uses variable _msgstack defined in src::email::feedparser::FeedParser
   function feed((null),(null)) in line 154
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function _call_parse((null)) defined in src::email::feedparser::FeedParser
   function __init__((null),(null)) in line 140
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   variable _cur in line 146
   variable _factory in line 142
   variable _headersonly in line 148
   variable _input in line 143
   variable _last in line 147
   variable _msgstack in line 144
   variable _parse in line 145
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/generator.py
module generator.py
   variable __all__ in line 6
   variable UNDERSCORE in line 17
      protection public
   variable NL in line 18
      protection public
   variable fcre in line 20
      protection public
   variable _FMT in line 289
   variable _width in line 348
   variable _fmt in line 349
   function _is8bitstring((null)) in line 22
      10 lines of code
      1 parameters
      1 conditional paths
   function _make_boundary((null)) in line 351
      17 lines of code
      1 parameters
      1 conditional paths
module src::email::generator::Generator
   function _dispatch((null),(null)) in line 120
      16 lines of code
      2 parameters
      1 conditional paths
      uses variable _writeBody defined in src::email::generator::Generator
   function _handle_message((null),(null)) in line 269
      20 lines of code
      2 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses function clone((null),(null)) defined in src::email::generator::Generator
   function _handle_message_delivery_status((null),(null)) in line 248
      21 lines of code
      2 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses function clone((null),(null)) defined in src::email::generator::Generator
   function _handle_multipart((null),(null)) in line 182
      55 lines of code
      2 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses function clone((null),(null)) defined in src::email::generator::Generator
      uses function _make_boundary((null)) defined in generator.py
      uses variable _fp defined in src::email::generator::Generator
   function _handle_multipart_signed((null),(null)) in line 237
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable _maxheaderlen defined in src::email::generator::Generator
      uses function _handle_multipart((null),(null)) defined in src::email::generator::Generator
   function _handle_text((null),(null)) in line 169
      10 lines of code
      2 parameters
      1 conditional paths
      uses variable _mangle_from_ defined in src::email::generator::Generator
   function _write((null),(null)) in line 93
      27 lines of code
      2 parameters
      1 conditional paths
      uses variable _fp defined in src::email::generator::Generator
      uses variable StringIO defined in compat.py
      uses function _dispatch((null),(null)) defined in src::email::generator::Generator
      uses function _write_headers((null),(null)) defined in src::email::generator::Generator
   function _write_headers((null),(null)) in line 140
      25 lines of code
      2 parameters
      1 conditional paths
      uses variable _fp defined in src::email::generator::Generator
      uses variable _maxheaderlen defined in src::email::generator::Generator
      uses function _is8bitstring((null)) defined in generator.py
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function clone((null),(null)) in line 85
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function __class__((null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function __class__((null)) defined in src::test::mock::NonCallableMock
      uses variable _mangle_from_ defined in src::email::generator::Generator
      uses variable _maxheaderlen defined in src::email::generator::Generator
   function flatten((null),(null),(null)) in line 67
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
      uses variable _fp defined in src::email::generator::Generator
      uses function _write((null),(null)) defined in src::email::generator::Generator
   function write((null),(null)) in line 63
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function __init__((null),(null),(null),(null)) in line 42
      protection public
      21 lines of code
      4 parameters
      1 conditional paths
   variable _fp in line 59
   variable _mangle_from_ in line 60
   variable _maxheaderlen in line 61
   variable _writeBody in line 180
module src::email::generator::DecodedGenerator
   inherits from src::email::generator::Generator
   function _dispatch((null),(null)) in line 325
      23 lines of code
      2 parameters
      1 conditional paths
      uses variable _fmt defined in src::email::generator::DecodedGenerator
   function __init__((null),(null),(null),(null),(null)) in line 297
      protection public
      28 lines of code
      5 parameters
      1 conditional paths
   variable _fmt in line 321
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/header.py
module header.py
   variable __all__ in line 7
   variable NL in line 22
      protection public
   variable SPACE in line 23
      protection public
   variable USPACE in line 24
      protection public
   variable SPACE8 in line 25
      protection public
   variable UEMPTYSTRING in line 26
      protection public
   variable MAXLINELEN in line 28
      protection public
   variable USASCII in line 30
      protection public
   variable UTF8 in line 31
      protection public
   variable ecre in line 34
      protection public
   variable fcre in line 48
      protection public
   variable _max_append in line 53
   function decode_header((null)) in line 57
      protection public
      57 lines of code
      1 parameters
      1 conditional paths
      uses function make_header((null),(null),(null),(null)) defined in header.py
   function make_header((null),(null),(null),(null)) in line 114
      protection public
      22 lines of code
      4 parameters
      1 conditional paths
   function _split_ascii((null),(null),(null),(null),(null)) in line 407
      70 lines of code
      5 parameters
      1 conditional paths
   function _binsplit((null),(null),(null)) in line 477
      28 lines of code
      3 parameters
      1 conditional paths
module src::email::header::Header
   function __eq__((null),(null)) in line 218
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function encode((null),(null)) defined in src::email::header::Header
   function __ne__((null),(null)) in line 223
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function __str__((null)) in line 191
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function encode((null),(null)) defined in src::email::header::Header
   function __unicode__((null)) in line 195
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses variable _chunks defined in src::email::header::Header
   function _encode_chunks((null),(null),(null)) in line 332
      35 lines of code
      3 parameters
      1 conditional paths
      uses variable _max_append defined in header.py
      uses variable _continuation_ws defined in src::email::header::Header
   function _split((null),(null),(null),(null),(null)) in line 281
      46 lines of code
      5 parameters
      1 conditional paths
      uses function _split_ascii((null),(null),(null),(null),(null)) defined in src::email::header::Header
      uses function _binsplit((null),(null),(null)) defined in header.py
      uses function _split((null),(null),(null),(null),(null)) defined in src::email::header::Header
      uses variable _maxlinelen defined in src::email::header::Header
   function _split_ascii((null),(null),(null),(null),(null)) in line 327
      5 lines of code
      5 parameters
      1 conditional paths
      uses variable _maxlinelen defined in src::email::header::Header
      uses variable _continuation_ws defined in src::email::header::Header
   function append((null),(null),(null),(null)) in line 226
      protection public
      55 lines of code
      4 parameters
      1 conditional paths
      uses variable _charset defined in src::email::header::Header
   function encode((null),(null)) in line 367
      protection public
      40 lines of code
      2 parameters
      1 conditional paths
      uses variable _firstlinelen defined in src::email::header::Header
      uses variable _chunks defined in src::email::header::Header
      uses function _split((null),(null),(null),(null),(null)) defined in src::email::header::Header
      uses function _encode_chunks((null),(null),(null)) defined in src::email::header::Header
   function __init__((null),(null),(null),(null),(null),(null),(null)) in line 138
      protection public
      51 lines of code
      7 parameters
      1 conditional paths
   variable _charset in line 170
   variable _chunks in line 174
   variable _continuation_ws in line 171
   variable _firstlinelen in line 182
   variable _maxlinelen in line 189
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/iterators.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/message.py
module message.py
   variable __all__ in line 7
   variable SEMISPACE in line 20
      protection public
   variable tspecials in line 24
      protection public
   function _splitparam((null)) in line 28
      10 lines of code
      1 parameters
      1 conditional paths
   function _formatparam((null),(null),(null)) in line 38
      22 lines of code
      3 parameters
      1 conditional paths
   function _parseparam((null)) in line 60
      18 lines of code
      1 parameters
      1 conditional paths
   function _unquotevalue((null)) in line 78
      12 lines of code
      1 parameters
      1 conditional paths
module src::email::message::Message
   function __contains__((null),(null)) in line 314
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function __delitem__((null),(null)) in line 302
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function __getitem__((null),(null)) in line 283
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function get((null),(null),(null)) defined in src::email::message::Message
   function __len__((null)) in line 279
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function __setitem__((null),(null),(null)) in line 294
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function __str__((null)) in line 116
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function as_string((null),(null)) defined in src::email::message::Message
   function _get_params_preserve((null),(null),(null)) in line 487
      21 lines of code
      3 parameters
      1 conditional paths
      uses function get((null),(null),(null)) defined in src::email::message::Message
      uses function _parseparam((null)) defined in message.py
   function add_header((null),(null),(null),(null)) in line 386
      protection public
      22 lines of code
      4 parameters
      1 conditional paths
      uses function _formatparam((null),(null),(null)) defined in message.py
   function as_string((null),(null)) in line 122
      protection public
      16 lines of code
      2 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function attach((null),(null)) in line 154
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses variable _payload defined in src::email::message::Message
   function del_param((null),(null),(null),(null)) in line 614
      protection public
      22 lines of code
      4 parameters
      1 conditional paths
      uses function has_key((null),(null)) defined in src::email::message::Message
      uses function get_params((null),(null),(null),(null)) defined in src::email::message::Message
      uses function _formatparam((null),(null),(null)) defined in message.py
      uses function get((null),(null),(null)) defined in src::email::message::Message
   function get((null),(null),(null)) in line 352
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function get_all((null),(null),(null)) in line 368
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function get_boundary((null),(null)) in line 684
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses function get_param((null),(null),(null),(null),(null)) defined in src::email::message::Message
   function get_charset((null)) in line 271
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable _charset defined in src::email::header::Header
      uses variable _charset defined in src::email::message::Message
   function get_charsets((null),(null)) in line 773
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
   function get_content_charset((null),(null)) in line 742
      protection public
      31 lines of code
      2 parameters
      1 conditional paths
      uses function get_param((null),(null),(null),(null),(null)) defined in src::email::message::Message
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function get_content_maintype((null)) in line 451
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function get_content_type((null)) defined in src::email::message::Message
   function get_content_subtype((null)) in line 460
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function get_content_type((null)) defined in src::email::message::Message
   function get_content_type((null)) in line 427
      protection public
      24 lines of code
      1 parameters
      1 conditional paths
      uses function get((null),(null),(null)) defined in src::email::message::Message
      uses function get_default_type((null)) defined in src::email::message::Message
      uses function _splitparam((null)) defined in message.py
   function get_default_type((null)) in line 469
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable _default_type defined in src::email::message::Message
   function get_filename((null),(null)) in line 668
      protection public
      16 lines of code
      2 parameters
      1 conditional paths
      uses function get_param((null),(null),(null),(null),(null)) defined in src::email::message::Message
   function get_param((null),(null),(null),(null),(null)) in line 530
      protection public
      35 lines of code
      5 parameters
      1 conditional paths
      uses function has_key((null),(null)) defined in src::email::message::Message
      uses function _get_params_preserve((null),(null),(null)) defined in src::email::message::Message
      uses function _unquotevalue((null)) defined in message.py
      uses function set_param((null),(null),(null),(null),(null),(null),(null)) defined in src::email::message::Message
   function get_params((null),(null),(null),(null)) in line 508
      protection public
      22 lines of code
      4 parameters
      1 conditional paths
      uses function _get_params_preserve((null),(null),(null)) defined in src::email::message::Message
      uses function _unquotevalue((null)) defined in message.py
      uses function get_param((null),(null),(null),(null),(null)) defined in src::email::message::Message
   function get_payload((null),(null),(null)) in line 166
      protection public
      50 lines of code
      3 parameters
      1 conditional paths
      uses variable _payload defined in src::email::message::Message
      uses function is_multipart((null)) defined in src::email::message::Message
      uses function get((null),(null),(null)) defined in src::email::message::Message
      uses variable StringIO defined in compat.py
   function get_unixfrom((null)) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _unixfrom defined in src::email::message::Message
   function has_key((null),(null)) in line 317
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function get((null),(null),(null)) defined in src::email::message::Message
   function is_multipart((null)) in line 138
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _payload defined in src::email::message::Message
   function items((null)) in line 342
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function keys((null)) in line 322
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function replace_header((null),(null),(null)) in line 408
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function set_boundary((null),(null)) in line 697
      protection public
      45 lines of code
      2 parameters
      1 conditional paths
      uses function _get_params_preserve((null),(null),(null)) defined in src::email::message::Message
      uses variable _headers defined in src::email::message::Message
   function set_charset((null),(null)) in line 226
      protection public
      45 lines of code
      2 parameters
      1 conditional paths
      uses function del_param((null),(null),(null),(null)) defined in src::email::message::Message
      uses variable _charset defined in src::email::header::Header
      uses variable _charset defined in src::email::message::Message
      uses function has_key((null),(null)) defined in src::email::message::Message
      uses function add_header((null),(null),(null),(null)) defined in src::email::message::Message
      uses function set_param((null),(null),(null),(null),(null),(null),(null)) defined in src::email::message::Message
      uses variable _payload defined in src::email::message::Message
   function set_default_type((null),(null)) in line 478
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable _default_type defined in src::email::message::Message
   function set_param((null),(null),(null),(null),(null),(null),(null)) in line 566
      protection public
      47 lines of code
      7 parameters
      1 conditional paths
      uses function has_key((null),(null)) defined in src::email::message::Message
      uses function get((null),(null),(null)) defined in src::email::message::Message
      uses function get_param((null),(null),(null),(null),(null)) defined in src::email::message::Message
      uses function _formatparam((null),(null),(null)) defined in message.py
      uses function get_params((null),(null),(null),(null)) defined in src::email::message::Message
   function set_payload((null),(null),(null)) in line 216
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
      uses variable _payload defined in src::email::message::Message
      uses function set_charset((null),(null)) defined in src::email::message::Message
   function set_type((null),(null),(null),(null)) in line 636
      protection public
      32 lines of code
      4 parameters
      1 conditional paths
      uses function has_key((null),(null)) defined in src::email::message::Message
      uses function get_params((null),(null),(null),(null)) defined in src::email::message::Message
      uses function set_param((null),(null),(null),(null),(null),(null),(null)) defined in src::email::message::Message
   function set_unixfrom((null),(null)) in line 145
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable _unixfrom defined in src::email::message::Message
   function values((null)) in line 332
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable _headers defined in src::email::message::Message
   function __init__((null)) in line 105
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   variable _charset in line 109
   variable _default_type in line 114
   variable _headers in line 106
   variable _payload in line 108
   variable _unixfrom in line 107
   variable defects in line 112
      protection public
   variable epilogue in line 111
      protection public
   variable preamble in line 111
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/message.py
module mime/message.py
   variable __all__ in line 7
module src::email::mime::message::MIMEMessage
   inherits from email::mime::nonmultipart::MIMENonMultipart
   function __init__((null),(null),(null)) in line 17
      protection public
      19 lines of code
      3 parameters
      1 conditional paths
      uses function set_default_type((null),(null)) defined in src::email::message::Message
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/application.py
module application.py
   variable __all__ in line 7
module src::email::mime::application::MIMEApplication
   inherits from email::mime::nonmultipart::MIMENonMultipart
   function __init__((null),(null),(null),(null),(null)) in line 16
      protection public
      21 lines of code
      5 parameters
      1 conditional paths
      uses function set_payload((null),(null),(null)) defined in src::email::message::Message
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/audio.py
module audio.py
   variable __all__ in line 7
   variable _sndhdr_MIMEmap in line 17
   function _whatsnd((null)) in line 25
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
module src::email::mime::audio::MIMEAudio
   inherits from email::mime::nonmultipart::MIMENonMultipart
   function __init__((null),(null),(null),(null),(null)) in line 45
      protection public
      29 lines of code
      5 parameters
      1 conditional paths
      uses function _whatsnd((null)) defined in audio.py
      uses function set_payload((null),(null),(null)) defined in src::email::message::Message
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/base.py
module base.py
   variable __all__ in line 7
module src::email::mime::base::MIMEBase
   inherits from src::email::message::Message
   function __init__((null),(null),(null),(null)) in line 16
      protection public
      12 lines of code
      4 parameters
      1 conditional paths
      uses function add_header((null),(null),(null),(null)) defined in src::email::message::Message
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/image.py
module image.py
   variable __all__ in line 7
module src::email::mime::image::MIMEImage
   inherits from email::mime::nonmultipart::MIMENonMultipart
   function __init__((null),(null),(null),(null),(null)) in line 19
      protection public
      28 lines of code
      5 parameters
      1 conditional paths
      uses function set_payload((null),(null),(null)) defined in src::email::message::Message
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/multipart.py
module multipart.py
   variable __all__ in line 7
module src::email::mime::multipart::MIMEMultipart
   inherits from email::mime::base::MIMEBase
   function __init__((null),(null),(null),(null),(null)) in line 16
      protection public
      32 lines of code
      5 parameters
      1 conditional paths
   variable _payload in line 41
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/nonmultipart.py
module nonmultipart.py
   variable __all__ in line 7
module src::email::mime::nonmultipart::MIMENonMultipart
   inherits from email::mime::base::MIMEBase
   function attach((null),(null)) in line 19
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   variable __pychecker__ in line 17
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/mime/text.py
module text.py
   variable __all__ in line 7
module src::email::mime::text::MIMEText
   inherits from email::mime::nonmultipart::MIMENonMultipart
   function __init__((null),(null),(null),(null)) in line 17
      protection public
      15 lines of code
      4 parameters
      1 conditional paths
      uses function set_payload((null),(null),(null)) defined in src::email::message::Message
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/parser.py
module parser.py
   variable __all__ in line 7
module src::email::parser::Parser
   function parse((null),(null),(null)) in line 56
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
      uses variable _class defined in src::email::parser::Parser
   function parsestr((null),(null),(null)) in line 74
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses function parse((null),(null),(null)) defined in src::email::parser::Parser
      uses variable StringIO defined in compat.py
   function __init__((null),(null),(null)) in line 18
      protection public
      38 lines of code
      3 parameters
      1 conditional paths
   variable _class in line 45
module src::email::parser::HeaderParser
   inherits from src::email::parser::Parser
   function parse((null),(null),(null)) in line 87
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function parsestr((null),(null),(null)) in line 90
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/quoprimime.py
module quoprimime.py
   variable __all__ in line 29
   variable CRLF in line 51
      protection public
   variable NL in line 52
      protection public
   variable MISC_LEN in line 55
      protection public
   variable hqre in line 57
      protection public
   variable bqre in line 58
      protection public
   variable body_encode in line 261
      protection public
   variable encodestring in line 262
      protection public
   variable body_decode in line 316
      protection public
   variable decodestring in line 317
      protection public
   function header_quopri_check((null)) in line 63
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function body_quopri_check((null)) in line 68
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function header_quopri_len((null)) in line 73
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function body_quopri_len((null)) in line 84
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function _max_append((null),(null),(null),(null)) in line 95
      9 lines of code
      4 parameters
      1 conditional paths
   function unquote((null)) in line 104
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function quote((null)) in line 109
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function header_encode((null),(null),(null),(null),(null)) defined in quoprimime.py
   function header_encode((null),(null),(null),(null),(null)) in line 114
      protection public
      63 lines of code
      5 parameters
      1 conditional paths
      uses function fix_eols((null)) defined in utils.py
      uses function _max_append((null),(null),(null),(null)) defined in quoprimime.py
   function encode((null),(null),(null),(null)) in line 178
      protection public
      83 lines of code
      4 parameters
      1 conditional paths
      uses function fix_eols((null)) defined in utils.py
      uses function quote((null)) defined in quoprimime.py
   function decode((null),(null)) in line 268
      protection public
      48 lines of code
      2 parameters
      1 conditional paths
      uses function unquote((null)) defined in quoprimime.py
   function _unquote_match((null)) in line 321
      7 lines of code
      1 parameters
      1 conditional paths
      uses function unquote((null)) defined in quoprimime.py
   function header_decode((null)) in line 328
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/test/test_email.py
module test_email.py
   variable NL in line 38
      protection public
   variable EMPTYSTRING in line 39
      protection public
   variable SPACE in line 40
      protection public
   variable defaultTest in line 3416
      protection public
   function openfile((null),(null)) in line 44
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function test_utf8_shortest((null)) in line 3005
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_bad_8bit_header((null)) in line 3012
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_encoded_adjacent_nonencoded((null)) in line 3023
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function make_header((null),(null),(null),(null)) defined in header.py
      uses function decode_header((null)) defined in header.py
   function test_whitespace_eater((null)) in line 3033
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
   function test_broken_base64_header((null)) in line 3042
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function _testclasses() in line 3397
      5 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 3402
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function _testclasses() defined in test_email.py
   function test_main() in line 3409
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function _testclasses() defined in test_email.py
module src::email::test::test_email::TestEmailBase
   inherits from unittest::TestCase
   function _msgobj((null),(null)) in line 62
      11 lines of code
      2 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function ndiffAssertEqual((null),(null),(null)) in line 52
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
module src::email::test::test_email::TestMessageAPI
   inherits from src::email::test::test_email::TestEmailBase
   function test__contains__((null)) in line 249
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_as_string((null)) in line 261
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function openfile((null),(null)) defined in test_email.py
   function test_bad_param((null)) in line 275
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_bogus_filename((null)) in line 283
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_broken_base64_payload((null)) in line 517
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_decode_bogus_uu_payload_quietly((null)) in line 223
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_decoded_generator((null)) in line 236
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function openfile((null),(null)) defined in test_email.py
      uses variable StringIO defined in compat.py
   function test_del_param((null)) in line 373
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_del_param_on_other_header((null)) in line 390
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_get_all((null)) in line 74
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_boundary((null)) in line 154
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_charsets((null)) in line 119
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_charset((null)) in line 525
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_maintype_error((null)) in line 490
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_maintype_from_message_explicit((null)) in line 453
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_maintype_from_message_implicit((null)) in line 449
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_maintype_from_message_text_plain_explicit((null)) in line 461
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_maintype_from_message_text_plain_implicit((null)) in line 457
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_maintype_missing((null)) in line 440
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_maintype_missing_with_default_type((null)) in line 444
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_subtype_error((null)) in line 495
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_subtype_from_message_explicit((null)) in line 478
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_subtype_from_message_implicit((null)) in line 474
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_subtype_from_message_text_plain_explicit((null)) in line 486
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_subtype_from_message_text_plain_implicit((null)) in line 482
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_subtype_missing((null)) in line 465
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_subtype_missing_with_default_type((null)) in line 469
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_type_from_message_explicit((null)) in line 427
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_type_from_message_implicit((null)) in line 422
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_type_from_message_text_plain_explicit((null)) in line 436
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_type_from_message_text_plain_implicit((null)) in line 432
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_content_type_missing((null)) in line 413
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_type_missing_with_default_type((null)) in line 417
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_decoded_payload((null)) in line 194
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_decoded_uu_payload((null)) in line 212
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_get_filename((null)) in line 136
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_filename_with_name_parameter((null)) in line 147
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_param((null)) in line 313
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_get_param_funky_continuation_lines((null)) in line 330
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_param_liberal((null)) in line 308
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_param_with_quotes((null)) in line 341
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_get_param_with_semis_in_quotes((null)) in line 334
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_get_params((null)) in line 292
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function test_getset_charset((null)) in line 80
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
   function test_has_key((null)) in line 349
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_message_rfc822_only((null)) in line 182
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
      uses variable StringIO defined in compat.py
   function test_missing_boundary((null)) in line 288
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_missing_filename((null)) in line 279
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_replace_header((null)) in line 500
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_set_boundary((null)) in line 160
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_set_charset_from_string((null)) in line 106
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_set_param((null)) in line 356
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_set_payload_with_charset((null)) in line 113
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_set_type((null)) in line 396
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_set_type_on_other_header((null)) in line 407
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email::TestEncoders
   inherits from unittest::TestCase
   function test_default_cte((null)) in line 542
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function test_encode_empty_payload((null)) in line 536
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email::TestLongHeaders
   inherits from src::email::test::test_email::TestEmailBase
   function test_another_long_almost_unsplittable_header((null)) in line 578
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_another_long_multiline_header((null)) in line 847
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_header_splitter((null)) in line 657
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_long_8bit_header((null)) in line 738
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_8bit_header_no_charset((null)) in line 751
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_field_name((null)) in line 790
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_header_encode((null)) in line 638
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_header_encode_with_tab_continuation((null)) in line 647
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_line_after_append((null)) in line 773
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_lines_with_different_header((null)) in line 859
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_nonstring((null)) in line 595
      protection public
      43 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
      uses variable StringIO defined in compat.py
   function test_long_received_header((null)) in line 802
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function test_long_to_header((null)) in line 760
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_long_unbreakable_lines_with_continuation((null)) in line 831
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_no_semis_header_splitter((null)) in line 677
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_no_split_long_header((null)) in line 693
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_shorter_line_with_append((null)) in line 782
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_split_long_continuation((null)) in line 558
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_splitting_first_line_only_is_long((null)) in line 722
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_splitting_multiple_long_lines((null)) in line 700
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_string_headerinst_eq((null)) in line 817
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email::TestFromMangling
   inherits from unittest::TestCase
   function setUp((null)) in line 879
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_dont_mangle_from((null)) in line 898
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses variable msg defined in src::email::test::test_email::TestFromMangling
   function test_mangled_from((null)) in line 887
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses variable msg defined in src::email::test::test_email::TestFromMangling
   variable msg in line 880
      protection public
module src::email::test::test_email::TestMIMEAudio
   inherits from unittest::TestCase
   function setUp((null)) in line 913
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function test_add_header((null)) in line 938
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable _au defined in src::email::test::test_email::TestMIMEAudio
   function test_checkSetMinor((null)) in line 934
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _audiodata defined in src::email::test::test_email::TestMIMEAudio
   function test_encoding((null)) in line 930
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _audiodata defined in src::email::test::test_email::TestMIMEAudio
   function test_guess_minor_type((null)) in line 927
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable _au in line 925
   variable _audiodata in line 922
module src::email::test::test_email::TestMIMEImage
   inherits from unittest::TestCase
   function setUp((null)) in line 962
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_add_header((null)) in line 981
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable _im defined in src::email::test::test_email::TestMIMEImage
   function test_checkSetMinor((null)) in line 977
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _imgdata defined in src::email::test::test_email::TestMIMEImage
   function test_encoding((null)) in line 973
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _imgdata defined in src::email::test::test_email::TestMIMEImage
   function test_guess_minor_type((null)) in line 970
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable _im in line 968
   variable _imgdata in line 965
module src::email::test::test_email::TestMIMEText
   inherits from unittest::TestCase
   function setUp((null)) in line 1005
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test_7bit_unicode_input((null)) in line 1028
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_7bit_unicode_input_no_charset((null)) in line 1034
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_8bit_unicode_input((null)) in line 1041
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_8bit_unicode_input_no_charset((null)) in line 1049
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_charset((null)) in line 1022
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_payload((null)) in line 1018
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_types((null)) in line 1008
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   variable _msg in line 1006
module src::email::test::test_email::TestMultipart
   inherits from src::email::test::test_email::TestEmailBase
   function setUp((null)) in line 1057
      protection public
      40 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_boundary_in_non_multipart((null)) in line 1384
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_boundary_with_leading_space((null)) in line 1399
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function test_boundary_without_trailing_newline((null)) in line 1418
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_double_boundary((null)) in line 1341
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_empty_multipart_idempotent((null)) in line 1116
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_hierarchy((null)) in line 1097
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable _msg defined in src::email::test::test_email::TestMIMEText
      uses variable _msg defined in src::email::test::test_email::TestMultipart
      uses variable _txt defined in src::email::test::test_email::TestMultipart
      uses variable _im defined in src::email::test::test_email::TestMIMEImage
      uses variable _im defined in src::email::test::test_email::TestMultipart
   function test_message_external_body((null)) in line 1328
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_nested_inner_contains_outer_boundary((null)) in line 1348
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_nested_with_same_boundary((null)) in line 1367
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_no_parts_in_a_multipart_with_empty_epilogue((null)) in line 1150
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_no_parts_in_a_multipart_with_none_epilogue((null)) in line 1133
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_one_part_in_a_multipart((null)) in line 1171
      protection public
      24 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_seq_parts_in_a_multipart_with_empty_epilogue((null)) in line 1274
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_seq_parts_in_a_multipart_with_empty_preamble((null)) in line 1195
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_seq_parts_in_a_multipart_with_nl_epilogue((null)) in line 1301
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_seq_parts_in_a_multipart_with_none_epilogue((null)) in line 1248
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_seq_parts_in_a_multipart_with_none_preamble((null)) in line 1222
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   variable _im in line 1094
   variable _msg in line 1093
   variable _txt in line 1095
module src::email::test::test_email::TestNonConformant
   inherits from src::email::test::test_email::TestEmailBase
   function test_first_line_is_continuation_header((null)) in line 1535
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function test_invalid_content_type((null)) in line 1462
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_lying_multipart((null)) in line 1511
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_missing_start_boundary((null)) in line 1520
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_multipart_no_boundary((null)) in line 1453
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_no_separating_blank_line((null)) in line 1500
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_no_start_boundary((null)) in line 1483
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_parse_missing_minor_type((null)) in line 1436
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_same_boundary_inner_outer((null)) in line 1443
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
module src::email::test::test_email::TestRFC2047
   inherits from unittest::TestCase
   function test_rfc2047_multiline((null)) in line 1551
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
   function test_rfc2047_with_whitespace((null)) in line 1587
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
   function test_rfc2047_without_whitespace((null)) in line 1582
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
   function test_whitespace_eater_unicode((null)) in line 1565
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function test_whitespace_eater_unicode_2((null)) in line 1573
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
module src::email::test::test_email::TestMIMEMessage
   inherits from src::email::test::test_email::TestEmailBase
   function setUp((null)) in line 1598
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_bad_multipart((null)) in line 1623
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_default_multipart_constructor((null)) in line 1904
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_default_type((null)) in line 1781
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_default_type_non_parsed((null)) in line 1821
      protection public
      74 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_default_type_with_explicit_container_type((null)) in line 1801
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_dsn((null)) in line 1665
      protection public
      58 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_epilogue((null)) in line 1723
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function openfile((null),(null)) defined in test_email.py
      uses variable StringIO defined in compat.py
   function test_generate((null)) in line 1632
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_mime_attachments_in_constructor((null)) in line 1895
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_no_nl_preamble((null)) in line 1746
      protection public
      35 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_parse_message_rfc822((null)) in line 1652
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_type_error((null)) in line 1605
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test_valid_argument((null)) in line 1608
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   variable _text in line 1601
module src::email::test::test_email::TestIdempotent
   inherits from src::email::test::test_email::TestEmailBase
   function _idempotent((null),(null),(null)) in line 1924
      7 lines of code
      3 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function _msgobj((null),(null)) in line 1915
      9 lines of code
      2 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_content_type((null)) in line 2015
      protection public
      32 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_dsn((null)) in line 1975
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_long_header((null)) in line 1959
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_message_external_body_idempotent((null)) in line 2011
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_MIME_digest((null)) in line 1955
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_MIME_digest_with_part_headers((null)) in line 1963
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_mixed_with_image((null)) in line 1967
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_more_rfc2231_parameters((null)) in line 1999
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_multipart_no_parts((null)) in line 1987
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_multipart_one_part((null)) in line 1983
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_multipart_report((null)) in line 1971
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_nested_multipart_mixeds((null)) in line 2007
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_no_start_boundary((null)) in line 1991
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_parse_text_message((null)) in line 1931
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_parse_untyped_message((null)) in line 1943
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_parser((null)) in line 2047
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_preamble_epilogue((null)) in line 1979
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_rfc2231_charset((null)) in line 1995
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_simple_multipart((null)) in line 1951
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
   function test_text_plain_in_a_multipart_digest((null)) in line 2003
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
module src::email::test::test_email::TestMiscellaneous
   inherits from src::email::test::test_email::TestEmailBase
   function test__all__((null)) in line 2141
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function test_charset_richcomparisons((null)) in line 2261
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function test_charsets_case_insensitive((null)) in line 2341
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_escape_backslashes((null)) in line 2225
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_escape_dump((null)) in line 2217
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_fix_eols((null)) in line 2253
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_formatdate((null)) in line 2159
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_formatdate_localtime((null)) in line 2164
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_formatdate_usegmt((null)) in line 2170
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_get_body_encoding_with_bogus_charset((null)) in line 2311
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_body_encoding_with_uppercase_charset((null)) in line 2315
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
   function test_getaddresses((null)) in line 2281
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_getaddresses_embedded_comment((null)) in line 2298
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_getaddresses_nasty((null)) in line 2288
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_message_from_file((null)) in line 2082
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
      uses variable StringIO defined in compat.py
   function test_message_from_file_with_class((null)) in line 2120
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
   function test_message_from_string((null)) in line 2068
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
      uses variable StringIO defined in compat.py
   function test_message_from_string_with_class((null)) in line 2097
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_multiline_from_comment((null)) in line 2242
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_name_with_dot((null)) in line 2233
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_noquote_dump((null)) in line 2212
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parseaddr_empty((null)) in line 2208
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_acceptable_to_time_functions((null)) in line 2197
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_compact((null)) in line 2182
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_compact_no_dayofweek((null)) in line 2192
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_no_dayofweek((null)) in line 2187
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_none((null)) in line 2179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test_partial_falls_inside_message_delivery_status((null)) in line 2346
      protection public
      45 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_quote_dump((null)) in line 2248
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_utils_quote_unquote((null)) in line 2304
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email::TestIterators
   inherits from src::email::test::test_email::TestEmailBase
   function test_body_line_iterator((null)) in line 2392
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function openfile((null),(null)) defined in test_email.py
   function test_pushCR_LF((null)) in line 2448
      protection public
      35 lines of code
      1 parameters
      1 conditional paths
   function test_typed_subpart_iterator((null)) in line 2412
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_typed_subpart_iterator_default_type((null)) in line 2429
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
module src::email::test::test_email::TestParsers
   inherits from src::email::test::test_email::TestEmailBase
   function test_crlf_separation((null)) in line 2534
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_CRLFLF_at_end_of_part((null)) in line 2626
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function test_header_parser((null)) in line 2484
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function test_multipart_digest_with_extra_mime_headers((null)) in line 2548
      protection public
      34 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function openfile((null),(null)) defined in test_email.py
   function test_rfc2822_header_syntax((null)) in line 2601
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2822_one_character_header((null)) in line 2617
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2822_space_not_allowed_in_header((null)) in line 2611
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_strip_line_feed_and_carriage_return_in_headers((null)) in line 2590
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_three_lines((null)) in line 2582
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_whitespace_continuation((null)) in line 2498
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function test_whitespace_continuation_last_header((null)) in line 2516
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email::TestBase64
   inherits from unittest::TestCase
   function test_decode((null)) in line 2660
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_encode((null)) in line 2667
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
   function test_header_encode((null)) in line 2689
      protection public
      29 lines of code
      1 parameters
      1 conditional paths
   function test_len((null)) in line 2647
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email::TestQuopri
   inherits from unittest::TestCase
   function setUp((null)) in line 2719
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_body_quopri_check((null)) in line 2737
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable blit defined in src::email::test::test_email::TestQuopri
      uses variable bnon defined in src::email::test::test_email::TestQuopri
   function test_body_quopri_len((null)) in line 2755
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable blit defined in src::email::test::test_email::TestQuopri
      uses variable bnon defined in src::email::test::test_email::TestQuopri
   function test_decode((null)) in line 2794
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_encode((null)) in line 2801
      protection public
      28 lines of code
      1 parameters
      1 conditional paths
   function test_header_encode((null)) in line 2768
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
   function test_header_quopri_check((null)) in line 2731
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable hlit defined in src::email::test::test_email::TestQuopri
      uses variable hnon defined in src::email::test::test_email::TestQuopri
   function test_header_quopri_len((null)) in line 2743
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable hlit defined in src::email::test::test_email::TestQuopri
      uses variable hnon defined in src::email::test::test_email::TestQuopri
   function test_quote_unquote_idempotent((null)) in line 2763
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable blit in line 2726
      protection public
   variable bnon in line 2728
      protection public
   variable hlit in line 2720
      protection public
   variable hnon in line 2724
      protection public
module src::email::test::test_email::TestCharset
   inherits from unittest::TestCase
   function tearDown((null)) in line 2830
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_body_encode((null)) in line 2849
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
   function test_idempotent((null)) in line 2837
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_unicode_charset_name((null)) in line 2879
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email::TestHeader
   inherits from src::email::test::test_email::TestEmailBase
   function test_explicit_maxlinelen((null)) in line 2968
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_header_ctor_default_args((null)) in line 2961
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_header_needs_no_decoding((null)) in line 2902
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
   function test_long((null)) in line 2906
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_multilingual((null)) in line 2912
      protection public
      49 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
   function test_simple((null)) in line 2888
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_simple_surprise((null)) in line 2895
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_string_charset((null)) in line 2990
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_us_ascii_header((null)) in line 2982
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
module src::email::test::test_email::TestRFC2231
   inherits from src::email::test::test_email::TestEmailBase
   function test_del_param((null)) in line 3096
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_get_param((null)) in line 3051
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_rfc2231_bad_character_in_charset((null)) in line 3242
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_bad_character_in_filename((null)) in line 3252
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_bad_encoding_in_charset((null)) in line 3232
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_bad_encoding_in_filename((null)) in line 3220
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_encoded_then_unencoded_segments((null)) in line 3329
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_get_content_charset((null)) in line 3126
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
   function test_rfc2231_no_extended_values((null)) in line 3320
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset((null)) in line 3131
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_boundary((null)) in line 3195
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_charset((null)) in line 3207
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_filename((null)) in line 3145
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_filename_encoded((null)) in line 3157
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_partly_encoded((null)) in line 3169
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_partly_nonencoded((null)) in line 3182
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_single_tick_in_filename((null)) in line 3286
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_single_tick_in_filename_extended((null)) in line 3273
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_tick_attack((null)) in line 3309
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_tick_attack_extended((null)) in line 3296
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_unencoded_then_encoded_segments((null)) in line 3344
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_unknown_encoding((null)) in line 3264
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_set_param((null)) in line 3059
      protection public
      37 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
module src::email::test::test_email::TestSigned
   inherits from src::email::test::test_email::TestEmailBase
   function _msg_and_obj((null),(null)) in line 3366
      9 lines of code
      2 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email.py
   function _signed_parts_eq((null),(null),(null)) in line 3375
      8 lines of code
      3 parameters
      1 conditional paths
   function test_long_headers_as_string((null)) in line 3383
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _msg_and_obj((null),(null)) defined in src::email::test::test_email::TestSigned
      uses function _signed_parts_eq((null),(null),(null)) defined in src::email::test::test_email::TestSigned
   function test_long_headers_flatten((null)) in line 3388
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function _msg_and_obj((null),(null)) defined in src::email::test::test_email::TestSigned
      uses variable StringIO defined in compat.py
      uses function _signed_parts_eq((null),(null),(null)) defined in src::email::test::test_email::TestSigned
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/test/test_email_codecs.py
module test_email_codecs.py
   variable defaultTest in line 77
      protection public
   function suite() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function test_main() in line 71
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
module src::email::test::test_email_codecs::TestEmailAsianCodecs
   inherits from email::test::test_email::TestEmailBase
   function test_japanese_codecs((null)) in line 23
      protection public
      32 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function decode_header((null)) defined in header.py
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function test_payload_encoding((null)) in line 55
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/test/test_email_codecs_renamed.py
module test_email_codecs_renamed.py
   variable defaultTest in line 77
      protection public
   function suite() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function test_main() in line 71
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
module src::email::test::test_email_codecs_renamed::TestEmailAsianCodecs
   inherits from email::test::test_email::TestEmailBase
   function test_japanese_codecs((null)) in line 23
      protection public
      32 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function decode_header((null)) defined in header.py
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function test_payload_encoding((null)) in line 55
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/test/test_email_renamed.py
module test_email_renamed.py
   variable NL in line 39
      protection public
   variable EMPTYSTRING in line 40
      protection public
   variable SPACE in line 41
      protection public
   variable defaultTest in line 3284
      protection public
   function openfile((null),(null)) in line 45
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function test_utf8_shortest((null)) in line 2909
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_bad_8bit_header((null)) in line 2916
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_encoded_adjacent_nonencoded((null)) in line 2927
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function make_header((null),(null),(null),(null)) defined in header.py
      uses function decode_header((null)) defined in header.py
   function test_whitespace_eater((null)) in line 2937
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
   function test_broken_base64_header((null)) in line 2946
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function _testclasses() in line 3265
      5 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 3270
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function _testclasses() defined in test_email_renamed.py
   function test_main() in line 3277
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function _testclasses() defined in test_email_renamed.py
module src::email::test::test_email_renamed::TestEmailBase
   inherits from unittest::TestCase
   function _msgobj((null),(null)) in line 63
      11 lines of code
      2 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function ndiffAssertEqual((null),(null),(null)) in line 53
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
module src::email::test::test_email_renamed::TestMessageAPI
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test__contains__((null)) in line 225
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_as_string((null)) in line 237
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_bad_param((null)) in line 251
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_bogus_filename((null)) in line 259
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_broken_base64_payload((null)) in line 485
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_decoded_generator((null)) in line 212
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function openfile((null),(null)) defined in test_email_renamed.py
      uses variable StringIO defined in compat.py
   function test_del_param((null)) in line 341
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_del_param_on_other_header((null)) in line 358
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_get_all((null)) in line 75
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_boundary((null)) in line 155
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_charsets((null)) in line 120
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_maintype_error((null)) in line 458
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_maintype_from_message_explicit((null)) in line 421
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_maintype_from_message_implicit((null)) in line 417
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_maintype_from_message_text_plain_explicit((null)) in line 429
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_maintype_from_message_text_plain_implicit((null)) in line 425
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_maintype_missing((null)) in line 408
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_maintype_missing_with_default_type((null)) in line 412
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_subtype_error((null)) in line 463
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_subtype_from_message_explicit((null)) in line 446
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_subtype_from_message_implicit((null)) in line 442
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_subtype_from_message_text_plain_explicit((null)) in line 454
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_subtype_from_message_text_plain_implicit((null)) in line 450
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_subtype_missing((null)) in line 433
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_subtype_missing_with_default_type((null)) in line 437
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_type_from_message_explicit((null)) in line 395
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_type_from_message_implicit((null)) in line 390
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_type_from_message_text_plain_explicit((null)) in line 404
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_type_from_message_text_plain_implicit((null)) in line 400
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_content_type_missing((null)) in line 381
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_content_type_missing_with_default_type((null)) in line 385
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_decoded_payload((null)) in line 183
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_decoded_uu_payload((null)) in line 201
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_get_filename((null)) in line 137
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_filename_with_name_parameter((null)) in line 148
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_param((null)) in line 289
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_get_param_funky_continuation_lines((null)) in line 306
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_param_liberal((null)) in line 284
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_get_param_with_semis_in_quotes((null)) in line 310
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_get_params((null)) in line 268
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function test_getset_charset((null)) in line 81
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
   function test_has_key((null)) in line 317
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_missing_boundary((null)) in line 264
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_missing_filename((null)) in line 255
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_replace_header((null)) in line 468
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_set_boundary((null)) in line 161
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_set_charset_from_string((null)) in line 107
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_set_param((null)) in line 324
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_set_payload_with_charset((null)) in line 114
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_set_type((null)) in line 364
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_set_type_on_other_header((null)) in line 375
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestEncoders
   inherits from unittest::TestCase
   function test_default_cte((null)) in line 503
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_default_cte((null)) in line 508
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function test_default_cte((null)) defined in src::email::test::test_email_renamed::TestEncoders
   function test_encode_empty_payload((null)) in line 497
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestLongHeaders
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test_another_long_almost_unsplittable_header((null)) in line 544
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_another_long_multiline_header((null)) in line 813
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_header_splitter((null)) in line 623
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_long_8bit_header((null)) in line 704
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_8bit_header_no_charset((null)) in line 717
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_field_name((null)) in line 756
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_header_encode((null)) in line 604
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_header_encode_with_tab_continuation((null)) in line 613
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_line_after_append((null)) in line 739
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_lines_with_different_header((null)) in line 825
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_nonstring((null)) in line 561
      protection public
      43 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
      uses variable StringIO defined in compat.py
   function test_long_received_header((null)) in line 768
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function test_long_to_header((null)) in line 726
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_long_unbreakable_lines_with_continuation((null)) in line 797
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_no_semis_header_splitter((null)) in line 643
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_no_split_long_header((null)) in line 659
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_shorter_line_with_append((null)) in line 748
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_split_long_continuation((null)) in line 524
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_splitting_first_line_only_is_long((null)) in line 688
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_splitting_multiple_long_lines((null)) in line 666
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_string_headerinst_eq((null)) in line 783
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestFromMangling
   inherits from unittest::TestCase
   function setUp((null)) in line 845
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_dont_mangle_from((null)) in line 864
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses variable msg defined in src::email::test::test_email::TestFromMangling
      uses variable msg defined in src::email::test::test_email_renamed::TestFromMangling
   function test_mangled_from((null)) in line 853
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses variable msg defined in src::email::test::test_email::TestFromMangling
      uses variable msg defined in src::email::test::test_email_renamed::TestFromMangling
   variable msg in line 846
      protection public
module src::email::test::test_email_renamed::TestMIMEAudio
   inherits from unittest::TestCase
   function setUp((null)) in line 879
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function test_add_header((null)) in line 904
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable _au defined in src::email::test::test_email::TestMIMEAudio
      uses variable _au defined in src::email::test::test_email_renamed::TestMIMEAudio
   function test_checkSetMinor((null)) in line 900
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _audiodata defined in src::email::test::test_email::TestMIMEAudio
      uses variable _audiodata defined in src::email::test::test_email_renamed::TestMIMEAudio
   function test_encoding((null)) in line 896
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _audiodata defined in src::email::test::test_email::TestMIMEAudio
      uses variable _audiodata defined in src::email::test::test_email_renamed::TestMIMEAudio
   function test_guess_minor_type((null)) in line 893
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable _au in line 891
   variable _audiodata in line 888
module src::email::test::test_email_renamed::TestMIMEImage
   inherits from unittest::TestCase
   function setUp((null)) in line 928
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_add_header((null)) in line 947
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable _im defined in src::email::test::test_email::TestMIMEImage
      uses variable _im defined in src::email::test::test_email::TestMultipart
      uses variable _im defined in src::email::test::test_email_renamed::TestMIMEImage
   function test_checkSetMinor((null)) in line 943
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _imgdata defined in src::email::test::test_email::TestMIMEImage
      uses variable _imgdata defined in src::email::test::test_email_renamed::TestMIMEImage
   function test_encoding((null)) in line 939
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable _imgdata defined in src::email::test::test_email::TestMIMEImage
      uses variable _imgdata defined in src::email::test::test_email_renamed::TestMIMEImage
   function test_guess_minor_type((null)) in line 936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable _im in line 934
   variable _imgdata in line 931
module src::email::test::test_email_renamed::TestMIMEApplication
   inherits from unittest::TestCase
   function test_body((null)) in line 977
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_headers((null)) in line 971
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestMIMEText
   inherits from unittest::TestCase
   function setUp((null)) in line 988
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test_charset((null)) in line 1005
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_payload((null)) in line 1001
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_types((null)) in line 991
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   variable _msg in line 989
module src::email::test::test_email_renamed::TestMultipart
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function setUp((null)) in line 1015
      protection public
      40 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_boundary_in_non_multipart((null)) in line 1342
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_boundary_with_leading_space((null)) in line 1357
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function test_boundary_without_trailing_newline((null)) in line 1376
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_double_boundary((null)) in line 1299
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_empty_multipart_idempotent((null)) in line 1074
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_hierarchy((null)) in line 1055
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable _msg defined in src::email::test::test_email::TestMIMEText
      uses variable _msg defined in src::email::test::test_email::TestMultipart
      uses variable _msg defined in src::email::test::test_email_renamed::TestMIMEText
      uses variable _msg defined in src::email::test::test_email_renamed::TestMultipart
      uses variable _txt defined in src::email::test::test_email::TestMultipart
      uses variable _txt defined in src::email::test::test_email_renamed::TestMultipart
      uses variable _im defined in src::email::test::test_email::TestMIMEImage
      uses variable _im defined in src::email::test::test_email::TestMultipart
      uses variable _im defined in src::email::test::test_email_renamed::TestMIMEImage
      uses variable _im defined in src::email::test::test_email_renamed::TestMultipart
   function test_message_external_body((null)) in line 1286
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_nested_inner_contains_outer_boundary((null)) in line 1306
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_nested_with_same_boundary((null)) in line 1325
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_no_parts_in_a_multipart_with_empty_epilogue((null)) in line 1108
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_no_parts_in_a_multipart_with_none_epilogue((null)) in line 1091
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_one_part_in_a_multipart((null)) in line 1129
      protection public
      24 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_seq_parts_in_a_multipart_with_empty_epilogue((null)) in line 1232
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_seq_parts_in_a_multipart_with_empty_preamble((null)) in line 1153
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_seq_parts_in_a_multipart_with_nl_epilogue((null)) in line 1259
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_seq_parts_in_a_multipart_with_none_epilogue((null)) in line 1206
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_seq_parts_in_a_multipart_with_none_preamble((null)) in line 1180
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   variable _im in line 1052
   variable _msg in line 1051
   variable _txt in line 1053
module src::email::test::test_email_renamed::TestNonConformant
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test_first_line_is_continuation_header((null)) in line 1493
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function test_invalid_content_type((null)) in line 1420
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_lying_multipart((null)) in line 1469
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_missing_start_boundary((null)) in line 1478
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_multipart_no_boundary((null)) in line 1411
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_no_separating_blank_line((null)) in line 1458
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_no_start_boundary((null)) in line 1441
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_parse_missing_minor_type((null)) in line 1394
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_same_boundary_inner_outer((null)) in line 1401
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
module src::email::test::test_email_renamed::TestRFC2047
   inherits from unittest::TestCase
   function test_rfc2047_missing_whitespace((null)) in line 1539
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
   function test_rfc2047_multiline((null)) in line 1508
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
   function test_rfc2047_with_whitespace((null)) in line 1544
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
   function test_whitespace_eater_unicode((null)) in line 1522
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function test_whitespace_eater_unicode_2((null)) in line 1530
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
module src::email::test::test_email_renamed::TestMIMEMessage
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function setUp((null)) in line 1555
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_bad_multipart((null)) in line 1580
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_default_type((null)) in line 1738
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_default_type_non_parsed((null)) in line 1778
      protection public
      74 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_default_type_with_explicit_container_type((null)) in line 1758
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_dsn((null)) in line 1622
      protection public
      58 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_epilogue((null)) in line 1680
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function openfile((null),(null)) defined in test_email_renamed.py
      uses variable StringIO defined in compat.py
   function test_generate((null)) in line 1589
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_mime_attachments_in_constructor((null)) in line 1852
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function test_no_nl_preamble((null)) in line 1703
      protection public
      35 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_parse_message_rfc822((null)) in line 1609
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_type_error((null)) in line 1562
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test_valid_argument((null)) in line 1565
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   variable _text in line 1558
module src::email::test::test_email_renamed::TestIdempotent
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function _idempotent((null),(null),(null)) in line 1878
      7 lines of code
      3 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function _msgobj((null),(null)) in line 1869
      9 lines of code
      2 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_content_type((null)) in line 1969
      protection public
      32 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_dsn((null)) in line 1929
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_long_header((null)) in line 1913
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_message_external_body_idempotent((null)) in line 1965
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_MIME_digest((null)) in line 1909
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_MIME_digest_with_part_headers((null)) in line 1917
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_mixed_with_image((null)) in line 1921
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_more_rfc2231_parameters((null)) in line 1953
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_multipart_no_parts((null)) in line 1941
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_multipart_one_part((null)) in line 1937
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_multipart_report((null)) in line 1925
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_nested_multipart_mixeds((null)) in line 1961
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_no_start_boundary((null)) in line 1945
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_parse_text_message((null)) in line 1885
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_parse_untyped_message((null)) in line 1897
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_parser((null)) in line 2001
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_preamble_epilogue((null)) in line 1933
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_rfc2231_charset((null)) in line 1949
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_simple_multipart((null)) in line 1905
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
   function test_text_plain_in_a_multipart_digest((null)) in line 1957
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _idempotent((null),(null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
module src::email::test::test_email_renamed::TestMiscellaneous
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test__all__((null)) in line 2095
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function test_charset_richcomparisons((null)) in line 2216
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function test_charsets_case_insensitive((null)) in line 2296
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_escape_backslashes((null)) in line 2180
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_escape_dump((null)) in line 2172
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_fix_eols((null)) in line 2208
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_formatdate((null)) in line 2114
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_formatdate_localtime((null)) in line 2119
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_formatdate_usegmt((null)) in line 2125
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_get_body_encoding_with_bogus_charset((null)) in line 2266
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_get_body_encoding_with_uppercase_charset((null)) in line 2270
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
   function test_getaddresses((null)) in line 2236
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_getaddresses_embedded_comment((null)) in line 2253
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_getaddresses_nasty((null)) in line 2243
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_message_from_file((null)) in line 2036
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
      uses variable StringIO defined in compat.py
   function test_message_from_file_with_class((null)) in line 2074
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
   function test_message_from_string((null)) in line 2022
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
      uses variable StringIO defined in compat.py
   function test_message_from_string_with_class((null)) in line 2051
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_multiline_from_comment((null)) in line 2197
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_name_with_dot((null)) in line 2188
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_noquote_dump((null)) in line 2167
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parseaddr_empty((null)) in line 2163
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_acceptable_to_time_functions((null)) in line 2152
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_compact((null)) in line 2137
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_compact_no_dayofweek((null)) in line 2147
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_no_dayofweek((null)) in line 2142
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_parsedate_none((null)) in line 2134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test_partial_falls_inside_message_delivery_status((null)) in line 2301
      protection public
      45 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses variable StringIO defined in compat.py
   function test_quote_dump((null)) in line 2203
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_utils_quote_unquote((null)) in line 2259
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestIterators
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test_body_line_iterator((null)) in line 2347
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_typed_subpart_iterator((null)) in line 2367
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_typed_subpart_iterator_default_type((null)) in line 2384
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
module src::email::test::test_email_renamed::TestParsers
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test_crlf_separation((null)) in line 2456
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_header_parser((null)) in line 2406
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_multipart_digest_with_extra_mime_headers((null)) in line 2470
      protection public
      34 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function openfile((null),(null)) defined in test_email_renamed.py
   function test_rfc2822_header_syntax((null)) in line 2523
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2822_one_character_header((null)) in line 2539
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2822_space_not_allowed_in_header((null)) in line 2533
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_strip_line_feed_and_carriage_return_in_headers((null)) in line 2512
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_three_lines((null)) in line 2504
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_whitespace_continuation((null)) in line 2420
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function test_whitespace_continuation_last_header((null)) in line 2438
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestBase64
   inherits from unittest::TestCase
   function test_decode((null)) in line 2564
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_encode((null)) in line 2571
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
   function test_header_encode((null)) in line 2593
      protection public
      29 lines of code
      1 parameters
      1 conditional paths
   function test_len((null)) in line 2551
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestQuopri
   inherits from unittest::TestCase
   function setUp((null)) in line 2623
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_body_quopri_check((null)) in line 2641
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable blit defined in src::email::test::test_email::TestQuopri
      uses variable blit defined in src::email::test::test_email_renamed::TestQuopri
      uses variable bnon defined in src::email::test::test_email::TestQuopri
      uses variable bnon defined in src::email::test::test_email_renamed::TestQuopri
   function test_body_quopri_len((null)) in line 2659
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable blit defined in src::email::test::test_email::TestQuopri
      uses variable blit defined in src::email::test::test_email_renamed::TestQuopri
      uses variable bnon defined in src::email::test::test_email::TestQuopri
      uses variable bnon defined in src::email::test::test_email_renamed::TestQuopri
   function test_decode((null)) in line 2698
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_encode((null)) in line 2705
      protection public
      28 lines of code
      1 parameters
      1 conditional paths
   function test_header_encode((null)) in line 2672
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
   function test_header_quopri_check((null)) in line 2635
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable hlit defined in src::email::test::test_email::TestQuopri
      uses variable hlit defined in src::email::test::test_email_renamed::TestQuopri
      uses variable hnon defined in src::email::test::test_email::TestQuopri
      uses variable hnon defined in src::email::test::test_email_renamed::TestQuopri
   function test_header_quopri_len((null)) in line 2647
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable hlit defined in src::email::test::test_email::TestQuopri
      uses variable hlit defined in src::email::test::test_email_renamed::TestQuopri
      uses variable hnon defined in src::email::test::test_email::TestQuopri
      uses variable hnon defined in src::email::test::test_email_renamed::TestQuopri
   function test_quote_unquote_idempotent((null)) in line 2667
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable blit in line 2630
      protection public
   variable bnon in line 2632
      protection public
   variable hlit in line 2624
      protection public
   variable hnon in line 2628
      protection public
module src::email::test::test_email_renamed::TestCharset
   inherits from unittest::TestCase
   function tearDown((null)) in line 2734
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_body_encode((null)) in line 2753
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
   function test_idempotent((null)) in line 2741
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_unicode_charset_name((null)) in line 2783
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
module src::email::test::test_email_renamed::TestHeader
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test_explicit_maxlinelen((null)) in line 2872
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_header_ctor_default_args((null)) in line 2865
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_header_needs_no_decoding((null)) in line 2806
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
   function test_long((null)) in line 2810
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_multilingual((null)) in line 2816
      protection public
      49 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
   function test_simple((null)) in line 2792
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_simple_surprise((null)) in line 2799
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_string_charset((null)) in line 2894
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_us_ascii_header((null)) in line 2886
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function decode_header((null)) defined in header.py
      uses function make_header((null),(null),(null),(null)) defined in header.py
module src::email::test::test_email_renamed::TestRFC2231
   inherits from src::email::test::test_email_renamed::TestEmailBase
   function test_del_param((null)) in line 3000
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_get_param((null)) in line 2955
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_rfc2231_bad_character_in_charset((null)) in line 3146
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_bad_character_in_filename((null)) in line 3156
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_bad_encoding_in_charset((null)) in line 3136
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_bad_encoding_in_filename((null)) in line 3124
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_encoded_then_unencoded_segments((null)) in line 3233
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_get_content_charset((null)) in line 3030
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
   function test_rfc2231_no_extended_values((null)) in line 3224
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset((null)) in line 3035
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_boundary((null)) in line 3099
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_charset((null)) in line 3111
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_filename((null)) in line 3049
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_no_language_or_charset_in_filename_encoded((null)) in line 3061
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_partly_encoded((null)) in line 3073
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_partly_nonencoded((null)) in line 3086
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_single_tick_in_filename((null)) in line 3190
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_single_tick_in_filename_extended((null)) in line 3177
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_tick_attack((null)) in line 3213
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_tick_attack_extended((null)) in line 3200
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_unencoded_then_encoded_segments((null)) in line 3248
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function test_rfc2231_unknown_encoding((null)) in line 3168
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_set_param((null)) in line 2963
      protection public
      37 lines of code
      1 parameters
      1 conditional paths
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/test/test_email_torture.py
module test_email_torture.py
   variable defaultTest in line 136
      protection public
   function openfile((null)) in line 22
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function _testclasses() in line 117
      5 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 122
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function _testclasses() defined in test_email_torture.py
   function test_main() in line 129
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function _testclasses() defined in test_email_torture.py
module src::email::test::test_email_torture::TortureBase
   inherits from email::test::test_email::TestEmailBase
   function _msgobj((null),(null)) in line 36
      10 lines of code
      2 parameters
      1 conditional paths
      uses function openfile((null)) defined in test_email_torture.py
module src::email::test::test_email_torture::TestCrispinTorture
   inherits from src::email::test::test_email_torture::TortureBase
   function test_mondo_message((null)) in line 48
      protection public
      69 lines of code
      1 parameters
      1 conditional paths
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function ndiffAssertEqual((null),(null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestEmailBase
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_renamed::TestIdempotent
      uses function _msgobj((null),(null)) defined in src::email::test::test_email_torture::TortureBase
      uses variable StringIO defined in compat.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/email/utils.py
module utils.py
   variable __all__ in line 7
   variable COMMASPACE in line 45
      protection public
   variable EMPTYSTRING in line 46
      protection public
   variable UEMPTYSTRING in line 47
      protection public
   variable CRLF in line 48
      protection public
   variable TICK in line 49
      protection public
   variable specialsre in line 51
      protection public
   variable escapesre in line 52
      protection public
   variable ecre in line 111
      protection public
   variable rfc2231_continuation in line 257
      protection public
   function _identity((null)) in line 58
      4 lines of code
      1 parameters
      1 conditional paths
   function _bdecode((null)) in line 62
      12 lines of code
      1 parameters
      1 conditional paths
   function fix_eols((null)) in line 74
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function formataddr((null)) in line 84
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function getaddresses((null)) in line 103
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function formatdate((null),(null),(null)) in line 123
      protection public
      53 lines of code
      3 parameters
      1 conditional paths
   function make_msgid((null)) in line 176
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
   function parsedate((null)) in line 201
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function parsedate_tz((null)) in line 207
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function parseaddr((null)) in line 213
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function unquote((null)) in line 221
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function decode_rfc2231((null)) in line 233
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function encode_rfc2231((null),(null),(null)) in line 241
      protection public
      16 lines of code
      3 parameters
      1 conditional paths
   function decode_params((null)) in line 259
      protection public
      53 lines of code
      1 parameters
      1 conditional paths
      uses function unquote((null)) defined in utils.py
      uses function quote((null)) defined in _parseaddr.py
      uses function decode_rfc2231((null)) defined in utils.py
      uses function collapse_rfc2231_value((null),(null),(null)) defined in utils.py
   function collapse_rfc2231_value((null),(null),(null)) in line 312
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses function unquote((null)) defined in utils.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_app.py
module kiasan_app.py
   variable logic in line 50
      protection public
   variable kiasan_result_dir in line 52
      protection public
   variable gui in line 56
      protection public
   variable window in line 57
      protection public
   variable t in line 64
      protection public
   function get_check_sum((null)) in line 11
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function monitor_report((null),(null),(null)) in line 18
      protection public
      20 lines of code
      3 parameters
      1 conditional paths
      uses function get_check_sum((null)) defined in kiasan_app.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/gpshelper.py
module gpshelper.py
   function remove_highlight_from_file((null)) in line 4
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function get_overlays((null)) defined in gpshelper.py
   function highlight((null),(null)) in line 15
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function get_overlays((null)) defined in gpshelper.py
   function get_overlays((null)) in line 29
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function get_marked_area() in line 47
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function highlight_area((null),(null),(null),(null),(null)) in line 62
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
   function open_uri((null)) in line 70
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/gui.py
module src::kiasan_v1::gui::KiasanGUI
   function add_columns_to_report_treeview((null)) in line 87
      protection public
      48 lines of code
      1 parameters
      1 conditional paths
   function add_variables_to_case_state_treeview_model((null),(null),(null),(null),(null),(null),(null),(null)) in line 333
      protection public
      28 lines of code
      8 parameters
      1 conditional paths
      uses function add_variables_to_case_state_treeview_model((null),(null),(null),(null),(null),(null),(null),(null)) defined in src::kiasan_v1::gui::KiasanGUI
   function cases_combo_changed((null),(null)) in line 261
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
      uses function highlight_method((null),(null),(null)) defined in src::kiasan_v1::gui::KiasanGUI
      uses variable _current_package_index defined in src::kiasan_v1::gui::KiasanGUI
      uses variable _current_fun_index defined in src::kiasan_v1::gui::KiasanGUI
      uses variable _report defined in src::kiasan_v1::gui::KiasanGUI
      uses function create_case_state_treeview_model((null),(null),(null)) defined in src::kiasan_v1::gui::KiasanGUI
   function create_case_state_treeview_model((null),(null),(null)) in line 294
      protection public
      39 lines of code
      3 parameters
      1 conditional paths
      uses function add_variables_to_case_state_treeview_model((null),(null),(null),(null),(null),(null),(null),(null)) defined in src::kiasan_v1::gui::KiasanGUI
   function create_report_treeview_model((null),(null)) in line 56
      protection public
      31 lines of code
      2 parameters
      1 conditional paths
   function get_cases((null),(null),(null),(null)) in line 187
      protection public
      27 lines of code
      4 parameters
      1 conditional paths
      uses variable _report defined in src::kiasan_v1::gui::KiasanGUI
   function highlight_method((null),(null),(null)) in line 249
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses variable _report defined in src::kiasan_v1::gui::KiasanGUI
   function highlight_methods((null),(null),(null),(null)) in line 214
      protection public
      15 lines of code
      4 parameters
      1 conditional paths
      uses function highlight_method((null),(null),(null)) defined in src::kiasan_v1::gui::KiasanGUI
      uses function highlight_package((null),(null)) defined in src::kiasan_v1::gui::KiasanGUI
   function highlight_package((null),(null)) in line 229
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
      uses variable _report defined in src::kiasan_v1::gui::KiasanGUI
   function init_cases_window((null)) in line 135
      protection public
      52 lines of code
      1 parameters
      1 conditional paths
   function init_report_treeview((null)) in line 38
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
      uses function create_report_treeview_model((null),(null)) defined in src::kiasan_v1::gui::KiasanGUI
      uses variable _report defined in src::kiasan_v1::gui::KiasanGUI
   function __init__((null),(null)) in line 10
      protection public
      28 lines of code
      2 parameters
      1 conditional paths
   variable _cases_combo in line 146
   variable _cases_entity_label in line 141
   variable _cases_label in line 143
   variable _cases_pane in line 27
   variable _cases_post_treeview in line 176
   variable _cases_post_window in line 173
   variable _cases_pre_treeview in line 158
   variable _cases_pre_window in line 155
   variable _cases_window_bottom in line 151
   variable _cases_window_bottom_separator in line 169
   variable _cases_window_top in line 138
   variable _current_fun_index in line 211
   variable _current_package_index in line 210
   variable _pane in line 14
   variable _report in line 11
   variable _report_window in line 17
   variable _treeview in line 44
module src::kiasan_v1::gui::TreeViewColumns
   variable COLUMN_BRANCH in line 362
      protection public
   variable COLUMN_ERRORS in line 362
      protection public
   variable COLUMN_INSTRUCTION in line 362
      protection public
   variable COLUMN_PACKAGE in line 362
      protection public
   variable COLUMN_TIME in line 362
      protection public
   variable COLUMN_TOTAL in line 362
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/logic.py
module src::kiasan_v1::logic::KiasanLogic
   function convert_dict_to_report((null),(null)) in line 20
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function extract_report_file((null),(null)) in line 10
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function convert_dict_to_report((null),(null)) defined in src::kiasan_v1::logic::KiasanLogic
   function run_kiasan((null)) in line 6
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/models.py
module src::kiasan_v1::models::Entity
   function convert_milis_to_secs((null),(null)) in line 24
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function convert_to_percentage((null),(null),(null)) in line 16
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function __init__((null),(null)) in line 7
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   variable _branch_coverage in line 12
   variable _branches in line 9
   variable _errors in line 10
   variable _instr_coverage in line 11
   variable _name in line 8
   variable _time in line 13
module src::kiasan_v1::models::Package
   inherits from src::kiasan_v1::models::Entity
   function extract_methods((null),(null)) in line 38
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function __init__((null),(null)) in line 33
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function extract_methods((null),(null)) defined in src::kiasan_v1::models::Package
   variable _methods in line 39
module src::kiasan_v1::models::Method
   inherits from src::kiasan_v1::models::Entity
   function extract_cases_headers((null),(null)) in line 56
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function extract_file_coverage((null),(null)) in line 67
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function get_base_types((null),(null)) in line 152
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function get_case((null),(null)) in line 79
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
      uses variable _cases defined in src::kiasan_v1::models::Method
      uses variable _cases_headers defined in src::kiasan_v1::models::Method
      uses function get_state((null),(null)) defined in src::kiasan_v1::models::Method
      uses function get_coverage((null),(null)) defined in src::kiasan_v1::models::Method
   function get_coverage((null),(null)) in line 164
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function get_ref_types((null),(null)) in line 120
      protection public
      32 lines of code
      2 parameters
      1 conditional paths
      uses function get_ref_types((null),(null)) defined in src::kiasan_v1::models::Method
      uses function get_base_types((null),(null)) defined in src::kiasan_v1::models::Method
   function get_state((null),(null)) in line 94
      protection public
      26 lines of code
      2 parameters
      1 conditional paths
      uses function get_base_types((null),(null)) defined in src::kiasan_v1::models::Method
      uses function get_ref_types((null),(null)) defined in src::kiasan_v1::models::Method
   function __init__((null),(null)) in line 48
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   variable _cases in line 51
   variable _cases_headers in line 50
   variable _files in line 69
module src::kiasan_v1::models::MethodFile
module src::kiasan_v1::models::CaseHeader
module src::kiasan_v1::models::Case
   function __init__((null)) in line 193
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable _files_coverage in line 196
   variable _post_state in line 195
   variable _pre_state in line 194
module src::kiasan_v1::models::CaseState
   function __init__((null)) in line 203
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable _frames in line 206
   variable _globals in line 205
   variable _name in line 204
module src::kiasan_v1::models::CaseStateFrame
   function __init__((null)) in line 213
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable _variables in line 214
module src::kiasan_v1::models::CaseMethod
   function __init__((null)) in line 221
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable _lineNum in line 223
   variable _name in line 222
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/_speedups.c
module _speedups.c
   macro definition PY2_UNUSED in line 23
      protection public
   macro definition PY3_UNUSED in line 24
      protection public
   macro definition PyUnicode_READY in line 25
      protection public
   macro definition PyUnicode_KIND in line 26
      protection public
   macro definition PyUnicode_DATA in line 27
      protection public
   macro definition PyUnicode_READ in line 28
      protection public
   macro definition PyUnicode_GetLength in line 29
      protection public
   macro definition JSON_UNICHR in line 30
      protection public
   macro definition JSON_ASCII_Check in line 31
      protection public
   macro definition JSON_ASCII_AS_STRING in line 32
      protection public
   macro definition JSON_InternFromString in line 33
      protection public
   macro definition JSON_Intern_GET_SIZE in line 34
      protection public
   macro definition JSON_NewEmptyUnicode in line 35
      protection public
   macro definition PyOS_string_to_double in line 40
      protection public
   macro definition Py_TYPE in line 59
      protection public
   macro definition Py_SIZE in line 62
      protection public
   macro definition PyVarObject_HEAD_INIT in line 65
      protection public
   macro definition PY_SSIZE_T_MAX in line 72
      protection public
   macro definition PY_SSIZE_T_MIN in line 73
      protection public
   macro definition PyInt_FromSsize_t in line 74
      protection public
   macro definition PyInt_AsSsize_t in line 75
      protection public
   macro definition Py_IS_FINITE in line 78
      protection public
   macro definition UNUSED in line 85
      protection public
   macro definition DEFAULT_ENCODING in line 88
      protection public
   macro definition PyScanner_Check in line 90
      protection public
   macro definition PyScanner_CheckExact in line 91
      protection public
   macro definition PyEncoder_Check in line 92
      protection public
   macro definition PyEncoder_CheckExact in line 93
      protection public
   macro definition S_CHAR in line 250
      protection public
   macro definition IS_WHITESPACE in line 251
      protection public
   macro definition MIN_EXPANSION in line 253
      protection public
   macro definition APPEND_OLD_CHUNK in line 836
      protection public
   typedef Py_ssize_t in line 71
      protection public
   typedef PyScannerObject in line 122
      protection public
   typedef PyEncoderObject in line 157
      protection public
   variable PyScannerType in line 95
      protection public
   variable PyEncoderType in line 96
      protection public
   variable scanner_members in line 124
      protection public
   variable encoder_members in line 159
      protection public
   variable speedups_methods in line 3157
      protection public
   function json_PyOS_string_to_double(const char *,char **,PyObject *) in line 42
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
   function JSON_Accu_Init(JSON_Accu *) in line 104
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable large_strings defined in JSON_Accu
      uses variable small_strings defined in JSON_Accu
   function JSON_Accu_Accumulate(JSON_Accu *,PyObject *) in line 106
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses macro definition JSON_ASCII_Check defined in _speedups.c
      uses variable small_strings defined in JSON_Accu
      uses function flush_accumulator(JSON_Accu *) defined in _speedups.c
   function JSON_Accu_FinishAsList(JSON_Accu *) in line 108
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function flush_accumulator(JSON_Accu *) defined in _speedups.c
      uses variable small_strings defined in JSON_Accu
      uses variable large_strings defined in JSON_Accu
   function JSON_Accu_Destroy(JSON_Accu *) in line 110
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable small_strings defined in JSON_Accu
      uses variable large_strings defined in JSON_Accu
   function join_list_unicode(PyObject *) in line 176
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses macro definition JSON_NewEmptyUnicode defined in _speedups.c
   function JSON_ParseEncoding(PyObject *) in line 178
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses macro definition JSON_InternFromString defined in _speedups.c
      uses macro definition DEFAULT_ENCODING defined in _speedups.c
      uses macro definition JSON_ASCII_Check defined in _speedups.c
   function JSON_UnicodeFromChar(JSON_UNICHR) in line 180
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses macro definition PyUnicode_KIND defined in _speedups.c
      uses macro definition PyUnicode_DATA defined in _speedups.c
   function maybe_quote_bigint(PyObject *,PyObject *) in line 182
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
   function ascii_char_size(JSON_UNICHR) in line 184
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses macro definition S_CHAR defined in _speedups.c
      uses macro definition MIN_EXPANSION defined in _speedups.c
   function ascii_escape_char(JSON_UNICHR,char *,Py_ssize_t) in line 186
      protection public
      42 lines of code
      3 parameters
      10 conditional paths
      uses macro definition S_CHAR defined in _speedups.c
      uses macro definition JSON_UNICHR defined in _speedups.c
   function ascii_escape_unicode(PyObject *) in line 188
      protection public
      45 lines of code
      1 parameters
      7 conditional paths
      uses macro definition PY2_UNUSED defined in _speedups.c
      uses macro definition PyUnicode_READY defined in _speedups.c
      uses macro definition PyUnicode_KIND defined in _speedups.c
      uses macro definition PyUnicode_DATA defined in _speedups.c
      uses macro definition PyUnicode_GetLength defined in _speedups.c
      uses function ascii_char_size(JSON_UNICHR) defined in _speedups.c
      uses macro definition PyUnicode_READ defined in _speedups.c
      uses function ascii_escape_char(JSON_UNICHR,char *,Py_ssize_t) defined in _speedups.c
      uses function ascii_escape_str(PyObject *) defined in _speedups.c
   function ascii_escape_str(PyObject *) in line 190
      protection public
      46 lines of code
      1 parameters
      6 conditional paths
      uses macro definition JSON_UNICHR defined in _speedups.c
      uses function ascii_escape_unicode(PyObject *) defined in _speedups.c
      uses function ascii_char_size(JSON_UNICHR) defined in _speedups.c
      uses function ascii_escape_char(JSON_UNICHR,char *,Py_ssize_t) defined in _speedups.c
   function py_encode_basestring_ascii(PyObject *self,PyObject *) in line 192
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses function ascii_escape_str(PyObject *) defined in _speedups.c
      uses function ascii_escape_unicode(PyObject *) defined in _speedups.c
      uses macro definition Py_TYPE defined in _speedups.c
   function join_list_string(PyObject *) in line 195
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
   function scan_once_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 197
      protection public
      103 lines of code
      4 parameters
      20 conditional paths
      uses function scanstring_str(PyObject *,Py_ssize_t,char *,int,Py_ssize_t *) defined in _speedups.c
      uses macro definition JSON_ASCII_AS_STRING defined in _speedups.c
      uses variable encoding defined in _PyScannerObject
      uses variable strict defined in _PyScannerObject
      uses function _parse_object_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function _parse_array_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function _parse_constant(PyScannerObject *,char *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function _match_number_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
   function scanstring_str(PyObject *,Py_ssize_t,char *,int,Py_ssize_t *) in line 199
      protection public
      228 lines of code
      5 parameters
      107 conditional paths
      uses function next((null)) defined in kiasan_v1/test/mock.py
      uses function raise_errmsg(char *,PyObject *,Py_ssize_t) defined in _speedups.c
      uses variable strict defined in _PyScannerObject
      uses macro definition APPEND_OLD_CHUNK defined in _speedups.c
      uses variable encoding defined in _PyScannerObject
      uses macro definition JSON_UNICHR defined in _speedups.c
      uses function JSON_UnicodeFromChar(JSON_UNICHR) defined in _speedups.c
      uses macro definition JSON_NewEmptyUnicode defined in _speedups.c
      uses function join_list_string(PyObject *) defined in _speedups.c
   function _parse_object_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 201
      protection public
      148 lines of code
      4 parameters
      41 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses macro definition JSON_ASCII_AS_STRING defined in _speedups.c
      uses variable strict defined in _PyScannerObject
      uses variable pairs_hook defined in _PyScannerObject
      uses macro definition IS_WHITESPACE defined in _speedups.c
      uses function raise_errmsg(char *,PyObject *,Py_ssize_t) defined in _speedups.c
      uses function scanstring_str(PyObject *,Py_ssize_t,char *,int,Py_ssize_t *) defined in _speedups.c
      uses variable memo defined in _PyScannerObject
      uses function scan_once_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses variable object_hook defined in _PyScannerObject
   function scanstring_unicode(PyObject *,Py_ssize_t,int,Py_ssize_t *) in line 204
      protection public
      186 lines of code
      4 parameters
      94 conditional paths
      uses function next((null)) defined in kiasan_v1/test/mock.py
      uses macro definition PY2_UNUSED defined in _speedups.c
      uses macro definition PyUnicode_KIND defined in _speedups.c
      uses macro definition PyUnicode_GetLength defined in _speedups.c
      uses macro definition PyUnicode_DATA defined in _speedups.c
      uses function raise_errmsg(char *,PyObject *,Py_ssize_t) defined in _speedups.c
      uses macro definition JSON_UNICHR defined in _speedups.c
      uses macro definition PyUnicode_READ defined in _speedups.c
      uses variable strict defined in _PyScannerObject
      uses macro definition APPEND_OLD_CHUNK defined in _speedups.c
      uses function JSON_UnicodeFromChar(JSON_UNICHR) defined in _speedups.c
      uses macro definition JSON_NewEmptyUnicode defined in _speedups.c
      uses function join_list_unicode(PyObject *) defined in _speedups.c
      uses function PyDoc_STRVAR(pydoc_scanstring,"scanstring(basestring, end, encoding, strict=True) -> (str, end)\n""\n""Scan the string s for a JSON string. End is the index of the\n""character in s after the quote that started the JSON string.\n""Unescapes all valid JSON string escape sequences and raises ValueError\n""on attempt to decode an invalid string. If strict is False then literal\n""control characters are allowed in the string.\n""\n""Returns a tuple of the decoded string and the index of the character in s\n""after the end quote.") defined in _speedups.c
   function scan_once_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 206
      protection public
      130 lines of code
      4 parameters
      20 conditional paths
      uses macro definition PY2_UNUSED defined in _speedups.c
      uses macro definition PyUnicode_KIND defined in _speedups.c
      uses macro definition PyUnicode_DATA defined in _speedups.c
      uses macro definition PyUnicode_GetLength defined in _speedups.c
      uses macro definition PyUnicode_READ defined in _speedups.c
      uses function scanstring_unicode(PyObject *,Py_ssize_t,int,Py_ssize_t *) defined in _speedups.c
      uses variable strict defined in _PyScannerObject
      uses function _parse_object_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function _parse_array_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function _parse_constant(PyScannerObject *,char *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function _match_number_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
   function _build_rval_index_tuple(PyObject *,Py_ssize_t) in line 208
      protection public
      27 lines of code
      2 parameters
      4 conditional paths
      uses macro definition PyInt_FromSsize_t defined in _speedups.c
   function scanner_new(PyTypeObject *,PyObject *,PyObject *) in line 210
      protection public
      15 lines of code
      3 parameters
      2 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses variable strict defined in _PyScannerObject
      uses variable object_hook defined in _PyScannerObject
      uses variable pairs_hook defined in _PyScannerObject
      uses variable parse_float defined in _PyScannerObject
      uses variable parse_int defined in _PyScannerObject
      uses variable parse_constant defined in _PyScannerObject
   function scanner_init(PyObject *,PyObject *,PyObject *) in line 212
      protection public
      59 lines of code
      3 parameters
      19 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses macro definition PyScanner_Check defined in _speedups.c
      uses variable memo defined in _PyScannerObject
      uses function JSON_ParseEncoding(PyObject *) defined in _speedups.c
      uses variable strict defined in _PyScannerObject
      uses variable object_hook defined in _PyScannerObject
      uses variable pairs_hook defined in _PyScannerObject
      uses variable parse_float defined in _PyScannerObject
      uses variable parse_int defined in _PyScannerObject
      uses variable parse_constant defined in _PyScannerObject
      uses function PyDoc_STRVAR(pydoc_scanstring,"scanstring(basestring, end, encoding, strict=True) -> (str, end)\n""\n""Scan the string s for a JSON string. End is the index of the\n""character in s after the quote that started the JSON string.\n""Unescapes all valid JSON string escape sequences and raises ValueError\n""on attempt to decode an invalid string. If strict is False then literal\n""control characters are allowed in the string.\n""\n""Returns a tuple of the decoded string and the index of the character in s\n""after the end quote.") defined in _speedups.c
      uses variable PyScannerType defined in _speedups.c
      uses macro definition PyVarObject_HEAD_INIT defined in _speedups.c
      uses function scanner_dealloc(PyObject *) defined in _speedups.c
      uses function scanner_call(PyObject *,PyObject *,PyObject *) defined in _speedups.c
      uses function scanner_traverse(PyObject *,visitproc,void *) defined in _speedups.c
      uses function scanner_clear(PyObject *) defined in _speedups.c
      uses variable scanner_members defined in _speedups.c
      uses function scanner_new(PyTypeObject *,PyObject *,PyObject *) defined in _speedups.c
   function scanner_dealloc(PyObject *) in line 214
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function scanner_clear(PyObject *) defined in _speedups.c
      uses macro definition Py_TYPE defined in _speedups.c
   function scanner_clear(PyObject *) in line 216
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses macro definition PyScanner_Check defined in _speedups.c
      uses variable encoding defined in _PyScannerObject
      uses variable strict defined in _PyScannerObject
      uses variable object_hook defined in _PyScannerObject
      uses variable pairs_hook defined in _PyScannerObject
      uses variable parse_float defined in _PyScannerObject
      uses variable parse_int defined in _PyScannerObject
      uses variable parse_constant defined in _PyScannerObject
      uses variable memo defined in _PyScannerObject
   function encoder_new(PyTypeObject *,PyObject *,PyObject *) in line 218
      protection public
      20 lines of code
      3 parameters
      2 conditional paths
      uses variable markers defined in _PyEncoderObject
      uses variable defaultfn defined in _PyEncoderObject
      uses variable encoder defined in _PyEncoderObject
      uses variable encoding defined in _PyEncoderObject
      uses variable indent defined in _PyEncoderObject
      uses variable key_separator defined in _PyEncoderObject
      uses variable item_separator defined in _PyEncoderObject
      uses variable key_memo defined in _PyEncoderObject
      uses variable sort_keys defined in _PyEncoderObject
      uses variable item_sort_key defined in _PyEncoderObject
      uses variable item_sort_kw defined in _PyEncoderObject
      uses variable Decimal defined in _PyEncoderObject
   function encoder_init(PyObject *,PyObject *,PyObject *) in line 220
      protection public
      84 lines of code
      3 parameters
      12 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses macro definition PyEncoder_Check defined in _speedups.c
      uses variable markers defined in _PyEncoderObject
      uses variable defaultfn defined in _PyEncoderObject
      uses variable encoder defined in _PyEncoderObject
      uses variable encoding defined in _PyEncoderObject
      uses function JSON_ParseEncoding(PyObject *) defined in _speedups.c
      uses variable indent defined in _PyEncoderObject
      uses variable key_separator defined in _PyEncoderObject
      uses variable item_separator defined in _PyEncoderObject
      uses variable skipkeys_bool defined in _PyEncoderObject
      uses variable skipkeys defined in _PyEncoderObject
      uses variable key_memo defined in _PyEncoderObject
      uses variable fast_encode defined in _PyEncoderObject
      uses function py_encode_basestring_ascii(PyObject *self,PyObject *) defined in _speedups.c
      uses variable allow_nan defined in _PyEncoderObject
      uses variable use_decimal defined in _PyEncoderObject
      uses variable namedtuple_as_object defined in _PyEncoderObject
      uses variable tuple_as_array defined in _PyEncoderObject
      uses variable bigint_as_string defined in _PyEncoderObject
      uses variable item_sort_kw defined in _PyEncoderObject
      uses variable sort_keys defined in _PyEncoderObject
      uses variable item_sort_key defined in _PyEncoderObject
      uses variable Decimal defined in _PyEncoderObject
   function encoder_dealloc(PyObject *) in line 222
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function encoder_clear(PyObject *) defined in _speedups.c
      uses macro definition Py_TYPE defined in _speedups.c
   function encoder_clear(PyObject *) in line 224
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses macro definition PyEncoder_Check defined in _speedups.c
      uses variable markers defined in _PyEncoderObject
      uses variable defaultfn defined in _PyEncoderObject
      uses variable encoder defined in _PyEncoderObject
      uses variable encoding defined in _PyEncoderObject
      uses variable indent defined in _PyEncoderObject
      uses variable key_separator defined in _PyEncoderObject
      uses variable item_separator defined in _PyEncoderObject
      uses variable key_memo defined in _PyEncoderObject
      uses variable skipkeys_bool defined in _PyEncoderObject
      uses variable sort_keys defined in _PyEncoderObject
      uses variable item_sort_kw defined in _PyEncoderObject
      uses variable item_sort_key defined in _PyEncoderObject
      uses variable Decimal defined in _PyEncoderObject
      uses function PyDoc_STRVAR(pydoc_scanstring,"scanstring(basestring, end, encoding, strict=True) -> (str, end)\n""\n""Scan the string s for a JSON string. End is the index of the\n""character in s after the quote that started the JSON string.\n""Unescapes all valid JSON string escape sequences and raises ValueError\n""on attempt to decode an invalid string. If strict is False then literal\n""control characters are allowed in the string.\n""\n""Returns a tuple of the decoded string and the index of the character in s\n""after the end quote.") defined in _speedups.c
      uses variable PyEncoderType defined in _speedups.c
      uses macro definition PyVarObject_HEAD_INIT defined in _speedups.c
      uses function encoder_dealloc(PyObject *) defined in _speedups.c
      uses function encoder_call(PyObject *,PyObject *,PyObject *) defined in _speedups.c
      uses function encoder_traverse(PyObject *,visitproc,void *) defined in _speedups.c
      uses variable encoder_members defined in _speedups.c
      uses function encoder_init(PyObject *,PyObject *,PyObject *) defined in _speedups.c
      uses function encoder_new(PyTypeObject *,PyObject *,PyObject *) defined in _speedups.c
   function encoder_stringify_key(PyEncoderObject *,PyObject *) in line 226
      protection public
      39 lines of code
      2 parameters
      8 conditional paths
      uses macro definition JSON_ASCII_AS_STRING defined in _speedups.c
      uses variable encoding defined in _PyEncoderObject
      uses function encoder_encode_float(PyEncoderObject *,PyObject *) defined in _speedups.c
      uses function _encoded_const(PyObject *) defined in _speedups.c
      uses variable use_decimal defined in _PyEncoderObject
      uses variable Decimal defined in _PyEncoderObject
      uses variable skipkeys defined in _PyEncoderObject
   function encoder_listencode_list(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) in line 228
      protection public
      92 lines of code
      4 parameters
      32 conditional paths
      uses macro definition JSON_InternFromString defined in _speedups.c
      uses function JSON_Accu_Accumulate(JSON_Accu *,PyObject *) defined in _speedups.c
      uses variable markers defined in _PyEncoderObject
      uses variable indent defined in _PyEncoderObject
      uses variable item_separator defined in _PyEncoderObject
      uses function encoder_listencode_obj(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) defined in _speedups.c
   function encoder_listencode_obj(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) in line 230
      protection public
      106 lines of code
      4 parameters
      31 conditional paths
      uses function _encoded_const(PyObject *) defined in _speedups.c
      uses function _steal_accumulate(JSON_Accu *,PyObject *) defined in _speedups.c
      uses function encoder_encode_string(PyEncoderObject *,PyObject *) defined in _speedups.c
      uses variable bigint_as_string defined in _PyEncoderObject
      uses function maybe_quote_bigint(PyObject *,PyObject *) defined in _speedups.c
      uses function encoder_encode_float(PyEncoderObject *,PyObject *) defined in _speedups.c
      uses variable namedtuple_as_object defined in _PyEncoderObject
      uses function _is_namedtuple(PyObject *) defined in _speedups.c
      uses function encoder_listencode_dict(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) defined in _speedups.c
      uses variable tuple_as_array defined in _PyEncoderObject
      uses function encoder_listencode_list(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) defined in _speedups.c
      uses variable use_decimal defined in _PyEncoderObject
      uses variable Decimal defined in _PyEncoderObject
      uses variable markers defined in _PyEncoderObject
      uses variable defaultfn defined in _PyEncoderObject
   function encoder_listencode_dict(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) in line 232
      protection public
      135 lines of code
      4 parameters
      50 conditional paths
      uses macro definition JSON_InternFromString defined in _speedups.c
      uses function JSON_Accu_Accumulate(JSON_Accu *,PyObject *) defined in _speedups.c
      uses variable markers defined in _PyEncoderObject
      uses variable indent defined in _PyEncoderObject
      uses function encoder_dict_iteritems(PyEncoderObject *,PyObject *) defined in _speedups.c
      uses macro definition Py_SIZE defined in _speedups.c
      uses variable key_memo defined in _PyEncoderObject
      uses function encoder_stringify_key(PyEncoderObject *,PyObject *) defined in _speedups.c
      uses variable item_separator defined in _PyEncoderObject
      uses function encoder_encode_string(PyEncoderObject *,PyObject *) defined in _speedups.c
      uses variable key_separator defined in _PyEncoderObject
      uses function encoder_listencode_obj(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) defined in _speedups.c
   function _encoded_const(PyObject *) in line 234
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses macro definition JSON_InternFromString defined in _speedups.c
   function raise_errmsg(char *,PyObject *,Py_ssize_t) in line 236
      protection public
      21 lines of code
      3 parameters
      5 conditional paths
      uses function _convertPyInt_FromSsize_t(Py_ssize_t *) defined in _speedups.c
   function encoder_encode_string(PyEncoderObject *,PyObject *) in line 238
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable fast_encode defined in _PyEncoderObject
      uses function py_encode_basestring_ascii(PyObject *self,PyObject *) defined in _speedups.c
      uses variable encoder defined in _PyEncoderObject
   function _convertPyInt_AsSsize_t(PyObject *,Py_ssize_t *) in line 240
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses macro definition PyInt_AsSsize_t defined in _speedups.c
   function _convertPyInt_FromSsize_t(Py_ssize_t *) in line 242
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses macro definition PyInt_FromSsize_t defined in _speedups.c
   function encoder_encode_float(PyEncoderObject *,PyObject *) in line 244
      protection public
      37 lines of code
      2 parameters
      11 conditional paths
      uses macro definition Py_IS_FINITE defined in _speedups.c
      uses variable allow_nan defined in _PyEncoderObject
      uses macro definition JSON_InternFromString defined in _speedups.c
   function _is_namedtuple(PyObject *) in line 246
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
   function moduleinit(void) in line 248
      protection public
      21 lines of code
      1 parameters
      3 conditional paths
      uses variable PyScannerType defined in _speedups.c
      uses variable PyEncoderType defined in _speedups.c
      uses variable speedups_methods defined in _speedups.c
   function flush_accumulator(JSON_Accu *) in line 267
      protection public
      28 lines of code
      1 parameters
      6 conditional paths
      uses variable small_strings defined in JSON_Accu
      uses variable large_strings defined in JSON_Accu
      uses function join_list_unicode(PyObject *) defined in _speedups.c
      uses function join_list_string(PyObject *) defined in _speedups.c
   function IS_DIGIT(JSON_UNICHR) in line 348
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function encoder_dict_iteritems(PyEncoderObject *,PyObject *) in line 651
      protection public
      92 lines of code
      2 parameters
      31 conditional paths
      uses variable item_sort_kw defined in _PyEncoderObject
      uses macro definition Py_SIZE defined in _speedups.c
      uses function encoder_stringify_key(PyEncoderObject *,PyObject *) defined in _speedups.c
   function PyDoc_STRVAR(pydoc_scanstring,"scanstring(basestring, end, encoding, strict=True) -> (str, end)\n""\n""Scan the string s for a JSON string. End is the index of the\n""character in s after the quote that started the JSON string.\n""Unescapes all valid JSON string escape sequences and raises ValueError\n""on attempt to decode an invalid string. If strict is False then literal\n""control characters are allowed in the string.\n""\n""Returns a tuple of the decoded string and the index of the character in s\n""after the end quote.") in line 1270
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function py_scanstring(PyObject *self,PyObject *) in line 1284
      protection public
      32 lines of code
      2 parameters
      5 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses variable strict defined in _PyScannerObject
      uses function _convertPyInt_AsSsize_t(PyObject *,Py_ssize_t *) defined in _speedups.c
      uses macro definition DEFAULT_ENCODING defined in _speedups.c
      uses function scanstring_unicode(PyObject *,Py_ssize_t,int,Py_ssize_t *) defined in _speedups.c
      uses function scanstring_str(PyObject *,Py_ssize_t,char *,int,Py_ssize_t *) defined in _speedups.c
      uses macro definition Py_TYPE defined in _speedups.c
      uses function _build_rval_index_tuple(PyObject *,Py_ssize_t) defined in _speedups.c
      uses function PyDoc_STRVAR(pydoc_scanstring,"scanstring(basestring, end, encoding, strict=True) -> (str, end)\n""\n""Scan the string s for a JSON string. End is the index of the\n""character in s after the quote that started the JSON string.\n""Unescapes all valid JSON string escape sequences and raises ValueError\n""on attempt to decode an invalid string. If strict is False then literal\n""control characters are allowed in the string.\n""\n""Returns a tuple of the decoded string and the index of the character in s\n""after the end quote.") defined in _speedups.c
   function PyDoc_STRVAR(pydoc_encode_basestring_ascii,"encode_basestring_ascii(basestring) -> str\n""\n""Return an ASCII-only JSON representation of a Python string") in line 1317
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function scanner_traverse(PyObject *,visitproc,void *) in line 1351
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
      uses macro definition PyScanner_Check defined in _speedups.c
      uses variable encoding defined in _PyScannerObject
      uses variable strict defined in _PyScannerObject
      uses variable object_hook defined in _PyScannerObject
      uses variable pairs_hook defined in _PyScannerObject
      uses variable parse_float defined in _PyScannerObject
      uses variable parse_int defined in _PyScannerObject
      uses variable parse_constant defined in _PyScannerObject
      uses variable memo defined in _PyScannerObject
   function _parse_object_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 1537
      protection public
      151 lines of code
      4 parameters
      41 conditional paths
      uses macro definition PyUnicode_DATA defined in _speedups.c
      uses macro definition PyUnicode_GetLength defined in _speedups.c
      uses macro definition PY2_UNUSED defined in _speedups.c
      uses macro definition PyUnicode_KIND defined in _speedups.c
      uses variable strict defined in _PyScannerObject
      uses variable pairs_hook defined in _PyScannerObject
      uses macro definition IS_WHITESPACE defined in _speedups.c
      uses macro definition PyUnicode_READ defined in _speedups.c
      uses function raise_errmsg(char *,PyObject *,Py_ssize_t) defined in _speedups.c
      uses function scanstring_unicode(PyObject *,Py_ssize_t,int,Py_ssize_t *) defined in _speedups.c
      uses variable memo defined in _PyScannerObject
      uses function scan_once_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses variable object_hook defined in _PyScannerObject
   function _parse_array_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 1691
      protection public
      71 lines of code
      4 parameters
      18 conditional paths
      uses macro definition IS_WHITESPACE defined in _speedups.c
      uses function scan_once_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function raise_errmsg(char *,PyObject *,Py_ssize_t) defined in _speedups.c
   function _parse_array_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 1765
      protection public
      72 lines of code
      4 parameters
      18 conditional paths
      uses macro definition PY2_UNUSED defined in _speedups.c
      uses macro definition PyUnicode_KIND defined in _speedups.c
      uses macro definition PyUnicode_DATA defined in _speedups.c
      uses macro definition PyUnicode_GetLength defined in _speedups.c
      uses macro definition IS_WHITESPACE defined in _speedups.c
      uses macro definition PyUnicode_READ defined in _speedups.c
      uses function scan_once_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function raise_errmsg(char *,PyObject *,Py_ssize_t) defined in _speedups.c
   function _parse_constant(PyScannerObject *,char *,Py_ssize_t,Py_ssize_t *) in line 1839
      protection public
      25 lines of code
      4 parameters
      2 conditional paths
      uses macro definition JSON_InternFromString defined in _speedups.c
      uses variable parse_constant defined in _PyScannerObject
      uses macro definition JSON_Intern_GET_SIZE defined in _speedups.c
   function _match_number_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 1867
      protection public
      102 lines of code
      4 parameters
      17 conditional paths
      uses variable parse_float defined in _PyScannerObject
      uses macro definition PyOS_string_to_double defined in _speedups.c
      uses variable parse_int defined in _PyScannerObject
   function _match_number_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) in line 1972
      protection public
      109 lines of code
      4 parameters
      15 conditional paths
      uses macro definition PY2_UNUSED defined in _speedups.c
      uses macro definition PyUnicode_KIND defined in _speedups.c
      uses macro definition PyUnicode_DATA defined in _speedups.c
      uses macro definition PyUnicode_GetLength defined in _speedups.c
      uses macro definition JSON_UNICHR defined in _speedups.c
      uses macro definition PyUnicode_READ defined in _speedups.c
      uses function IS_DIGIT(JSON_UNICHR) defined in _speedups.c
      uses variable parse_float defined in _PyScannerObject
      uses variable parse_int defined in _PyScannerObject
   function scanner_call(PyObject *,PyObject *,PyObject *) in line 2323
      protection public
      31 lines of code
      3 parameters
      4 conditional paths
      uses macro definition PyScanner_Check defined in _speedups.c
      uses function _convertPyInt_AsSsize_t(PyObject *,Py_ssize_t *) defined in _speedups.c
      uses function scan_once_unicode(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses function scan_once_str(PyScannerObject *,PyObject *,Py_ssize_t,Py_ssize_t *) defined in _speedups.c
      uses macro definition Py_TYPE defined in _speedups.c
      uses variable memo defined in _PyScannerObject
      uses function _build_rval_index_tuple(PyObject *,Py_ssize_t) defined in _speedups.c
   function PyDoc_STRVAR(scanner_doc,"JSON scanner object") in line 2452
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function encoder_call(PyObject *,PyObject *,PyObject *) in line 2606
      protection public
      21 lines of code
      3 parameters
      4 conditional paths
      uses macro definition PyEncoder_Check defined in _speedups.c
      uses function _convertPyInt_AsSsize_t(PyObject *,Py_ssize_t *) defined in _speedups.c
      uses function JSON_Accu_Init(JSON_Accu *) defined in _speedups.c
      uses function encoder_listencode_obj(PyEncoderObject *,JSON_Accu *,PyObject *,Py_ssize_t) defined in _speedups.c
      uses function JSON_Accu_Destroy(JSON_Accu *) defined in _speedups.c
      uses function JSON_Accu_FinishAsList(JSON_Accu *) defined in _speedups.c
   function _steal_accumulate(JSON_Accu *,PyObject *) in line 2712
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function JSON_Accu_Accumulate(JSON_Accu *,PyObject *) defined in _speedups.c
   function encoder_traverse(PyObject *,visitproc,void *) in line 3069
      protection public
      19 lines of code
      3 parameters
      1 conditional paths
      uses macro definition PyEncoder_Check defined in _speedups.c
      uses variable markers defined in _PyEncoderObject
      uses variable defaultfn defined in _PyEncoderObject
      uses variable encoder defined in _PyEncoderObject
      uses variable encoding defined in _PyEncoderObject
      uses variable indent defined in _PyEncoderObject
      uses variable key_separator defined in _PyEncoderObject
      uses variable item_separator defined in _PyEncoderObject
      uses variable key_memo defined in _PyEncoderObject
      uses variable sort_keys defined in _PyEncoderObject
      uses variable item_sort_kw defined in _PyEncoderObject
      uses variable item_sort_key defined in _PyEncoderObject
      uses variable Decimal defined in _PyEncoderObject
   function PyDoc_STRVAR(encoder_doc,"_iterencode(obj, _current_indent_level) -> iterable") in line 3112
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function PyDoc_STRVAR(module_doc,"simplejson speedups\n") in line 3169
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function init_speedups(void) in line 3217
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function moduleinit(void) defined in _speedups.c
module JSON_Accu
   variable large_strings in line 99
      protection public
   variable small_strings in line 100
      protection public
module _PyScannerObject
   variable encoding in line 114
      protection public
   variable memo in line 121
      protection public
   variable object_hook in line 116
      protection public
   variable pairs_hook in line 117
      protection public
   variable parse_constant in line 120
      protection public
   variable parse_float in line 118
      protection public
   variable parse_int in line 119
      protection public
   variable strict in line 115
      protection public
module _PyEncoderObject
   variable allow_nan in line 150
      protection public
   variable bigint_as_string in line 154
      protection public
   variable Decimal in line 146
      protection public
   variable defaultfn in line 138
      protection public
   variable encoder in line 139
      protection public
   variable encoding in line 145
      protection public
   variable fast_encode in line 149
      protection public
   variable indent in line 140
      protection public
   variable item_separator in line 142
      protection public
   variable item_sort_key in line 155
      protection public
   variable item_sort_kw in line 156
      protection public
   variable key_memo in line 144
      protection public
   variable key_separator in line 141
      protection public
   variable markers in line 137
      protection public
   variable namedtuple_as_object in line 152
      protection public
   variable skipkeys in line 148
      protection public
   variable skipkeys_bool in line 147
      protection public
   variable sort_keys in line 143
      protection public
   variable tuple_as_array in line 153
      protection public
   variable use_decimal in line 151
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/compat.py
module compat.py
   variable PY3 in line 5
      protection public
   variable StringIO in line 11
      protection public
   variable text_type in line 12
      protection public
   variable binary_type in line 13
      protection public
   variable string_types in line 14
      protection public
   variable integer_types in line 15
      protection public
   variable unichr in line 16
      protection public
   variable reload_module in line 17
      protection public
   variable BytesIO in line 31
      protection public
   variable long_type in line 43
      protection public
   function b((null)) in line 6
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function u((null)) in line 8
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function fromhex((null)) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function b((null)) defined in compat.py
      uses function u((null)) defined in compat.py
   function unichr((null)) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable unichr defined in compat.py
      uses function u((null)) defined in compat.py
      uses function fromhex((null)) defined in compat.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/decoder.py
module decoder.py
   variable c_scanstring in line 15
      protection public
   variable __all__ in line 17
   variable FLAGS in line 19
      protection public
   variable _CONSTANTS in line 83
   variable STRINGCHUNK in line 89
      protection public
   variable BACKSLASH in line 90
      protection public
   variable DEFAULT_ENCODING in line 95
      protection public
   variable scanstring in line 192
      protection public
   variable WHITESPACE in line 194
      protection public
   variable WHITESPACE_STR in line 195
      protection public
   function _import_c_scanstring() in line 9
      6 lines of code
      0 parameters
      1 conditional paths
   function _floatconstants() in line 21
      12 lines of code
      0 parameters
      1 conditional paths
      uses function fromhex((null)) defined in compat.py
   function linecol((null),(null)) in line 59
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function errmsg((null),(null),(null),(null)) in line 68
      protection public
      15 lines of code
      4 parameters
      1 conditional paths
      uses function linecol((null),(null)) defined in decoder.py
   function py_scanstring((null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 97
      protection public
      93 lines of code
      9 parameters
      1 conditional paths
      uses variable text_type defined in compat.py
      uses variable unichr defined in compat.py
   function JSONObject((null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 197
      protection public
      95 lines of code
      9 parameters
      1 conditional paths
      uses variable scanstring defined in decoder.py
   function JSONArray((null),(null),(null),(null)) in line 294
      protection public
      37 lines of code
      4 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::decoder::JSONDecodeError
   inherits from ValueError
   function __init__((null),(null),(null),(null),(null)) in line 46
      protection public
      13 lines of code
      5 parameters
      1 conditional paths
      uses function errmsg((null),(null),(null),(null)) defined in decoder.py
   variable colno in line 52
      protection public
   variable doc in line 49
      protection public
   variable end in line 51
      protection public
   variable endcolno in line 54
      protection public
   variable msg in line 48
      protection public
   variable pos in line 50
      protection public
module src::kiasan_v1::simplejson::decoder::JSONDecoder
   inherits from object
   function decode((null),(null),(null),(null)) in line 422
      protection public
      13 lines of code
      4 parameters
      1 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses variable encoding defined in _PyEncoderObject
      uses variable encoding defined in src::kiasan_v1::simplejson::decoder::JSONDecoder
      uses function raw_decode((null),(null),(null),(null),(null)) defined in src::kiasan_v1::simplejson::decoder::JSONDecoder
   function raw_decode((null),(null),(null),(null),(null)) in line 435
      protection public
      19 lines of code
      5 parameters
      1 conditional paths
      uses variable scan_once defined in src::kiasan_v1::simplejson::decoder::JSONDecoder
   function __init__((null),(null),(null),(null),(null),(null),(null),(null)) in line 361
      protection public
      59 lines of code
      8 parameters
      1 conditional paths
   variable encoding in line 409
      protection public
   variable memo in line 419
      protection public
   variable object_hook in line 410
      protection public
   variable object_pairs_hook in line 411
      protection public
   variable parse_array in line 417
      protection public
   variable parse_constant in line 414
      protection public
   variable parse_float in line 412
      protection public
   variable parse_int in line 413
      protection public
   variable parse_object in line 416
      protection public
   variable parse_string in line 418
      protection public
   variable scan_once in line 420
      protection public
   variable strict in line 415
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/encoder.py
module encoder.py
   variable ESCAPE in line 21
      protection public
   variable ESCAPE_ASCII in line 22
      protection public
   variable HAS_UTF8 in line 23
      protection public
   variable ESCAPE_DCT in line 24
      protection public
   variable FLOAT_REPR in line 39
      protection public
   variable encode_basestring_ascii in line 85
      protection public
   function _import_speedups() in line 8
      8 lines of code
      0 parameters
      1 conditional paths
   function encode_basestring((null),(null),(null)) in line 41
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
   function py_encode_basestring_ascii((null),(null)) in line 56
      protection public
      29 lines of code
      2 parameters
      1 conditional paths
   function _make_iterencode((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 357
      229 lines of code
      28 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::encoder::JSONEncoder
   inherits from object
   function default((null),(null)) in line 208
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
      uses variable default defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
   function encode((null),(null)) in line 228
      protection public
      29 lines of code
      2 parameters
      1 conditional paths
      uses variable encoding defined in _PyScannerObject
      uses variable encoding defined in _PyEncoderObject
      uses variable encoding defined in src::kiasan_v1::simplejson::decoder::JSONDecoder
      uses variable encoding defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable ensure_ascii defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable encode_basestring_ascii defined in encoder.py
      uses function encode_basestring((null),(null),(null)) defined in encoder.py
      uses function iterencode((null),(null),(null)) defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
   function iterencode((null),(null),(null)) in line 257
      protection public
      73 lines of code
      3 parameters
      1 conditional paths
      uses variable check_circular defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable ensure_ascii defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable encoding defined in _PyScannerObject
      uses variable encoding defined in _PyEncoderObject
      uses variable encoding defined in src::kiasan_v1::simplejson::decoder::JSONDecoder
      uses variable encoding defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable indent defined in _PyEncoderObject
      uses variable indent defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable default defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable key_separator defined in _PyEncoderObject
      uses variable key_separator defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable item_separator defined in _PyEncoderObject
      uses variable item_separator defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable sort_keys defined in _PyEncoderObject
      uses variable sort_keys defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable skipkeys defined in _PyEncoderObject
      uses variable skipkeys defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable allow_nan defined in _PyEncoderObject
      uses variable allow_nan defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable use_decimal defined in _PyEncoderObject
      uses variable use_decimal defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable namedtuple_as_object defined in _PyEncoderObject
      uses variable namedtuple_as_object defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable tuple_as_array defined in _PyEncoderObject
      uses variable tuple_as_array defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable bigint_as_string defined in _PyEncoderObject
      uses variable bigint_as_string defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable item_sort_key defined in _PyEncoderObject
      uses variable item_sort_key defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses function _make_iterencode((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in encoder.py
   function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 119
      protection public
      84 lines of code
      15 parameters
      1 conditional paths
   variable allow_nan in line 190
      protection public
   variable bigint_as_string in line 195
      protection public
   variable check_circular in line 189
      protection public
   variable default in line 205
      protection public
   variable encoding in line 206
      protection public
   variable ensure_ascii in line 188
      protection public
   variable indent in line 199
      protection public
   variable item_separator in line 117
      protection public
   variable item_separator in line 203
      protection public
   variable item_sort_key in line 196
      protection public
   variable key_separator in line 118
      protection public
   variable key_separator in line 201
      protection public
   variable namedtuple_as_object in line 193
      protection public
   variable skipkeys in line 187
      protection public
   variable sort_keys in line 191
      protection public
   variable tuple_as_array in line 194
      protection public
   variable use_decimal in line 192
      protection public
module src::kiasan_v1::simplejson::encoder::JSONEncoderForHTML
   inherits from src::kiasan_v1::simplejson::encoder::JSONEncoder
   function encode((null),(null)) in line 339
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function iterencode((null),(null),(null)) defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
      uses variable ensure_ascii defined in src::kiasan_v1::simplejson::encoder::JSONEncoder
   function iterencode((null),(null),(null)) in line 348
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses function _make_iterencode((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in encoder.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/ordered_dict.py
module ordered_dict.py
   function all((null)) in line 13
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   inherits from dict
   inherits from UserDict::DictMixin
   function __delitem__((null),(null)) in line 43
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function __eq__((null),(null)) in line 112
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function all((null)) defined in ordered_dict.py
      uses variable items defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   function __iter__((null)) in line 49
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable __end defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   function __ne__((null),(null)) in line 118
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function __reduce__((null)) in line 75
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable __map defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable __end defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses function copy((null)) defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses function __class__((null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function __class__((null)) defined in src::test::mock::NonCallableMock
   function __repr__((null)) in line 97
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable items defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   function __reversed__((null)) in line 56
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable __end defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   function __setitem__((null),(null),(null)) in line 36
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable __end defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable __map defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   function clear((null)) in line 30
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function copy((null)) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function __class__((null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function __class__((null)) defined in src::test::mock::NonCallableMock
   function fromkeys((null),(null),(null)) in line 106
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   function keys((null)) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function popitem((null),(null)) in line 63
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses function next((null)) defined in kiasan_v1/test/mock.py
      uses variable pop defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   function __init__((null),(null),(null)) in line 21
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable __end defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable clear defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable clear defined in src::test::mock::_patch_dict
      uses function clear((null)) defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable update defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
   variable __end in line 31
   variable __map in line 33
   variable items in line 92
      protection public
   variable iteritems in line 95
      protection public
   variable iterkeys in line 93
      protection public
   variable itervalues in line 94
      protection public
   variable pop in line 90
      protection public
   variable setdefault in line 88
      protection public
   variable update in line 89
      protection public
   variable values in line 91
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/scanner.py
module scanner.py
   variable c_make_scanner in line 10
      protection public
   variable __all__ in line 12
   variable NUMBER_RE in line 14
      protection public
   variable make_scanner in line 77
      protection public
   function _import_c_make_scanner() in line 4
      6 lines of code
      0 parameters
      1 conditional paths
   function py_make_scanner((null)) in line 18
      protection public
      59 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_bigint_as_string.py
module src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
   inherits from unittest::TestCase
   function test_dict_keys((null)) in line 49
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
   function test_dicts((null)) in line 38
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
   function test_ints((null)) in line 18
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
   function test_lists((null)) in line 27
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
   variable values in line 9
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_check_circular.py
module test_check_circular.py
   function default_iterable((null)) in line 4
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::tests::test_check_circular::TestCheckCircular
   inherits from unittest::TestCase
   function test_circular_composite((null)) in line 18
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_circular_default((null)) in line 24
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_circular_dict((null)) in line 8
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_circular_list((null)) in line 13
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_circular_off_default((null)) in line 28
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_decimal.py
module src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
   inherits from unittest::TestCase
   function dumps((null),(null),(null)) in line 10
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function loads((null),(null),(null)) in line 17
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_decimal_decode((null)) in line 27
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable NUMS defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
      uses function loads((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
   function test_decimal_defaults((null)) in line 49
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_decimal_encode((null)) in line 23
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable NUMS defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
      uses function dumps((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
   function test_decimal_reload((null)) in line 64
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable reload_module defined in compat.py
      uses function test_decimal_roundtrip((null)) defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
   function test_decimal_roundtrip((null)) in line 39
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable NUMS defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
      uses function loads((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
      uses function dumps((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
   function test_stringify_key((null)) in line 31
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable NUMS defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
      uses function loads((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
      uses function dumps((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decimal::TestDecimal
   variable NUMS in line 9
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_decode.py
module src::kiasan_v1::simplejson::tests::test_decode::TestDecode
   inherits from unittest::TestCase
   function assertIs((null),(null),(null)) in line 11
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function check_keys_reuse((null),(null),(null)) in line 56
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses function loads((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in kiasan_v1/simplejson/__init__.py
      uses function assertIs((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decode::TestDecode
   function test_decimal((null)) in line 14
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_decoder_optimizations((null)) in line 24
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_empty_objects((null)) in line 31
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_empty_strings((null)) in line 70
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_float((null)) in line 19
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_keys_reuse_str((null)) in line 62
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
      uses function check_keys_reuse((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decode::TestDecode
   function test_keys_reuse_unicode((null)) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function check_keys_reuse((null),(null),(null)) defined in src::kiasan_v1::simplejson::tests::test_decode::TestDecode
   function test_object_pairs_hook((null)) in line 39
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
      uses variable OrderedDict defined in kiasan_v1/simplejson/__init__.py
   function test_raw_decode((null)) in line 76
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_default.py
module src::kiasan_v1::simplejson::tests::test_default::TestDefault
   inherits from unittest::TestCase
   function test_default((null)) in line 6
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_dump.py
module test_dump.py
   function as_text_type((null)) in line 5
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::tests::test_dump::TestDump
   inherits from unittest::TestCase
   function test_accumulator((null)) in line 118
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_constants((null)) in line 16
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_dump((null)) in line 11
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_dumps((null)) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test_encode_truefalse((null)) in line 56
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable long_type defined in compat.py
   function test_indent_unknown_type_acceptance((null)) in line 78
      protection public
      40 lines of code
      1 parameters
      1 conditional paths
   function test_ordered_dict((null)) in line 70
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_stringify_key((null)) in line 22
      protection public
      31 lines of code
      1 parameters
      1 conditional paths
      uses function b((null)) defined in compat.py
      uses variable long_type defined in compat.py
      uses function as_text_type((null)) defined in test_dump.py
   variable _int in line 101
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_encode_basestring_ascii.py
module test_encode_basestring_ascii.py
   variable CASES in line 6
      protection public
module src::kiasan_v1::simplejson::tests::test_encode_basestring_ascii::TestEncodeBaseStringAscii
   inherits from unittest::TestCase
   function _test_encode_basestring_ascii((null),(null)) in line 34
      10 lines of code
      2 parameters
      1 conditional paths
      uses variable encode_basestring_ascii defined in encoder.py
   function test_c_encode_basestring_ascii((null)) in line 29
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _test_encode_basestring_ascii((null),(null)) defined in src::kiasan_v1::simplejson::tests::test_encode_basestring_ascii::TestEncodeBaseStringAscii
   function test_py_encode_basestring_ascii((null)) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function _test_encode_basestring_ascii((null),(null)) defined in src::kiasan_v1::simplejson::tests::test_encode_basestring_ascii::TestEncodeBaseStringAscii
   function test_sorted_dict((null)) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_encode_for_html.py
module src::kiasan_v1::simplejson::tests::test_encode_for_html::TestEncodeForHTML
   inherits from unittest::TestCase
   function setUp((null)) in line 7
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function test_basic_encode((null)) in line 11
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_basic_roundtrip((null)) in line 16
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_prevent_script_breakout((null)) in line 22
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   variable decoder in line 8
      protection public
   variable encoder in line 9
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_errors.py
module src::kiasan_v1::simplejson::tests::test_errors::TestErrors
   inherits from unittest::TestCase
   function test_decode_error((null)) in line 12
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_scan_error((null)) in line 25
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in kiasan_app.py
   function test_string_keys_error((null)) in line 8
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_fail.py
module test_fail.py
   variable JSONDOCS in line 7
      protection public
   variable SKIPS in line 85
      protection public
module src::kiasan_v1::simplejson::tests::test_fail::TestFail
   inherits from unittest::TestCase
   function test_array_decoder_issue46((null)) in line 105
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function test_failures((null)) in line 91
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_float.py
module src::kiasan_v1::simplejson::tests::test_float::TestFloat
   inherits from unittest::TestCase
   function test_degenerates((null)) in line 8
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_floats((null)) in line 15
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable text_type defined in compat.py
   function test_ints((null)) in line 22
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable long_type defined in compat.py
      uses variable text_type defined in compat.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_indent.py
module src::kiasan_v1::simplejson::tests::test_indent::TestIndent
   inherits from unittest::TestCase
   function test_indent((null)) in line 8
      protection public
      48 lines of code
      1 parameters
      1 conditional paths
   function test_indent0((null)) in line 56
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_separators((null)) in line 71
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_item_sort_key.py
module src::kiasan_v1::simplejson::tests::test_item_sort_key::TestItemSortKey
   inherits from unittest::TestCase
   function test_case((null)) in line 13
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function test_simple_first((null)) in line 7
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_namedtuple.py
module test_namedtuple.py
   variable Value in line 22
      protection public
   variable Point in line 23
      protection public
   variable CONSTRUCTORS in line 45
      protection public
module src::kiasan_v1::simplejson::tests::test_namedtuple::Value
   inherits from tuple
   function __new__((null),(null)) in line 10
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function _asdict((null)) in line 13
      3 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::tests::test_namedtuple::Point
   inherits from tuple
   function __new__((null),(null)) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function _asdict((null)) in line 19
      4 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::tests::test_namedtuple::DuckValue
   inherits from object
   function _asdict((null)) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
   function __init__((null),(null)) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable value in line 27
      protection public
module src::kiasan_v1::simplejson::tests::test_namedtuple::DuckPoint
   inherits from object
   function _asdict((null)) in line 36
      3 lines of code
      1 parameters
      1 conditional paths
   function __init__((null),(null)) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable point in line 34
      protection public
module src::kiasan_v1::simplejson::tests::test_namedtuple::DeadDuck
   inherits from object
   variable _asdict in line 40
module src::kiasan_v1::simplejson::tests::test_namedtuple::DeadDict
   inherits from dict
   variable _asdict in line 43
module src::kiasan_v1::simplejson::tests::test_namedtuple::TestNamedTuple
   inherits from unittest::TestCase
   function test_asdict_not_callable_dump((null)) in line 106
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_asdict_not_callable_dumps((null)) in line 116
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_namedtuple_dump((null)) in line 74
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_namedtuple_dump_false((null)) in line 95
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_namedtuple_dumps((null)) in line 52
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function test_namedtuple_dumps_false((null)) in line 65
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_pass1.py
module test_pass1.py
   variable JSON in line 6
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_pass2.py
module test_pass2.py
   variable JSON in line 5
      protection public
module src::kiasan_v1::simplejson::tests::test_pass2::TestPass2
   inherits from unittest::TestCase
   function test_parse((null)) in line 10
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_pass3.py
module test_pass3.py
   variable JSON in line 6
      protection public
module src::kiasan_v1::simplejson::tests::test_pass3::TestPass3
   inherits from unittest::TestCase
   function test_parse((null)) in line 16
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_recursion.py
module src::kiasan_v1::simplejson::tests::test_recursion::JSONTestObject
module src::kiasan_v1::simplejson::tests::test_recursion::RecursiveJSONEncoder
   inherits from json::JSONEncoder
   function default((null),(null)) in line 11
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable recurse defined in src::kiasan_v1::simplejson::tests::test_recursion::RecursiveJSONEncoder
   variable recurse in line 10
      protection public
module src::kiasan_v1::simplejson::tests::test_recursion::TestRecursion
   inherits from unittest::TestCase
   function test_defaultrecursion((null)) in line 58
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_dictrecursion((null)) in line 44
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function test_listrecursion((null)) in line 21
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_scanstring.py
module src::kiasan_v1::simplejson::tests::test_scanstring::TestScanString
   inherits from unittest::TestCase
   function _test_scanstring((null),(null)) in line 25
      111 lines of code
      2 parameters
      1 conditional paths
      uses variable scanstring defined in decoder.py
   function test_c_scanstring((null)) in line 20
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _test_scanstring((null),(null)) defined in src::kiasan_v1::simplejson::tests::test_scanstring::TestScanString
   function test_issue3623((null)) in line 136
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function b((null)) defined in compat.py
   function test_overflow((null)) in line 142
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_py_scanstring((null)) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function _test_scanstring((null),(null)) defined in src::kiasan_v1::simplejson::tests::test_scanstring::TestScanString
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_separators.py
module src::kiasan_v1::simplejson::tests::test_separators::TestSeparators
   inherits from unittest::TestCase
   function test_separators((null)) in line 8
      protection public
      36 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_speedups.py
module test_speedups.py
   function has_speedups() in line 5
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::tests::test_speedups::TestDecode
   inherits from unittest::TestCase
   function test_make_encoder((null)) in line 14
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function has_speedups() defined in test_speedups.py
   function test_make_scanner((null)) in line 9
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function has_speedups() defined in test_speedups.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_tuple.py
module src::kiasan_v1::simplejson::tests::test_tuple::TestTuples
   inherits from unittest::TestCase
   function test_tuple_array_dump((null)) in line 23
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
      uses variable StringIO defined in compat.py
   function test_tuple_array_dumps((null)) in line 7
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::simplejson::tests::test_tuple::TestNamedTuple
   inherits from unittest::TestCase
   function test_namedtuple_dump((null)) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tests/test_unicode.py
module src::kiasan_v1::simplejson::tests::test_unicode::TestUnicode
   inherits from unittest::TestCase
   function test_big_unicode_decode((null)) in line 48
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_big_unicode_encode((null)) in line 43
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_default_encoding((null)) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function encode((null),(null),(null),(null)) defined in base64mime.py
   function test_encoding1((null)) in line 8
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function test_encoding2((null)) in line 16
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_encoding3((null)) in line 23
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_encoding4((null)) in line 28
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_encoding5((null)) in line 33
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_encoding6((null)) in line 38
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function test_ensure_ascii_false_bytestring_encoding((null)) in line 92
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function b((null)) defined in compat.py
      uses function u((null)) defined in compat.py
   function test_ensure_ascii_false_returns_unicode((null)) in line 85
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function test_ensure_ascii_linebreak_encoding((null)) in line 103
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function test_ensure_ascii_still_works((null)) in line 147
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function test_invalid_escape_sequences((null)) in line 113
      protection public
      34 lines of code
      1 parameters
      1 conditional paths
   function test_object_pairs_hook_with_unicode((null)) in line 60
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function test_unicode_decode((null)) in line 53
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable unichr defined in compat.py
   function test_unicode_preservation((null)) in line 80
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/simplejson/tool.py
module tool.py
   function main() in line 16
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/mock.py
module kiasan_v1/test/mock.py
   variable __all__ in line 16
   variable __version__ in line 33
   variable inspect in line 44
      protection public
   variable wraps in line 60
      protection public
   variable basestring in line 73
      protection public
   variable long in line 79
      protection public
   variable BaseException in line 85
      protection public
   variable BaseExceptions in line 94
      protection public
   variable _isidentifier in line 101
   variable regex in line 106
      protection public
   variable inPy3k in line 113
      protection public
   variable _super in line 117
   variable self in line 119
      protection public
   variable builtin in line 120
      protection public
   variable FILTER_DIR in line 125
      protection public
   variable DescriptorTypes in line 145
      protection public
   variable sentinel in line 361
      protection public
   variable DEFAULT in line 363
      protection public
   variable _missing in line 364
   variable _deleted in line 365
   variable ClassType in line 370
      protection public
   variable ClassTypes in line 379
      protection public
   variable _allowed_names in line 383
   variable magic_methods in line 1710
      protection public
   variable numerics in line 1721
      protection public
   variable inplace in line 1722
      protection public
   variable right in line 1723
      protection public
   variable extra in line 1724
      protection public
   variable _non_defaults in line 1734
   variable _magics in line 1751
   variable _all_magics in line 1756
   variable _unsupported_magics in line 1758
   variable _calculate_return_value in line 1765
   variable _return_values in line 1772
   variable _side_effect_methods in line 1817
   variable ANY in line 1947
      protection public
   variable call in line 2131
      protection public
   variable FunctionTypes in line 2296
      protection public
   variable FunctionAttributes in line 2305
      protection public
   variable file_spec in line 2316
      protection public
   function wraps((null)) in line 50
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable wraps defined in kiasan_v1/test/mock.py
   function next((null)) in line 90
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function _isidentifier((null)) in line 107
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable _isidentifier defined in kiasan_v1/test/mock.py
   function _is_instance_mock((null)) in line 128
      6 lines of code
      1 parameters
      1 conditional paths
   function _is_exception((null)) in line 134
      7 lines of code
      1 parameters
      1 conditional paths
   function _getsignature((null),(null),(null)) in line 151
      49 lines of code
      3 parameters
      1 conditional paths
   function _check_signature((null),(null),(null),(null)) in line 200
      17 lines of code
      4 parameters
      1 conditional paths
      uses function _callable((null)) defined in kiasan_v1/test/mock.py
      uses function _getsignature((null),(null),(null)) defined in kiasan_v1/test/mock.py
      uses function _copy_func_details((null),(null)) defined in kiasan_v1/test/mock.py
   function _copy_func_details((null),(null)) in line 217
      12 lines of code
      2 parameters
      1 conditional paths
   function _callable((null)) in line 229
      8 lines of code
      1 parameters
      1 conditional paths
   function _is_list((null)) in line 237
      6 lines of code
      1 parameters
      1 conditional paths
   function _instance_callable((null)) in line 243
      18 lines of code
      1 parameters
      1 conditional paths
   function _set_signature((null),(null),(null)) in line 261
      32 lines of code
      3 parameters
      1 conditional paths
      uses function _callable((null)) defined in kiasan_v1/test/mock.py
      uses function _getsignature((null),(null),(null)) defined in kiasan_v1/test/mock.py
      uses function _copy_func_details((null),(null)) defined in kiasan_v1/test/mock.py
      uses variable _isidentifier defined in kiasan_v1/test/mock.py
      uses function _setup_func((null),(null)) defined in kiasan_v1/test/mock.py
   function _setup_func((null),(null)) in line 293
      43 lines of code
      2 parameters
      1 conditional paths
      uses function _is_instance_mock((null)) defined in kiasan_v1/test/mock.py
   function _is_magic((null)) in line 336
      4 lines of code
      1 parameters
      1 conditional paths
   function _copy((null)) in line 373
      6 lines of code
      1 parameters
      1 conditional paths
   function _delegating_property((null)) in line 392
      19 lines of code
      1 parameters
      1 conditional paths
   function _check_and_set_parent((null),(null),(null),(null)) in line 431
      26 lines of code
      4 parameters
      1 conditional paths
      uses function _is_instance_mock((null)) defined in kiasan_v1/test/mock.py
   function _try_iter((null)) in line 915
      16 lines of code
      1 parameters
      1 conditional paths
      uses function _is_exception((null)) defined in kiasan_v1/test/mock.py
      uses function _callable((null)) defined in kiasan_v1/test/mock.py
   function _dot_lookup((null),(null),(null)) in line 1087
      8 lines of code
      3 parameters
      1 conditional paths
   function _importer((null)) in line 1095
      11 lines of code
      1 parameters
      1 conditional paths
      uses function _dot_lookup((null),(null),(null)) defined in kiasan_v1/test/mock.py
   function _is_started((null)) in line 1106
      5 lines of code
      1 parameters
      1 conditional paths
   function _get_target((null)) in line 1408
      10 lines of code
      1 parameters
      1 conditional paths
      uses function _importer((null)) defined in kiasan_v1/test/mock.py
      uses function _patch_object((null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in kiasan_v1/test/mock.py
   function _patch_object((null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 1418
      24 lines of code
      9 parameters
      1 conditional paths
      uses function _patch_multiple((null),(null),(null),(null),(null),(null),(null)) defined in kiasan_v1/test/mock.py
   function _patch_multiple((null),(null),(null),(null),(null),(null),(null)) in line 1446
      48 lines of code
      7 parameters
      1 conditional paths
      uses function _importer((null)) defined in kiasan_v1/test/mock.py
      uses function patch((null),(null),(null),(null),(null),(null),(null),(null)) defined in kiasan_v1/test/mock.py
   function patch((null),(null),(null),(null),(null),(null),(null),(null)) in line 1495
      protection public
      73 lines of code
      8 parameters
      1 conditional paths
      uses function _get_target((null)) defined in kiasan_v1/test/mock.py
   function _clear_dict((null)) in line 1689
      9 lines of code
      1 parameters
      1 conditional paths
   function _patch_stopall() in line 1698
      12 lines of code
      0 parameters
      1 conditional paths
   function _get_method((null),(null)) in line 1743
      8 lines of code
      2 parameters
      1 conditional paths
   function _get_eq((null)) in line 1792
      8 lines of code
      1 parameters
      1 conditional paths
   function _get_ne((null)) in line 1800
      7 lines of code
      1 parameters
      1 conditional paths
   function _get_iter((null)) in line 1807
      10 lines of code
      1 parameters
      1 conditional paths
   function _set_return_value((null),(null),(null)) in line 1825
      23 lines of code
      3 parameters
      1 conditional paths
   function _format_call_signature((null),(null),(null)) in line 1951
      18 lines of code
      3 parameters
      1 conditional paths
   function create_autospec((null),(null),(null),(null),(null),(null)) in line 2135
      protection public
      117 lines of code
      6 parameters
      1 conditional paths
      uses function _is_list((null)) defined in kiasan_v1/test/mock.py
      uses function _callable((null)) defined in kiasan_v1/test/mock.py
      uses function _instance_callable((null)) defined in kiasan_v1/test/mock.py
      uses function _set_signature((null),(null),(null)) defined in kiasan_v1/test/mock.py
      uses function _check_signature((null),(null),(null),(null)) defined in kiasan_v1/test/mock.py
      uses function _is_magic((null)) defined in kiasan_v1/test/mock.py
      uses function _must_skip((null),(null),(null)) defined in kiasan_v1/test/mock.py
   function _must_skip((null),(null),(null)) in line 2253
      23 lines of code
      3 parameters
      1 conditional paths
   function _get_class((null)) in line 2276
      8 lines of code
      1 parameters
      1 conditional paths
   function mock_open((null),(null)) in line 2319
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
module src::kiasan_v1::test::mock::_slotted
   inherits from object
   variable __slots__ in line 142
module src::kiasan_v1::test::mock::_SentinelObject
   inherits from object
   function __repr__((null)) in line 345
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
   function __init__((null),(null)) in line 342
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable name in line 343
      protection public
module src::kiasan_v1::test::mock::_Sentinel
   inherits from object
   function __getattr__((null),(null)) in line 354
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function __init__((null)) in line 351
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable _sentinels in line 352
module src::kiasan_v1::test::mock::OldStyleClass
module src::kiasan_v1::test::mock::_CallList
   inherits from list
   function __contains__((null),(null)) in line 413
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function __repr__((null)) in line 427
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::test::mock::Base
   inherits from object
   function __init__((null),(null),(null)) in line 460
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable _mock_return_value in line 458
   variable _mock_side_effect in line 459
module src::kiasan_v1::test::mock::NonCallableMock
   inherits from src::kiasan_v1::test::mock::Base
   function __class__((null)) in line 583
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable _spec_class defined in src::kiasan_v1::test::mock::NonCallableMock
   function __delattr__((null),(null)) in line 788
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
   function __dir__((null)) in line 738
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function _is_magic((null)) defined in kiasan_v1/test/mock.py
   function __get_return_value((null)) in line 557
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable _mock_return_value defined in src::kiasan_v1::test::mock::Base
      uses function _get_child_mock((null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses property return_value defined in src::kiasan_v1::test::mock::NonCallableMock
   function __get_side_effect((null)) in line 595
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable _mock_side_effect defined in src::kiasan_v1::test::mock::Base
   function __getattr__((null),(null)) in line 653
      protection public
      35 lines of code
      2 parameters
      1 conditional paths
      uses function _is_magic((null)) defined in kiasan_v1/test/mock.py
      uses function _get_child_mock((null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function create_autospec((null),(null),(null),(null),(null),(null)) defined in kiasan_v1/test/mock.py
   function __new__((null),(null),(null)) in line 468
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable __name__ defined in src::email::LazyImporter
      uses function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
   function __repr__((null)) in line 688
      protection public
      50 lines of code
      1 parameters
      1 conditional paths
      uses variable _spec_class defined in src::kiasan_v1::test::mock::NonCallableMock
   function __set_return_value((null),(null)) in line 570
      7 lines of code
      2 parameters
      1 conditional paths
   function __set_side_effect((null),(null)) in line 601
      8 lines of code
      2 parameters
      1 conditional paths
      uses function _try_iter((null)) defined in kiasan_v1/test/mock.py
   function __setattr__((null),(null),(null)) in line 754
      protection public
      34 lines of code
      3 parameters
      1 conditional paths
      uses function _is_instance_mock((null)) defined in kiasan_v1/test/mock.py
      uses function _get_method((null),(null)) defined in kiasan_v1/test/mock.py
      uses function _check_and_set_parent((null),(null),(null),(null)) defined in kiasan_v1/test/mock.py
   function _format_mock_call_signature((null),(null),(null)) in line 808
      5 lines of code
      3 parameters
      1 conditional paths
      uses function _format_call_signature((null),(null),(null)) defined in kiasan_v1/test/mock.py
   function _format_mock_failure_message((null),(null),(null)) in line 813
      10 lines of code
      3 parameters
      1 conditional paths
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args defined in src::kiasan_v1::test::mock::NonCallableMock
   function _get_child_mock((null),(null)) in line 895
      20 lines of code
      2 parameters
      1 conditional paths
   function _mock_add_spec((null),(null),(null)) in line 540
      17 lines of code
      3 parameters
      1 conditional paths
      uses function _is_list((null)) defined in kiasan_v1/test/mock.py
      uses function _get_class((null)) defined in kiasan_v1/test/mock.py
   function assert_any_call((null),(null),(null)) in line 881
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
      uses variable call defined in kiasan_v1/test/mock.py
      uses variable call_args_list defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
   function assert_called_once_with((null),(null),(null)) in line 838
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses variable call_count defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function assert_called_with((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
   function assert_called_with((null),(null),(null)) in line 823
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
      uses variable call_args defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _format_mock_failure_message((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
   function assert_has_calls((null),(null),(null)) in line 849
      protection public
      32 lines of code
      3 parameters
      1 conditional paths
      uses variable mock_calls defined in src::kiasan_v1::test::mock::NonCallableMock
   function attach_mock((null),(null),(null)) in line 518
      protection public
      13 lines of code
      3 parameters
      1 conditional paths
   function configure_mock((null),(null)) in line 631
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
   function mock_add_spec((null),(null),(null)) in line 531
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
   function reset_mock((null)) in line 612
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable called defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_count defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable mock_calls defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args_list defined in src::kiasan_v1::test::mock::NonCallableMock
   function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 477
      protection public
      37 lines of code
      10 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function configure_mock((null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable _super defined in kiasan_v1/test/mock.py
   variable __return_value_doc in line 577
   variable _mock_return_value in line 574
   variable _mock_side_effect in line 605
   variable _spec_class in line 780
   variable call_args in line 590
      protection public
   variable call_args_list in line 591
      protection public
   variable call_count in line 589
      protection public
   variable called in line 588
      protection public
   variable method_calls in line 619
      protection public
   variable mock_calls in line 592
      protection public
module src::kiasan_v1::test::mock::CallableMixin
   inherits from src::kiasan_v1::test::mock::Base
   function __call__((null),(null),(null)) in line 951
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   function _mock_call((null),(null),(null)) in line 958
      73 lines of code
      3 parameters
      1 conditional paths
   function _mock_check_sig((null),(null),(null)) in line 946
      5 lines of code
      3 parameters
      1 conditional paths
   function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 933
      protection public
      11 lines of code
      12 parameters
      1 conditional paths
      uses variable _super defined in kiasan_v1/test/mock.py
   variable call_args in line 962
      protection public
   variable called in line 960
      protection public
   variable side_effect in line 943
      protection public
module src::kiasan_v1::test::mock::Mock
   inherits from src::kiasan_v1::test::mock::CallableMixin
   inherits from src::kiasan_v1::test::mock::NonCallableMock
module src::kiasan_v1::test::mock::_patch
   inherits from object
   function __call__((null),(null)) in line 1156
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function decorate_class((null),(null)) defined in src::kiasan_v1::test::mock::_patch
      uses function decorate_callable((null),(null)) defined in src::kiasan_v1::test::mock::_patch
   function __enter__((null)) in line 1247
      protection public
      126 lines of code
      1 parameters
      1 conditional paths
      uses variable new defined in src::kiasan_v1::test::mock::_patch
      uses variable spec defined in src::kiasan_v1::test::mock::_patch
      uses variable spec_set defined in src::kiasan_v1::test::mock::_patch
      uses variable autospec defined in src::kiasan_v1::test::mock::_patch
      uses variable kwargs defined in src::kiasan_v1::test::mock::_patch
      uses variable new_callable defined in src::kiasan_v1::test::mock::_patch
   function __exit__((null),(null)) in line 1373
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
      uses function _is_started((null)) defined in kiasan_v1/test/mock.py
      uses variable is_local defined in src::kiasan_v1::test::mock::_patch
      uses variable temp_original defined in src::kiasan_v1::test::mock::_patch
      uses variable target defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute defined in src::kiasan_v1::test::mock::_patch
      uses variable create defined in src::kiasan_v1::test::mock::_patch
      uses variable additional_patchers defined in src::kiasan_v1::test::mock::_patch
   function copy((null)) in line 1143
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable getter defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute defined in src::kiasan_v1::test::mock::_patch
      uses variable new defined in src::kiasan_v1::test::mock::_patch
      uses variable spec defined in src::kiasan_v1::test::mock::_patch
      uses variable create defined in src::kiasan_v1::test::mock::_patch
      uses variable spec_set defined in src::kiasan_v1::test::mock::_patch
      uses variable autospec defined in src::kiasan_v1::test::mock::_patch
      uses variable new_callable defined in src::kiasan_v1::test::mock::_patch
      uses variable kwargs defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute_name defined in src::kiasan_v1::test::mock::_patch
      uses variable additional_patchers defined in src::kiasan_v1::test::mock::_patch
   function decorate_callable((null),(null)) in line 1176
      protection public
      50 lines of code
      2 parameters
      1 conditional paths
      uses variable wraps defined in kiasan_v1/test/mock.py
      uses function _is_started((null)) defined in kiasan_v1/test/mock.py
   function decorate_class((null),(null)) in line 1162
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function copy((null)) defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses function copy((null)) defined in src::kiasan_v1::test::mock::_patch
   function get_original((null)) in line 1226
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses variable getter defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute defined in src::kiasan_v1::test::mock::_patch
      uses variable create defined in src::kiasan_v1::test::mock::_patch
   function start((null)) in line 1394
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function __enter__((null)) defined in src::kiasan_v1::test::mock::_patch
   function stop((null)) in line 1401
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function __exit__((null),(null)) defined in src::kiasan_v1::test::mock::_patch
   function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 1116
      protection public
      24 lines of code
      10 parameters
      1 conditional paths
   variable _active_patches in line 1114
   variable additional_patchers in line 1140
      protection public
   variable attribute in line 1131
      protection public
   variable attribute_name in line 1113
      protection public
   variable autospec in line 1138
      protection public
   variable create in line 1135
      protection public
   variable getter in line 1130
      protection public
   variable has_local in line 1136
      protection public
   variable is_local in line 1358
      protection public
   variable kwargs in line 1139
      protection public
   variable new in line 1132
      protection public
   variable new_callable in line 1133
      protection public
   variable spec in line 1134
      protection public
   variable spec_set in line 1137
      protection public
   variable target in line 1252
      protection public
   variable temp_original in line 1357
      protection public
module src::kiasan_v1::test::mock::_patch_dict
   inherits from object
   function __call__((null),(null)) in line 1611
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function decorate_class((null),(null)) defined in src::kiasan_v1::test::mock::_patch
      uses function decorate_class((null),(null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable wraps defined in kiasan_v1/test/mock.py
      uses function _patch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function _unpatch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
   function __enter__((null)) in line 1636
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _patch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
   function __exit__((null),(null)) in line 1680
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function _unpatch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
   function _unpatch_dict((null)) in line 1667
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable in_dict defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable _original defined in src::kiasan_v1::test::mock::_patch_dict
      uses function _clear_dict((null)) defined in kiasan_v1/test/mock.py
   function decorate_class((null),(null)) in line 1625
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable in_dict defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
      uses variable values defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable clear defined in src::kiasan_v1::test::mock::_patch_dict
   function __init__((null),(null),(null),(null),(null)) in line 1600
      protection public
      11 lines of code
      5 parameters
      1 conditional paths
      uses function _importer((null)) defined in kiasan_v1/test/mock.py
   function _patch_dict((null)) in line 1641
      26 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
      uses variable values defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable in_dict defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable clear defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable _original defined in src::kiasan_v1::test::mock::_patch_dict
      uses function _clear_dict((null)) defined in kiasan_v1/test/mock.py
   variable _original in line 1608
   variable clear in line 1607
      protection public
   variable in_dict in line 1603
      protection public
   variable start in line 1685
      protection public
   variable stop in line 1686
      protection public
   variable values in line 1605
      protection public
module src::kiasan_v1::test::mock::MagicMixin
   inherits from object
   function _mock_set_magics((null)) in line 1854
      23 lines of code
      1 parameters
      1 conditional paths
   function __init__((null),(null),(null)) in line 1849
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable _super defined in kiasan_v1/test/mock.py
      uses function _mock_set_magics((null)) defined in src::kiasan_v1::test::mock::MagicMixin
module src::kiasan_v1::test::mock::NonCallableMagicMock
   inherits from src::kiasan_v1::test::mock::MagicMixin
   inherits from src::kiasan_v1::test::mock::NonCallableMock
   function mock_add_spec((null),(null),(null)) in line 1879
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _mock_set_magics((null)) defined in src::kiasan_v1::test::mock::MagicMixin
module src::kiasan_v1::test::mock::MagicMock
   inherits from src::kiasan_v1::test::mock::MagicMixin
   inherits from src::kiasan_v1::test::mock::Mock
   function mock_add_spec((null),(null),(null)) in line 1901
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _mock_set_magics((null)) defined in src::kiasan_v1::test::mock::MagicMixin
module src::kiasan_v1::test::mock::MagicProxy
   inherits from object
   function __call__((null),(null),(null)) in line 1917
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function create_mock((null)) defined in src::kiasan_v1::test::mock::MagicProxy
   function __get__((null),(null),(null)) in line 1930
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function create_mock((null)) defined in src::kiasan_v1::test::mock::MagicProxy
   function create_mock((null)) in line 1921
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable parent defined in src::kiasan_v1::test::mock::MagicProxy
      uses function _set_return_value((null),(null),(null)) defined in kiasan_v1/test/mock.py
   function __init__((null),(null),(null)) in line 1913
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable name in line 1914
      protection public
   variable parent in line 1915
      protection public
module src::kiasan_v1::test::mock::_ANY
   inherits from object
   function __eq__((null),(null)) in line 1938
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function __ne__((null),(null)) in line 1941
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function __repr__((null)) in line 1944
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module src::kiasan_v1::test::mock::_Call
   inherits from tuple
   function __call__((null),(null),(null)) in line 2082
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
   function __eq__((null),(null)) in line 2028
      protection public
      50 lines of code
      2 parameters
      1 conditional paths
   function __getattr__((null),(null)) in line 2090
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
   function __ne__((null),(null)) in line 2078
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function __eq__((null),(null)) defined in src::email::charset::Charset
      uses function __eq__((null),(null)) defined in src::email::header::Header
      uses function __eq__((null),(null)) defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses function __eq__((null),(null)) defined in src::kiasan_v1::test::mock::_ANY
      uses function __eq__((null),(null)) defined in src::kiasan_v1::test::mock::_Call
   function __new__((null),(null),(null),(null),(null),(null)) in line 1988
      protection public
      32 lines of code
      6 parameters
      1 conditional paths
      uses function __init__((null),(null),(null),(null),(null),(null)) defined in src::kiasan_v1::test::mock::_Call
   function __repr__((null)) in line 2097
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses variable from_kall defined in src::kiasan_v1::test::mock::_Call
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
      uses function _format_call_signature((null),(null),(null)) defined in kiasan_v1/test/mock.py
   function call_list((null)) in line 2118
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function __init__((null),(null),(null),(null),(null),(null)) in line 2021
      protection public
      6 lines of code
      6 parameters
      1 conditional paths
   variable from_kall in line 2025
      protection public
   variable name in line 2023
      protection public
   variable parent in line 2024
      protection public
module src::kiasan_v1::test::mock::_SpecState
   inherits from object
   function __init__((null),(null),(null),(null),(null),(null),(null)) in line 2286
      protection public
      9 lines of code
      7 parameters
      1 conditional paths
   variable ids in line 2289
      protection public
   variable instance in line 2292
      protection public
   variable name in line 2293
      protection public
   variable parent in line 2291
      protection public
   variable spec in line 2288
      protection public
   variable spec_set in line 2290
      protection public
module src::kiasan_v1::test::mock::PropertyMock
   inherits from src::kiasan_v1::test::mock::Mock
   function __get__((null),(null),(null)) in line 2364
      protection public
      2 lines of code
      3 parameters
      1 conditional paths
      uses variable self defined in kiasan_v1/test/mock.py
   function __set__((null),(null),(null)) in line 2366
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable self defined in kiasan_v1/test/mock.py
   function _get_child_mock((null),(null)) in line 2361
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/test/mock.py
module test/mock.py
   variable __all__ in line 16
   variable __version__ in line 33
   variable inspect in line 44
      protection public
   variable wraps in line 60
      protection public
   variable basestring in line 73
      protection public
   variable long in line 79
      protection public
   variable BaseException in line 85
      protection public
   variable BaseExceptions in line 94
      protection public
   variable _isidentifier in line 101
   variable regex in line 106
      protection public
   variable inPy3k in line 113
      protection public
   variable _super in line 117
   variable self in line 119
      protection public
   variable builtin in line 120
      protection public
   variable FILTER_DIR in line 125
      protection public
   variable DescriptorTypes in line 145
      protection public
   variable sentinel in line 361
      protection public
   variable DEFAULT in line 363
      protection public
   variable _missing in line 364
   variable _deleted in line 365
   variable ClassType in line 370
      protection public
   variable ClassTypes in line 379
      protection public
   variable _allowed_names in line 383
   variable magic_methods in line 1710
      protection public
   variable numerics in line 1721
      protection public
   variable inplace in line 1722
      protection public
   variable right in line 1723
      protection public
   variable extra in line 1724
      protection public
   variable _non_defaults in line 1734
   variable _magics in line 1751
   variable _all_magics in line 1756
   variable _unsupported_magics in line 1758
   variable _calculate_return_value in line 1765
   variable _return_values in line 1772
   variable _side_effect_methods in line 1817
   variable ANY in line 1947
      protection public
   variable call in line 2131
      protection public
   variable FunctionTypes in line 2296
      protection public
   variable FunctionAttributes in line 2305
      protection public
   variable file_spec in line 2316
      protection public
   function wraps((null)) in line 50
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable wraps defined in test/mock.py
   function next((null)) in line 90
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function _isidentifier((null)) in line 107
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable _isidentifier defined in test/mock.py
   function _is_instance_mock((null)) in line 128
      6 lines of code
      1 parameters
      1 conditional paths
   function _is_exception((null)) in line 134
      7 lines of code
      1 parameters
      1 conditional paths
   function _getsignature((null),(null),(null)) in line 151
      49 lines of code
      3 parameters
      1 conditional paths
   function _check_signature((null),(null),(null),(null)) in line 200
      17 lines of code
      4 parameters
      1 conditional paths
      uses function _callable((null)) defined in test/mock.py
      uses function _getsignature((null),(null),(null)) defined in test/mock.py
      uses function _copy_func_details((null),(null)) defined in test/mock.py
   function _copy_func_details((null),(null)) in line 217
      12 lines of code
      2 parameters
      1 conditional paths
   function _callable((null)) in line 229
      8 lines of code
      1 parameters
      1 conditional paths
   function _is_list((null)) in line 237
      6 lines of code
      1 parameters
      1 conditional paths
   function _instance_callable((null)) in line 243
      18 lines of code
      1 parameters
      1 conditional paths
   function _set_signature((null),(null),(null)) in line 261
      32 lines of code
      3 parameters
      1 conditional paths
      uses function _callable((null)) defined in test/mock.py
      uses function _getsignature((null),(null),(null)) defined in test/mock.py
      uses function _copy_func_details((null),(null)) defined in test/mock.py
      uses variable _isidentifier defined in test/mock.py
      uses function _setup_func((null),(null)) defined in test/mock.py
   function _setup_func((null),(null)) in line 293
      43 lines of code
      2 parameters
      1 conditional paths
      uses function _is_instance_mock((null)) defined in test/mock.py
   function _is_magic((null)) in line 336
      4 lines of code
      1 parameters
      1 conditional paths
   function _copy((null)) in line 373
      6 lines of code
      1 parameters
      1 conditional paths
   function _delegating_property((null)) in line 392
      19 lines of code
      1 parameters
      1 conditional paths
   function _check_and_set_parent((null),(null),(null),(null)) in line 431
      26 lines of code
      4 parameters
      1 conditional paths
      uses function _is_instance_mock((null)) defined in test/mock.py
   function _try_iter((null)) in line 915
      16 lines of code
      1 parameters
      1 conditional paths
      uses function _is_exception((null)) defined in test/mock.py
      uses function _callable((null)) defined in test/mock.py
   function _dot_lookup((null),(null),(null)) in line 1087
      8 lines of code
      3 parameters
      1 conditional paths
   function _importer((null)) in line 1095
      11 lines of code
      1 parameters
      1 conditional paths
      uses function _dot_lookup((null),(null),(null)) defined in test/mock.py
   function _is_started((null)) in line 1106
      5 lines of code
      1 parameters
      1 conditional paths
   function _get_target((null)) in line 1408
      10 lines of code
      1 parameters
      1 conditional paths
      uses function _importer((null)) defined in test/mock.py
      uses function _patch_object((null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in test/mock.py
   function _patch_object((null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 1418
      24 lines of code
      9 parameters
      1 conditional paths
      uses function _patch_multiple((null),(null),(null),(null),(null),(null),(null)) defined in test/mock.py
   function _patch_multiple((null),(null),(null),(null),(null),(null),(null)) in line 1446
      48 lines of code
      7 parameters
      1 conditional paths
      uses function _importer((null)) defined in test/mock.py
      uses function patch((null),(null),(null),(null),(null),(null),(null),(null)) defined in test/mock.py
   function patch((null),(null),(null),(null),(null),(null),(null),(null)) in line 1495
      protection public
      73 lines of code
      8 parameters
      1 conditional paths
      uses function _get_target((null)) defined in test/mock.py
   function _clear_dict((null)) in line 1689
      9 lines of code
      1 parameters
      1 conditional paths
   function _patch_stopall() in line 1698
      12 lines of code
      0 parameters
      1 conditional paths
   function _get_method((null),(null)) in line 1743
      8 lines of code
      2 parameters
      1 conditional paths
   function _get_eq((null)) in line 1792
      8 lines of code
      1 parameters
      1 conditional paths
   function _get_ne((null)) in line 1800
      7 lines of code
      1 parameters
      1 conditional paths
   function _get_iter((null)) in line 1807
      10 lines of code
      1 parameters
      1 conditional paths
   function _set_return_value((null),(null),(null)) in line 1825
      23 lines of code
      3 parameters
      1 conditional paths
   function _format_call_signature((null),(null),(null)) in line 1951
      18 lines of code
      3 parameters
      1 conditional paths
   function create_autospec((null),(null),(null),(null),(null),(null)) in line 2135
      protection public
      117 lines of code
      6 parameters
      1 conditional paths
      uses function _is_list((null)) defined in test/mock.py
      uses function _callable((null)) defined in test/mock.py
      uses function _instance_callable((null)) defined in test/mock.py
      uses function _set_signature((null),(null),(null)) defined in test/mock.py
      uses function _check_signature((null),(null),(null),(null)) defined in test/mock.py
      uses function _is_magic((null)) defined in test/mock.py
      uses function _must_skip((null),(null),(null)) defined in test/mock.py
   function _must_skip((null),(null),(null)) in line 2253
      23 lines of code
      3 parameters
      1 conditional paths
   function _get_class((null)) in line 2276
      8 lines of code
      1 parameters
      1 conditional paths
   function mock_open((null),(null)) in line 2319
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
module src::test::mock::_slotted
   inherits from object
   variable __slots__ in line 142
module src::test::mock::_SentinelObject
   inherits from object
   function __repr__((null)) in line 345
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
      uses variable name defined in src::kiasan_v1::test::mock::_SpecState
      uses variable name defined in src::test::mock::_SentinelObject
   function __init__((null),(null)) in line 342
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable name in line 343
      protection public
module src::test::mock::_Sentinel
   inherits from object
   function __getattr__((null),(null)) in line 354
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function __init__((null)) in line 351
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable _sentinels in line 352
module src::test::mock::OldStyleClass
module src::test::mock::_CallList
   inherits from list
   function __contains__((null),(null)) in line 413
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function __repr__((null)) in line 427
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module src::test::mock::Base
   inherits from object
   function __init__((null),(null),(null)) in line 460
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable _mock_return_value in line 458
   variable _mock_side_effect in line 459
module src::test::mock::NonCallableMock
   inherits from src::test::mock::Base
   function __class__((null)) in line 583
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable _spec_class defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable _spec_class defined in src::test::mock::NonCallableMock
   function __delattr__((null),(null)) in line 788
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
   function __dir__((null)) in line 738
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function _is_magic((null)) defined in test/mock.py
   function __get_return_value((null)) in line 557
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable _mock_return_value defined in src::kiasan_v1::test::mock::Base
      uses variable _mock_return_value defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable _mock_return_value defined in src::test::mock::Base
      uses function _get_child_mock((null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _get_child_mock((null),(null)) defined in src::kiasan_v1::test::mock::PropertyMock
      uses function _get_child_mock((null),(null)) defined in src::test::mock::NonCallableMock
      uses property return_value defined in src::kiasan_v1::test::mock::NonCallableMock
      uses property return_value defined in src::test::mock::NonCallableMock
   function __get_side_effect((null)) in line 595
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable _mock_side_effect defined in src::kiasan_v1::test::mock::Base
      uses variable _mock_side_effect defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable _mock_side_effect defined in src::test::mock::Base
   function __getattr__((null),(null)) in line 653
      protection public
      35 lines of code
      2 parameters
      1 conditional paths
      uses function _is_magic((null)) defined in test/mock.py
      uses function _get_child_mock((null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _get_child_mock((null),(null)) defined in src::kiasan_v1::test::mock::PropertyMock
      uses function _get_child_mock((null),(null)) defined in src::test::mock::NonCallableMock
      uses function create_autospec((null),(null),(null),(null),(null),(null)) defined in test/mock.py
   function __new__((null),(null),(null)) in line 468
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable __name__ defined in src::email::LazyImporter
      uses function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in src::test::mock::NonCallableMock
   function __repr__((null)) in line 688
      protection public
      50 lines of code
      1 parameters
      1 conditional paths
      uses variable _spec_class defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable _spec_class defined in src::test::mock::NonCallableMock
   function __set_return_value((null),(null)) in line 570
      7 lines of code
      2 parameters
      1 conditional paths
   function __set_side_effect((null),(null)) in line 601
      8 lines of code
      2 parameters
      1 conditional paths
      uses function _try_iter((null)) defined in test/mock.py
   function __setattr__((null),(null),(null)) in line 754
      protection public
      34 lines of code
      3 parameters
      1 conditional paths
      uses function _is_instance_mock((null)) defined in test/mock.py
      uses function _get_method((null),(null)) defined in test/mock.py
      uses function _check_and_set_parent((null),(null),(null),(null)) defined in test/mock.py
   function _format_mock_call_signature((null),(null),(null)) in line 808
      5 lines of code
      3 parameters
      1 conditional paths
      uses function _format_call_signature((null),(null),(null)) defined in test/mock.py
   function _format_mock_failure_message((null),(null),(null)) in line 813
      10 lines of code
      3 parameters
      1 conditional paths
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::test::mock::NonCallableMock
      uses variable call_args defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args defined in src::kiasan_v1::test::mock::CallableMixin
      uses variable call_args defined in src::test::mock::NonCallableMock
   function _get_child_mock((null),(null)) in line 895
      20 lines of code
      2 parameters
      1 conditional paths
   function _mock_add_spec((null),(null),(null)) in line 540
      17 lines of code
      3 parameters
      1 conditional paths
      uses function _is_list((null)) defined in test/mock.py
      uses function _get_class((null)) defined in test/mock.py
   function assert_any_call((null),(null),(null)) in line 881
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
      uses variable call defined in test/mock.py
      uses variable call_args_list defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args_list defined in src::test::mock::NonCallableMock
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::test::mock::NonCallableMock
   function assert_called_once_with((null),(null),(null)) in line 838
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses variable call_count defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_count defined in src::test::mock::NonCallableMock
      uses function assert_called_with((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function assert_called_with((null),(null),(null)) defined in src::test::mock::NonCallableMock
   function assert_called_with((null),(null),(null)) in line 823
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
      uses variable call_args defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args defined in src::kiasan_v1::test::mock::CallableMixin
      uses variable call_args defined in src::test::mock::NonCallableMock
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _format_mock_call_signature((null),(null),(null)) defined in src::test::mock::NonCallableMock
      uses function _format_mock_failure_message((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _format_mock_failure_message((null),(null),(null)) defined in src::test::mock::NonCallableMock
   function assert_has_calls((null),(null),(null)) in line 849
      protection public
      32 lines of code
      3 parameters
      1 conditional paths
      uses variable mock_calls defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable mock_calls defined in src::test::mock::NonCallableMock
   function attach_mock((null),(null),(null)) in line 518
      protection public
      13 lines of code
      3 parameters
      1 conditional paths
   function configure_mock((null),(null)) in line 631
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
   function mock_add_spec((null),(null),(null)) in line 531
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _mock_add_spec((null),(null),(null)) defined in src::test::mock::NonCallableMock
   function reset_mock((null)) in line 612
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable called defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable called defined in src::kiasan_v1::test::mock::CallableMixin
      uses variable called defined in src::test::mock::NonCallableMock
      uses variable call_args defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args defined in src::kiasan_v1::test::mock::CallableMixin
      uses variable call_args defined in src::test::mock::NonCallableMock
      uses variable call_count defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_count defined in src::test::mock::NonCallableMock
      uses variable mock_calls defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable mock_calls defined in src::test::mock::NonCallableMock
      uses variable call_args_list defined in src::kiasan_v1::test::mock::NonCallableMock
      uses variable call_args_list defined in src::test::mock::NonCallableMock
   function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 477
      protection public
      37 lines of code
      10 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _mock_add_spec((null),(null),(null)) defined in src::test::mock::NonCallableMock
      uses function configure_mock((null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function configure_mock((null),(null)) defined in src::test::mock::NonCallableMock
      uses variable _super defined in test/mock.py
   variable __return_value_doc in line 577
   variable _mock_return_value in line 574
   variable _mock_side_effect in line 605
   variable _spec_class in line 780
   variable call_args in line 590
      protection public
   variable call_args_list in line 591
      protection public
   variable call_count in line 589
      protection public
   variable called in line 588
      protection public
   variable method_calls in line 619
      protection public
   variable mock_calls in line 592
      protection public
module src::test::mock::CallableMixin
   inherits from src::test::mock::Base
   function __call__((null),(null),(null)) in line 951
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   function _mock_call((null),(null),(null)) in line 958
      73 lines of code
      3 parameters
      1 conditional paths
   function _mock_check_sig((null),(null),(null)) in line 946
      5 lines of code
      3 parameters
      1 conditional paths
   function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 933
      protection public
      11 lines of code
      12 parameters
      1 conditional paths
      uses variable _super defined in test/mock.py
   variable call_args in line 962
      protection public
   variable called in line 960
      protection public
   variable side_effect in line 943
      protection public
module src::test::mock::Mock
   inherits from src::test::mock::CallableMixin
   inherits from src::test::mock::NonCallableMock
module src::test::mock::_patch
   inherits from object
   function __call__((null),(null)) in line 1156
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function decorate_class((null),(null)) defined in src::kiasan_v1::test::mock::_patch
      uses function decorate_class((null),(null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function decorate_class((null),(null)) defined in src::test::mock::_patch
      uses function decorate_callable((null),(null)) defined in src::kiasan_v1::test::mock::_patch
      uses function decorate_callable((null),(null)) defined in src::test::mock::_patch
   function __enter__((null)) in line 1247
      protection public
      126 lines of code
      1 parameters
      1 conditional paths
      uses variable new defined in src::kiasan_v1::test::mock::_patch
      uses variable new defined in src::test::mock::_patch
      uses variable spec defined in src::kiasan_v1::test::mock::_patch
      uses variable spec defined in src::kiasan_v1::test::mock::_SpecState
      uses variable spec defined in src::test::mock::_patch
      uses variable spec_set defined in src::kiasan_v1::test::mock::_patch
      uses variable spec_set defined in src::kiasan_v1::test::mock::_SpecState
      uses variable spec_set defined in src::test::mock::_patch
      uses variable autospec defined in src::kiasan_v1::test::mock::_patch
      uses variable autospec defined in src::test::mock::_patch
      uses variable kwargs defined in src::kiasan_v1::test::mock::_patch
      uses variable kwargs defined in src::test::mock::_patch
      uses variable new_callable defined in src::kiasan_v1::test::mock::_patch
      uses variable new_callable defined in src::test::mock::_patch
   function __exit__((null),(null)) in line 1373
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
      uses function _is_started((null)) defined in test/mock.py
      uses variable is_local defined in src::kiasan_v1::test::mock::_patch
      uses variable is_local defined in src::test::mock::_patch
      uses variable temp_original defined in src::kiasan_v1::test::mock::_patch
      uses variable temp_original defined in src::test::mock::_patch
      uses variable target defined in src::kiasan_v1::test::mock::_patch
      uses variable target defined in src::test::mock::_patch
      uses variable attribute defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute defined in src::test::mock::_patch
      uses variable create defined in src::kiasan_v1::test::mock::_patch
      uses variable create defined in src::test::mock::_patch
      uses variable additional_patchers defined in src::kiasan_v1::test::mock::_patch
      uses variable additional_patchers defined in src::test::mock::_patch
   function copy((null)) in line 1143
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable getter defined in src::kiasan_v1::test::mock::_patch
      uses variable getter defined in src::test::mock::_patch
      uses variable attribute defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute defined in src::test::mock::_patch
      uses variable new defined in src::kiasan_v1::test::mock::_patch
      uses variable new defined in src::test::mock::_patch
      uses variable spec defined in src::kiasan_v1::test::mock::_patch
      uses variable spec defined in src::kiasan_v1::test::mock::_SpecState
      uses variable spec defined in src::test::mock::_patch
      uses variable create defined in src::kiasan_v1::test::mock::_patch
      uses variable create defined in src::test::mock::_patch
      uses variable spec_set defined in src::kiasan_v1::test::mock::_patch
      uses variable spec_set defined in src::kiasan_v1::test::mock::_SpecState
      uses variable spec_set defined in src::test::mock::_patch
      uses variable autospec defined in src::kiasan_v1::test::mock::_patch
      uses variable autospec defined in src::test::mock::_patch
      uses variable new_callable defined in src::kiasan_v1::test::mock::_patch
      uses variable new_callable defined in src::test::mock::_patch
      uses variable kwargs defined in src::kiasan_v1::test::mock::_patch
      uses variable kwargs defined in src::test::mock::_patch
      uses variable attribute_name defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute_name defined in src::test::mock::_patch
      uses variable additional_patchers defined in src::kiasan_v1::test::mock::_patch
      uses variable additional_patchers defined in src::test::mock::_patch
   function decorate_callable((null),(null)) in line 1176
      protection public
      50 lines of code
      2 parameters
      1 conditional paths
      uses variable wraps defined in test/mock.py
      uses function _is_started((null)) defined in test/mock.py
   function decorate_class((null),(null)) in line 1162
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function copy((null)) defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses function copy((null)) defined in src::kiasan_v1::test::mock::_patch
      uses function copy((null)) defined in src::test::mock::_patch
   function get_original((null)) in line 1226
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses variable getter defined in src::kiasan_v1::test::mock::_patch
      uses variable getter defined in src::test::mock::_patch
      uses variable attribute defined in src::kiasan_v1::test::mock::_patch
      uses variable attribute defined in src::test::mock::_patch
      uses variable create defined in src::kiasan_v1::test::mock::_patch
      uses variable create defined in src::test::mock::_patch
   function start((null)) in line 1394
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function __enter__((null)) defined in src::kiasan_v1::test::mock::_patch
      uses function __enter__((null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function __enter__((null)) defined in src::test::mock::_patch
   function stop((null)) in line 1401
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function __exit__((null),(null)) defined in src::kiasan_v1::test::mock::_patch
      uses function __exit__((null),(null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function __exit__((null),(null)) defined in src::test::mock::_patch
   function __init__((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 1116
      protection public
      24 lines of code
      10 parameters
      1 conditional paths
   variable _active_patches in line 1114
   variable additional_patchers in line 1140
      protection public
   variable attribute in line 1131
      protection public
   variable attribute_name in line 1113
      protection public
   variable autospec in line 1138
      protection public
   variable create in line 1135
      protection public
   variable getter in line 1130
      protection public
   variable has_local in line 1136
      protection public
   variable is_local in line 1358
      protection public
   variable kwargs in line 1139
      protection public
   variable new in line 1132
      protection public
   variable new_callable in line 1133
      protection public
   variable spec in line 1134
      protection public
   variable spec_set in line 1137
      protection public
   variable target in line 1252
      protection public
   variable temp_original in line 1357
      protection public
module src::test::mock::_patch_dict
   inherits from object
   function __call__((null),(null)) in line 1611
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function decorate_class((null),(null)) defined in src::kiasan_v1::test::mock::_patch
      uses function decorate_class((null),(null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function decorate_class((null),(null)) defined in src::test::mock::_patch
      uses function decorate_class((null),(null)) defined in src::test::mock::_patch_dict
      uses variable wraps defined in test/mock.py
      uses function _patch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function _patch_dict((null)) defined in src::test::mock::_patch_dict
      uses function _unpatch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function _unpatch_dict((null)) defined in src::test::mock::_patch_dict
   function __enter__((null)) in line 1636
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function _patch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function _patch_dict((null)) defined in src::test::mock::_patch_dict
   function __exit__((null),(null)) in line 1680
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function _unpatch_dict((null)) defined in src::kiasan_v1::test::mock::_patch_dict
      uses function _unpatch_dict((null)) defined in src::test::mock::_patch_dict
   function _unpatch_dict((null)) in line 1667
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable in_dict defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable in_dict defined in src::test::mock::_patch_dict
      uses variable _original defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable _original defined in src::test::mock::_patch_dict
      uses function _clear_dict((null)) defined in test/mock.py
   function decorate_class((null),(null)) in line 1625
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable in_dict defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable in_dict defined in src::test::mock::_patch_dict
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
      uses variable values defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable values defined in src::test::mock::_patch_dict
      uses variable clear defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable clear defined in src::test::mock::_patch_dict
   function __init__((null),(null),(null),(null),(null)) in line 1600
      protection public
      11 lines of code
      5 parameters
      1 conditional paths
      uses function _importer((null)) defined in test/mock.py
   function _patch_dict((null)) in line 1641
      26 lines of code
      1 parameters
      1 conditional paths
      uses variable values defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses variable values defined in src::kiasan_v1::simplejson::tests::test_bigint_as_string::TestBigintAsString
      uses variable values defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable values defined in src::test::mock::_patch_dict
      uses variable in_dict defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable in_dict defined in src::test::mock::_patch_dict
      uses variable clear defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable clear defined in src::test::mock::_patch_dict
      uses variable _original defined in src::kiasan_v1::test::mock::_patch_dict
      uses variable _original defined in src::test::mock::_patch_dict
      uses function _clear_dict((null)) defined in test/mock.py
   variable _original in line 1608
   variable clear in line 1607
      protection public
   variable in_dict in line 1603
      protection public
   variable start in line 1685
      protection public
   variable stop in line 1686
      protection public
   variable values in line 1605
      protection public
module src::test::mock::MagicMixin
   inherits from object
   function _mock_set_magics((null)) in line 1854
      23 lines of code
      1 parameters
      1 conditional paths
   function __init__((null),(null),(null)) in line 1849
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable _super defined in test/mock.py
      uses function _mock_set_magics((null)) defined in src::kiasan_v1::test::mock::MagicMixin
      uses function _mock_set_magics((null)) defined in src::test::mock::MagicMixin
module src::test::mock::NonCallableMagicMock
   inherits from src::test::mock::MagicMixin
   inherits from src::test::mock::NonCallableMock
   function mock_add_spec((null),(null),(null)) in line 1879
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _mock_add_spec((null),(null),(null)) defined in src::test::mock::NonCallableMock
      uses function _mock_set_magics((null)) defined in src::kiasan_v1::test::mock::MagicMixin
      uses function _mock_set_magics((null)) defined in src::test::mock::MagicMixin
module src::test::mock::MagicMock
   inherits from src::test::mock::MagicMixin
   inherits from src::test::mock::Mock
   function mock_add_spec((null),(null),(null)) in line 1901
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function _mock_add_spec((null),(null),(null)) defined in src::kiasan_v1::test::mock::NonCallableMock
      uses function _mock_add_spec((null),(null),(null)) defined in src::test::mock::NonCallableMock
      uses function _mock_set_magics((null)) defined in src::kiasan_v1::test::mock::MagicMixin
      uses function _mock_set_magics((null)) defined in src::test::mock::MagicMixin
module src::test::mock::MagicProxy
   inherits from object
   function __call__((null),(null),(null)) in line 1917
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function create_mock((null)) defined in src::kiasan_v1::test::mock::MagicProxy
      uses function create_mock((null)) defined in src::test::mock::MagicProxy
   function __get__((null),(null),(null)) in line 1930
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function create_mock((null)) defined in src::kiasan_v1::test::mock::MagicProxy
      uses function create_mock((null)) defined in src::test::mock::MagicProxy
   function create_mock((null)) in line 1921
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
      uses variable name defined in src::kiasan_v1::test::mock::_SpecState
      uses variable name defined in src::test::mock::_SentinelObject
      uses variable name defined in src::test::mock::MagicProxy
      uses variable parent defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable parent defined in src::kiasan_v1::test::mock::_Call
      uses variable parent defined in src::kiasan_v1::test::mock::_SpecState
      uses variable parent defined in src::test::mock::MagicProxy
      uses function _set_return_value((null),(null),(null)) defined in test/mock.py
   function __init__((null),(null),(null)) in line 1913
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable name in line 1914
      protection public
   variable parent in line 1915
      protection public
module src::test::mock::_ANY
   inherits from object
   function __eq__((null),(null)) in line 1938
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function __ne__((null),(null)) in line 1941
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function __repr__((null)) in line 1944
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module src::test::mock::_Call
   inherits from tuple
   function __call__((null),(null),(null)) in line 2082
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
      uses variable name defined in src::kiasan_v1::test::mock::_SpecState
      uses variable name defined in src::test::mock::_SentinelObject
      uses variable name defined in src::test::mock::MagicProxy
      uses variable name defined in src::test::mock::_Call
   function __eq__((null),(null)) in line 2028
      protection public
      50 lines of code
      2 parameters
      1 conditional paths
   function __getattr__((null),(null)) in line 2090
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
      uses variable name defined in src::kiasan_v1::test::mock::_SpecState
      uses variable name defined in src::test::mock::_SentinelObject
      uses variable name defined in src::test::mock::MagicProxy
      uses variable name defined in src::test::mock::_Call
   function __ne__((null),(null)) in line 2078
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function __eq__((null),(null)) defined in src::email::charset::Charset
      uses function __eq__((null),(null)) defined in src::email::header::Header
      uses function __eq__((null),(null)) defined in src::kiasan_v1::simplejson::ordered_dict::OrderedDict
      uses function __eq__((null),(null)) defined in src::kiasan_v1::test::mock::_ANY
      uses function __eq__((null),(null)) defined in src::kiasan_v1::test::mock::_Call
      uses function __eq__((null),(null)) defined in src::test::mock::_ANY
      uses function __eq__((null),(null)) defined in src::test::mock::_Call
   function __new__((null),(null),(null),(null),(null),(null)) in line 1988
      protection public
      32 lines of code
      6 parameters
      1 conditional paths
      uses function __init__((null),(null),(null),(null),(null),(null)) defined in src::test::mock::_Call
   function __repr__((null)) in line 2097
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses variable from_kall defined in src::kiasan_v1::test::mock::_Call
      uses variable from_kall defined in src::test::mock::_Call
      uses variable name defined in src::kiasan_v1::test::mock::_SentinelObject
      uses variable name defined in src::kiasan_v1::test::mock::MagicProxy
      uses variable name defined in src::kiasan_v1::test::mock::_Call
      uses variable name defined in src::kiasan_v1::test::mock::_SpecState
      uses variable name defined in src::test::mock::_SentinelObject
      uses variable name defined in src::test::mock::MagicProxy
      uses variable name defined in src::test::mock::_Call
      uses function _format_call_signature((null),(null),(null)) defined in test/mock.py
   function call_list((null)) in line 2118
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function __init__((null),(null),(null),(null),(null),(null)) in line 2021
      protection public
      6 lines of code
      6 parameters
      1 conditional paths
   variable from_kall in line 2025
      protection public
   variable name in line 2023
      protection public
   variable parent in line 2024
      protection public
module src::test::mock::_SpecState
   inherits from object
   function __init__((null),(null),(null),(null),(null),(null),(null)) in line 2286
      protection public
      9 lines of code
      7 parameters
      1 conditional paths
   variable ids in line 2289
      protection public
   variable instance in line 2292
      protection public
   variable name in line 2293
      protection public
   variable parent in line 2291
      protection public
   variable spec in line 2288
      protection public
   variable spec_set in line 2290
      protection public
module src::test::mock::PropertyMock
   inherits from src::test::mock::Mock
   function __get__((null),(null),(null)) in line 2364
      protection public
      2 lines of code
      3 parameters
      1 conditional paths
      uses variable self defined in test/mock.py
   function __set__((null),(null),(null)) in line 2366
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable self defined in test/mock.py
   function _get_child_mock((null),(null)) in line 2361
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/mock_helper.py
module mock_helper.py
   variable sireum_path in line 4
      protection public
   function get_project_files((null)) in line 7
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function preference_mock((null),(null)) in line 11
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
   function get_current_context_mock((null)) in line 31
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function get_project_files((null)) defined in mock_helper.py
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/test_integration.py
module src::kiasan_v1::test::test_integration::TestIntegration1
   inherits from unittest::TestCase
   function setUp((null)) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
   function setUpClass((null)) in line 18
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_proj1_methods_add_and_foo((null)) in line 39
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
   variable output_path in line 20
      protection public
   variable project_path in line 19
      protection public
   variable report_file_name in line 22
      protection public
   variable sireum_path in line 21
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/test_integration2.py
module src::kiasan_v1::test::test_integration2::TestIntegration2
   inherits from unittest::TestCase
   function setUp((null)) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
   function setUpClass((null)) in line 18
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_proj2_method_add((null)) in line 59
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
   function test_proj2_method_mul((null)) in line 97
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
   function test_proj2_method_sub((null)) in line 78
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
   function test_proj2_methods_add_sub_mul((null)) in line 39
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
   variable output_path in line 20
      protection public
   variable project_path in line 19
      protection public
   variable report_file_name in line 22
      protection public
   variable sireum_path in line 21
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/test_integration3.py
module src::kiasan_v1::test::test_integration3::TestIntegration3
   inherits from unittest::TestCase
   function setUp((null)) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
   function setUpClass((null)) in line 18
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_proj3_all_packages_and_methods((null)) in line 84
      protection public
      39 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
   function test_proj3_odometer((null)) in line 38
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
   function test_proj3_odometer_method_inc((null)) in line 60
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
   variable output_path in line 20
      protection public
   variable project_path in line 19
      protection public
   variable report_file_name in line 22
      protection public
   variable sireum_path in line 21
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/test_integration4.py
module src::kiasan_v1::test::test_integration4::TestIntegration4
   inherits from unittest::TestCase
   function setUp((null)) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
   function setUpClass((null)) in line 18
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_proj4_all_methods((null)) in line 39
      protection public
      24 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration4::TestIntegration4
   function test_proj4_main((null)) in line 64
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration4::TestIntegration4
   variable output_path in line 20
      protection public
   variable project_path in line 19
      protection public
   variable report_file_name in line 22
      protection public
   variable sireum_path in line 21
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/test_integration5.py
module src::kiasan_v1::test::test_integration5::TestIntegration5
   inherits from unittest::TestCase
   function setUp((null)) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
   function setUpClass((null)) in line 18
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_proj5_all_methods((null)) in line 39
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration5::TestIntegration5
   function test_proj5_delete((null)) in line 60
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration5::TestIntegration5
   variable output_path in line 20
      protection public
   variable project_path in line 19
      protection public
   variable report_file_name in line 22
      protection public
   variable sireum_path in line 21
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/kiasan_v1/test/test_integration6.py
module src::kiasan_v1::test::test_integration6::TestIntegration6
   inherits from unittest::TestCase
   function setUp((null)) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable output_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable project_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
   function setUpClass((null)) in line 18
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function test_proj6_all_methods((null)) in line 39
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable project_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable output_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration6::TestIntegration6
   function test_proj6_delete((null)) in line 60
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable sireum_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
      uses variable project_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable project_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable project_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable project_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable project_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable project_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
      uses variable output_path defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable output_path defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable output_path defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable output_path defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable output_path defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable output_path defined in src::kiasan_v1::test::test_integration6::TestIntegration6
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration::TestIntegration1
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration2::TestIntegration2
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration3::TestIntegration3
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration4::TestIntegration4
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration5::TestIntegration5
      uses variable report_file_name defined in src::kiasan_v1::test::test_integration6::TestIntegration6
   variable output_path in line 20
      protection public
   variable project_path in line 19
      protection public
   variable report_file_name in line 22
      protection public
   variable sireum_path in line 21
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/sireum.py
module sireum.py
   variable server_process in line 18
      protection public
   variable server_id in line 19
      protection public
   variable gui in line 49
      protection public
   variable options in line 51
      protection public
   variable depth_bound_box in line 54
      protection public
   variable depth_bound_label in line 57
      protection public
   variable depth_bound_entry in line 60
      protection public
   variable current_index in line 64
      protection public
   variable commands_store in line 65
      protection public
   variable commands_combo in line 66
      protection public
   variable buttons_box in line 71
      protection public
   variable button in line 74
      protection public
   variable button_cancel in line 78
      protection public
   function run_analysis((null)) in line 29
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function cancel_analysis((null)) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function update_commands_combo((null)) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function update_options((null)) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function run_kiasan_with_options() in line 83
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function restart_bakar_server() in line 94
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function get_sireum_path() defined in sireum.py
      uses function run_kiasan_server((null)) defined in sireum.py
   function run_kiasan_plugin() in line 101
      protection public
      55 lines of code
      0 parameters
      1 conditional paths
      uses function get_sireum_path() defined in sireum.py
      uses function load_sireum_settings((null)) defined in sireum.py
      uses function run_kiasan_server((null)) defined in sireum.py
      uses function send_units_for_analysis((null),(null)) defined in sireum.py
   function run_kiasan_server((null)) in line 156
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function send_units_for_analysis((null),(null)) in line 170
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
      uses function get_project_files() defined in sireum.py
      uses function AnalysisProcessRequestMessage((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) defined in sireum.py
   function AnalysisProcessRequestMessage((null),(null),(null),(null),(null),(null),(null),(null),(null),(null)) in line 191
      protection public
      17 lines of code
      10 parameters
      1 conditional paths
   function get_spark_source_files() in line 208
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function get_project_files() in line 225
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function get_sireum_path() in line 236
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
   function load_sireum_settings((null)) in line 262
      protection public
      165 lines of code
      1 parameters
      1 conditional paths
module src::sireum::ProjectNotBuiltException
   inherits from Exception
   function __str__((null)) in line 24
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in src::kiasan_v1::simplejson::tests::test_namedtuple::DuckValue
      uses variable value defined in src::sireum::ProjectNotBuiltException
   function __init__((null),(null)) in line 22
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   variable value in line 23
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/sireum_v1.py
module sireum_v1.py
   function run_kiasan_plugin() in line 25
      protection public
      61 lines of code
      0 parameters
      1 conditional paths
      uses function get_spark_sources_path() defined in sireum_v1.py
      uses function prepare_directories_for_reports((null),(null)) defined in sireum_v1.py
      uses function get_sireum_path() defined in sireum_v1.py
      uses function load_sireum_settings((null)) defined in sireum_v1.py
      uses function get_run_kiasan_command((null),(null),(null),(null),(null)) defined in sireum_v1.py
      uses function init_progressbar() defined in sireum_v1.py
   function get_spark_sources_path() in line 86
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function prepare_directories_for_reports((null),(null)) in line 92
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function run_kiasan_alasysis_async((null),(null),(null),(null),(null)) in line 106
      protection public
      56 lines of code
      5 parameters
      1 conditional paths
      uses function run_kiasan((null),(null)) defined in sireum_v1.py
   function run_kiasan((null),(null)) in line 162
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function init_progressbar() in line 168
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function get_sireum_path() in line 186
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
   function load_sireum_settings((null)) in line 214
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
   function get_run_kiasan_command((null),(null),(null),(null),(null)) in line 237
      protection public
      70 lines of code
      5 parameters
      1 conditional paths
      uses function get_spark_source_files((null)) defined in sireum_v1.py
   function get_spark_source_files((null)) in line 307
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function run_examiner((null)) in line 316
      protection public
      147 lines of code
      1 parameters
      1 conditional paths
module src::sireum_v1::ProjectNotBuiltException
   inherits from Exception
   function __str__((null)) in line 20
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in src::kiasan_v1::simplejson::tests::test_namedtuple::DuckValue
      uses variable value defined in src::sireum::ProjectNotBuiltException
      uses variable value defined in src::sireum_v1::ProjectNotBuiltException
   function __init__((null),(null)) in line 18
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   variable value in line 19
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-gps/src/test/test_sireum_v1.py
module test_sireum_v1.py
   variable SIREUM_HOME in line 9
      protection public
module src::test::test_sireum_v1::Test
   inherits from unittest::TestCase
   function setUpClass((null)) in line 16
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function test_get_sireum_path_sireum_home_in_path((null)) in line 43
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
   function test_get_sireum_path_sireum_home_not_set_and_not_in_path((null)) in line 66
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function test_get_sireum_path_sireum_home_set((null)) in line 22
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/Main.java
module org::sireum::bakar::policy::parser::Main
   function main(String[]) in line 11
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function start() defined in org::sireum::bakar::policy::parser::PolicyParser
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/PolicyLexer.java
module org::sireum::bakar::policy::parser::PolicyLexer
   inherits from Lexer
   function getDelegates() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGrammarFileName() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function mCOMMENT() in line 613
      protection public
      101 lines of code
      0 parameters
      12 conditional paths
   function mID() in line 557
      protection public
      53 lines of code
      0 parameters
      7 conditional paths
   function mNUM_INT() in line 470
      protection public
      84 lines of code
      0 parameters
      11 conditional paths
   function mT__10() in line 97
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
   function mT__11() in line 117
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
   function mT__12() in line 137
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__13() in line 158
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
   function mT__14() in line 178
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__15() in line 199
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__16() in line 220
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__17() in line 241
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__18() in line 262
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__19() in line 283
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__20() in line 304
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__21() in line 325
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__22() in line 346
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__23() in line 367
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__24() in line 388
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__25() in line 409
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
   function mT__26() in line 430
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
   function mT__27() in line 450
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
   function mT__8() in line 57
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
   function mT__9() in line 77
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
   function mTokens() in line 745
      protection public
      176 lines of code
      0 parameters
      25 conditional paths
   function mWS() in line 717
      protection public
      25 lines of code
      0 parameters
      3 conditional paths
   function PolicyLexer() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function PolicyLexer(CharStream) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PolicyLexer(CharStream,RecognizerSharedState) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable COMMENT in line 36
      protection public
   variable dfa7 in line 923
   variable EOF in line 15
      protection public
   variable ID in line 37
      protection public
   variable NUM_INT in line 38
      protection public
   variable T__10 in line 18
      protection public
   variable T__11 in line 19
      protection public
   variable T__12 in line 20
      protection public
   variable T__13 in line 21
      protection public
   variable T__14 in line 22
      protection public
   variable T__15 in line 23
      protection public
   variable T__16 in line 24
      protection public
   variable T__17 in line 25
      protection public
   variable T__18 in line 26
      protection public
   variable T__19 in line 27
      protection public
   variable T__20 in line 28
      protection public
   variable T__21 in line 29
      protection public
   variable T__22 in line 30
      protection public
   variable T__23 in line 31
      protection public
   variable T__24 in line 32
      protection public
   variable T__25 in line 33
      protection public
   variable T__26 in line 34
      protection public
   variable T__27 in line 35
      protection public
   variable T__8 in line 16
      protection public
   variable T__9 in line 17
      protection public
   variable WS in line 39
      protection public
module org::sireum::bakar::policy::parser::PolicyLexer::DFA7
   inherits from DFA
   function getDescription() in line 1064
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DFA7(BaseRecognizer) in line 1052
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/PolicyParser.java
module org::sireum::bakar::policy::parser::PolicyParser
   inherits from email::parser::Parser
   function access_mode() in line 660
      protection public
      75 lines of code
      0 parameters
      10 conditional paths
   function declassifier() in line 500
      protection public
      46 lines of code
      0 parameters
      2 conditional paths
      uses function set_name(String) defined in org::sireum::bakar::policy::parser::T_Declassifier
      uses function set_params(ArrayList< String >) defined in org::sireum::bakar::policy::parser::T_Declassifier
      uses function getFirst() defined in org::sireum::bakar::policy::parser::T_Pair
      uses function set_param_mode(HashMap< String, String >) defined in org::sireum::bakar::policy::parser::T_Declassifier
      uses function getSecond() defined in org::sireum::bakar::policy::parser::T_Pair
      uses function set_param_types(HashMap< String, String >) defined in org::sireum::bakar::policy::parser::T_Declassifier
   function declassifiers() in line 446
      protection public
      48 lines of code
      0 parameters
      5 conditional paths
   function domain_binding() in line 388
      protection public
      52 lines of code
      0 parameters
      4 conditional paths
      uses function setFirst(A) defined in org::sireum::bakar::policy::parser::T_Pair
      uses function setSecond(B) defined in org::sireum::bakar::policy::parser::T_Pair
   function domain_bindings() in line 334
      protection public
      48 lines of code
      0 parameters
      5 conditional paths
   function domain_def() in line 741
      protection public
      57 lines of code
      0 parameters
      5 conditional paths
   function domain_definition() in line 114
      protection public
      36 lines of code
      0 parameters
      2 conditional paths
      uses function set_domains(ArrayList< String >) defined in org::sireum::bakar::policy::parser::T_Domain
      uses function set_domain_ordering(ArrayList< T_Pair< String, String >>) defined in org::sireum::bakar::policy::parser::T_Domain
   function enumerated_values() in line 156
      protection public
      51 lines of code
      0 parameters
      5 conditional paths
   function getDelegates() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGrammarFileName() in line 63
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTokenNames() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenNames defined in org::sireum::bakar::policy::parser::PolicyParser
   function ordering() in line 213
      protection public
      115 lines of code
      0 parameters
      12 conditional paths
      uses function b((null)) defined in compat.py
   function params() in line 552
      protection public
      102 lines of code
      0 parameters
      9 conditional paths
      uses function setFirst(A) defined in org::sireum::bakar::policy::parser::T_Pair
      uses function setSecond(B) defined in org::sireum::bakar::policy::parser::T_Pair
   function start() in line 69
      protection public
      39 lines of code
      0 parameters
      2 conditional paths
      uses function b((null)) defined in compat.py
      uses function set_domains(T_Domain) defined in org::sireum::bakar::policy::parser::T_Policy
      uses function set_domain_bindings(HashMap< String, String >) defined in org::sireum::bakar::policy::parser::T_Policy
      uses function set_declassifiers(HashMap< String, T_Declassifier >) defined in org::sireum::bakar::policy::parser::T_Policy
   function value() in line 804
      protection public
      51 lines of code
      0 parameters
      6 conditional paths
   function PolicyParser(TokenStream) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PolicyParser(TokenStream,RecognizerSharedState) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable COMMENT in line 42
      protection public
   variable EOF in line 21
      protection public
   variable FOLLOW_10_in_declassifier371 in line 907
      protection public
   variable FOLLOW_10_in_domain_def557 in line 929
      protection public
   variable FOLLOW_10_in_enumerated_values127 in line 873
      protection public
   variable FOLLOW_10_in_ordering196 in line 882
      protection public
   variable FOLLOW_11_in_domain_binding285 in line 890
      protection public
   variable FOLLOW_11_in_params417 in line 913
      protection public
   variable FOLLOW_11_in_params446 in line 918
      protection public
   variable FOLLOW_12_in_domain_binding300 in line 896
      protection public
   variable FOLLOW_13_in_declassifier385 in line 911
      protection public
   variable FOLLOW_13_in_domain_binding306 in line 898
      protection public
   variable FOLLOW_13_in_domain_definition82 in line 870
      protection public
   variable FOLLOW_13_in_params440 in line 916
      protection public
   variable FOLLOW_14_in_ordering174 in line 880
      protection public
   variable FOLLOW_14_in_ordering202 in line 884
      protection public
   variable FOLLOW_15_in_declassifier379 in line 909
      protection public
   variable FOLLOW_15_in_domain_binding293 in line 894
      protection public
   variable FOLLOW_15_in_domain_def541 in line 927
      protection public
   variable FOLLOW_15_in_domain_def563 in line 931
      protection public
   variable FOLLOW_15_in_ordering164 in line 877
      protection public
   variable FOLLOW_16_in_declassifier369 in line 906
      protection public
   variable FOLLOW_17_in_declassifier377 in line 908
      protection public
   variable FOLLOW_17_in_domain_binding291 in line 893
      protection public
   variable FOLLOW_18_in_ordering161 in line 876
      protection public
   variable FOLLOW_19_in_access_mode487 in line 921
      protection public
   variable FOLLOW_19_in_access_mode507 in line 923
      protection public
   variable FOLLOW_20_in_domain_definition70 in line 866
      protection public
   variable FOLLOW_21_in_ordering232 in line 887
      protection public
   variable FOLLOW_22_in_access_mode497 in line 922
      protection public
   variable FOLLOW_22_in_access_mode509 in line 924
      protection public
   variable FOLLOW_23_in_declassifier349 in line 900
      protection public
   variable FOLLOW_24_in_domain_definition66 in line 864
      protection public
   variable FOLLOW_25_in_declassifier363 in line 905
      protection public
   variable FOLLOW_25_in_domain_binding289 in line 892
      protection public
   variable FOLLOW_25_in_domain_definition76 in line 868
      protection public
   variable FOLLOW_26_in_ordering168 in line 878
      protection public
   variable FOLLOW_27_in_ordering212 in line 886
      protection public
   variable FOLLOW_8_in_declassifier355 in line 902
      protection public
   variable FOLLOW_8_in_domain_def526 in line 925
      protection public
   variable FOLLOW_8_in_enumerated_values103 in line 871
      protection public
   variable FOLLOW_9_in_declassifier361 in line 904
      protection public
   variable FOLLOW_9_in_domain_def576 in line 933
      protection public
   variable FOLLOW_9_in_enumerated_values141 in line 875
      protection public
   variable FOLLOW_access_mode_in_params422 in line 914
      protection public
   variable FOLLOW_access_mode_in_params452 in line 919
      protection public
   variable FOLLOW_declassifier_in_declassifiers329 in line 899
      protection public
   variable FOLLOW_declassifiers_in_start46 in line 863
      protection public
   variable FOLLOW_domain_binding_in_domain_bindings261 in line 888
      protection public
   variable FOLLOW_domain_bindings_in_start39 in line 862
      protection public
   variable FOLLOW_domain_def_in_declassifier383 in line 910
      protection public
   variable FOLLOW_domain_definition_in_start32 in line 861
      protection public
   variable FOLLOW_enumerated_values_in_domain_definition74 in line 867
      protection public
   variable FOLLOW_ID_in_declassifier353 in line 901
      protection public
   variable FOLLOW_ID_in_domain_binding283 in line 889
      protection public
   variable FOLLOW_ID_in_domain_binding287 in line 891
      protection public
   variable FOLLOW_ID_in_domain_binding297 in line 895
      protection public
   variable FOLLOW_ID_in_domain_def539 in line 926
      protection public
   variable FOLLOW_ID_in_domain_def545 in line 928
      protection public
   variable FOLLOW_ID_in_domain_def561 in line 930
      protection public
   variable FOLLOW_ID_in_domain_def567 in line 932
      protection public
   variable FOLLOW_ID_in_domain_definition68 in line 865
      protection public
   variable FOLLOW_ID_in_enumerated_values115 in line 872
      protection public
   variable FOLLOW_ID_in_enumerated_values131 in line 874
      protection public
   variable FOLLOW_ID_in_ordering172 in line 879
      protection public
   variable FOLLOW_ID_in_ordering178 in line 881
      protection public
   variable FOLLOW_ID_in_ordering200 in line 883
      protection public
   variable FOLLOW_ID_in_ordering206 in line 885
      protection public
   variable FOLLOW_ID_in_params415 in line 912
      protection public
   variable FOLLOW_ID_in_params428 in line 915
      protection public
   variable FOLLOW_ID_in_params444 in line 917
      protection public
   variable FOLLOW_ID_in_params458 in line 920
      protection public
   variable FOLLOW_ID_in_value601 in line 935
      protection public
   variable FOLLOW_NUM_INT_in_value593 in line 934
      protection public
   variable FOLLOW_ordering_in_domain_definition80 in line 869
      protection public
   variable FOLLOW_params_in_declassifier359 in line 903
      protection public
   variable FOLLOW_value_in_domain_binding302 in line 897
      protection public
   variable ID in line 43
      protection public
   variable NUM_INT in line 44
      protection public
   variable T__10 in line 24
      protection public
   variable T__11 in line 25
      protection public
   variable T__12 in line 26
      protection public
   variable T__13 in line 27
      protection public
   variable T__14 in line 28
      protection public
   variable T__15 in line 29
      protection public
   variable T__16 in line 30
      protection public
   variable T__17 in line 31
      protection public
   variable T__18 in line 32
      protection public
   variable T__19 in line 33
      protection public
   variable T__20 in line 34
      protection public
   variable T__21 in line 35
      protection public
   variable T__22 in line 36
      protection public
   variable T__23 in line 37
      protection public
   variable T__24 in line 38
      protection public
   variable T__25 in line 39
      protection public
   variable T__26 in line 40
      protection public
   variable T__27 in line 41
      protection public
   variable T__8 in line 22
      protection public
   variable T__9 in line 23
      protection public
   variable tokenNames in line 15
      protection public
   variable WS in line 45
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/PolicyReader.java
module org::sireum::bakar::policy::parser::PolicyReader
   function ParsePolicy(String) in line 8
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function start() defined in org::sireum::bakar::policy::parser::PolicyParser
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/T_Declassifier.java
module org::sireum::bakar::policy::parser::T_Declassifier
   function add_param(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function add_param_type(String,String) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function get_name() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get_param_mode() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get_param_type(String) in line 44
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function get_param_types() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get_params() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function set_name(String) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function set_param_mode(HashMap< String, String >) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function set_param_types(HashMap< String, String >) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function set_params(ArrayList< String >) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/T_Domain.java
module org::sireum::bakar::policy::parser::T_Domain
   function add_domain(String) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function add_domain_ordering(String,String) in line 67
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function get_domain_name() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get_domain_ordering() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get_domains() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function set_domain_name(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function set_domain_ordering(ArrayList< T_Pair< String, String >>) in line 40
      protection public
      21 lines of code
      1 parameters
      3 conditional paths
   function set_domains(ArrayList< String >) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function T_Domain() in line 12
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/T_Pair.java
module org::sireum::bakar::policy::parser::T_Pair
   function getFirst() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSecond() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFirst(A) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSecond(B) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function T_Pair() in line 7
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function T_Pair(A,B) in line 11
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-jago/src/main/scala/org/sireum/bakar/policy/parser/T_Policy.java
module org::sireum::bakar::policy::parser::T_Policy
   function add_declassifier(String,T_Declassifier) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function add_domain(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add_domain(String) defined in org::sireum::bakar::policy::parser::T_Domain
   function add_domain_binding(String,String) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function add_domain_ordering(String,String) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function add_domain_ordering(String,String) defined in org::sireum::bakar::policy::parser::T_Domain
   function get_declassifiers() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get_domain_bindings() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get_domains() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function set_declassifiers(HashMap< String, T_Declassifier >) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function set_domain_bindings(HashMap< String, String >) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function set_domains(T_Domain) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function T_Policy() in line 10
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AbortStatement.java
module org::sireum::bakar::xml::AbortStatement
   inherits from org::sireum::bakar::xml::Base
   function getAbortedTasksQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAbortedTasksQl(ExpressionList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable abortedTasksQl in line 48
   variable checks in line 50
   variable labelNamesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AbsOperator.java
module org::sireum::bakar::xml::AbsOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Abstract.java
module org::sireum::bakar::xml::Abstract
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AcceptStatement.java
module org::sireum::bakar::xml::AcceptStatement
   inherits from org::sireum::bakar::xml::Base
   function getAcceptBodyExceptionHandlersQl() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAcceptBodyStatementsQl() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAcceptEntryDirectNameQ() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAcceptEntryIndexQ() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAcceptParametersQl() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 244
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAcceptBodyExceptionHandlersQl(StatementList) in line 232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAcceptBodyStatementsQl(StatementList) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAcceptEntryDirectNameQ(NameClass) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAcceptEntryIndexQ(ExpressionClass) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAcceptParametersQl(ParameterSpecificationList) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable acceptBodyExceptionHandlersQl in line 64
   variable acceptBodyStatementsQl in line 62
   variable acceptEntryDirectNameQ in line 56
   variable acceptEntryIndexQ in line 58
   variable acceptParametersQl in line 60
   variable checks in line 66
   variable labelNamesQl in line 54
   variable sloc in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AccessAttribute.java
module org::sireum::bakar::xml::AccessAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AccessToConstant.java
module org::sireum::bakar::xml::AccessToConstant
   inherits from org::sireum::bakar::xml::Base
   function getAccessToObjectDefinitionQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToObjectDefinitionQ(ElementClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AccessToConstant.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToObjectDefinitionQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AccessToConstant::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AccessToFunction.java
module org::sireum::bakar::xml::AccessToFunction
   inherits from org::sireum::bakar::xml::Base
   function getAccessToFunctionResultProfileQ() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessToSubprogramParameterProfileQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToFunctionResultProfileQ(ElementClass) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AccessToFunction.HasNullExclusionQ) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(AccessToFunction.IsNotNullReturnQ) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToFunctionResultProfileQ in line 79
   variable accessToSubprogramParameterProfileQl in line 75
   variable checks in line 81
   variable hasNullExclusionQ in line 73
   variable isNotNullReturnQ in line 77
   variable sloc in line 71
module org::sireum::bakar::xml::AccessToFunction::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getNotAnElement() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNullExclusion() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setNotAnElement(NotAnElement) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNullExclusion(NullExclusion) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable notAnElement in line 260
   variable nullExclusion in line 258
module org::sireum::bakar::xml::AccessToFunction::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 356
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 369
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 345
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AccessToProcedure.java
module org::sireum::bakar::xml::AccessToProcedure
   inherits from org::sireum::bakar::xml::Base
   function getAccessToSubprogramParameterProfileQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AccessToProcedure.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToSubprogramParameterProfileQl in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AccessToProcedure::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AccessToProtectedFunction.java
module org::sireum::bakar::xml::AccessToProtectedFunction
   inherits from org::sireum::bakar::xml::Base
   function getAccessToFunctionResultProfileQ() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessToSubprogramParameterProfileQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToFunctionResultProfileQ(ElementClass) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AccessToProtectedFunction.HasNullExclusionQ) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(AccessToProtectedFunction.IsNotNullReturnQ) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToFunctionResultProfileQ in line 79
   variable accessToSubprogramParameterProfileQl in line 75
   variable checks in line 81
   variable hasNullExclusionQ in line 73
   variable isNotNullReturnQ in line 77
   variable sloc in line 71
module org::sireum::bakar::xml::AccessToProtectedFunction::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 260
module org::sireum::bakar::xml::AccessToProtectedFunction::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 323
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AccessToProtectedProcedure.java
module org::sireum::bakar::xml::AccessToProtectedProcedure
   inherits from org::sireum::bakar::xml::Base
   function getAccessToSubprogramParameterProfileQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AccessToProtectedProcedure.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToSubprogramParameterProfileQl in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AccessToProtectedProcedure::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AccessToVariable.java
module org::sireum::bakar::xml::AccessToVariable
   inherits from org::sireum::bakar::xml::Base
   function getAccessToObjectDefinitionQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToObjectDefinitionQ(ElementClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AccessToVariable.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToObjectDefinitionQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AccessToVariable::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AddressAttribute.java
module org::sireum::bakar::xml::AddressAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AdjacentAttribute.java
module org::sireum::bakar::xml::AdjacentAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AftAttribute.java
module org::sireum::bakar::xml::AftAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Aliased.java
module org::sireum::bakar::xml::Aliased
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AlignmentAttribute.java
module org::sireum::bakar::xml::AlignmentAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AllCallsRemotePragma.java
module org::sireum::bakar::xml::AllCallsRemotePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AllocationFromQualifiedExpression.java
module org::sireum::bakar::xml::AllocationFromQualifiedExpression
   inherits from org::sireum::bakar::xml::Base
   function getAllocatorQualifiedExpressionQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubpoolNameQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAllocatorQualifiedExpressionQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubpoolNameQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable allocatorQualifiedExpressionQ in line 49
   variable checks in line 53
   variable sloc in line 45
   variable subpoolNameQ in line 47
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AllocationFromSubtype.java
module org::sireum::bakar::xml::AllocationFromSubtype
   inherits from org::sireum::bakar::xml::Base
   function getAllocatorSubtypeIndicationQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubpoolNameQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAllocatorSubtypeIndicationQ(ElementClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubpoolNameQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable allocatorSubtypeIndicationQ in line 49
   variable checks in line 53
   variable sloc in line 45
   variable subpoolNameQ in line 47
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AndOperator.java
module org::sireum::bakar::xml::AndOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AndThenShortCircuit.java
module org::sireum::bakar::xml::AndThenShortCircuit
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getShortCircuitOperationLeftExpressionQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getShortCircuitOperationRightExpressionQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setShortCircuitOperationLeftExpressionQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setShortCircuitOperationRightExpressionQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable shortCircuitOperationLeftExpressionQ in line 47
   variable shortCircuitOperationRightExpressionQ in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AnonymousAccessToConstant.java
module org::sireum::bakar::xml::AnonymousAccessToConstant
   inherits from org::sireum::bakar::xml::Base
   function getAnonymousAccessToObjectSubtypeMarkQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAnonymousAccessToObjectSubtypeMarkQ(ExpressionClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AnonymousAccessToConstant.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable anonymousAccessToObjectSubtypeMarkQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AnonymousAccessToConstant::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AnonymousAccessToFunction.java
module org::sireum::bakar::xml::AnonymousAccessToFunction
   inherits from org::sireum::bakar::xml::Base
   function getAccessToFunctionResultProfileQ() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessToSubprogramParameterProfileQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToFunctionResultProfileQ(ElementClass) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AnonymousAccessToFunction.HasNullExclusionQ) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(AnonymousAccessToFunction.IsNotNullReturnQ) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToFunctionResultProfileQ in line 79
   variable accessToSubprogramParameterProfileQl in line 75
   variable checks in line 81
   variable hasNullExclusionQ in line 73
   variable isNotNullReturnQ in line 77
   variable sloc in line 71
module org::sireum::bakar::xml::AnonymousAccessToFunction::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 260
module org::sireum::bakar::xml::AnonymousAccessToFunction::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 323
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AnonymousAccessToProcedure.java
module org::sireum::bakar::xml::AnonymousAccessToProcedure
   inherits from org::sireum::bakar::xml::Base
   function getAccessToSubprogramParameterProfileQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AnonymousAccessToProcedure.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToSubprogramParameterProfileQl in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AnonymousAccessToProcedure::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AnonymousAccessToProtectedFunction.java
module org::sireum::bakar::xml::AnonymousAccessToProtectedFunction
   inherits from org::sireum::bakar::xml::Base
   function getAccessToFunctionResultProfileQ() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessToSubprogramParameterProfileQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToFunctionResultProfileQ(ElementClass) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AnonymousAccessToProtectedFunction.HasNullExclusionQ) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(AnonymousAccessToProtectedFunction.IsNotNullReturnQ) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToFunctionResultProfileQ in line 79
   variable accessToSubprogramParameterProfileQl in line 75
   variable checks in line 81
   variable hasNullExclusionQ in line 73
   variable isNotNullReturnQ in line 77
   variable sloc in line 71
module org::sireum::bakar::xml::AnonymousAccessToProtectedFunction::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 260
module org::sireum::bakar::xml::AnonymousAccessToProtectedFunction::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 323
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AnonymousAccessToProtectedProcedure.java
module org::sireum::bakar::xml::AnonymousAccessToProtectedProcedure
   inherits from org::sireum::bakar::xml::Base
   function getAccessToSubprogramParameterProfileQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AnonymousAccessToProtectedProcedure.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToSubprogramParameterProfileQl in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AnonymousAccessToProtectedProcedure::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AnonymousAccessToVariable.java
module org::sireum::bakar::xml::AnonymousAccessToVariable
   inherits from org::sireum::bakar::xml::Base
   function getAnonymousAccessToObjectSubtypeMarkQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAnonymousAccessToObjectSubtypeMarkQ(ExpressionClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(AnonymousAccessToVariable.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable anonymousAccessToObjectSubtypeMarkQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::AnonymousAccessToVariable::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ArrayComponentAssociation.java
module org::sireum::bakar::xml::ArrayComponentAssociation
   inherits from org::sireum::bakar::xml::Base
   function getArrayComponentChoicesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setArrayComponentChoicesQl(ElementList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setComponentExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable arrayComponentChoicesQl in line 46
   variable checks in line 50
   variable componentExpressionQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AspectSpecification.java
module org::sireum::bakar::xml::AspectSpecification
   inherits from org::sireum::bakar::xml::Base
   function getAspectDefinitionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAspectMarkQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectDefinitionQ(ElementClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAspectMarkQ(ElementClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectDefinitionQ in line 48
   variable aspectMarkQ in line 46
   variable checks in line 50
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AssertionPolicyPragma.java
module org::sireum::bakar::xml::AssertionPolicyPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AssertPragma.java
module org::sireum::bakar::xml::AssertPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AssignmentStatement.java
module org::sireum::bakar::xml::AssignmentStatement
   inherits from org::sireum::bakar::xml::Base
   function getAssignmentExpressionQ() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAssignmentVariableNameQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAssignmentExpressionQ(ExpressionClass) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAssignmentVariableNameQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable assignmentExpressionQ in line 52
   variable assignmentVariableNameQ in line 50
   variable checks in line 54
   variable labelNamesQl in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AssociationClass.java
module org::sireum::bakar::xml::AssociationClass
   inherits from org::sireum::bakar::xml::Base
   function getAssociation() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAssociation(Base) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable association in line 110
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AssociationList.java
module org::sireum::bakar::xml::AssociationList
   inherits from org::sireum::bakar::xml::Base
   function getAssociations() in line 198
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable associations in line 112
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AsynchronousPragma.java
module org::sireum::bakar::xml::AsynchronousPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AsynchronousSelectStatement.java
module org::sireum::bakar::xml::AsynchronousSelectStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementPathsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementPathsQl(PathList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable sloc in line 44
   variable statementPathsQl in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AtClause.java
module org::sireum::bakar::xml::AtClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseNameQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseNameQ(NameClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable representationClauseExpressionQ in line 48
   variable representationClauseNameQ in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AtomicComponentsPragma.java
module org::sireum::bakar::xml::AtomicComponentsPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AtomicPragma.java
module org::sireum::bakar::xml::AtomicPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AttachHandlerPragma.java
module org::sireum::bakar::xml::AttachHandlerPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/AttributeDefinitionClause.java
module org::sireum::bakar::xml::AttributeDefinitionClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseNameQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseNameQ(NameClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable representationClauseExpressionQ in line 48
   variable representationClauseNameQ in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Base.java
module org::sireum::bakar::xml::Base
   inherits from org::sireum::util::Visitable
   abstract class
   function getChildren() in line 14
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function populate() defined in org::sireum::bakar::xml::Base
      uses variable cache defined in org::sireum::bakar::xml::Base
   function getNumOfChildren() in line 22
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function populate() defined in org::sireum::bakar::xml::Base
   function populate() in line 29
      19 lines of code
      0 parameters
      4 conditional paths
   variable cache in line 11
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/BaseAttribute.java
module org::sireum::bakar::xml::BaseAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/BitOrderAttribute.java
module org::sireum::bakar::xml::BitOrderAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/BlockStatement.java
module org::sireum::bakar::xml::BlockStatement
   inherits from org::sireum::bakar::xml::Base
   function getBlockDeclarativeItemsQl() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockExceptionHandlersQl() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockStatementsQl() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementIdentifierQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setBlockDeclarativeItemsQl(DeclarativeItemList) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBlockExceptionHandlersQl(ExceptionHandlerList) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBlockStatementsQl(StatementList) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementIdentifierQ(DefiningNameClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable blockDeclarativeItemsQl in line 56
   variable blockExceptionHandlersQl in line 60
   variable blockStatementsQl in line 58
   variable checks in line 62
   variable labelNamesQl in line 52
   variable sloc in line 50
   variable statementIdentifierQ in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/BodyVersionAttribute.java
module org::sireum::bakar::xml::BodyVersionAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/BoxExpression.java
module org::sireum::bakar::xml::BoxExpression
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 45
   variable sloc in line 41
   variable type in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CallableAttribute.java
module org::sireum::bakar::xml::CallableAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CallerAttribute.java
module org::sireum::bakar::xml::CallerAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CaseExpression.java
module org::sireum::bakar::xml::CaseExpression
   inherits from org::sireum::bakar::xml::Base
   function getCaseExpressionQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpressionPathsQl() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCaseExpressionQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExpressionPathsQl(ElementList) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable caseExpressionQ in line 47
   variable checks in line 53
   variable expressionPathsQl in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CaseExpressionPath.java
module org::sireum::bakar::xml::CaseExpressionPath
   inherits from org::sireum::bakar::xml::Base
   function getCasePathAlternativeChoicesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDependentExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCasePathAlternativeChoicesQl(ElementList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDependentExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable casePathAlternativeChoicesQl in line 46
   variable checks in line 50
   variable dependentExpressionQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CasePath.java
module org::sireum::bakar::xml::CasePath
   inherits from org::sireum::bakar::xml::Base
   function getCasePathAlternativeChoicesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSequenceOfStatementsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCasePathAlternativeChoicesQl(ElementList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceOfStatementsQl(StatementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable casePathAlternativeChoicesQl in line 46
   variable checks in line 50
   variable sequenceOfStatementsQl in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CaseStatement.java
module org::sireum::bakar::xml::CaseStatement
   inherits from org::sireum::bakar::xml::Base
   function getCaseExpressionQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementPathsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCaseExpressionQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementPathsQl(PathList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable caseExpressionQ in line 50
   variable checks in line 54
   variable labelNamesQl in line 48
   variable sloc in line 46
   variable statementPathsQl in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CeilingAttribute.java
module org::sireum::bakar::xml::CeilingAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CharacterLiteral.java
module org::sireum::bakar::xml::CharacterLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ChoiceParameterSpecification.java
module org::sireum::bakar::xml::ChoiceParameterSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable namesQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ClassAttribute.java
module org::sireum::bakar::xml::ClassAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CodeStatement.java
module org::sireum::bakar::xml::CodeStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getQualifiedExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setQualifiedExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable qualifiedExpressionQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CompilationUnit.java
module org::sireum::bakar::xml::CompilationUnit
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 322
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContextClauseElementsQl() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmasAfterQl() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFile() in line 298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnitClass() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnitDeclarationQ() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnitFullName() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnitKind() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnitOrigin() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 334
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setContextClauseElementsQl(ContextClauseList) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 286
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmasAfterQl(ElementList) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSourceFile(String) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUnitClass(String) in line 214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUnitDeclarationQ(DeclarationClass) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUnitFullName(String) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUnitKind(String) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUnitOrigin(String) in line 238
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 72
   variable contextClauseElementsQl in line 54
   variable defName in line 68
   variable pragmasAfterQl in line 58
   variable sloc in line 52
   variable sourceFile in line 70
   variable unitClass in line 62
   variable unitDeclarationQ in line 56
   variable unitFullName in line 66
   variable unitKind in line 60
   variable unitOrigin in line 64
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ComponentClause.java
module org::sireum::bakar::xml::ComponentClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentClausePositionQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentClauseRangeQ() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseNameQ() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setComponentClausePositionQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setComponentClauseRangeQ(DiscreteRangeClass) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseNameQ(NameClass) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 54
   variable componentClausePositionQ in line 50
   variable componentClauseRangeQ in line 52
   variable representationClauseNameQ in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ComponentClauseList.java
module org::sireum::bakar::xml::ComponentClauseList
   inherits from org::sireum::bakar::xml::Base
   function getComponentClauses() in line 183
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable componentClauses in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ComponentDeclaration.java
module org::sireum::bakar::xml::ComponentDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(ComponentDeclaration.HasAliasedQ) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 72
   variable checks in line 74
   variable hasAliasedQ in line 66
   variable initializationExpressionQ in line 70
   variable namesQl in line 64
   variable objectDeclarationViewQ in line 68
   variable sloc in line 62
module org::sireum::bakar::xml::ComponentDeclaration::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 277
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ComponentDefinition.java
module org::sireum::bakar::xml::ComponentDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentDefinitionViewQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setComponentDefinitionViewQ(DefinitionClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(ComponentDefinition.HasAliasedQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 62
   variable componentDefinitionViewQ in line 60
   variable hasAliasedQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::ComponentDefinition::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ComponentSizeAttribute.java
module org::sireum::bakar::xml::ComponentSizeAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ComposeAttribute.java
module org::sireum::bakar::xml::ComposeAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ConcatenateOperator.java
module org::sireum::bakar::xml::ConcatenateOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ConditionalEntryCallStatement.java
module org::sireum::bakar::xml::ConditionalEntryCallStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementPathsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementPathsQl(PathList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable sloc in line 44
   variable statementPathsQl in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ConstantDeclaration.java
module org::sireum::bakar::xml::ConstantDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(ConstantDeclaration.HasAliasedQ) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 72
   variable checks in line 74
   variable hasAliasedQ in line 66
   variable initializationExpressionQ in line 70
   variable namesQl in line 64
   variable objectDeclarationViewQ in line 68
   variable sloc in line 62
module org::sireum::bakar::xml::ConstantDeclaration::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 277
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ConstrainedArrayDefinition.java
module org::sireum::bakar::xml::ConstrainedArrayDefinition
   inherits from org::sireum::bakar::xml::Base
   function getArrayComponentDefinitionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscreteSubtypeDefinitionsQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setArrayComponentDefinitionQ(ElementClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscreteSubtypeDefinitionsQl(DefinitionList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable arrayComponentDefinitionQ in line 48
   variable checks in line 50
   variable discreteSubtypeDefinitionsQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ConstrainedAttribute.java
module org::sireum::bakar::xml::ConstrainedAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ConstraintClass.java
module org::sireum::bakar::xml::ConstraintClass
   inherits from org::sireum::bakar::xml::Base
   function getConstraint() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setConstraint(Base) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable constraint in line 110
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ContextClauseClass.java
module org::sireum::bakar::xml::ContextClauseClass
   inherits from org::sireum::bakar::xml::Base
   function getContextClause() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setContextClause(Base) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable contextClause in line 106
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ContextClauseList.java
module org::sireum::bakar::xml::ContextClauseList
   inherits from org::sireum::bakar::xml::Base
   function getContextClauses() in line 192
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable contextClauses in line 108
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ControlledPragma.java
module org::sireum::bakar::xml::ControlledPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ConventionPragma.java
module org::sireum::bakar::xml::ConventionPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CopySignAttribute.java
module org::sireum::bakar::xml::CopySignAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CountAttribute.java
module org::sireum::bakar::xml::CountAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/CpuPragma.java
module org::sireum::bakar::xml::CpuPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DecimalFixedPointDefinition.java
module org::sireum::bakar::xml::DecimalFixedPointDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeltaExpressionQ() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDigitsExpressionQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRealRangeConstraintQ() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDeltaExpressionQ(ExpressionClass) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDigitsExpressionQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRealRangeConstraintQ(RangeConstraintClass) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 54
   variable deltaExpressionQ in line 48
   variable digitsExpressionQ in line 50
   variable realRangeConstraintQ in line 52
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DeclarationClass.java
module org::sireum::bakar::xml::DeclarationClass
   inherits from org::sireum::bakar::xml::Base
   function getDeclaration() in line 359
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDeclaration(Base) in line 492
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable declaration in line 228
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DeclarationList.java
module org::sireum::bakar::xml::DeclarationList
   inherits from org::sireum::bakar::xml::Base
   function getDeclarations() in line 375
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable declarations in line 230
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DeclarativeItemClass.java
module org::sireum::bakar::xml::DeclarativeItemClass
   inherits from org::sireum::bakar::xml::Base
   function getDeclarativeItem() in line 386
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDeclarativeItem(Base) in line 528
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable declarativeItem in line 246
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DeclarativeItemList.java
module org::sireum::bakar::xml::DeclarativeItemList
   inherits from org::sireum::bakar::xml::Base
   function getDeclarativeItems() in line 402
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable declarativeItems in line 248
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefaultStoragePoolPragma.java
module org::sireum::bakar::xml::DefaultStoragePoolPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DeferredConstantDeclaration.java
module org::sireum::bakar::xml::DeferredConstantDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(DeferredConstantDeclaration.HasAliasedQ) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 68
   variable checks in line 70
   variable hasAliasedQ in line 64
   variable namesQl in line 62
   variable objectDeclarationViewQ in line 66
   variable sloc in line 60
module org::sireum::bakar::xml::DeferredConstantDeclaration::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 249
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningAbsOperator.java
module org::sireum::bakar::xml::DefiningAbsOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningAndOperator.java
module org::sireum::bakar::xml::DefiningAndOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningCharacterLiteral.java
module org::sireum::bakar::xml::DefiningCharacterLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningConcatenateOperator.java
module org::sireum::bakar::xml::DefiningConcatenateOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningDivideOperator.java
module org::sireum::bakar::xml::DefiningDivideOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningEnumerationLiteral.java
module org::sireum::bakar::xml::DefiningEnumerationLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningEqualOperator.java
module org::sireum::bakar::xml::DefiningEqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningExpandedName.java
module org::sireum::bakar::xml::DefiningExpandedName
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefiningPrefixQ() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefiningSelectorQ() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefiningPrefixQ(NameClass) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefiningSelectorQ(DefiningNameClass) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 59
   variable def in line 55
   variable definingPrefixQ in line 49
   variable definingSelectorQ in line 51
   variable defName in line 53
   variable sloc in line 47
   variable type in line 57
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningExponentiateOperator.java
module org::sireum::bakar::xml::DefiningExponentiateOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningGreaterThanOperator.java
module org::sireum::bakar::xml::DefiningGreaterThanOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningGreaterThanOrEqualOperator.java
module org::sireum::bakar::xml::DefiningGreaterThanOrEqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningIdentifier.java
module org::sireum::bakar::xml::DefiningIdentifier
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningLessThanOperator.java
module org::sireum::bakar::xml::DefiningLessThanOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningLessThanOrEqualOperator.java
module org::sireum::bakar::xml::DefiningLessThanOrEqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningMinusOperator.java
module org::sireum::bakar::xml::DefiningMinusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningModOperator.java
module org::sireum::bakar::xml::DefiningModOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningMultiplyOperator.java
module org::sireum::bakar::xml::DefiningMultiplyOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningNameClass.java
module org::sireum::bakar::xml::DefiningNameClass
   inherits from org::sireum::bakar::xml::Base
   function getDefiningName() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDefiningName(Base) in line 332
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable definingName in line 148
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningNameList.java
module org::sireum::bakar::xml::DefiningNameList
   inherits from org::sireum::bakar::xml::Base
   function getDefiningNames() in line 255
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable definingNames in line 150
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningNotEqualOperator.java
module org::sireum::bakar::xml::DefiningNotEqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningNotOperator.java
module org::sireum::bakar::xml::DefiningNotOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningOrOperator.java
module org::sireum::bakar::xml::DefiningOrOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningPlusOperator.java
module org::sireum::bakar::xml::DefiningPlusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningRemOperator.java
module org::sireum::bakar::xml::DefiningRemOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningUnaryMinusOperator.java
module org::sireum::bakar::xml::DefiningUnaryMinusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningUnaryPlusOperator.java
module org::sireum::bakar::xml::DefiningUnaryPlusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiningXorOperator.java
module org::sireum::bakar::xml::DefiningXorOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable def in line 47
   variable defName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefiniteAttribute.java
module org::sireum::bakar::xml::DefiniteAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefinitionClass.java
module org::sireum::bakar::xml::DefinitionClass
   inherits from org::sireum::bakar::xml::Base
   function getDefinition() in line 434
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDefinition(Base) in line 592
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable definition in line 278
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DefinitionList.java
module org::sireum::bakar::xml::DefinitionList
   inherits from org::sireum::bakar::xml::Base
   function getDefinitions() in line 450
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable definitions in line 280
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DelayRelativeStatement.java
module org::sireum::bakar::xml::DelayRelativeStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDelayExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDelayExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable delayExpressionQ in line 48
   variable labelNamesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DelayUntilStatement.java
module org::sireum::bakar::xml::DelayUntilStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDelayExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDelayExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable delayExpressionQ in line 48
   variable labelNamesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DeltaAttribute.java
module org::sireum::bakar::xml::DeltaAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DeltaConstraint.java
module org::sireum::bakar::xml::DeltaConstraint
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeltaExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRealRangeConstraintQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDeltaExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRealRangeConstraintQ(RangeConstraintClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable deltaExpressionQ in line 46
   variable realRangeConstraintQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DenormAttribute.java
module org::sireum::bakar::xml::DenormAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DerivedRecordExtensionDefinition.java
module org::sireum::bakar::xml::DerivedRecordExtensionDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParentSubtypeIndicationQ() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordDefinitionQ() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(DerivedRecordExtensionDefinition.HasAbstractQ) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(DerivedRecordExtensionDefinition.HasLimitedQ) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParentSubtypeIndicationQ(ElementClass) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordDefinitionQ(DefinitionClass) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 85
   variable definitionInterfaceListQl in line 81
   variable hasAbstractQ in line 75
   variable hasLimitedQ in line 77
   variable parentSubtypeIndicationQ in line 79
   variable recordDefinitionQ in line 83
   variable sloc in line 73
module org::sireum::bakar::xml::DerivedRecordExtensionDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 288
module org::sireum::bakar::xml::DerivedRecordExtensionDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 351
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DerivedTypeDefinition.java
module org::sireum::bakar::xml::DerivedTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParentSubtypeIndicationQ() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(DerivedTypeDefinition.HasAbstractQ) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(DerivedTypeDefinition.HasLimitedQ) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParentSubtypeIndicationQ(ElementClass) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 77
   variable hasAbstractQ in line 71
   variable hasLimitedQ in line 73
   variable parentSubtypeIndicationQ in line 75
   variable sloc in line 69
module org::sireum::bakar::xml::DerivedTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 232
module org::sireum::bakar::xml::DerivedTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 319
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 295
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DetectBlockingPragma.java
module org::sireum::bakar::xml::DetectBlockingPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DigitsAttribute.java
module org::sireum::bakar::xml::DigitsAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DigitsConstraint.java
module org::sireum::bakar::xml::DigitsConstraint
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDigitsExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRealRangeConstraintQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDigitsExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRealRangeConstraintQ(RangeConstraintClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable digitsExpressionQ in line 46
   variable realRangeConstraintQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscardNamesPragma.java
module org::sireum::bakar::xml::DiscardNamesPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteRangeAttributeReference.java
module org::sireum::bakar::xml::DiscreteRangeAttributeReference
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRangeAttributeQ() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRangeAttributeQ(ExpressionClass) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable rangeAttributeQ in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteRangeAttributeReferenceAsSubtypeDefinition.java
module org::sireum::bakar::xml::DiscreteRangeAttributeReferenceAsSubtypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRangeAttributeQ() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRangeAttributeQ(ExpressionClass) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable rangeAttributeQ in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteRangeClass.java
module org::sireum::bakar::xml::DiscreteRangeClass
   inherits from org::sireum::bakar::xml::Base
   function getDiscreteRange() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDiscreteRange(Base) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable discreteRange in line 104
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteRangeList.java
module org::sireum::bakar::xml::DiscreteRangeList
   inherits from org::sireum::bakar::xml::Base
   function getDiscreteRanges() in line 189
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable discreteRanges in line 106
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteSimpleExpressionRange.java
module org::sireum::bakar::xml::DiscreteSimpleExpressionRange
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLowerBoundQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUpperBoundQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLowerBoundQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUpperBoundQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable lowerBoundQ in line 46
   variable sloc in line 44
   variable upperBoundQ in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteSimpleExpressionRangeAsSubtypeDefinition.java
module org::sireum::bakar::xml::DiscreteSimpleExpressionRangeAsSubtypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLowerBoundQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUpperBoundQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLowerBoundQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUpperBoundQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable lowerBoundQ in line 46
   variable sloc in line 44
   variable upperBoundQ in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteSubtypeDefinitionClass.java
module org::sireum::bakar::xml::DiscreteSubtypeDefinitionClass
   inherits from org::sireum::bakar::xml::Base
   function getDiscreteSubtypeDefinition() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDiscreteSubtypeDefinition(Base) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable discreteSubtypeDefinition in line 104
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteSubtypeIndication.java
module org::sireum::bakar::xml::DiscreteSubtypeIndication
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeConstraintQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeMarkQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeConstraintQ(ConstraintClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeMarkQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable sloc in line 44
   variable subtypeConstraintQ in line 48
   variable subtypeMarkQ in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscreteSubtypeIndicationAsSubtypeDefinition.java
module org::sireum::bakar::xml::DiscreteSubtypeIndicationAsSubtypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeConstraintQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeMarkQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeConstraintQ(ConstraintClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeMarkQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable sloc in line 44
   variable subtypeConstraintQ in line 48
   variable subtypeMarkQ in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscriminantAssociation.java
module org::sireum::bakar::xml::DiscriminantAssociation
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantSelectorNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantSelectorNamesQl(ExpressionList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable discriminantExpressionQ in line 48
   variable discriminantSelectorNamesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscriminantAssociationList.java
module org::sireum::bakar::xml::DiscriminantAssociationList
   inherits from org::sireum::bakar::xml::Base
   function getDiscriminantAssociations() in line 183
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable discriminantAssociations in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscriminantConstraint.java
module org::sireum::bakar::xml::DiscriminantConstraint
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantAssociationsQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantAssociationsQl(DiscriminantAssociationList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable discriminantAssociationsQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscriminantSpecification.java
module org::sireum::bakar::xml::DiscriminantSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(DiscriminantSpecification.HasNullExclusionQ) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 70
   variable hasNullExclusionQ in line 64
   variable initializationExpressionQ in line 68
   variable namesQl in line 62
   variable objectDeclarationViewQ in line 66
   variable sloc in line 60
module org::sireum::bakar::xml::DiscriminantSpecification::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 249
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DiscriminantSpecificationList.java
module org::sireum::bakar::xml::DiscriminantSpecificationList
   inherits from org::sireum::bakar::xml::Base
   function getDiscriminantSpecifications() in line 183
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable discriminantSpecifications in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DispatchingDomainPragma.java
module org::sireum::bakar::xml::DispatchingDomainPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/DivideOperator.java
module org::sireum::bakar::xml::DivideOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElaborateAllPragma.java
module org::sireum::bakar::xml::ElaborateAllPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElaborateBodyPragma.java
module org::sireum::bakar::xml::ElaborateBodyPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElaboratePragma.java
module org::sireum::bakar::xml::ElaboratePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElementClass.java
module org::sireum::bakar::xml::ElementClass
   inherits from org::sireum::bakar::xml::Base
   function getElement() in line 1298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setElement(Base) in line 1744
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable element in line 854
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElementIteratorSpecification.java
module org::sireum::bakar::xml::ElementIteratorSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasReverseQ() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIterationSchemeNameQ() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeIndicationQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasReverseQ(ElementIteratorSpecification.HasReverseQ) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIterationSchemeNameQ(ElementClass) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeIndicationQ(ElementClass) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 70
   variable hasReverseQ in line 66
   variable iterationSchemeNameQ in line 68
   variable namesQl in line 62
   variable sloc in line 60
   variable subtypeIndicationQ in line 64
module org::sireum::bakar::xml::ElementIteratorSpecification::HasReverseQ
   inherits from org::sireum::bakar::xml::Base
   function getHasReverse() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasReverse(Base) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasReverse in line 249
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElementList.java
module org::sireum::bakar::xml::ElementList
   inherits from org::sireum::bakar::xml::Base
   function getElements() in line 1314
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable elements in line 856
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElseExpressionPath.java
module org::sireum::bakar::xml::ElseExpressionPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDependentExpressionQ() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDependentExpressionQ(ExpressionClass) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable dependentExpressionQ in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElsePath.java
module org::sireum::bakar::xml::ElsePath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSequenceOfStatementsQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceOfStatementsQl(StatementList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable sequenceOfStatementsQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElsifExpressionPath.java
module org::sireum::bakar::xml::ElsifExpressionPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConditionExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDependentExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConditionExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDependentExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable conditionExpressionQ in line 46
   variable dependentExpressionQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ElsifPath.java
module org::sireum::bakar::xml::ElsifPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConditionExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSequenceOfStatementsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConditionExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceOfStatementsQl(StatementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable conditionExpressionQ in line 46
   variable sequenceOfStatementsQl in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EntryBodyDeclaration.java
module org::sireum::bakar::xml::EntryBodyDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getBodyDeclarativeItemsQl() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyExceptionHandlersQl() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyStatementsQl() in line 224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEntryBarrierQ() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEntryIndexSpecificationQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setBodyDeclarativeItemsQl(ElementList) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyExceptionHandlersQl(ExceptionHandlerList) in line 260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyStatementsQl(StatementList) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEntryBarrierQ(ExpressionClass) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEntryIndexSpecificationQ(DeclarationClass) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bodyDeclarativeItemsQl in line 64
   variable bodyExceptionHandlersQl in line 68
   variable bodyStatementsQl in line 66
   variable checks in line 70
   variable entryBarrierQ in line 62
   variable entryIndexSpecificationQ in line 58
   variable namesQl in line 56
   variable parameterProfileQl in line 60
   variable sloc in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EntryCallStatement.java
module org::sireum::bakar::xml::EntryCallStatement
   inherits from org::sireum::bakar::xml::Base
   function getCalledNameQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCallStatementParametersQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCalledNameQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCallStatementParametersQl(AssociationList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable calledNameQ in line 50
   variable callStatementParametersQl in line 52
   variable checks in line 54
   variable labelNamesQl in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EntryDeclaration.java
module org::sireum::bakar::xml::EntryDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEntryFamilyDefinitionQ() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 255
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEntryFamilyDefinitionQ(DiscreteSubtypeDefinitionClass) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(EntryDeclaration.IsNotOverridingDeclarationQ) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(EntryDeclaration.IsOverridingDeclarationQ) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 87
   variable checks in line 89
   variable entryFamilyDefinitionQ in line 83
   variable isNotOverridingDeclarationQ in line 79
   variable isOverridingDeclarationQ in line 77
   variable namesQl in line 81
   variable parameterProfileQl in line 85
   variable sloc in line 75
module org::sireum::bakar::xml::EntryDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 316
module org::sireum::bakar::xml::EntryDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 403
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 379
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EntryIndexSpecification.java
module org::sireum::bakar::xml::EntryIndexSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSpecificationSubtypeDefinitionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSpecificationSubtypeDefinitionQ(DiscreteSubtypeDefinitionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable namesQl in line 46
   variable sloc in line 44
   variable specificationSubtypeDefinitionQ in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EnumerationLiteral.java
module org::sireum::bakar::xml::EnumerationLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EnumerationLiteralSpecification.java
module org::sireum::bakar::xml::EnumerationLiteralSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable namesQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EnumerationRepresentationClause.java
module org::sireum::bakar::xml::EnumerationRepresentationClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseNameQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseNameQ(NameClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable representationClauseExpressionQ in line 48
   variable representationClauseNameQ in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EnumerationTypeDefinition.java
module org::sireum::bakar::xml::EnumerationTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEnumerationLiteralDeclarationsQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEnumerationLiteralDeclarationsQl(DeclarationList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable enumerationLiteralDeclarationsQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/EqualOperator.java
module org::sireum::bakar::xml::EqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExceptionDeclaration.java
module org::sireum::bakar::xml::ExceptionDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 48
   variable checks in line 50
   variable namesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExceptionHandler.java
module org::sireum::bakar::xml::ExceptionHandler
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChoiceParameterSpecificationQ() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExceptionChoicesQl() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHandlerStatementsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChoiceParameterSpecificationQ(DeclarationClass) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExceptionChoicesQl(ElementList) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHandlerStatementsQl(StatementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 54
   variable choiceParameterSpecificationQ in line 48
   variable exceptionChoicesQl in line 50
   variable handlerStatementsQl in line 52
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExceptionHandlerList.java
module org::sireum::bakar::xml::ExceptionHandlerList
   inherits from org::sireum::bakar::xml::Base
   function getExceptionHandlers() in line 183
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable exceptionHandlers in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExceptionRenamingDeclaration.java
module org::sireum::bakar::xml::ExceptionRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable namesQl in line 48
   variable renamedEntityQ in line 50
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExitStatement.java
module org::sireum::bakar::xml::ExitStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExitConditionQ() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExitLoopNameQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExitConditionQ(ExpressionClass) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExitLoopNameQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 54
   variable exitConditionQ in line 52
   variable exitLoopNameQ in line 50
   variable labelNamesQl in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExplicitDereference.java
module org::sireum::bakar::xml::ExplicitDereference
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable prefixQ in line 45
   variable sloc in line 43
   variable type in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExponentAttribute.java
module org::sireum::bakar::xml::ExponentAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExponentiateOperator.java
module org::sireum::bakar::xml::ExponentiateOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExportPragma.java
module org::sireum::bakar::xml::ExportPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExpressionClass.java
module org::sireum::bakar::xml::ExpressionClass
   inherits from org::sireum::bakar::xml::Base
   function getExpression() in line 617
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExpression(Base) in line 836
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable expression in line 400
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExpressionFunctionDeclaration.java
module org::sireum::bakar::xml::ExpressionFunctionDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultExpressionQ() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultProfileQ() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultExpressionQ(ExpressionClass) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultProfileQ(ElementClass) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 60
   variable checks in line 62
   variable namesQl in line 52
   variable parameterProfileQl in line 54
   variable resultExpressionQ in line 58
   variable resultProfileQ in line 56
   variable sloc in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExpressionList.java
module org::sireum::bakar::xml::ExpressionList
   inherits from org::sireum::bakar::xml::Base
   function getExpressions() in line 633
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable expressions in line 402
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExtendedReturnStatement.java
module org::sireum::bakar::xml::ExtendedReturnStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExtendedReturnExceptionHandlersQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExtendedReturnStatementsQl() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnObjectDeclarationQ() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExtendedReturnExceptionHandlersQl(ExceptionHandlerList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExtendedReturnStatementsQl(StatementList) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setReturnObjectDeclarationQ(DeclarationClass) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 54
   variable extendedReturnExceptionHandlersQl in line 52
   variable extendedReturnStatementsQl in line 50
   variable returnObjectDeclarationQ in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExtensionAggregate.java
module org::sireum::bakar::xml::ExtensionAggregate
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExtensionAggregateExpressionQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordComponentAssociationsQl() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExtensionAggregateExpressionQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordComponentAssociationsQl(AssociationList) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable extensionAggregateExpressionQ in line 47
   variable recordComponentAssociationsQl in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ExternalTagAttribute.java
module org::sireum::bakar::xml::ExternalTagAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FirstAttribute.java
module org::sireum::bakar::xml::FirstAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorExpressionsQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAttributeDesignatorIdentifierQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorExpressionsQl(ExpressionList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorExpressionsQl in line 53
   variable attributeDesignatorIdentifierQ in line 51
   variable checks in line 57
   variable prefixQ in line 49
   variable sloc in line 47
   variable type in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FirstBitAttribute.java
module org::sireum::bakar::xml::FirstBitAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FloatingPointDefinition.java
module org::sireum::bakar::xml::FloatingPointDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDigitsExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRealRangeConstraintQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDigitsExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRealRangeConstraintQ(RangeConstraintClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable digitsExpressionQ in line 46
   variable realRangeConstraintQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FloorAttribute.java
module org::sireum::bakar::xml::FloorAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ForAllQuantifiedExpression.java
module org::sireum::bakar::xml::ForAllQuantifiedExpression
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIteratorSpecificationQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPredicateQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIteratorSpecificationQ(DeclarationClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPredicateQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable iteratorSpecificationQ in line 47
   variable predicateQ in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ForeAttribute.java
module org::sireum::bakar::xml::ForeAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ForLoopStatement.java
module org::sireum::bakar::xml::ForLoopStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getForLoopParameterSpecificationQ() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLoopStatementsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementIdentifierQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setForLoopParameterSpecificationQ(DeclarationClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLoopStatementsQl(StatementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementIdentifierQ(DefiningNameClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 58
   variable forLoopParameterSpecificationQ in line 54
   variable labelNamesQl in line 50
   variable loopStatementsQl in line 56
   variable sloc in line 48
   variable statementIdentifierQ in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalAccessToConstant.java
module org::sireum::bakar::xml::FormalAccessToConstant
   inherits from org::sireum::bakar::xml::Base
   function getAccessToObjectDefinitionQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToObjectDefinitionQ(ElementClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalAccessToConstant.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToObjectDefinitionQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::FormalAccessToConstant::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalAccessToFunction.java
module org::sireum::bakar::xml::FormalAccessToFunction
   inherits from org::sireum::bakar::xml::Base
   function getAccessToFunctionResultProfileQ() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessToSubprogramParameterProfileQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToFunctionResultProfileQ(ElementClass) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalAccessToFunction.HasNullExclusionQ) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(FormalAccessToFunction.IsNotNullReturnQ) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToFunctionResultProfileQ in line 79
   variable accessToSubprogramParameterProfileQl in line 75
   variable checks in line 81
   variable hasNullExclusionQ in line 73
   variable isNotNullReturnQ in line 77
   variable sloc in line 71
module org::sireum::bakar::xml::FormalAccessToFunction::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 260
module org::sireum::bakar::xml::FormalAccessToFunction::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 323
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalAccessToProcedure.java
module org::sireum::bakar::xml::FormalAccessToProcedure
   inherits from org::sireum::bakar::xml::Base
   function getAccessToSubprogramParameterProfileQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalAccessToProcedure.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToSubprogramParameterProfileQl in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::FormalAccessToProcedure::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalAccessToProtectedFunction.java
module org::sireum::bakar::xml::FormalAccessToProtectedFunction
   inherits from org::sireum::bakar::xml::Base
   function getAccessToFunctionResultProfileQ() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessToSubprogramParameterProfileQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToFunctionResultProfileQ(ElementClass) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalAccessToProtectedFunction.HasNullExclusionQ) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(FormalAccessToProtectedFunction.IsNotNullReturnQ) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToFunctionResultProfileQ in line 79
   variable accessToSubprogramParameterProfileQl in line 75
   variable checks in line 81
   variable hasNullExclusionQ in line 73
   variable isNotNullReturnQ in line 77
   variable sloc in line 71
module org::sireum::bakar::xml::FormalAccessToProtectedFunction::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 260
module org::sireum::bakar::xml::FormalAccessToProtectedFunction::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 323
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalAccessToProtectedProcedure.java
module org::sireum::bakar::xml::FormalAccessToProtectedProcedure
   inherits from org::sireum::bakar::xml::Base
   function getAccessToSubprogramParameterProfileQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToSubprogramParameterProfileQl(ParameterSpecificationList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalAccessToProtectedProcedure.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToSubprogramParameterProfileQl in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::FormalAccessToProtectedProcedure::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalAccessToVariable.java
module org::sireum::bakar::xml::FormalAccessToVariable
   inherits from org::sireum::bakar::xml::Base
   function getAccessToObjectDefinitionQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToObjectDefinitionQ(ElementClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalAccessToVariable.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToObjectDefinitionQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::FormalAccessToVariable::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalConstrainedArrayDefinition.java
module org::sireum::bakar::xml::FormalConstrainedArrayDefinition
   inherits from org::sireum::bakar::xml::Base
   function getArrayComponentDefinitionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscreteSubtypeDefinitionsQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setArrayComponentDefinitionQ(ElementClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscreteSubtypeDefinitionsQl(DefinitionList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable arrayComponentDefinitionQ in line 48
   variable checks in line 50
   variable discreteSubtypeDefinitionsQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalDecimalFixedPointDefinition.java
module org::sireum::bakar::xml::FormalDecimalFixedPointDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalDerivedTypeDefinition.java
module org::sireum::bakar::xml::FormalDerivedTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasPrivateQ() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasSynchronizedQ() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeMarkQ() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(FormalDerivedTypeDefinition.HasAbstractQ) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(FormalDerivedTypeDefinition.HasLimitedQ) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasPrivateQ(FormalDerivedTypeDefinition.HasPrivateQ) in line 277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasSynchronizedQ(FormalDerivedTypeDefinition.HasSynchronizedQ) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeMarkQ(ExpressionClass) in line 229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 111
   variable definitionInterfaceListQl in line 107
   variable hasAbstractQ in line 99
   variable hasLimitedQ in line 101
   variable hasPrivateQ in line 109
   variable hasSynchronizedQ in line 103
   variable sloc in line 97
   variable subtypeMarkQ in line 105
module org::sireum::bakar::xml::FormalDerivedTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 349
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 362
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 338
module org::sireum::bakar::xml::FormalDerivedTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 412
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 425
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 401
module org::sireum::bakar::xml::FormalDerivedTypeDefinition::HasPrivateQ
   inherits from org::sireum::bakar::xml::Base
   function getHasPrivate() in line 475
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasPrivate(Base) in line 488
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasPrivate in line 464
module org::sireum::bakar::xml::FormalDerivedTypeDefinition::HasSynchronizedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasSynchronized() in line 538
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasSynchronized(Base) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasSynchronized in line 527
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalDiscreteTypeDefinition.java
module org::sireum::bakar::xml::FormalDiscreteTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalFloatingPointDefinition.java
module org::sireum::bakar::xml::FormalFloatingPointDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalFunctionDeclaration.java
module org::sireum::bakar::xml::FormalFunctionDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFormalSubprogramDefaultQ() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultProfileQ() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 307
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormalSubprogramDefaultQ(ExpressionClass) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(FormalFunctionDeclaration.HasAbstractQ) in line 259
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(FormalFunctionDeclaration.IsNotNullReturnQ) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultProfileQ(ElementClass) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 91
   variable checks in line 93
   variable formalSubprogramDefaultQ in line 87
   variable hasAbstractQ in line 89
   variable isNotNullReturnQ in line 83
   variable namesQl in line 79
   variable parameterProfileQl in line 81
   variable resultProfileQ in line 85
   variable sloc in line 77
module org::sireum::bakar::xml::FormalFunctionDeclaration::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 344
module org::sireum::bakar::xml::FormalFunctionDeclaration::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 431
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 407
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalIncompleteTypeDeclaration.java
module org::sireum::bakar::xml::FormalIncompleteTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasTaggedQ() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasTaggedQ(FormalIncompleteTypeDeclaration.HasTaggedQ) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 68
   variable checks in line 70
   variable discriminantPartQ in line 64
   variable hasTaggedQ in line 66
   variable namesQl in line 62
   variable sloc in line 60
module org::sireum::bakar::xml::FormalIncompleteTypeDeclaration::HasTaggedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasTagged() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasTagged(Base) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasTagged in line 249
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalLimitedInterface.java
module org::sireum::bakar::xml::FormalLimitedInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalModularTypeDefinition.java
module org::sireum::bakar::xml::FormalModularTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalObjectDeclaration.java
module org::sireum::bakar::xml::FormalObjectDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMode() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 267
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalObjectDeclaration.HasNullExclusionQ) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMode(String) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 73
   variable checks in line 77
   variable hasNullExclusionQ in line 67
   variable initializationExpressionQ in line 71
   variable mode in line 75
   variable namesQl in line 65
   variable objectDeclarationViewQ in line 69
   variable sloc in line 63
module org::sireum::bakar::xml::FormalObjectDeclaration::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 328
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 304
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalOrdinaryFixedPointDefinition.java
module org::sireum::bakar::xml::FormalOrdinaryFixedPointDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalOrdinaryInterface.java
module org::sireum::bakar::xml::FormalOrdinaryInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalPackageDeclaration.java
module org::sireum::bakar::xml::FormalPackageDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericActualPartQl() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericUnitNameQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericActualPartQl(AssociationList) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericUnitNameQ(ExpressionClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 58
   variable genericActualPartQl in line 54
   variable genericUnitNameQ in line 52
   variable namesQl in line 50
   variable sloc in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalPackageDeclarationWithBox.java
module org::sireum::bakar::xml::FormalPackageDeclarationWithBox
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericUnitNameQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericUnitNameQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable genericUnitNameQ in line 50
   variable namesQl in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalPoolSpecificAccessToVariable.java
module org::sireum::bakar::xml::FormalPoolSpecificAccessToVariable
   inherits from org::sireum::bakar::xml::Base
   function getAccessToObjectDefinitionQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToObjectDefinitionQ(ElementClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(FormalPoolSpecificAccessToVariable.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToObjectDefinitionQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::FormalPoolSpecificAccessToVariable::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalPrivateTypeDefinition.java
module org::sireum::bakar::xml::FormalPrivateTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(FormalPrivateTypeDefinition.HasAbstractQ) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(FormalPrivateTypeDefinition.HasLimitedQ) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 73
   variable hasAbstractQ in line 69
   variable hasLimitedQ in line 71
   variable sloc in line 67
module org::sireum::bakar::xml::FormalPrivateTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 204
module org::sireum::bakar::xml::FormalPrivateTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 267
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalProcedureDeclaration.java
module org::sireum::bakar::xml::FormalProcedureDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFormalSubprogramDefaultQ() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormalSubprogramDefaultQ(ExpressionClass) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(FormalProcedureDeclaration.HasAbstractQ) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 72
   variable checks in line 74
   variable formalSubprogramDefaultQ in line 68
   variable hasAbstractQ in line 70
   variable namesQl in line 64
   variable parameterProfileQl in line 66
   variable sloc in line 62
module org::sireum::bakar::xml::FormalProcedureDeclaration::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 277
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalProtectedInterface.java
module org::sireum::bakar::xml::FormalProtectedInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalSignedIntegerTypeDefinition.java
module org::sireum::bakar::xml::FormalSignedIntegerTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalSynchronizedInterface.java
module org::sireum::bakar::xml::FormalSynchronizedInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalTaggedPrivateTypeDefinition.java
module org::sireum::bakar::xml::FormalTaggedPrivateTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(FormalTaggedPrivateTypeDefinition.HasAbstractQ) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(FormalTaggedPrivateTypeDefinition.HasLimitedQ) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 73
   variable hasAbstractQ in line 69
   variable hasLimitedQ in line 71
   variable sloc in line 67
module org::sireum::bakar::xml::FormalTaggedPrivateTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 204
module org::sireum::bakar::xml::FormalTaggedPrivateTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 267
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalTaskInterface.java
module org::sireum::bakar::xml::FormalTaskInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalTypeDeclaration.java
module org::sireum::bakar::xml::FormalTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeDeclarationViewQ() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTypeDeclarationViewQ(DefinitionClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 58
   variable discriminantPartQ in line 52
   variable namesQl in line 50
   variable sloc in line 48
   variable typeDeclarationViewQ in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FormalUnconstrainedArrayDefinition.java
module org::sireum::bakar::xml::FormalUnconstrainedArrayDefinition
   inherits from org::sireum::bakar::xml::Base
   function getArrayComponentDefinitionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIndexSubtypeDefinitionsQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setArrayComponentDefinitionQ(ElementClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIndexSubtypeDefinitionsQl(ExpressionList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable arrayComponentDefinitionQ in line 48
   variable checks in line 50
   variable indexSubtypeDefinitionsQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ForSomeQuantifiedExpression.java
module org::sireum::bakar::xml::ForSomeQuantifiedExpression
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIteratorSpecificationQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPredicateQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIteratorSpecificationQ(DeclarationClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPredicateQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable iteratorSpecificationQ in line 47
   variable predicateQ in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FractionAttribute.java
module org::sireum::bakar::xml::FractionAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FunctionBodyDeclaration.java
module org::sireum::bakar::xml::FunctionBodyDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyDeclarativeItemsQl() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyExceptionHandlersQl() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyStatementsQl() in line 342
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultProfileQ() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyDeclarativeItemsQl(ElementList) in line 330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyExceptionHandlersQl(ExceptionHandlerList) in line 378
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyStatementsQl(StatementList) in line 354
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 402
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(FunctionBodyDeclaration.IsNotNullReturnQ) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(FunctionBodyDeclaration.IsNotOverridingDeclarationQ) in line 186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(FunctionBodyDeclaration.IsOverridingDeclarationQ) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultProfileQ(ElementClass) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 108
   variable bodyDeclarativeItemsQl in line 110
   variable bodyExceptionHandlersQl in line 114
   variable bodyStatementsQl in line 112
   variable checks in line 116
   variable isNotNullReturnQ in line 104
   variable isNotOverridingDeclarationQ in line 98
   variable isOverridingDeclarationQ in line 96
   variable namesQl in line 100
   variable parameterProfileQl in line 102
   variable resultProfileQ in line 106
   variable sloc in line 94
module org::sireum::bakar::xml::FunctionBodyDeclaration::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 450
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 463
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 439
module org::sireum::bakar::xml::FunctionBodyDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 513
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 526
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 502
module org::sireum::bakar::xml::FunctionBodyDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 576
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 589
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 565
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FunctionBodyStub.java
module org::sireum::bakar::xml::FunctionBodyStub
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultProfileQ() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(FunctionBodyStub.IsNotNullReturnQ) in line 246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(FunctionBodyStub.IsNotOverridingDeclarationQ) in line 174
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(FunctionBodyStub.IsOverridingDeclarationQ) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultProfileQ(ElementClass) in line 270
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 102
   variable checks in line 104
   variable isNotNullReturnQ in line 98
   variable isNotOverridingDeclarationQ in line 92
   variable isOverridingDeclarationQ in line 90
   variable namesQl in line 94
   variable parameterProfileQl in line 96
   variable resultProfileQ in line 100
   variable sloc in line 88
module org::sireum::bakar::xml::FunctionBodyStub::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 355
module org::sireum::bakar::xml::FunctionBodyStub::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 429
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 442
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 418
module org::sireum::bakar::xml::FunctionBodyStub::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 492
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 505
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 481
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FunctionCall.java
module org::sireum::bakar::xml::FunctionCall
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFunctionCallParametersQl() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsPrefixCallQ() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsPrefixNotationQ() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 250
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFunctionCallParametersQl(AssociationList) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsPrefixCallQ(FunctionCall.IsPrefixCallQ) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsPrefixNotationQ(FunctionCall.IsPrefixNotationQ) in line 202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 84
   variable functionCallParametersQl in line 76
   variable isPrefixCallQ in line 78
   variable isPrefixNotationQ in line 80
   variable prefixQ in line 74
   variable sloc in line 72
   variable type in line 82
module org::sireum::bakar::xml::FunctionCall::IsPrefixCallQ
   inherits from org::sireum::bakar::xml::Base
   function getIsPrefixCall() in line 298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsPrefixCall(Base) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isPrefixCall in line 287
module org::sireum::bakar::xml::FunctionCall::IsPrefixNotationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsPrefixNotation() in line 361
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsPrefixNotation(Base) in line 374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isPrefixNotation in line 350
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FunctionDeclaration.java
module org::sireum::bakar::xml::FunctionDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 297
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultProfileQ() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(FunctionDeclaration.HasAbstractQ) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(FunctionDeclaration.IsNotNullReturnQ) in line 261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(FunctionDeclaration.IsNotOverridingDeclarationQ) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(FunctionDeclaration.IsOverridingDeclarationQ) in line 165
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 237
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultProfileQ(ElementClass) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 117
   variable checks in line 119
   variable hasAbstractQ in line 115
   variable isNotNullReturnQ in line 111
   variable isNotOverridingDeclarationQ in line 105
   variable isOverridingDeclarationQ in line 103
   variable namesQl in line 107
   variable parameterProfileQl in line 109
   variable resultProfileQ in line 113
   variable sloc in line 101
module org::sireum::bakar::xml::FunctionDeclaration::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 405
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 418
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 394
module org::sireum::bakar::xml::FunctionDeclaration::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 468
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 481
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 457
module org::sireum::bakar::xml::FunctionDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 531
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 544
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 520
module org::sireum::bakar::xml::FunctionDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 594
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 607
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 583
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FunctionInstantiation.java
module org::sireum::bakar::xml::FunctionInstantiation
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericActualPartQl() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericUnitNameQ() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 255
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericActualPartQl(AssociationList) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericUnitNameQ(ExpressionClass) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(FunctionInstantiation.IsNotOverridingDeclarationQ) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(FunctionInstantiation.IsOverridingDeclarationQ) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 87
   variable checks in line 89
   variable genericActualPartQl in line 85
   variable genericUnitNameQ in line 83
   variable isNotOverridingDeclarationQ in line 79
   variable isOverridingDeclarationQ in line 77
   variable namesQl in line 81
   variable sloc in line 75
module org::sireum::bakar::xml::FunctionInstantiation::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 316
module org::sireum::bakar::xml::FunctionInstantiation::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 403
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 379
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/FunctionRenamingDeclaration.java
module org::sireum::bakar::xml::FunctionRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 310
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultProfileQ() in line 262
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 322
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 346
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(FunctionRenamingDeclaration.IsNotNullReturnQ) in line 250
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(FunctionRenamingDeclaration.IsNotOverridingDeclarationQ) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(FunctionRenamingDeclaration.IsOverridingDeclarationQ) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 298
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultProfileQ(ElementClass) in line 274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 106
   variable checks in line 108
   variable isNotNullReturnQ in line 100
   variable isNotOverridingDeclarationQ in line 94
   variable isOverridingDeclarationQ in line 92
   variable namesQl in line 96
   variable parameterProfileQl in line 98
   variable renamedEntityQ in line 104
   variable resultProfileQ in line 102
   variable sloc in line 90
module org::sireum::bakar::xml::FunctionRenamingDeclaration::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 394
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 407
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 383
module org::sireum::bakar::xml::FunctionRenamingDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 457
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 470
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 446
module org::sireum::bakar::xml::FunctionRenamingDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 533
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 509
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GeneralizedIteratorSpecification.java
module org::sireum::bakar::xml::GeneralizedIteratorSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasReverseQ() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIterationSchemeNameQ() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasReverseQ(GeneralizedIteratorSpecification.HasReverseQ) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIterationSchemeNameQ(ElementClass) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 66
   variable hasReverseQ in line 62
   variable iterationSchemeNameQ in line 64
   variable namesQl in line 60
   variable sloc in line 58
module org::sireum::bakar::xml::GeneralizedIteratorSpecification::HasReverseQ
   inherits from org::sireum::bakar::xml::Base
   function getHasReverse() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasReverse(Base) in line 245
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasReverse in line 221
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GenericAssociation.java
module org::sireum::bakar::xml::GenericAssociation
   inherits from org::sireum::bakar::xml::Base
   function getActualParameterQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFormalParameterQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setActualParameterQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormalParameterQ(ElementClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable actualParameterQ in line 48
   variable checks in line 50
   variable formalParameterQ in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GenericFunctionDeclaration.java
module org::sireum::bakar::xml::GenericFunctionDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericFormalPartQl() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotNullReturnQ() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultProfileQ() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericFormalPartQl(ElementList) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotNullReturnQ(GenericFunctionDeclaration.IsNotNullReturnQ) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResultProfileQ(ElementClass) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 76
   variable checks in line 78
   variable genericFormalPartQl in line 66
   variable isNotNullReturnQ in line 72
   variable namesQl in line 68
   variable parameterProfileQl in line 70
   variable resultProfileQ in line 74
   variable sloc in line 64
module org::sireum::bakar::xml::GenericFunctionDeclaration::IsNotNullReturnQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotNullReturn() in line 316
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotNullReturn(Base) in line 329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotNullReturn in line 305
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GenericFunctionRenamingDeclaration.java
module org::sireum::bakar::xml::GenericFunctionRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable namesQl in line 48
   variable renamedEntityQ in line 50
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GenericPackageDeclaration.java
module org::sireum::bakar::xml::GenericPackageDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericFormalPartQl() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrivatePartDeclarativeItemsQl() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVisiblePartDeclarativeItemsQl() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericFormalPartQl(ElementList) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrivatePartDeclarativeItemsQl(DeclarativeItemList) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVisiblePartDeclarativeItemsQl(DeclarativeItemList) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 62
   variable genericFormalPartQl in line 52
   variable namesQl in line 54
   variable privatePartDeclarativeItemsQl in line 60
   variable sloc in line 50
   variable visiblePartDeclarativeItemsQl in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GenericPackageRenamingDeclaration.java
module org::sireum::bakar::xml::GenericPackageRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable namesQl in line 48
   variable renamedEntityQ in line 50
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GenericProcedureDeclaration.java
module org::sireum::bakar::xml::GenericProcedureDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericFormalPartQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericFormalPartQl(ElementList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 58
   variable genericFormalPartQl in line 50
   variable namesQl in line 52
   variable parameterProfileQl in line 54
   variable sloc in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GenericProcedureRenamingDeclaration.java
module org::sireum::bakar::xml::GenericProcedureRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable namesQl in line 48
   variable renamedEntityQ in line 50
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GotoStatement.java
module org::sireum::bakar::xml::GotoStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGotoLabelQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGotoLabelQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable gotoLabelQ in line 48
   variable labelNamesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GreaterThanOperator.java
module org::sireum::bakar::xml::GreaterThanOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/GreaterThanOrEqualOperator.java
module org::sireum::bakar::xml::GreaterThanOrEqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Identifier.java
module org::sireum::bakar::xml::Identifier
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IdentityAttribute.java
module org::sireum::bakar::xml::IdentityAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IfExpression.java
module org::sireum::bakar::xml::IfExpression
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpressionPathsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExpressionPathsQl(ElementList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable expressionPathsQl in line 45
   variable sloc in line 43
   variable type in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IfExpressionPath.java
module org::sireum::bakar::xml::IfExpressionPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConditionExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDependentExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConditionExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDependentExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable conditionExpressionQ in line 46
   variable dependentExpressionQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IfPath.java
module org::sireum::bakar::xml::IfPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConditionExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSequenceOfStatementsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConditionExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceOfStatementsQl(StatementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable conditionExpressionQ in line 46
   variable sequenceOfStatementsQl in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IfStatement.java
module org::sireum::bakar::xml::IfStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementPathsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementPathsQl(PathList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable sloc in line 44
   variable statementPathsQl in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ImageAttribute.java
module org::sireum::bakar::xml::ImageAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ImplementationDefinedAttribute.java
module org::sireum::bakar::xml::ImplementationDefinedAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorExpressionsQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAttributeDesignatorIdentifierQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorExpressionsQl(ExpressionList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorExpressionsQl in line 53
   variable attributeDesignatorIdentifierQ in line 51
   variable checks in line 57
   variable prefixQ in line 49
   variable sloc in line 47
   variable type in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ImplementationDefinedPragma.java
module org::sireum::bakar::xml::ImplementationDefinedPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ImportPragma.java
module org::sireum::bakar::xml::ImportPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IncompleteTypeDeclaration.java
module org::sireum::bakar::xml::IncompleteTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable discriminantPartQ in line 50
   variable namesQl in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IndependentComponentsPragma.java
module org::sireum::bakar::xml::IndependentComponentsPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IndependentPragma.java
module org::sireum::bakar::xml::IndependentPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IndexConstraint.java
module org::sireum::bakar::xml::IndexConstraint
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscreteRangesQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscreteRangesQl(DiscreteRangeList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable discreteRangesQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IndexedComponent.java
module org::sireum::bakar::xml::IndexedComponent
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIndexExpressionsQl() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIndexExpressionsQl(ExpressionList) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable indexExpressionsQl in line 49
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/InlinePragma.java
module org::sireum::bakar::xml::InlinePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/InMembershipTest.java
module org::sireum::bakar::xml::InMembershipTest
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMembershipTestChoicesQl() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMembershipTestExpressionQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMembershipTestChoicesQl(ElementList) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMembershipTestExpressionQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable membershipTestChoicesQl in line 49
   variable membershipTestExpressionQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/InputAttribute.java
module org::sireum::bakar::xml::InputAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/InspectionPointPragma.java
module org::sireum::bakar::xml::InspectionPointPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IntegerLiteral.java
module org::sireum::bakar::xml::IntegerLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLitVal() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLitVal(String) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 48
   variable litVal in line 44
   variable sloc in line 42
   variable type in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IntegerNumberDeclaration.java
module org::sireum::bakar::xml::IntegerNumberDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable initializationExpressionQ in line 48
   variable namesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/InterruptHandlerPragma.java
module org::sireum::bakar::xml::InterruptHandlerPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/InterruptPriorityPragma.java
module org::sireum::bakar::xml::InterruptPriorityPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IsPrefixCall.java
module org::sireum::bakar::xml::IsPrefixCall
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/IsPrefixNotation.java
module org::sireum::bakar::xml::IsPrefixNotation
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/KnownDiscriminantPart.java
module org::sireum::bakar::xml::KnownDiscriminantPart
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantsQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantsQl(DiscriminantSpecificationList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable discriminantsQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LastAttribute.java
module org::sireum::bakar::xml::LastAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorExpressionsQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAttributeDesignatorIdentifierQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorExpressionsQl(ExpressionList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorExpressionsQl in line 53
   variable attributeDesignatorIdentifierQ in line 51
   variable checks in line 57
   variable prefixQ in line 49
   variable sloc in line 47
   variable type in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LastBitAttribute.java
module org::sireum::bakar::xml::LastBitAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LeadingPartAttribute.java
module org::sireum::bakar::xml::LeadingPartAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LengthAttribute.java
module org::sireum::bakar::xml::LengthAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorExpressionsQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAttributeDesignatorIdentifierQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorExpressionsQl(ExpressionList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorExpressionsQl in line 53
   variable attributeDesignatorIdentifierQ in line 51
   variable checks in line 57
   variable prefixQ in line 49
   variable sloc in line 47
   variable type in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LessThanOperator.java
module org::sireum::bakar::xml::LessThanOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LessThanOrEqualOperator.java
module org::sireum::bakar::xml::LessThanOrEqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Limited.java
module org::sireum::bakar::xml::Limited
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LimitedInterface.java
module org::sireum::bakar::xml::LimitedInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LinkerOptionsPragma.java
module org::sireum::bakar::xml::LinkerOptionsPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ListPragma.java
module org::sireum::bakar::xml::ListPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LockingPolicyPragma.java
module org::sireum::bakar::xml::LockingPolicyPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LoopParameterSpecification.java
module org::sireum::bakar::xml::LoopParameterSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasReverseQ() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSpecificationSubtypeDefinitionQ() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasReverseQ(LoopParameterSpecification.HasReverseQ) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSpecificationSubtypeDefinitionQ(DiscreteSubtypeDefinitionClass) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 66
   variable hasReverseQ in line 62
   variable namesQl in line 60
   variable sloc in line 58
   variable specificationSubtypeDefinitionQ in line 64
module org::sireum::bakar::xml::LoopParameterSpecification::HasReverseQ
   inherits from org::sireum::bakar::xml::Base
   function getHasReverse() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasReverse(Base) in line 245
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasReverse in line 221
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/LoopStatement.java
module org::sireum::bakar::xml::LoopStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLoopStatementsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementIdentifierQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLoopStatementsQl(StatementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementIdentifierQ(DefiningNameClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 54
   variable labelNamesQl in line 48
   variable loopStatementsQl in line 52
   variable sloc in line 46
   variable statementIdentifierQ in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineAttribute.java
module org::sireum::bakar::xml::MachineAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineEmaxAttribute.java
module org::sireum::bakar::xml::MachineEmaxAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineEminAttribute.java
module org::sireum::bakar::xml::MachineEminAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineMantissaAttribute.java
module org::sireum::bakar::xml::MachineMantissaAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineOverflowsAttribute.java
module org::sireum::bakar::xml::MachineOverflowsAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineRadixAttribute.java
module org::sireum::bakar::xml::MachineRadixAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineRoundingAttribute.java
module org::sireum::bakar::xml::MachineRoundingAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MachineRoundsAttribute.java
module org::sireum::bakar::xml::MachineRoundsAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MaxAlignmentForAllocationAttribute.java
module org::sireum::bakar::xml::MaxAlignmentForAllocationAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MaxAttribute.java
module org::sireum::bakar::xml::MaxAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MaxSizeInStorageElementsAttribute.java
module org::sireum::bakar::xml::MaxSizeInStorageElementsAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MinAttribute.java
module org::sireum::bakar::xml::MinAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MinusOperator.java
module org::sireum::bakar::xml::MinusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModAttribute.java
module org::sireum::bakar::xml::ModAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModelAttribute.java
module org::sireum::bakar::xml::ModelAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModelEminAttribute.java
module org::sireum::bakar::xml::ModelEminAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModelEpsilonAttribute.java
module org::sireum::bakar::xml::ModelEpsilonAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModelMantissaAttribute.java
module org::sireum::bakar::xml::ModelMantissaAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModelSmallAttribute.java
module org::sireum::bakar::xml::ModelSmallAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModOperator.java
module org::sireum::bakar::xml::ModOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModularTypeDefinition.java
module org::sireum::bakar::xml::ModularTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getModStaticExpressionQ() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setModStaticExpressionQ(ExpressionClass) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable modStaticExpressionQ in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ModulusAttribute.java
module org::sireum::bakar::xml::ModulusAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/MultiplyOperator.java
module org::sireum::bakar::xml::MultiplyOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NameClass.java
module org::sireum::bakar::xml::NameClass
   inherits from org::sireum::bakar::xml::Base
   function getName() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setName(Base) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable name in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NamedArrayAggregate.java
module org::sireum::bakar::xml::NamedArrayAggregate
   inherits from org::sireum::bakar::xml::Base
   function getArrayComponentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setArrayComponentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable arrayComponentAssociationsQl in line 45
   variable checks in line 49
   variable sloc in line 43
   variable type in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NameList.java
module org::sireum::bakar::xml::NameList
   inherits from org::sireum::bakar::xml::Base
   function getNames() in line 186
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable names in line 104
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NoReturnPragma.java
module org::sireum::bakar::xml::NoReturnPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NormalizeScalarsPragma.java
module org::sireum::bakar::xml::NormalizeScalarsPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NotAnElement.java
module org::sireum::bakar::xml::NotAnElement
   inherits from org::sireum::bakar::xml::Base
   function getSloc() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable sloc in line 38
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NotEqualOperator.java
module org::sireum::bakar::xml::NotEqualOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NotInMembershipTest.java
module org::sireum::bakar::xml::NotInMembershipTest
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMembershipTestChoicesQl() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMembershipTestExpressionQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMembershipTestChoicesQl(ElementList) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMembershipTestExpressionQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable membershipTestChoicesQl in line 49
   variable membershipTestExpressionQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NotNullReturn.java
module org::sireum::bakar::xml::NotNullReturn
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NotOperator.java
module org::sireum::bakar::xml::NotOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NotOverriding.java
module org::sireum::bakar::xml::NotOverriding
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NullComponent.java
module org::sireum::bakar::xml::NullComponent
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NullExclusion.java
module org::sireum::bakar::xml::NullExclusion
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NullLiteral.java
module org::sireum::bakar::xml::NullLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 45
   variable sloc in line 41
   variable type in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NullProcedureDeclaration.java
module org::sireum::bakar::xml::NullProcedureDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(NullProcedureDeclaration.IsNotOverridingDeclarationQ) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(NullProcedureDeclaration.IsOverridingDeclarationQ) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 83
   variable checks in line 85
   variable isNotOverridingDeclarationQ in line 77
   variable isOverridingDeclarationQ in line 75
   variable namesQl in line 79
   variable parameterProfileQl in line 81
   variable sloc in line 73
module org::sireum::bakar::xml::NullProcedureDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 288
module org::sireum::bakar::xml::NullProcedureDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 351
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NullRecordDefinition.java
module org::sireum::bakar::xml::NullRecordDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/NullStatement.java
module org::sireum::bakar::xml::NullStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable labelNamesQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ObjectFactory.java
module org::sireum::bakar::xml::ObjectFactory
   function createAbortStatement() in line 1256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAbortStatement(AbortStatement) in line 5611
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AbortStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAbsOperator() in line 2416
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAbsOperator(AbsOperator) in line 7159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AbsOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAbstract() in line 2312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAbstract(Abstract) in line 7015
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Abstract_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAcceptStatement() in line 2088
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAcceptStatement(AcceptStatement) in line 6727
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AcceptStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessAttribute() in line 3656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessAttribute(AccessAttribute) in line 8743
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AccessAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessToConstant() in line 632
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToConstant(AccessToConstant) in line 8005
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AccessToConstant_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessToConstantHasNullExclusionQ() in line 4592
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToFunction() in line 552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToFunction(AccessToFunction) in line 8464
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AccessToFunction_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessToFunctionHasNullExclusionQ() in line 4472
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToFunctionIsNotNullReturnQ() in line 4480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToProcedure() in line 544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToProcedure(AccessToProcedure) in line 8590
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AccessToProcedure_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessToProcedureHasNullExclusionQ() in line 4464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToProtectedFunction() in line 856
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToProtectedFunction(AccessToProtectedFunction) in line 6178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AccessToProtectedFunction_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessToProtectedFunctionHasNullExclusionQ() in line 4952
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToProtectedFunctionIsNotNullReturnQ() in line 4960
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToProtectedProcedure() in line 560
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToProtectedProcedure(AccessToProtectedProcedure) in line 8347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AccessToProtectedProcedure_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessToProtectedProcedureHasNullExclusionQ() in line 4488
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToVariable() in line 800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAccessToVariable(AccessToVariable) in line 6430
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AccessToVariable_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAccessToVariableHasNullExclusionQ() in line 4872
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAddressAttribute() in line 2408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAddressAttribute(AddressAttribute) in line 7150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AddressAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAdjacentAttribute() in line 2616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAdjacentAttribute(AdjacentAttribute) in line 7447
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AdjacentAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAftAttribute() in line 3864
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAftAttribute(AftAttribute) in line 9004
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AftAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAliased() in line 3536
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAliased(Aliased) in line 8599
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Aliased_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAlignmentAttribute() in line 1056
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAlignmentAttribute(AlignmentAttribute) in line 5314
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AlignmentAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAllCallsRemotePragma() in line 1184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAllCallsRemotePragma(AllCallsRemotePragma) in line 5503
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AllCallsRemotePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAllocationFromQualifiedExpression() in line 4000
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAllocationFromQualifiedExpression(AllocationFromQualifiedExpression) in line 9175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AllocationFromQualifiedExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAllocationFromSubtype() in line 3568
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAllocationFromSubtype(AllocationFromSubtype) in line 8635
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AllocationFromSubtype_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAndOperator() in line 3312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAndOperator(AndOperator) in line 8320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AndOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAndThenShortCircuit() in line 2200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAndThenShortCircuit(AndThenShortCircuit) in line 6871
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AndThenShortCircuit_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAnonymousAccessToConstant() in line 512
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToConstant(AnonymousAccessToConstant) in line 8923
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AnonymousAccessToConstant_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAnonymousAccessToConstantHasNullExclusionQ() in line 4408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToFunction() in line 584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToFunction(AnonymousAccessToFunction) in line 8203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AnonymousAccessToFunction_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAnonymousAccessToFunctionHasNullExclusionQ() in line 4512
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToFunctionIsNotNullReturnQ() in line 4520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToProcedure() in line 704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToProcedure(AnonymousAccessToProcedure) in line 7123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AnonymousAccessToProcedure_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAnonymousAccessToProcedureHasNullExclusionQ() in line 4704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToProtectedFunction() in line 496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToProtectedFunction(AnonymousAccessToProtectedFunction) in line 9238
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AnonymousAccessToProtectedFunction_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAnonymousAccessToProtectedFunctionHasNullExclusionQ() in line 4384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToProtectedFunctionIsNotNullReturnQ() in line 4392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToProtectedProcedure() in line 656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToProtectedProcedure(AnonymousAccessToProtectedProcedure) in line 7357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AnonymousAccessToProtectedProcedure_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAnonymousAccessToProtectedProcedureHasNullExclusionQ() in line 4624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToVariable() in line 936
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAnonymousAccessToVariable(AnonymousAccessToVariable) in line 5485
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AnonymousAccessToVariable_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAnonymousAccessToVariableHasNullExclusionQ() in line 5096
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createArrayComponentAssociation() in line 3888
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createArrayComponentAssociation(ArrayComponentAssociation) in line 9031
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ArrayComponentAssociation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAspectSpecification() in line 3424
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAspectSpecification(AspectSpecification) in line 8455
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AspectSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAssertionPolicyPragma() in line 1128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAssertionPolicyPragma(AssertionPolicyPragma) in line 5431
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AssertionPolicyPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAssertPragma() in line 2224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAssertPragma(AssertPragma) in line 6889
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AssertPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAssignmentStatement() in line 1248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAssignmentStatement(AssignmentStatement) in line 5602
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AssignmentStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAssociationClass() in line 4192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAssociationList() in line 4216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAsynchronousPragma() in line 1024
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAsynchronousPragma(AsynchronousPragma) in line 5260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AsynchronousPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAsynchronousSelectStatement() in line 1760
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAsynchronousSelectStatement(AsynchronousSelectStatement) in line 6277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AsynchronousSelectStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAtClause() in line 3576
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAtClause(AtClause) in line 8644
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AtClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAtomicComponentsPragma() in line 2304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAtomicComponentsPragma(AtomicComponentsPragma) in line 6997
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AtomicComponentsPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAtomicPragma() in line 3096
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAtomicPragma(AtomicPragma) in line 7996
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AtomicPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAttachHandlerPragma() in line 2440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAttachHandlerPragma(AttachHandlerPragma) in line 7195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AttachHandlerPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createAttributeDefinitionClause() in line 1552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createAttributeDefinitionClause(AttributeDefinitionClause) in line 6007
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _AttributeDefinitionClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createBaseAttribute() in line 1688
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createBaseAttribute(BaseAttribute) in line 6160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _BaseAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createBitOrderAttribute() in line 3816
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createBitOrderAttribute(BitOrderAttribute) in line 8950
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _BitOrderAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createBlockStatement() in line 3640
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createBlockStatement(BlockStatement) in line 8725
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _BlockStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createBodyVersionAttribute() in line 4072
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createBodyVersionAttribute(BodyVersionAttribute) in line 9265
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _BodyVersionAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createBoxExpression() in line 3288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createBoxExpression(BoxExpression) in line 8293
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _BoxExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCallableAttribute() in line 2600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCallableAttribute(CallableAttribute) in line 7429
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CallableAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCallerAttribute() in line 2552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCallerAttribute(CallerAttribute) in line 7366
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CallerAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCaseExpression() in line 1264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCaseExpression(CaseExpression) in line 5620
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CaseExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCaseExpressionPath() in line 3992
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCaseExpressionPath(CaseExpressionPath) in line 9157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CaseExpressionPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCasePath() in line 1480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCasePath(CasePath) in line 5899
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CasePath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCaseStatement() in line 2976
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCaseStatement(CaseStatement) in line 7861
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CaseStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCeilingAttribute() in line 1528
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCeilingAttribute(CeilingAttribute) in line 5971
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CeilingAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCharacterLiteral() in line 3944
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCharacterLiteral(CharacterLiteral) in line 9103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CharacterLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createChoiceParameterSpecification() in line 3296
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createChoiceParameterSpecification(ChoiceParameterSpecification) in line 8302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ChoiceParameterSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createClassAttribute() in line 2264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createClassAttribute(ClassAttribute) in line 6943
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ClassAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCodeStatement() in line 2528
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCodeStatement(CodeStatement) in line 7330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CodeStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCompilationUnit() in line 2608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCompilationUnit(CompilationUnit) in line 7438
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CompilationUnit_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createComponentClause() in line 2240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComponentClause(ComponentClause) in line 6916
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ComponentClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createComponentClauseList() in line 4352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComponentDeclaration() in line 888
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComponentDeclaration(ComponentDeclaration) in line 5809
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ComponentDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createComponentDeclarationHasAliasedQ() in line 5000
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComponentDefinition() in line 688
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComponentDefinition(ComponentDefinition) in line 7213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ComponentDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createComponentDefinitionHasAliasedQ() in line 4680
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComponentSizeAttribute() in line 1112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComponentSizeAttribute(ComponentSizeAttribute) in line 5404
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ComponentSizeAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createComposeAttribute() in line 3144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createComposeAttribute(ComposeAttribute) in line 8059
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ComposeAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createConcatenateOperator() in line 1608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createConcatenateOperator(ConcatenateOperator) in line 6070
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ConcatenateOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createConditionalEntryCallStatement() in line 1632
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createConditionalEntryCallStatement(ConditionalEntryCallStatement) in line 6106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ConditionalEntryCallStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createConstantDeclaration() in line 896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createConstantDeclaration(ConstantDeclaration) in line 5764
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ConstantDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createConstantDeclarationHasAliasedQ() in line 5008
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createConstrainedArrayDefinition() in line 3592
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createConstrainedArrayDefinition(ConstrainedArrayDefinition) in line 8662
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ConstrainedArrayDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createConstrainedAttribute() in line 2672
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createConstrainedAttribute(ConstrainedAttribute) in line 7510
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ConstrainedAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createConstraintClass() in line 4120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createContextClauseClass() in line 4136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createContextClauseList() in line 4320
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createControlledPragma() in line 3952
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createControlledPragma(ControlledPragma) in line 9121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ControlledPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createConventionPragma() in line 1152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createConventionPragma(ConventionPragma) in line 5467
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ConventionPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCopySignAttribute() in line 2728
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCopySignAttribute(CopySignAttribute) in line 7573
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CopySignAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCountAttribute() in line 1928
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCountAttribute(CountAttribute) in line 6520
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CountAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createCpuPragma() in line 1808
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createCpuPragma(CpuPragma) in line 6358
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _CpuPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDecimalFixedPointDefinition() in line 2712
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDecimalFixedPointDefinition(DecimalFixedPointDefinition) in line 7555
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DecimalFixedPointDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDeclarationClass() in line 4208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDeclarationList() in line 4240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDeclarativeItemClass() in line 4088
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDeclarativeItemList() in line 4256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefaultStoragePoolPragma() in line 3528
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefaultStoragePoolPragma(DefaultStoragePoolPragma) in line 8581
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefaultStoragePoolPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDeferredConstantDeclaration() in line 728
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDeferredConstantDeclaration(DeferredConstantDeclaration) in line 7006
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DeferredConstantDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDeferredConstantDeclarationHasAliasedQ() in line 4744
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningAbsOperator() in line 1104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningAbsOperator(DefiningAbsOperator) in line 5395
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningAbsOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningAndOperator() in line 2288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningAndOperator(DefiningAndOperator) in line 6979
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningAndOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningCharacterLiteral() in line 2272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningCharacterLiteral(DefiningCharacterLiteral) in line 6961
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningCharacterLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningConcatenateOperator() in line 3072
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningConcatenateOperator(DefiningConcatenateOperator) in line 7969
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningConcatenateOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningDivideOperator() in line 3176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningDivideOperator(DefiningDivideOperator) in line 8104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningDivideOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningEnumerationLiteral() in line 2024
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningEnumerationLiteral(DefiningEnumerationLiteral) in line 6637
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningEnumerationLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningEqualOperator() in line 1200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningEqualOperator(DefiningEqualOperator) in line 5530
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningEqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningExpandedName() in line 2664
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningExpandedName(DefiningExpandedName) in line 7501
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningExpandedName_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningExponentiateOperator() in line 2560
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningExponentiateOperator(DefiningExponentiateOperator) in line 7375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningExponentiateOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningGreaterThanOperator() in line 3000
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningGreaterThanOperator(DefiningGreaterThanOperator) in line 7888
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningGreaterThanOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningGreaterThanOrEqualOperator() in line 3080
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningGreaterThanOrEqualOperator(DefiningGreaterThanOrEqualOperator) in line 7978
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningGreaterThanOrEqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningIdentifier() in line 2968
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningIdentifier(DefiningIdentifier) in line 7852
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningIdentifier_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningLessThanOperator() in line 1240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningLessThanOperator(DefiningLessThanOperator) in line 5575
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningLessThanOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningLessThanOrEqualOperator() in line 1088
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningLessThanOrEqualOperator(DefiningLessThanOrEqualOperator) in line 5368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningLessThanOrEqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningMinusOperator() in line 1824
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningMinusOperator(DefiningMinusOperator) in line 6376
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningMinusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningModOperator() in line 1496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningModOperator(DefiningModOperator) in line 5917
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningModOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningMultiplyOperator() in line 1192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningMultiplyOperator(DefiningMultiplyOperator) in line 5521
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningMultiplyOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningNameClass() in line 4176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningNameList() in line 4336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningNotEqualOperator() in line 3160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningNotEqualOperator(DefiningNotEqualOperator) in line 8086
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningNotEqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningNotOperator() in line 2640
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningNotOperator(DefiningNotOperator) in line 7474
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningNotOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningOrOperator() in line 1144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningOrOperator(DefiningOrOperator) in line 5449
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningOrOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningPlusOperator() in line 1832
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningPlusOperator(DefiningPlusOperator) in line 6385
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningPlusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningRemOperator() in line 2344
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningRemOperator(DefiningRemOperator) in line 7060
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningRemOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningUnaryMinusOperator() in line 3504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningUnaryMinusOperator(DefiningUnaryMinusOperator) in line 8554
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningUnaryMinusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningUnaryPlusOperator() in line 3848
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningUnaryPlusOperator(DefiningUnaryPlusOperator) in line 8986
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningUnaryPlusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiningXorOperator() in line 1096
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiningXorOperator(DefiningXorOperator) in line 5386
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiningXorOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefiniteAttribute() in line 3584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefiniteAttribute(DefiniteAttribute) in line 8653
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DefiniteAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDefinitionClass() in line 4184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDefinitionList() in line 4224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDelayRelativeStatement() in line 1616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDelayRelativeStatement(DelayRelativeStatement) in line 6079
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DelayRelativeStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDelayUntilStatement() in line 3192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDelayUntilStatement(DelayUntilStatement) in line 8122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DelayUntilStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDeltaAttribute() in line 3720
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDeltaAttribute(DeltaAttribute) in line 8815
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DeltaAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDeltaConstraint() in line 2840
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDeltaConstraint(DeltaConstraint) in line 7708
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DeltaConstraint_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDenormAttribute() in line 2768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDenormAttribute(DenormAttribute) in line 7618
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DenormAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDerivedRecordExtensionDefinition() in line 776
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDerivedRecordExtensionDefinition(DerivedRecordExtensionDefinition) in line 6583
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DerivedRecordExtensionDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDerivedRecordExtensionDefinitionHasAbstractQ() in line 4840
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDerivedRecordExtensionDefinitionHasLimitedQ() in line 4848
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDerivedTypeDefinition() in line 648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDerivedTypeDefinition(DerivedTypeDefinition) in line 7384
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DerivedTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDerivedTypeDefinitionHasAbstractQ() in line 4608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDerivedTypeDefinitionHasLimitedQ() in line 4616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDetectBlockingPragma() in line 4024
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDetectBlockingPragma(DetectBlockingPragma) in line 9193
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DetectBlockingPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDigitsAttribute() in line 1232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDigitsAttribute(DigitsAttribute) in line 5566
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DigitsAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDigitsConstraint() in line 2576
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDigitsConstraint(DigitsConstraint) in line 7402
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DigitsConstraint_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscardNamesPragma() in line 2128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscardNamesPragma(DiscardNamesPragma) in line 6772
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscardNamesPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscreteRangeAttributeReference() in line 2912
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteRangeAttributeReference(DiscreteRangeAttributeReference) in line 7789
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscreteRangeAttributeReference_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscreteRangeAttributeReferenceAsSubtypeDefinition() in line 1456
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteRangeAttributeReferenceAsSubtypeDefinition(DiscreteRangeAttributeReferenceAsSubtypeDefinition) in line 5872
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscreteRangeAttributeReferenceAsSubtypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscreteRangeClass() in line 4280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteRangeList() in line 4168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteSimpleExpressionRange() in line 3904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteSimpleExpressionRange(DiscreteSimpleExpressionRange) in line 9040
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscreteSimpleExpressionRange_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscreteSimpleExpressionRangeAsSubtypeDefinition() in line 3792
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteSimpleExpressionRangeAsSubtypeDefinition(DiscreteSimpleExpressionRangeAsSubtypeDefinition) in line 8914
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscreteSimpleExpressionRangeAsSubtypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscreteSubtypeDefinitionClass() in line 4328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteSubtypeIndication() in line 2592
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteSubtypeIndication(DiscreteSubtypeIndication) in line 7420
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscreteSubtypeIndication_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscreteSubtypeIndicationAsSubtypeDefinition() in line 1304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscreteSubtypeIndicationAsSubtypeDefinition(DiscreteSubtypeIndicationAsSubtypeDefinition) in line 5674
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscreteSubtypeIndicationAsSubtypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscriminantAssociation() in line 2872
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscriminantAssociation(DiscriminantAssociation) in line 7744
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscriminantAssociation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscriminantAssociationList() in line 4160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscriminantConstraint() in line 1224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscriminantConstraint(DiscriminantConstraint) in line 5557
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscriminantConstraint_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscriminantSpecification() in line 504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscriminantSpecification(DiscriminantSpecification) in line 9067
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DiscriminantSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDiscriminantSpecificationHasNullExclusionQ() in line 4400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDiscriminantSpecificationList() in line 4080
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDispatchingDomainPragma() in line 2624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDispatchingDomainPragma(DispatchingDomainPragma) in line 7456
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DispatchingDomainPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createDivideOperator() in line 1320
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createDivideOperator(DivideOperator) in line 5701
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _DivideOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElaborateAllPragma() in line 3544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElaborateAllPragma(ElaborateAllPragma) in line 8608
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElaborateAllPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElaborateBodyPragma() in line 1704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElaborateBodyPragma(ElaborateBodyPragma) in line 6196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElaborateBodyPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElaboratePragma() in line 2008
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElaboratePragma(ElaboratePragma) in line 6619
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElaboratePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElementClass() in line 4264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElementIteratorSpecification() in line 824
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElementIteratorSpecification(ElementIteratorSpecification) in line 6295
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElementIteratorSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElementIteratorSpecificationHasReverseQ() in line 4912
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElementList() in line 4248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElseExpressionPath() in line 2864
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElseExpressionPath(ElseExpressionPath) in line 7735
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElseExpressionPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElsePath() in line 2648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElsePath(ElsePath) in line 7483
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElsePath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElsifExpressionPath() in line 2096
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElsifExpressionPath(ElsifExpressionPath) in line 6736
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElsifExpressionPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createElsifPath() in line 3928
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createElsifPath(ElsifPath) in line 9085
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ElsifPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEntryBodyDeclaration() in line 2800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEntryBodyDeclaration(EntryBodyDeclaration) in line 7654
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EntryBodyDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEntryCallStatement() in line 2920
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEntryCallStatement(EntryCallStatement) in line 7798
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EntryCallStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEntryDeclaration() in line 736
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEntryDeclaration(EntryDeclaration) in line 6952
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EntryDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEntryDeclarationIsNotOverridingDeclarationQ() in line 4760
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEntryDeclarationIsOverridingDeclarationQ() in line 4752
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEntryIndexSpecification() in line 2296
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEntryIndexSpecification(EntryIndexSpecification) in line 6988
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EntryIndexSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEnumerationLiteral() in line 3128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEnumerationLiteral(EnumerationLiteral) in line 8041
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EnumerationLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEnumerationLiteralSpecification() in line 3216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEnumerationLiteralSpecification(EnumerationLiteralSpecification) in line 8176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EnumerationLiteralSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEnumerationRepresentationClause() in line 2752
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEnumerationRepresentationClause(EnumerationRepresentationClause) in line 7600
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EnumerationRepresentationClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEnumerationTypeDefinition() in line 1952
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEnumerationTypeDefinition(EnumerationTypeDefinition) in line 6547
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EnumerationTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createEqualOperator() in line 2208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createEqualOperator(EqualOperator) in line 6880
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _EqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExceptionDeclaration() in line 1424
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExceptionDeclaration(ExceptionDeclaration) in line 5836
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExceptionDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExceptionHandler() in line 3272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExceptionHandler(ExceptionHandler) in line 8266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExceptionHandler_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExceptionHandlerList() in line 4304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExceptionRenamingDeclaration() in line 2824
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExceptionRenamingDeclaration(ExceptionRenamingDeclaration) in line 7690
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExceptionRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExitStatement() in line 3632
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExitStatement(ExitStatement) in line 8716
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExitStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExplicitDereference() in line 1984
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExplicitDereference(ExplicitDereference) in line 6592
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExplicitDereference_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExponentAttribute() in line 1936
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExponentAttribute(ExponentAttribute) in line 6529
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExponentAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExponentiateOperator() in line 2960
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExponentiateOperator(ExponentiateOperator) in line 7843
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExponentiateOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExportPragma() in line 3184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExportPragma(ExportPragma) in line 8113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExportPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExpressionClass() in line 4096
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExpressionFunctionDeclaration() in line 3008
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExpressionFunctionDeclaration(ExpressionFunctionDeclaration) in line 7897
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExpressionFunctionDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExpressionList() in line 4144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExtendedReturnStatement() in line 1504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExtendedReturnStatement(ExtendedReturnStatement) in line 5935
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExtendedReturnStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExtensionAggregate() in line 1712
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExtensionAggregate(ExtensionAggregate) in line 6205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExtensionAggregate_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createExternalTagAttribute() in line 1288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createExternalTagAttribute(ExternalTagAttribute) in line 5656
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ExternalTagAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFirstAttribute() in line 3016
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFirstAttribute(FirstAttribute) in line 7906
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FirstAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFirstBitAttribute() in line 3872
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFirstBitAttribute(FirstBitAttribute) in line 9013
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FirstBitAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFloatingPointDefinition() in line 1448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFloatingPointDefinition(FloatingPointDefinition) in line 5863
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FloatingPointDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFloorAttribute() in line 3680
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFloorAttribute(FloorAttribute) in line 8770
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FloorAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createForAllQuantifiedExpression() in line 2688
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createForAllQuantifiedExpression(ForAllQuantifiedExpression) in line 7528
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ForAllQuantifiedExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createForeAttribute() in line 1296
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createForeAttribute(ForeAttribute) in line 5647
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ForeAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createForLoopStatement() in line 2816
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createForLoopStatement(ForLoopStatement) in line 7672
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ForLoopStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalAccessToConstant() in line 600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToConstant(FormalAccessToConstant) in line 8167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalAccessToConstant_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalAccessToConstantHasNullExclusionQ() in line 4536
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToFunction() in line 768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToFunction(FormalAccessToFunction) in line 6655
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalAccessToFunction_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalAccessToFunctionHasNullExclusionQ() in line 4824
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToFunctionIsNotNullReturnQ() in line 4832
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToProcedure() in line 880
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToProcedure(FormalAccessToProcedure) in line 5926
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalAccessToProcedure_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalAccessToProcedureHasNullExclusionQ() in line 4992
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToProtectedFunction() in line 616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToProtectedFunction(FormalAccessToProtectedFunction) in line 8131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalAccessToProtectedFunction_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalAccessToProtectedFunctionHasNullExclusionQ() in line 4552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToProtectedFunctionIsNotNullReturnQ() in line 4560
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToProtectedProcedure() in line 592
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToProtectedProcedure(FormalAccessToProtectedProcedure) in line 8194
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalAccessToProtectedProcedure_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalAccessToProtectedProcedureHasNullExclusionQ() in line 4528
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToVariable() in line 992
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalAccessToVariable(FormalAccessToVariable) in line 5269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalAccessToVariable_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalAccessToVariableHasNullExclusionQ() in line 5200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalConstrainedArrayDefinition() in line 2392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalConstrainedArrayDefinition(FormalConstrainedArrayDefinition) in line 7132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalConstrainedArrayDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalDecimalFixedPointDefinition() in line 1696
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalDecimalFixedPointDefinition(FormalDecimalFixedPointDefinition) in line 6187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalDecimalFixedPointDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalDerivedTypeDefinition() in line 528
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalDerivedTypeDefinition(FormalDerivedTypeDefinition) in line 8896
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalDerivedTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalDerivedTypeDefinitionHasAbstractQ() in line 4424
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalDerivedTypeDefinitionHasLimitedQ() in line 4432
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalDerivedTypeDefinitionHasPrivateQ() in line 4448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalDerivedTypeDefinitionHasSynchronizedQ() in line 4440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalDiscreteTypeDefinition() in line 1784
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalDiscreteTypeDefinition(FormalDiscreteTypeDefinition) in line 6313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalDiscreteTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalFloatingPointDefinition() in line 2584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalFloatingPointDefinition(FormalFloatingPointDefinition) in line 7411
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalFloatingPointDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalFunctionDeclaration() in line 808
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalFunctionDeclaration(FormalFunctionDeclaration) in line 6340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalFunctionDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalFunctionDeclarationHasAbstractQ() in line 4888
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalFunctionDeclarationIsNotNullReturnQ() in line 4880
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalIncompleteTypeDeclaration() in line 872
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalIncompleteTypeDeclaration(FormalIncompleteTypeDeclaration) in line 5953
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalIncompleteTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalIncompleteTypeDeclarationHasTaggedQ() in line 4984
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalLimitedInterface() in line 2744
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalLimitedInterface(FormalLimitedInterface) in line 7591
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalLimitedInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalModularTypeDefinition() in line 1792
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalModularTypeDefinition(FormalModularTypeDefinition) in line 6322
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalModularTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalObjectDeclaration() in line 520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalObjectDeclaration(FormalObjectDeclaration) in line 8905
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalObjectDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalObjectDeclarationHasNullExclusionQ() in line 4416
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalOrdinaryFixedPointDefinition() in line 3736
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalOrdinaryFixedPointDefinition(FormalOrdinaryFixedPointDefinition) in line 8824
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalOrdinaryFixedPointDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalOrdinaryInterface() in line 1464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalOrdinaryInterface(FormalOrdinaryInterface) in line 5881
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalOrdinaryInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalPackageDeclaration() in line 1176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalPackageDeclaration(FormalPackageDeclaration) in line 5512
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalPackageDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalPackageDeclarationWithBox() in line 2992
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalPackageDeclarationWithBox(FormalPackageDeclarationWithBox) in line 7879
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalPackageDeclarationWithBox_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalPoolSpecificAccessToVariable() in line 488
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalPoolSpecificAccessToVariable(FormalPoolSpecificAccessToVariable) in line 9229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalPoolSpecificAccessToVariable_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalPoolSpecificAccessToVariableHasNullExclusionQ() in line 4376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalPrivateTypeDefinition() in line 816
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalPrivateTypeDefinition(FormalPrivateTypeDefinition) in line 6331
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalPrivateTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalPrivateTypeDefinitionHasAbstractQ() in line 4896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalPrivateTypeDefinitionHasLimitedQ() in line 4904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalProcedureDeclaration() in line 840
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalProcedureDeclaration(FormalProcedureDeclaration) in line 6214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalProcedureDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalProcedureDeclarationHasAbstractQ() in line 4928
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalProtectedInterface() in line 3752
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalProtectedInterface(FormalProtectedInterface) in line 8842
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalProtectedInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalSignedIntegerTypeDefinition() in line 2720
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalSignedIntegerTypeDefinition(FormalSignedIntegerTypeDefinition) in line 7564
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalSignedIntegerTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalSynchronizedInterface() in line 1736
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalSynchronizedInterface(FormalSynchronizedInterface) in line 6250
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalSynchronizedInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalTaggedPrivateTypeDefinition() in line 984
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalTaggedPrivateTypeDefinition(FormalTaggedPrivateTypeDefinition) in line 5296
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalTaggedPrivateTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalTaggedPrivateTypeDefinitionHasAbstractQ() in line 5184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalTaggedPrivateTypeDefinitionHasLimitedQ() in line 5192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalTaskInterface() in line 2168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalTaskInterface(FormalTaskInterface) in line 6826
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalTaskInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalTypeDeclaration() in line 2144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalTypeDeclaration(FormalTypeDeclaration) in line 6808
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFormalUnconstrainedArrayDefinition() in line 1720
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFormalUnconstrainedArrayDefinition(FormalUnconstrainedArrayDefinition) in line 6223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FormalUnconstrainedArrayDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createForSomeQuantifiedExpression() in line 2160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createForSomeQuantifiedExpression(ForSomeQuantifiedExpression) in line 6817
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ForSomeQuantifiedExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFractionAttribute() in line 2072
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFractionAttribute(FractionAttribute) in line 6700
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FractionAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFunctionBodyDeclaration() in line 1000
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionBodyDeclaration(FunctionBodyDeclaration) in line 5251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FunctionBodyDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFunctionBodyDeclarationIsNotNullReturnQ() in line 5224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionBodyDeclarationIsNotOverridingDeclarationQ() in line 5216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionBodyDeclarationIsOverridingDeclarationQ() in line 5208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionBodyStub() in line 912
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionBodyStub(FunctionBodyStub) in line 5665
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FunctionBodyStub_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFunctionBodyStubIsNotNullReturnQ() in line 5040
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionBodyStubIsNotOverridingDeclarationQ() in line 5032
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionBodyStubIsOverridingDeclarationQ() in line 5024
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionCall() in line 944
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionCall(FunctionCall) in line 5458
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FunctionCall_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFunctionCallIsPrefixCallQ() in line 5104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionCallIsPrefixNotationQ() in line 5112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionDeclaration() in line 920
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionDeclaration(FunctionDeclaration) in line 5593
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FunctionDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFunctionDeclarationHasAbstractQ() in line 5072
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionDeclarationIsNotNullReturnQ() in line 5064
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionDeclarationIsNotOverridingDeclarationQ() in line 5056
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionDeclarationIsOverridingDeclarationQ() in line 5048
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionInstantiation() in line 752
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionInstantiation(FunctionInstantiation) in line 6790
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FunctionInstantiation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFunctionInstantiationIsNotOverridingDeclarationQ() in line 4792
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionInstantiationIsOverridingDeclarationQ() in line 4784
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionRenamingDeclaration() in line 680
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionRenamingDeclaration(FunctionRenamingDeclaration) in line 7231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _FunctionRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createFunctionRenamingDeclarationIsNotNullReturnQ() in line 4672
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionRenamingDeclarationIsNotOverridingDeclarationQ() in line 4664
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createFunctionRenamingDeclarationIsOverridingDeclarationQ() in line 4656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGeneralizedIteratorSpecification() in line 792
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGeneralizedIteratorSpecification(GeneralizedIteratorSpecification) in line 6448
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GeneralizedIteratorSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGeneralizedIteratorSpecificationHasReverseQ() in line 4864
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericAssociation() in line 2216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericAssociation(GenericAssociation) in line 6898
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GenericAssociation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGenericFunctionDeclaration() in line 640
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericFunctionDeclaration(GenericFunctionDeclaration) in line 7681
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GenericFunctionDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGenericFunctionDeclarationIsNotNullReturnQ() in line 4600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericFunctionRenamingDeclaration() in line 3416
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericFunctionRenamingDeclaration(GenericFunctionRenamingDeclaration) in line 8446
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GenericFunctionRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGenericPackageDeclaration() in line 3824
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericPackageDeclaration(GenericPackageDeclaration) in line 8959
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GenericPackageDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGenericPackageRenamingDeclaration() in line 2320
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericPackageRenamingDeclaration(GenericPackageRenamingDeclaration) in line 7024
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GenericPackageRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGenericProcedureDeclaration() in line 3304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericProcedureDeclaration(GenericProcedureDeclaration) in line 8311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GenericProcedureDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGenericProcedureRenamingDeclaration() in line 3384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGenericProcedureRenamingDeclaration(GenericProcedureRenamingDeclaration) in line 8410
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GenericProcedureRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGotoStatement() in line 3336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGotoStatement(GotoStatement) in line 8356
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GotoStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGreaterThanOperator() in line 2016
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGreaterThanOperator(GreaterThanOperator) in line 6628
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GreaterThanOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createGreaterThanOrEqualOperator() in line 4032
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createGreaterThanOrEqualOperator(GreaterThanOrEqualOperator) in line 9202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _GreaterThanOrEqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIdentifier() in line 3048
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIdentifier(Identifier) in line 7942
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Identifier_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIdentityAttribute() in line 3360
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIdentityAttribute(IdentityAttribute) in line 8383
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IdentityAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIfExpression() in line 1384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIfExpression(IfExpression) in line 5782
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IfExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIfExpressionPath() in line 3328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIfExpressionPath(IfExpressionPath) in line 8338
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IfExpressionPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIfPath() in line 3248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIfPath(IfPath) in line 8239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IfPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIfStatement() in line 3456
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIfStatement(IfStatement) in line 8500
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IfStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createImageAttribute() in line 1064
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createImageAttribute(ImageAttribute) in line 5323
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ImageAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createImplementationDefinedAttribute() in line 2944
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createImplementationDefinedAttribute(ImplementationDefinedAttribute) in line 7825
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ImplementationDefinedAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createImplementationDefinedPragma() in line 3392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createImplementationDefinedPragma(ImplementationDefinedPragma) in line 8419
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ImplementationDefinedPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createImportPragma() in line 1816
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createImportPragma(ImportPragma) in line 6367
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ImportPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIncompleteTypeDeclaration() in line 2544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIncompleteTypeDeclaration(IncompleteTypeDeclaration) in line 7348
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IncompleteTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIndependentComponentsPragma() in line 3760
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIndependentComponentsPragma(IndependentComponentsPragma) in line 8860
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IndependentComponentsPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIndependentPragma() in line 1272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIndependentPragma(IndependentPragma) in line 5629
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IndependentPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIndexConstraint() in line 2000
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIndexConstraint(IndexConstraint) in line 6601
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IndexConstraint_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIndexedComponent() in line 2936
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIndexedComponent(IndexedComponent) in line 7816
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IndexedComponent_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createInlinePragma() in line 3616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createInlinePragma(InlinePragma) in line 8689
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _InlinePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createInMembershipTest() in line 2448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createInMembershipTest(InMembershipTest) in line 7204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _InMembershipTest_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createInputAttribute() in line 1368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createInputAttribute(InputAttribute) in line 5755
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _InputAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createInspectionPointPragma() in line 1960
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createInspectionPointPragma(InspectionPointPragma) in line 6556
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _InspectionPointPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIntegerLiteral() in line 1520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIntegerLiteral(IntegerLiteral) in line 5962
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IntegerLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIntegerNumberDeclaration() in line 3408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIntegerNumberDeclaration(IntegerNumberDeclaration) in line 8437
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IntegerNumberDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createInterruptHandlerPragma() in line 2680
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createInterruptHandlerPragma(InterruptHandlerPragma) in line 7519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _InterruptHandlerPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createInterruptPriorityPragma() in line 1992
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createInterruptPriorityPragma(InterruptPriorityPragma) in line 6610
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _InterruptPriorityPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIsPrefixCall() in line 2064
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIsPrefixCall(IsPrefixCall) in line 6709
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IsPrefixCall_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createIsPrefixNotation() in line 1392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createIsPrefixNotation(IsPrefixNotation) in line 5791
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _IsPrefixNotation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createKnownDiscriminantPart() in line 3280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createKnownDiscriminantPart(KnownDiscriminantPart) in line 8284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _KnownDiscriminantPart_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLastAttribute() in line 3024
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLastAttribute(LastAttribute) in line 7915
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LastAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLastBitAttribute() in line 1920
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLastBitAttribute(LastBitAttribute) in line 6511
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LastBitAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLeadingPartAttribute() in line 3880
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLeadingPartAttribute(LeadingPartAttribute) in line 9022
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LeadingPartAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLengthAttribute() in line 1472
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLengthAttribute(LengthAttribute) in line 5890
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LengthAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLessThanOperator() in line 3208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLessThanOperator(LessThanOperator) in line 8158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LessThanOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLessThanOrEqualOperator() in line 3064
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLessThanOrEqualOperator(LessThanOrEqualOperator) in line 7960
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LessThanOrEqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLimited() in line 2400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLimited(Limited) in line 7141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Limited_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLimitedInterface() in line 1904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLimitedInterface(LimitedInterface) in line 6493
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LimitedInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLinkerOptionsPragma() in line 2352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLinkerOptionsPragma(LinkerOptionsPragma) in line 7069
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LinkerOptionsPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createListPragma() in line 2336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createListPragma(ListPragma) in line 7042
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ListPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLockingPolicyPragma() in line 2904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLockingPolicyPragma(LockingPolicyPragma) in line 7780
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LockingPolicyPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLoopParameterSpecification() in line 832
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLoopParameterSpecification(LoopParameterSpecification) in line 6241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LoopParameterSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createLoopParameterSpecificationHasReverseQ() in line 4920
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLoopStatement() in line 2232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createLoopStatement(LoopStatement) in line 6907
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _LoopStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineAttribute() in line 1944
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineAttribute(MachineAttribute) in line 6538
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineEmaxAttribute() in line 2384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineEmaxAttribute(MachineEmaxAttribute) in line 7105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineEmaxAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineEminAttribute() in line 2480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineEminAttribute(MachineEminAttribute) in line 7267
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineEminAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineMantissaAttribute() in line 3320
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineMantissaAttribute(MachineMantissaAttribute) in line 8329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineMantissaAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineOverflowsAttribute() in line 1872
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineOverflowsAttribute(MachineOverflowsAttribute) in line 6439
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineOverflowsAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineRadixAttribute() in line 3672
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineRadixAttribute(MachineRadixAttribute) in line 8761
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineRadixAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineRoundingAttribute() in line 2192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineRoundingAttribute(MachineRoundingAttribute) in line 6862
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineRoundingAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMachineRoundsAttribute() in line 3488
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMachineRoundsAttribute(MachineRoundsAttribute) in line 8536
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MachineRoundsAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMaxAlignmentForAllocationAttribute() in line 3400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMaxAlignmentForAllocationAttribute(MaxAlignmentForAllocationAttribute) in line 8428
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MaxAlignmentForAllocationAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMaxAttribute() in line 3088
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMaxAttribute(MaxAttribute) in line 7987
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MaxAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMaxSizeInStorageElementsAttribute() in line 1888
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMaxSizeInStorageElementsAttribute(MaxSizeInStorageElementsAttribute) in line 6457
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MaxSizeInStorageElementsAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMinAttribute() in line 3496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMinAttribute(MinAttribute) in line 8545
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MinAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMinusOperator() in line 3056
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMinusOperator(MinusOperator) in line 7951
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MinusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModAttribute() in line 2376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModAttribute(ModAttribute) in line 7096
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModelAttribute() in line 3520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModelAttribute(ModelAttribute) in line 8572
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModelAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModelEminAttribute() in line 2104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModelEminAttribute(ModelEminAttribute) in line 6745
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModelEminAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModelEpsilonAttribute() in line 1072
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModelEpsilonAttribute(ModelEpsilonAttribute) in line 5350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModelEpsilonAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModelMantissaAttribute() in line 3168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModelMantissaAttribute(ModelMantissaAttribute) in line 8095
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModelMantissaAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModelSmallAttribute() in line 2464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModelSmallAttribute(ModelSmallAttribute) in line 7240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModelSmallAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModOperator() in line 4056
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModOperator(ModOperator) in line 9247
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModularTypeDefinition() in line 1048
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModularTypeDefinition(ModularTypeDefinition) in line 5305
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModularTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createModulusAttribute() in line 2056
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createModulusAttribute(ModulusAttribute) in line 6682
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ModulusAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createMultiplyOperator() in line 1744
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMultiplyOperator(MultiplyOperator) in line 6259
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _MultiplyOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNameClass() in line 4344
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNamedArrayAggregate() in line 1160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNamedArrayAggregate(NamedArrayAggregate) in line 5476
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NamedArrayAggregate_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNameList() in line 4368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNoReturnPragma() in line 4016
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNoReturnPragma(NoReturnPragma) in line 9184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NoReturnPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNormalizeScalarsPragma() in line 2568
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNormalizeScalarsPragma(NormalizeScalarsPragma) in line 7393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NormalizeScalarsPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNotAnElement() in line 2248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNotAnElement(NotAnElement) in line 6925
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NotAnElement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNotEqualOperator() in line 1856
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNotEqualOperator(NotEqualOperator) in line 6421
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NotEqualOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNotInMembershipTest() in line 3712
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNotInMembershipTest(NotInMembershipTest) in line 8806
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NotInMembershipTest_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNotNullReturn() in line 3976
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNotNullReturn(NotNullReturn) in line 9130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NotNullReturn_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNotOperator() in line 3112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNotOperator(NotOperator) in line 8023
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NotOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNotOverriding() in line 4064
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNotOverriding(NotOverriding) in line 9256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NotOverriding_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNullComponent() in line 1168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullComponent(NullComponent) in line 5494
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NullComponent_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNullExclusion() in line 4008
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullExclusion(NullExclusion) in line 9166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NullExclusion_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNullLiteral() in line 3472
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullLiteral(NullLiteral) in line 8518
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NullLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNullProcedureDeclaration() in line 864
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullProcedureDeclaration(NullProcedureDeclaration) in line 5989
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NullProcedureDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNullProcedureDeclarationIsNotOverridingDeclarationQ() in line 4976
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullProcedureDeclarationIsOverridingDeclarationQ() in line 4968
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullRecordDefinition() in line 1680
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullRecordDefinition(NullRecordDefinition) in line 6142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NullRecordDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createNullStatement() in line 1672
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createNullStatement(NullStatement) in line 6151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _NullStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createObjectRenamingDeclaration() in line 664
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createObjectRenamingDeclaration(ObjectRenamingDeclaration) in line 7285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ObjectRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createObjectRenamingDeclarationHasNullExclusionQ() in line 4632
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOptimizePragma() in line 1560
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOptimizePragma(OptimizePragma) in line 6016
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OptimizePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOrdinaryFixedPointDefinition() in line 1848
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOrdinaryFixedPointDefinition(OrdinaryFixedPointDefinition) in line 6394
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OrdinaryFixedPointDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOrdinaryInterface() in line 2928
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOrdinaryInterface(OrdinaryInterface) in line 7807
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OrdinaryInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOrdinaryTypeDeclaration() in line 1040
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOrdinaryTypeDeclaration(OrdinaryTypeDeclaration) in line 5287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OrdinaryTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOrElseShortCircuit() in line 1768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOrElseShortCircuit(OrElseShortCircuit) in line 6286
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OrElseShortCircuit_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOrOperator() in line 3920
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOrOperator(OrOperator) in line 9076
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OrOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOrPath() in line 2040
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOrPath(OrPath) in line 6664
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OrPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOthersChoice() in line 1360
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOthersChoice(OthersChoice) in line 5746
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OthersChoice_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOutputAttribute() in line 2832
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOutputAttribute(OutputAttribute) in line 7699
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OutputAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOverlapsStorageAttribute() in line 3264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOverlapsStorageAttribute(OverlapsStorageAttribute) in line 8257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _OverlapsStorageAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createOverriding() in line 3120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createOverriding(Overriding) in line 8032
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Overriding_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPackageBodyDeclaration() in line 1400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPackageBodyDeclaration(PackageBodyDeclaration) in line 5800
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PackageBodyDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPackageBodyStub() in line 2368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPackageBodyStub(PackageBodyStub) in line 7087
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PackageBodyStub_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPackageDeclaration() in line 3136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPackageDeclaration(PackageDeclaration) in line 8050
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PackageDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPackageInstantiation() in line 2760
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPackageInstantiation(PackageInstantiation) in line 7609
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PackageInstantiation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPackageRenamingDeclaration() in line 3664
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPackageRenamingDeclaration(PackageRenamingDeclaration) in line 8752
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PackageRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPackPragma() in line 2472
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPackPragma(PackPragma) in line 7258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PackPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPagePragma() in line 3896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPagePragma(PagePragma) in line 9049
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PagePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createParameterAssociation() in line 3464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createParameterAssociation(ParameterAssociation) in line 8509
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ParameterAssociation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createParameterSpecification() in line 672
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createParameterSpecification(ParameterSpecification) in line 7249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ParameterSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createParameterSpecificationHasAliasedQ() in line 4640
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createParameterSpecificationHasNullExclusionQ() in line 4648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createParameterSpecificationList() in line 4128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createParenthesizedExpression() in line 1008
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createParenthesizedExpression(ParenthesizedExpression) in line 5233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ParenthesizedExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPartitionElaborationPolicyPragma() in line 4048
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPartitionElaborationPolicyPragma(PartitionElaborationPolicyPragma) in line 9220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PartitionElaborationPolicyPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPartitionIdAttribute() in line 2880
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPartitionIdAttribute(PartitionIdAttribute) in line 7753
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PartitionIdAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPathClass() in line 4312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPathList() in line 4200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPlusOperator() in line 1752
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPlusOperator(PlusOperator) in line 6268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PlusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPoolSpecificAccessToVariable() in line 608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPoolSpecificAccessToVariable(PoolSpecificAccessToVariable) in line 8140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PoolSpecificAccessToVariable_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPoolSpecificAccessToVariableHasNullExclusionQ() in line 4544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPosAttribute() in line 2656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPosAttribute(PosAttribute) in line 7492
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PosAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPositionalArrayAggregate() in line 3624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPositionalArrayAggregate(PositionalArrayAggregate) in line 8698
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PositionalArrayAggregate_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPositionAttribute() in line 2856
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPositionAttribute(PositionAttribute) in line 7726
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PositionAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPragmaArgumentAssociation() in line 2120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPragmaArgumentAssociation(PragmaArgumentAssociation) in line 6763
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PragmaArgumentAssociation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPragmaElementClass() in line 4104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPredAttribute() in line 1728
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPredAttribute(PredAttribute) in line 6232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PredAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPreelaborableInitializationPragma() in line 3608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPreelaborableInitializationPragma(PreelaborableInitializationPragma) in line 8680
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PreelaborableInitializationPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPreelaboratePragma() in line 1280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPreelaboratePragma(PreelaboratePragma) in line 5638
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PreelaboratePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPriorityAttribute() in line 2952
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPriorityAttribute(PriorityAttribute) in line 7834
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PriorityAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPriorityPragma() in line 1080
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPriorityPragma(PriorityPragma) in line 5359
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PriorityPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPrioritySpecificDispatchingPragma() in line 2048
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrioritySpecificDispatchingPragma(PrioritySpecificDispatchingPragma) in line 6673
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PrioritySpecificDispatchingPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPrivate() in line 3480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivate(Private) in line 8527
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Private_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPrivateExtensionDeclaration() in line 1512
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateExtensionDeclaration(PrivateExtensionDeclaration) in line 5944
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PrivateExtensionDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPrivateExtensionDefinition() in line 624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateExtensionDefinition(PrivateExtensionDefinition) in line 8077
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PrivateExtensionDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPrivateExtensionDefinitionHasAbstractQ() in line 4568
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateExtensionDefinitionHasLimitedQ() in line 4576
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateExtensionDefinitionHasSynchronizedQ() in line 4584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateTypeDeclaration() in line 3032
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateTypeDeclaration(PrivateTypeDeclaration) in line 7924
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PrivateTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPrivateTypeDefinition() in line 976
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateTypeDefinition(PrivateTypeDefinition) in line 5332
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PrivateTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPrivateTypeDefinitionHasAbstractQ() in line 5168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPrivateTypeDefinitionHasLimitedQ() in line 5176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureBodyDeclaration() in line 712
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureBodyDeclaration(ProcedureBodyDeclaration) in line 7114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProcedureBodyDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProcedureBodyDeclarationIsNotOverridingDeclarationQ() in line 4720
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureBodyDeclarationIsOverridingDeclarationQ() in line 4712
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureBodyStub() in line 696
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureBodyStub(ProcedureBodyStub) in line 7177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProcedureBodyStub_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProcedureBodyStubIsNotOverridingDeclarationQ() in line 4696
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureBodyStubIsOverridingDeclarationQ() in line 4688
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureCallStatement() in line 904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureCallStatement(ProcedureCallStatement) in line 5692
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProcedureCallStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProcedureCallStatementIsPrefixNotationQ() in line 5016
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureDeclaration() in line 760
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureDeclaration(ProcedureDeclaration) in line 6691
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProcedureDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProcedureDeclarationHasAbstractQ() in line 4816
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureDeclarationIsNotOverridingDeclarationQ() in line 4808
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureDeclarationIsOverridingDeclarationQ() in line 4800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureInstantiation() in line 744
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureInstantiation(ProcedureInstantiation) in line 6835
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProcedureInstantiation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProcedureInstantiationIsNotOverridingDeclarationQ() in line 4776
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureInstantiationIsOverridingDeclarationQ() in line 4768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureRenamingDeclaration() in line 960
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureRenamingDeclaration(ProcedureRenamingDeclaration) in line 5377
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProcedureRenamingDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProcedureRenamingDeclarationIsNotOverridingDeclarationQ() in line 5144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProcedureRenamingDeclarationIsOverridingDeclarationQ() in line 5136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProfilePragma() in line 1544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProfilePragma(ProfilePragma) in line 5998
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProfilePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProtectedBodyDeclaration() in line 3968
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProtectedBodyDeclaration(ProtectedBodyDeclaration) in line 9139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProtectedBodyDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProtectedBodyStub() in line 1216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProtectedBodyStub(ProtectedBodyStub) in line 5539
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProtectedBodyStub_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProtectedDefinition() in line 1968
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProtectedDefinition(ProtectedDefinition) in line 6574
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProtectedDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProtectedInterface() in line 3784
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProtectedInterface(ProtectedInterface) in line 8878
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProtectedInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createProtectedTypeDeclaration() in line 3232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createProtectedTypeDeclaration(ProtectedTypeDeclaration) in line 8221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ProtectedTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createPurePragma() in line 2256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPurePragma(PurePragma) in line 6934
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _PurePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createQualifiedExpression() in line 3768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createQualifiedExpression(QualifiedExpression) in line 8869
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _QualifiedExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createQueuingPolicyPragma() in line 3352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createQueuingPolicyPragma(QueuingPolicyPragma) in line 8374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _QueuingPolicyPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRaiseExpression() in line 3936
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRaiseExpression(RaiseExpression) in line 9094
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RaiseExpression_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRaiseStatement() in line 2176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRaiseStatement(RaiseStatement) in line 6844
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RaiseStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRangeAttribute() in line 2112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRangeAttribute(RangeAttribute) in line 6754
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RangeAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRangeAttributeReference() in line 3368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRangeAttributeReference(RangeAttributeReference) in line 8392
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RangeAttributeReference_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRangeConstraintClass() in line 4232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReadAttribute() in line 2328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReadAttribute(ReadAttribute) in line 7033
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ReadAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRealLiteral() in line 2736
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRealLiteral(RealLiteral) in line 7582
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RealLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRealNumberDeclaration() in line 1664
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRealNumberDeclaration(RealNumberDeclaration) in line 6133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RealNumberDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRecordAggregate() in line 3984
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordAggregate(RecordAggregate) in line 9148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RecordAggregate_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRecordComponentAssociation() in line 2456
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordComponentAssociation(RecordComponentAssociation) in line 7222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RecordComponentAssociation_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRecordComponentClass() in line 4272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordComponentList() in line 4296
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordDefinition() in line 576
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordDefinition(RecordDefinition) in line 8212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RecordDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRecordDefinitionHasLimitedQ() in line 4504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordRepresentationClause() in line 3776
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordRepresentationClause(RecordRepresentationClause) in line 8887
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RecordRepresentationClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRecordTypeDefinition() in line 952
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordTypeDefinition(RecordTypeDefinition) in line 5422
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RecordTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRecordTypeDefinitionHasAbstractQ() in line 5120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRecordTypeDefinitionHasLimitedQ() in line 5128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRelativeDeadlinePragma() in line 3800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRelativeDeadlinePragma(RelativeDeadlinePragma) in line 8932
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RelativeDeadlinePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRemainderAttribute() in line 1568
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRemainderAttribute(RemainderAttribute) in line 6025
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RemainderAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRemOperator() in line 2512
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRemOperator(RemOperator) in line 7312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RemOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRemoteCallInterfacePragma() in line 3744
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRemoteCallInterfacePragma(RemoteCallInterfacePragma) in line 8851
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RemoteCallInterfacePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRemoteTypesPragma() in line 1416
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRemoteTypesPragma(RemoteTypesPragma) in line 5827
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RemoteTypesPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRequeueStatement() in line 2984
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRequeueStatement(RequeueStatement) in line 7870
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RequeueStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRequeueStatementWithAbort() in line 1840
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRequeueStatementWithAbort(RequeueStatementWithAbort) in line 6403
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RequeueStatementWithAbort_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRestrictionsPragma() in line 1592
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRestrictionsPragma(RestrictionsPragma) in line 6052
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RestrictionsPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createReturnConstantSpecification() in line 568
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReturnConstantSpecification(ReturnConstantSpecification) in line 8275
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ReturnConstantSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createReturnConstantSpecificationHasAliasedQ() in line 4496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReturnStatement() in line 3560
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReturnStatement(ReturnStatement) in line 8626
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ReturnStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createReturnVariableSpecification() in line 536
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReturnVariableSpecification(ReturnVariableSpecification) in line 8707
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ReturnVariableSpecification_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createReturnVariableSpecificationHasAliasedQ() in line 4456
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReverse() in line 2784
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReverse(Reverse) in line 7636
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Reverse_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createReviewablePragma() in line 2696
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReviewablePragma(ReviewablePragma) in line 7537
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ReviewablePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRootIntegerDefinition() in line 3648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRootIntegerDefinition(RootIntegerDefinition) in line 8734
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RootIntegerDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRootRealDefinition() in line 1600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRootRealDefinition(RootRealDefinition) in line 6061
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RootRealDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRoundAttribute() in line 1312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRoundAttribute(RoundAttribute) in line 5683
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RoundAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createRoundingAttribute() in line 3552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRoundingAttribute(RoundingAttribute) in line 8617
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _RoundingAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSafeFirstAttribute() in line 1864
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSafeFirstAttribute(SafeFirstAttribute) in line 6412
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SafeFirstAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSafeLastAttribute() in line 1624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSafeLastAttribute(SafeLastAttribute) in line 6088
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SafeLastAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createScaleAttribute() in line 1016
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createScaleAttribute(ScaleAttribute) in line 5242
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ScaleAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createScalingAttribute() in line 1648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createScalingAttribute(ScalingAttribute) in line 6115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ScalingAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSelectedComponent() in line 2632
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSelectedComponent(SelectedComponent) in line 7465
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SelectedComponent_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSelectiveAcceptStatement() in line 1032
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSelectiveAcceptStatement(SelectiveAcceptStatement) in line 5278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SelectiveAcceptStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSelectPath() in line 1208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSelectPath(SelectPath) in line 5548
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SelectPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSharedPassivePragma() in line 2432
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSharedPassivePragma(SharedPassivePragma) in line 7186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SharedPassivePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSignedIntegerTypeDefinition() in line 3448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSignedIntegerTypeDefinition(SignedIntegerTypeDefinition) in line 8491
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SignedIntegerTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSignedZerosAttribute() in line 1440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSignedZerosAttribute(SignedZerosAttribute) in line 5854
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SignedZerosAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSimpleExpressionRange() in line 2152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSimpleExpressionRange(SimpleExpressionRange) in line 6799
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SimpleExpressionRange_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSingleProtectedDeclaration() in line 2792
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSingleProtectedDeclaration(SingleProtectedDeclaration) in line 7645
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SingleProtectedDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSingleTaskDeclaration() in line 3104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSingleTaskDeclaration(SingleTaskDeclaration) in line 8014
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SingleTaskDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSizeAttribute() in line 3840
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSizeAttribute(SizeAttribute) in line 8977
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SizeAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSlice() in line 2848
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSlice(Slice) in line 7717
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Slice_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSmallAttribute() in line 2424
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSmallAttribute(SmallAttribute) in line 7168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SmallAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSourceLocation() in line 4360
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStatementClass() in line 4152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStatementList() in line 4288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStoragePoolAttribute() in line 3224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStoragePoolAttribute(StoragePoolAttribute) in line 8185
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _StoragePoolAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createStorageSizeAttribute() in line 3152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStorageSizeAttribute(StorageSizeAttribute) in line 8068
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _StorageSizeAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createStorageSizePragma() in line 3728
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStorageSizePragma(StorageSizePragma) in line 8833
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _StorageSizePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createStreamSizeAttribute() in line 3960
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStreamSizeAttribute(StreamSizeAttribute) in line 9112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _StreamSizeAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createStringLiteral() in line 3856
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createStringLiteral(StringLiteral) in line 8995
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _StringLiteral_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSubtypeDeclaration() in line 3432
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSubtypeDeclaration(SubtypeDeclaration) in line 8473
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SubtypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSubtypeIndication() in line 928
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSubtypeIndication(SubtypeIndication) in line 5584
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SubtypeIndication_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSubtypeIndicationHasAliasedQ() in line 5080
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSubtypeIndicationHasNullExclusionQ() in line 5088
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSuccAttribute() in line 2488
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSuccAttribute(SuccAttribute) in line 7276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SuccAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSuppressPragma() in line 1344
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSuppressPragma(SuppressPragma) in line 5728
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SuppressPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSynchronized() in line 1432
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSynchronized(Synchronized) in line 5845
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Synchronized_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createSynchronizedInterface() in line 3696
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createSynchronizedInterface(SynchronizedInterface) in line 8788
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _SynchronizedInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTagAttribute() in line 3512
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTagAttribute(TagAttribute) in line 8563
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TagAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTagged() in line 2032
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTagged(Tagged) in line 6646
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Tagged_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaggedIncompleteTypeDeclaration() in line 1912
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaggedIncompleteTypeDeclaration(TaggedIncompleteTypeDeclaration) in line 6502
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaggedIncompleteTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaggedPrivateTypeDefinition() in line 848
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaggedPrivateTypeDefinition(TaggedPrivateTypeDefinition) in line 6169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaggedPrivateTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaggedPrivateTypeDefinitionHasAbstractQ() in line 4936
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaggedPrivateTypeDefinitionHasLimitedQ() in line 4944
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaggedRecordTypeDefinition() in line 968
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaggedRecordTypeDefinition(TaggedRecordTypeDefinition) in line 5341
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaggedRecordTypeDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaggedRecordTypeDefinitionHasAbstractQ() in line 5152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaggedRecordTypeDefinitionHasLimitedQ() in line 5160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaskBodyDeclaration() in line 3832
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaskBodyDeclaration(TaskBodyDeclaration) in line 8968
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaskBodyDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaskBodyStub() in line 3344
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaskBodyStub(TaskBodyStub) in line 8365
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaskBodyStub_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaskDefinition() in line 1352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaskDefinition(TaskDefinition) in line 5737
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaskDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaskDispatchingPolicyPragma() in line 2280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaskDispatchingPolicyPragma(TaskDispatchingPolicyPragma) in line 6970
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaskDispatchingPolicyPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaskInterface() in line 2520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaskInterface(TaskInterface) in line 7321
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaskInterface_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTaskTypeDeclaration() in line 1584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTaskTypeDeclaration(TaskTypeDeclaration) in line 6043
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TaskTypeDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTerminateAlternativeStatement() in line 2360
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTerminateAlternativeStatement(TerminateAlternativeStatement) in line 7078
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TerminateAlternativeStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTerminatedAttribute() in line 2136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTerminatedAttribute(TerminatedAttribute) in line 6781
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TerminatedAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createThenAbortPath() in line 3600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createThenAbortPath(ThenAbortPath) in line 8671
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ThenAbortPath_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTimedEntryCallStatement() in line 1800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTimedEntryCallStatement(TimedEntryCallStatement) in line 6349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TimedEntryCallStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTruncationAttribute() in line 3240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTruncationAttribute(TruncationAttribute) in line 8230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TruncationAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createTypeConversion() in line 3376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTypeConversion(TypeConversion) in line 8401
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _TypeConversion_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnaryMinusOperator() in line 1408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnaryMinusOperator(UnaryMinusOperator) in line 5818
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnaryMinusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnaryPlusOperator() in line 1488
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnaryPlusOperator(UnaryPlusOperator) in line 5908
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnaryPlusOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnbiasedRoundingAttribute() in line 2808
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnbiasedRoundingAttribute(UnbiasedRoundingAttribute) in line 7663
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnbiasedRoundingAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUncheckedAccessAttribute() in line 2704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUncheckedAccessAttribute(UncheckedAccessAttribute) in line 7546
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UncheckedAccessAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUncheckedUnionPragma() in line 2080
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUncheckedUnionPragma(UncheckedUnionPragma) in line 6718
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UncheckedUnionPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnconstrainedArrayDefinition() in line 1656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnconstrainedArrayDefinition(UnconstrainedArrayDefinition) in line 6124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnconstrainedArrayDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUniversalFixedDefinition() in line 3808
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUniversalFixedDefinition(UniversalFixedDefinition) in line 8941
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UniversalFixedDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUniversalIntegerDefinition() in line 2504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUniversalIntegerDefinition(UniversalIntegerDefinition) in line 7303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UniversalIntegerDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUniversalRealDefinition() in line 1328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUniversalRealDefinition(UniversalRealDefinition) in line 5710
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UniversalRealDefinition_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnknownAttribute() in line 1976
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnknownAttribute(UnknownAttribute) in line 6565
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnknownAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnknownDiscriminantPart() in line 2896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnknownDiscriminantPart(UnknownDiscriminantPart) in line 7771
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnknownDiscriminantPart_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnknownPragma() in line 1120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnknownPragma(UnknownPragma) in line 5413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnknownPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUnsuppressPragma() in line 4040
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnsuppressPragma(UnsuppressPragma) in line 9211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UnsuppressPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUseAllTypeClause() in line 2888
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUseAllTypeClause(UseAllTypeClause) in line 7762
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UseAllTypeClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUsePackageClause() in line 2536
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUsePackageClause(UsePackageClause) in line 7339
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UsePackageClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createUseTypeClause() in line 1336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUseTypeClause(UseTypeClause) in line 5719
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _UseTypeClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createValAttribute() in line 3440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createValAttribute(ValAttribute) in line 8482
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ValAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createValidAttribute() in line 1136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createValidAttribute(ValidAttribute) in line 5440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ValidAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createValueAttribute() in line 3688
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createValueAttribute(ValueAttribute) in line 8779
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _ValueAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createVariableDeclaration() in line 784
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVariableDeclaration(VariableDeclaration) in line 6484
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _VariableDeclaration_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createVariableDeclarationHasAliasedQ() in line 4856
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVariant() in line 1880
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVariant(Variant) in line 6466
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _Variant_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createVariantList() in line 4112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVariantPart() in line 1376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVariantPart(VariantPart) in line 5773
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _VariantPart_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createVersionAttribute() in line 3704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVersionAttribute(VersionAttribute) in line 8797
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _VersionAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createVolatileComponentsPragma() in line 1776
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVolatileComponentsPragma(VolatileComponentsPragma) in line 6304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _VolatileComponentsPragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createVolatilePragma() in line 1896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createVolatilePragma(VolatilePragma) in line 6475
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _VolatilePragma_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWhileLoopStatement() in line 1640
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWhileLoopStatement(WhileLoopStatement) in line 6097
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WhileLoopStatement_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWideImageAttribute() in line 3040
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWideImageAttribute(WideImageAttribute) in line 7933
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WideImageAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWideValueAttribute() in line 3256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWideValueAttribute(WideValueAttribute) in line 8248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WideValueAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWideWideImageAttribute() in line 1536
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWideWideImageAttribute(WideWideImageAttribute) in line 5980
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WideWideImageAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWideWideValueAttribute() in line 1576
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWideWideValueAttribute(WideWideValueAttribute) in line 6034
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WideWideValueAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWideWideWidthAttribute() in line 3912
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWideWideWidthAttribute(WideWideWidthAttribute) in line 9058
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WideWideWidthAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWideWidthAttribute() in line 2776
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWideWidthAttribute(WideWidthAttribute) in line 7627
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WideWidthAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWidthAttribute() in line 3200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWidthAttribute(WidthAttribute) in line 8149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WidthAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWithClause() in line 720
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWithClause(WithClause) in line 7051
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WithClause_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createWithClauseHasLimitedQ() in line 4728
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWithClauseHasPrivateQ() in line 4736
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWriteAttribute() in line 2184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWriteAttribute(WriteAttribute) in line 6853
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _WriteAttribute_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function createXorOperator() in line 2496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createXorOperator(XorOperator) in line 7294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable _XorOperator_QNAME defined in org::sireum::bakar::xml::ObjectFactory
   function ObjectFactory() in line 481
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable _AbortStatement_QNAME in line 69
   variable _AbsOperator_QNAME in line 241
   variable _Abstract_QNAME in line 225
   variable _AcceptStatement_QNAME in line 193
   variable _AccessAttribute_QNAME in line 417
   variable _AccessToConstant_QNAME in line 335
   variable _AccessToFunction_QNAME in line 386
   variable _AccessToProcedure_QNAME in line 400
   variable _AccessToProtectedFunction_QNAME in line 132
   variable _AccessToProtectedProcedure_QNAME in line 373
   variable _AccessToVariable_QNAME in line 160
   variable _AddressAttribute_QNAME in line 240
   variable _AdjacentAttribute_QNAME in line 273
   variable _AftAttribute_QNAME in line 446
   variable _Aliased_QNAME in line 401
   variable _AlignmentAttribute_QNAME in line 36
   variable _AllCallsRemotePragma_QNAME in line 57
   variable _AllocationFromQualifiedExpression_QNAME in line 465
   variable _AllocationFromSubtype_QNAME in line 405
   variable _AndOperator_QNAME in line 370
   variable _AndThenShortCircuit_QNAME in line 209
   variable _AnonymousAccessToConstant_QNAME in line 437
   variable _AnonymousAccessToFunction_QNAME in line 357
   variable _AnonymousAccessToProcedure_QNAME in line 237
   variable _AnonymousAccessToProtectedFunction_QNAME in line 472
   variable _AnonymousAccessToProtectedProcedure_QNAME in line 263
   variable _AnonymousAccessToVariable_QNAME in line 55
   variable _ArrayComponentAssociation_QNAME in line 449
   variable _AspectSpecification_QNAME in line 385
   variable _AssertionPolicyPragma_QNAME in line 49
   variable _AssertPragma_QNAME in line 211
   variable _AssignmentStatement_QNAME in line 68
   variable _AsynchronousPragma_QNAME in line 30
   variable _AsynchronousSelectStatement_QNAME in line 143
   variable _AtClause_QNAME in line 406
   variable _AtomicComponentsPragma_QNAME in line 223
   variable _AtomicPragma_QNAME in line 334
   variable _AttachHandlerPragma_QNAME in line 245
   variable _AttributeDefinitionClause_QNAME in line 113
   variable _BaseAttribute_QNAME in line 130
   variable _BitOrderAttribute_QNAME in line 440
   variable _BlockStatement_QNAME in line 415
   variable _BodyVersionAttribute_QNAME in line 475
   variable _BoxExpression_QNAME in line 367
   variable _CallableAttribute_QNAME in line 271
   variable _CallerAttribute_QNAME in line 264
   variable _CaseExpression_QNAME in line 70
   variable _CaseExpressionPath_QNAME in line 463
   variable _CasePath_QNAME in line 101
   variable _CaseStatement_QNAME in line 319
   variable _CeilingAttribute_QNAME in line 109
   variable _CharacterLiteral_QNAME in line 457
   variable _ChoiceParameterSpecification_QNAME in line 368
   variable _ClassAttribute_QNAME in line 217
   variable _CodeStatement_QNAME in line 260
   variable _CompilationUnit_QNAME in line 272
   variable _ComponentClause_QNAME in line 214
   variable _ComponentDeclaration_QNAME in line 91
   variable _ComponentDefinition_QNAME in line 247
   variable _ComponentSizeAttribute_QNAME in line 46
   variable _ComposeAttribute_QNAME in line 341
   variable _ConcatenateOperator_QNAME in line 120
   variable _ConditionalEntryCallStatement_QNAME in line 124
   variable _ConstantDeclaration_QNAME in line 86
   variable _ConstrainedArrayDefinition_QNAME in line 408
   variable _ConstrainedAttribute_QNAME in line 280
   variable _ControlledPragma_QNAME in line 459
   variable _ConventionPragma_QNAME in line 53
   variable _CopySignAttribute_QNAME in line 287
   variable _CountAttribute_QNAME in line 170
   variable _CpuPragma_QNAME in line 152
   variable _DecimalFixedPointDefinition_QNAME in line 285
   variable _DefaultStoragePoolPragma_QNAME in line 399
   variable _DeferredConstantDeclaration_QNAME in line 224
   variable _DefiningAbsOperator_QNAME in line 45
   variable _DefiningAndOperator_QNAME in line 221
   variable _DefiningCharacterLiteral_QNAME in line 219
   variable _DefiningConcatenateOperator_QNAME in line 331
   variable _DefiningDivideOperator_QNAME in line 346
   variable _DefiningEnumerationLiteral_QNAME in line 183
   variable _DefiningEqualOperator_QNAME in line 60
   variable _DefiningExpandedName_QNAME in line 279
   variable _DefiningExponentiateOperator_QNAME in line 265
   variable _DefiningGreaterThanOperator_QNAME in line 322
   variable _DefiningGreaterThanOrEqualOperator_QNAME in line 332
   variable _DefiningIdentifier_QNAME in line 318
   variable _DefiningLessThanOperator_QNAME in line 65
   variable _DefiningLessThanOrEqualOperator_QNAME in line 42
   variable _DefiningMinusOperator_QNAME in line 154
   variable _DefiningModOperator_QNAME in line 103
   variable _DefiningMultiplyOperator_QNAME in line 59
   variable _DefiningNotEqualOperator_QNAME in line 344
   variable _DefiningNotOperator_QNAME in line 276
   variable _DefiningOrOperator_QNAME in line 51
   variable _DefiningPlusOperator_QNAME in line 155
   variable _DefiningRemOperator_QNAME in line 230
   variable _DefiningUnaryMinusOperator_QNAME in line 396
   variable _DefiningUnaryPlusOperator_QNAME in line 444
   variable _DefiningXorOperator_QNAME in line 44
   variable _DefiniteAttribute_QNAME in line 407
   variable _DelayRelativeStatement_QNAME in line 121
   variable _DelayUntilStatement_QNAME in line 348
   variable _DeltaAttribute_QNAME in line 425
   variable _DeltaConstraint_QNAME in line 302
   variable _DenormAttribute_QNAME in line 292
   variable _DerivedRecordExtensionDefinition_QNAME in line 177
   variable _DerivedTypeDefinition_QNAME in line 266
   variable _DetectBlockingPragma_QNAME in line 467
   variable _DigitsAttribute_QNAME in line 64
   variable _DigitsConstraint_QNAME in line 268
   variable _DiscardNamesPragma_QNAME in line 198
   variable _DiscreteRangeAttributeReference_QNAME in line 311
   variable _DiscreteRangeAttributeReferenceAsSubtypeDefinition_QNAME in line 98
   variable _DiscreteSimpleExpressionRange_QNAME in line 450
   variable _DiscreteSimpleExpressionRangeAsSubtypeDefinition_QNAME in line 436
   variable _DiscreteSubtypeIndication_QNAME in line 270
   variable _DiscreteSubtypeIndicationAsSubtypeDefinition_QNAME in line 76
   variable _DiscriminantAssociation_QNAME in line 306
   variable _DiscriminantConstraint_QNAME in line 63
   variable _DiscriminantSpecification_QNAME in line 453
   variable _DispatchingDomainPragma_QNAME in line 274
   variable _DivideOperator_QNAME in line 79
   variable _ElaborateAllPragma_QNAME in line 402
   variable _ElaborateBodyPragma_QNAME in line 134
   variable _ElaboratePragma_QNAME in line 181
   variable _ElementIteratorSpecification_QNAME in line 145
   variable _ElseExpressionPath_QNAME in line 305
   variable _ElsePath_QNAME in line 277
   variable _ElsifExpressionPath_QNAME in line 194
   variable _ElsifPath_QNAME in line 455
   variable _EntryBodyDeclaration_QNAME in line 296
   variable _EntryCallStatement_QNAME in line 312
   variable _EntryDeclaration_QNAME in line 218
   variable _EntryIndexSpecification_QNAME in line 222
   variable _EnumerationLiteral_QNAME in line 339
   variable _EnumerationLiteralSpecification_QNAME in line 354
   variable _EnumerationRepresentationClause_QNAME in line 290
   variable _EnumerationTypeDefinition_QNAME in line 173
   variable _EqualOperator_QNAME in line 210
   variable _ExceptionDeclaration_QNAME in line 94
   variable _ExceptionHandler_QNAME in line 364
   variable _ExceptionRenamingDeclaration_QNAME in line 300
   variable _ExitStatement_QNAME in line 414
   variable _ExplicitDereference_QNAME in line 178
   variable _ExponentAttribute_QNAME in line 171
   variable _ExponentiateOperator_QNAME in line 317
   variable _ExportPragma_QNAME in line 347
   variable _ExpressionFunctionDeclaration_QNAME in line 323
   variable _ExtendedReturnStatement_QNAME in line 105
   variable _ExtensionAggregate_QNAME in line 135
   variable _ExternalTagAttribute_QNAME in line 74
   variable _FirstAttribute_QNAME in line 324
   variable _FirstBitAttribute_QNAME in line 447
   variable _FloatingPointDefinition_QNAME in line 97
   variable _FloorAttribute_QNAME in line 420
   variable _ForAllQuantifiedExpression_QNAME in line 282
   variable _ForeAttribute_QNAME in line 73
   variable _ForLoopStatement_QNAME in line 298
   variable _FormalAccessToConstant_QNAME in line 353
   variable _FormalAccessToFunction_QNAME in line 185
   variable _FormalAccessToProcedure_QNAME in line 104
   variable _FormalAccessToProtectedFunction_QNAME in line 349
   variable _FormalAccessToProtectedProcedure_QNAME in line 356
   variable _FormalAccessToVariable_QNAME in line 31
   variable _FormalConstrainedArrayDefinition_QNAME in line 238
   variable _FormalDecimalFixedPointDefinition_QNAME in line 133
   variable _FormalDerivedTypeDefinition_QNAME in line 434
   variable _FormalDiscreteTypeDefinition_QNAME in line 147
   variable _FormalFloatingPointDefinition_QNAME in line 269
   variable _FormalFunctionDeclaration_QNAME in line 150
   variable _FormalIncompleteTypeDeclaration_QNAME in line 107
   variable _FormalLimitedInterface_QNAME in line 289
   variable _FormalModularTypeDefinition_QNAME in line 148
   variable _FormalObjectDeclaration_QNAME in line 435
   variable _FormalOrdinaryFixedPointDefinition_QNAME in line 426
   variable _FormalOrdinaryInterface_QNAME in line 99
   variable _FormalPackageDeclaration_QNAME in line 58
   variable _FormalPackageDeclarationWithBox_QNAME in line 321
   variable _FormalPoolSpecificAccessToVariable_QNAME in line 471
   variable _FormalPrivateTypeDefinition_QNAME in line 149
   variable _FormalProcedureDeclaration_QNAME in line 136
   variable _FormalProtectedInterface_QNAME in line 428
   variable _FormalSignedIntegerTypeDefinition_QNAME in line 286
   variable _FormalSynchronizedInterface_QNAME in line 140
   variable _FormalTaggedPrivateTypeDefinition_QNAME in line 34
   variable _FormalTaskInterface_QNAME in line 204
   variable _FormalTypeDeclaration_QNAME in line 202
   variable _FormalUnconstrainedArrayDefinition_QNAME in line 137
   variable _ForSomeQuantifiedExpression_QNAME in line 203
   variable _FractionAttribute_QNAME in line 190
   variable _FunctionBodyDeclaration_QNAME in line 29
   variable _FunctionBodyStub_QNAME in line 75
   variable _FunctionCall_QNAME in line 52
   variable _FunctionDeclaration_QNAME in line 67
   variable _FunctionInstantiation_QNAME in line 200
   variable _FunctionRenamingDeclaration_QNAME in line 249
   variable _GeneralizedIteratorSpecification_QNAME in line 162
   variable _GenericAssociation_QNAME in line 212
   variable _GenericFunctionDeclaration_QNAME in line 299
   variable _GenericFunctionRenamingDeclaration_QNAME in line 384
   variable _GenericPackageDeclaration_QNAME in line 441
   variable _GenericPackageRenamingDeclaration_QNAME in line 226
   variable _GenericProcedureDeclaration_QNAME in line 369
   variable _GenericProcedureRenamingDeclaration_QNAME in line 380
   variable _GotoStatement_QNAME in line 374
   variable _GreaterThanOperator_QNAME in line 182
   variable _GreaterThanOrEqualOperator_QNAME in line 468
   variable _Identifier_QNAME in line 328
   variable _IdentityAttribute_QNAME in line 377
   variable _IfExpression_QNAME in line 88
   variable _IfExpressionPath_QNAME in line 372
   variable _IfPath_QNAME in line 361
   variable _IfStatement_QNAME in line 390
   variable _ImageAttribute_QNAME in line 37
   variable _ImplementationDefinedAttribute_QNAME in line 315
   variable _ImplementationDefinedPragma_QNAME in line 381
   variable _ImportPragma_QNAME in line 153
   variable _IncompleteTypeDeclaration_QNAME in line 262
   variable _IndependentComponentsPragma_QNAME in line 430
   variable _IndependentPragma_QNAME in line 71
   variable _IndexConstraint_QNAME in line 179
   variable _IndexedComponent_QNAME in line 314
   variable _InlinePragma_QNAME in line 411
   variable _InMembershipTest_QNAME in line 246
   variable _InputAttribute_QNAME in line 85
   variable _InspectionPointPragma_QNAME in line 174
   variable _IntegerLiteral_QNAME in line 108
   variable _IntegerNumberDeclaration_QNAME in line 383
   variable _InterruptHandlerPragma_QNAME in line 281
   variable _InterruptPriorityPragma_QNAME in line 180
   variable _IsPrefixCall_QNAME in line 191
   variable _IsPrefixNotation_QNAME in line 89
   variable _KnownDiscriminantPart_QNAME in line 366
   variable _LastAttribute_QNAME in line 325
   variable _LastBitAttribute_QNAME in line 169
   variable _LeadingPartAttribute_QNAME in line 448
   variable _LengthAttribute_QNAME in line 100
   variable _LessThanOperator_QNAME in line 352
   variable _LessThanOrEqualOperator_QNAME in line 330
   variable _Limited_QNAME in line 239
   variable _LimitedInterface_QNAME in line 167
   variable _LinkerOptionsPragma_QNAME in line 231
   variable _ListPragma_QNAME in line 228
   variable _LockingPolicyPragma_QNAME in line 310
   variable _LoopParameterSpecification_QNAME in line 139
   variable _LoopStatement_QNAME in line 213
   variable _MachineAttribute_QNAME in line 172
   variable _MachineEmaxAttribute_QNAME in line 235
   variable _MachineEminAttribute_QNAME in line 253
   variable _MachineMantissaAttribute_QNAME in line 371
   variable _MachineOverflowsAttribute_QNAME in line 161
   variable _MachineRadixAttribute_QNAME in line 419
   variable _MachineRoundingAttribute_QNAME in line 208
   variable _MachineRoundsAttribute_QNAME in line 394
   variable _MaxAlignmentForAllocationAttribute_QNAME in line 382
   variable _MaxAttribute_QNAME in line 333
   variable _MaxSizeInStorageElementsAttribute_QNAME in line 163
   variable _MinAttribute_QNAME in line 395
   variable _MinusOperator_QNAME in line 329
   variable _ModAttribute_QNAME in line 234
   variable _ModelAttribute_QNAME in line 398
   variable _ModelEminAttribute_QNAME in line 195
   variable _ModelEpsilonAttribute_QNAME in line 40
   variable _ModelMantissaAttribute_QNAME in line 345
   variable _ModelSmallAttribute_QNAME in line 250
   variable _ModOperator_QNAME in line 473
   variable _ModularTypeDefinition_QNAME in line 35
   variable _ModulusAttribute_QNAME in line 188
   variable _MultiplyOperator_QNAME in line 141
   variable _NamedArrayAggregate_QNAME in line 54
   variable _NoReturnPragma_QNAME in line 466
   variable _NormalizeScalarsPragma_QNAME in line 267
   variable _NotAnElement_QNAME in line 215
   variable _NotEqualOperator_QNAME in line 159
   variable _NotInMembershipTest_QNAME in line 424
   variable _NotNullReturn_QNAME in line 460
   variable _NotOperator_QNAME in line 337
   variable _NotOverriding_QNAME in line 474
   variable _NullComponent_QNAME in line 56
   variable _NullExclusion_QNAME in line 464
   variable _NullLiteral_QNAME in line 392
   variable _NullProcedureDeclaration_QNAME in line 111
   variable _NullRecordDefinition_QNAME in line 128
   variable _NullStatement_QNAME in line 129
   variable _ObjectRenamingDeclaration_QNAME in line 255
   variable _OptimizePragma_QNAME in line 114
   variable _OrdinaryFixedPointDefinition_QNAME in line 156
   variable _OrdinaryInterface_QNAME in line 313
   variable _OrdinaryTypeDeclaration_QNAME in line 33
   variable _OrElseShortCircuit_QNAME in line 144
   variable _OrOperator_QNAME in line 454
   variable _OrPath_QNAME in line 186
   variable _OthersChoice_QNAME in line 84
   variable _OutputAttribute_QNAME in line 301
   variable _OverlapsStorageAttribute_QNAME in line 363
   variable _Overriding_QNAME in line 338
   variable _PackageBodyDeclaration_QNAME in line 90
   variable _PackageBodyStub_QNAME in line 233
   variable _PackageDeclaration_QNAME in line 340
   variable _PackageInstantiation_QNAME in line 291
   variable _PackageRenamingDeclaration_QNAME in line 418
   variable _PackPragma_QNAME in line 252
   variable _PagePragma_QNAME in line 451
   variable _ParameterAssociation_QNAME in line 391
   variable _ParameterSpecification_QNAME in line 251
   variable _ParenthesizedExpression_QNAME in line 27
   variable _PartitionElaborationPolicyPragma_QNAME in line 470
   variable _PartitionIdAttribute_QNAME in line 307
   variable _PlusOperator_QNAME in line 142
   variable _PoolSpecificAccessToVariable_QNAME in line 350
   variable _PosAttribute_QNAME in line 278
   variable _PositionalArrayAggregate_QNAME in line 412
   variable _PositionAttribute_QNAME in line 304
   variable _PragmaArgumentAssociation_QNAME in line 197
   variable _PredAttribute_QNAME in line 138
   variable _PreelaborableInitializationPragma_QNAME in line 410
   variable _PreelaboratePragma_QNAME in line 72
   variable _PriorityAttribute_QNAME in line 316
   variable _PriorityPragma_QNAME in line 41
   variable _PrioritySpecificDispatchingPragma_QNAME in line 187
   variable _Private_QNAME in line 393
   variable _PrivateExtensionDeclaration_QNAME in line 106
   variable _PrivateExtensionDefinition_QNAME in line 343
   variable _PrivateTypeDeclaration_QNAME in line 326
   variable _PrivateTypeDefinition_QNAME in line 38
   variable _ProcedureBodyDeclaration_QNAME in line 236
   variable _ProcedureBodyStub_QNAME in line 243
   variable _ProcedureCallStatement_QNAME in line 78
   variable _ProcedureDeclaration_QNAME in line 189
   variable _ProcedureInstantiation_QNAME in line 205
   variable _ProcedureRenamingDeclaration_QNAME in line 43
   variable _ProfilePragma_QNAME in line 112
   variable _ProtectedBodyDeclaration_QNAME in line 461
   variable _ProtectedBodyStub_QNAME in line 61
   variable _ProtectedDefinition_QNAME in line 176
   variable _ProtectedInterface_QNAME in line 432
   variable _ProtectedTypeDeclaration_QNAME in line 359
   variable _PurePragma_QNAME in line 216
   variable _QualifiedExpression_QNAME in line 431
   variable _QueuingPolicyPragma_QNAME in line 376
   variable _RaiseExpression_QNAME in line 456
   variable _RaiseStatement_QNAME in line 206
   variable _RangeAttribute_QNAME in line 196
   variable _RangeAttributeReference_QNAME in line 378
   variable _ReadAttribute_QNAME in line 227
   variable _RealLiteral_QNAME in line 288
   variable _RealNumberDeclaration_QNAME in line 127
   variable _RecordAggregate_QNAME in line 462
   variable _RecordComponentAssociation_QNAME in line 248
   variable _RecordDefinition_QNAME in line 358
   variable _RecordRepresentationClause_QNAME in line 433
   variable _RecordTypeDefinition_QNAME in line 48
   variable _RelativeDeadlinePragma_QNAME in line 438
   variable _RemainderAttribute_QNAME in line 115
   variable _RemOperator_QNAME in line 258
   variable _RemoteCallInterfacePragma_QNAME in line 429
   variable _RemoteTypesPragma_QNAME in line 93
   variable _RequeueStatement_QNAME in line 320
   variable _RequeueStatementWithAbort_QNAME in line 157
   variable _RestrictionsPragma_QNAME in line 118
   variable _ReturnConstantSpecification_QNAME in line 365
   variable _ReturnStatement_QNAME in line 404
   variable _ReturnVariableSpecification_QNAME in line 413
   variable _Reverse_QNAME in line 294
   variable _ReviewablePragma_QNAME in line 283
   variable _RootIntegerDefinition_QNAME in line 416
   variable _RootRealDefinition_QNAME in line 119
   variable _RoundAttribute_QNAME in line 77
   variable _RoundingAttribute_QNAME in line 403
   variable _SafeFirstAttribute_QNAME in line 158
   variable _SafeLastAttribute_QNAME in line 122
   variable _ScaleAttribute_QNAME in line 28
   variable _ScalingAttribute_QNAME in line 125
   variable _SelectedComponent_QNAME in line 275
   variable _SelectiveAcceptStatement_QNAME in line 32
   variable _SelectPath_QNAME in line 62
   variable _SharedPassivePragma_QNAME in line 244
   variable _SignedIntegerTypeDefinition_QNAME in line 389
   variable _SignedZerosAttribute_QNAME in line 96
   variable _SimpleExpressionRange_QNAME in line 201
   variable _SingleProtectedDeclaration_QNAME in line 295
   variable _SingleTaskDeclaration_QNAME in line 336
   variable _SizeAttribute_QNAME in line 443
   variable _Slice_QNAME in line 303
   variable _SmallAttribute_QNAME in line 242
   variable _StoragePoolAttribute_QNAME in line 355
   variable _StorageSizeAttribute_QNAME in line 342
   variable _StorageSizePragma_QNAME in line 427
   variable _StreamSizeAttribute_QNAME in line 458
   variable _StringLiteral_QNAME in line 445
   variable _SubtypeDeclaration_QNAME in line 387
   variable _SubtypeIndication_QNAME in line 66
   variable _SuccAttribute_QNAME in line 254
   variable _SuppressPragma_QNAME in line 82
   variable _Synchronized_QNAME in line 95
   variable _SynchronizedInterface_QNAME in line 422
   variable _TagAttribute_QNAME in line 397
   variable _Tagged_QNAME in line 184
   variable _TaggedIncompleteTypeDeclaration_QNAME in line 168
   variable _TaggedPrivateTypeDefinition_QNAME in line 131
   variable _TaggedRecordTypeDefinition_QNAME in line 39
   variable _TaskBodyDeclaration_QNAME in line 442
   variable _TaskBodyStub_QNAME in line 375
   variable _TaskDefinition_QNAME in line 83
   variable _TaskDispatchingPolicyPragma_QNAME in line 220
   variable _TaskInterface_QNAME in line 259
   variable _TaskTypeDeclaration_QNAME in line 117
   variable _TerminateAlternativeStatement_QNAME in line 232
   variable _TerminatedAttribute_QNAME in line 199
   variable _ThenAbortPath_QNAME in line 409
   variable _TimedEntryCallStatement_QNAME in line 151
   variable _TruncationAttribute_QNAME in line 360
   variable _TypeConversion_QNAME in line 379
   variable _UnaryMinusOperator_QNAME in line 92
   variable _UnaryPlusOperator_QNAME in line 102
   variable _UnbiasedRoundingAttribute_QNAME in line 297
   variable _UncheckedAccessAttribute_QNAME in line 284
   variable _UncheckedUnionPragma_QNAME in line 192
   variable _UnconstrainedArrayDefinition_QNAME in line 126
   variable _UniversalFixedDefinition_QNAME in line 439
   variable _UniversalIntegerDefinition_QNAME in line 257
   variable _UniversalRealDefinition_QNAME in line 80
   variable _UnknownAttribute_QNAME in line 175
   variable _UnknownDiscriminantPart_QNAME in line 309
   variable _UnknownPragma_QNAME in line 47
   variable _UnsuppressPragma_QNAME in line 469
   variable _UseAllTypeClause_QNAME in line 308
   variable _UsePackageClause_QNAME in line 261
   variable _UseTypeClause_QNAME in line 81
   variable _ValAttribute_QNAME in line 388
   variable _ValidAttribute_QNAME in line 50
   variable _ValueAttribute_QNAME in line 421
   variable _VariableDeclaration_QNAME in line 166
   variable _Variant_QNAME in line 164
   variable _VariantPart_QNAME in line 87
   variable _VersionAttribute_QNAME in line 423
   variable _VolatileComponentsPragma_QNAME in line 146
   variable _VolatilePragma_QNAME in line 165
   variable _WhileLoopStatement_QNAME in line 123
   variable _WideImageAttribute_QNAME in line 327
   variable _WideValueAttribute_QNAME in line 362
   variable _WideWideImageAttribute_QNAME in line 110
   variable _WideWideValueAttribute_QNAME in line 116
   variable _WideWideWidthAttribute_QNAME in line 452
   variable _WideWidthAttribute_QNAME in line 293
   variable _WidthAttribute_QNAME in line 351
   variable _WithClause_QNAME in line 229
   variable _WriteAttribute_QNAME in line 207
   variable _XorOperator_QNAME in line 256
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ObjectRenamingDeclaration.java
module org::sireum::bakar::xml::ObjectRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(ObjectRenamingDeclaration.HasNullExclusionQ) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 72
   variable checks in line 74
   variable hasNullExclusionQ in line 66
   variable namesQl in line 64
   variable objectDeclarationViewQ in line 68
   variable renamedEntityQ in line 70
   variable sloc in line 62
module org::sireum::bakar::xml::ObjectRenamingDeclaration::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 277
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OptimizePragma.java
module org::sireum::bakar::xml::OptimizePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OrdinaryFixedPointDefinition.java
module org::sireum::bakar::xml::OrdinaryFixedPointDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeltaExpressionQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRealRangeConstraintQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDeltaExpressionQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRealRangeConstraintQ(RangeConstraintClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable deltaExpressionQ in line 46
   variable realRangeConstraintQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OrdinaryInterface.java
module org::sireum::bakar::xml::OrdinaryInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OrdinaryTypeDeclaration.java
module org::sireum::bakar::xml::OrdinaryTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeDeclarationViewQ() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTypeDeclarationViewQ(DefinitionClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 58
   variable discriminantPartQ in line 52
   variable namesQl in line 50
   variable sloc in line 48
   variable typeDeclarationViewQ in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OrElseShortCircuit.java
module org::sireum::bakar::xml::OrElseShortCircuit
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getShortCircuitOperationLeftExpressionQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getShortCircuitOperationRightExpressionQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setShortCircuitOperationLeftExpressionQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setShortCircuitOperationRightExpressionQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable shortCircuitOperationLeftExpressionQ in line 47
   variable shortCircuitOperationRightExpressionQ in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OrOperator.java
module org::sireum::bakar::xml::OrOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OrPath.java
module org::sireum::bakar::xml::OrPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGuardQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSequenceOfStatementsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGuardQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceOfStatementsQl(StatementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable guardQ in line 46
   variable sequenceOfStatementsQl in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OthersChoice.java
module org::sireum::bakar::xml::OthersChoice
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OutputAttribute.java
module org::sireum::bakar::xml::OutputAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/OverlapsStorageAttribute.java
module org::sireum::bakar::xml::OverlapsStorageAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Overriding.java
module org::sireum::bakar::xml::Overriding
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PackageBodyDeclaration.java
module org::sireum::bakar::xml::PackageBodyDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyDeclarativeItemsQl() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyExceptionHandlersQl() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyStatementsQl() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyDeclarativeItemsQl(ElementList) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyExceptionHandlersQl(ExceptionHandlerList) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyStatementsQl(StatementList) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 54
   variable bodyDeclarativeItemsQl in line 56
   variable bodyExceptionHandlersQl in line 60
   variable bodyStatementsQl in line 58
   variable checks in line 62
   variable namesQl in line 52
   variable sloc in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PackageBodyStub.java
module org::sireum::bakar::xml::PackageBodyStub
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 48
   variable checks in line 50
   variable namesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PackageDeclaration.java
module org::sireum::bakar::xml::PackageDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrivatePartDeclarativeItemsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVisiblePartDeclarativeItemsQl() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrivatePartDeclarativeItemsQl(DeclarativeItemList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVisiblePartDeclarativeItemsQl(DeclarativeItemList) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 58
   variable namesQl in line 50
   variable privatePartDeclarativeItemsQl in line 56
   variable sloc in line 48
   variable visiblePartDeclarativeItemsQl in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PackageInstantiation.java
module org::sireum::bakar::xml::PackageInstantiation
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericActualPartQl() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericUnitNameQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericActualPartQl(AssociationList) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericUnitNameQ(ExpressionClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 58
   variable genericActualPartQl in line 54
   variable genericUnitNameQ in line 52
   variable namesQl in line 50
   variable sloc in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PackageRenamingDeclaration.java
module org::sireum::bakar::xml::PackageRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable namesQl in line 48
   variable renamedEntityQ in line 50
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PackPragma.java
module org::sireum::bakar::xml::PackPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PagePragma.java
module org::sireum::bakar::xml::PagePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ParameterAssociation.java
module org::sireum::bakar::xml::ParameterAssociation
   inherits from org::sireum::bakar::xml::Base
   function getActualParameterQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFormalParameterQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setActualParameterQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormalParameterQ(ElementClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable actualParameterQ in line 48
   variable checks in line 50
   variable formalParameterQ in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ParameterSpecification.java
module org::sireum::bakar::xml::ParameterSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 266
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMode() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(ParameterSpecification.HasAliasedQ) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(ParameterSpecification.HasNullExclusionQ) in line 182
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMode(String) in line 254
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 88
   variable hasAliasedQ in line 78
   variable hasNullExclusionQ in line 80
   variable initializationExpressionQ in line 84
   variable mode in line 86
   variable namesQl in line 76
   variable objectDeclarationViewQ in line 82
   variable sloc in line 74
module org::sireum::bakar::xml::ParameterSpecification::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 339
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 315
module org::sireum::bakar::xml::ParameterSpecification::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 389
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 402
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 378
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ParameterSpecificationList.java
module org::sireum::bakar::xml::ParameterSpecificationList
   inherits from org::sireum::bakar::xml::Base
   function getParameterSpecifications() in line 183
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable parameterSpecifications in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ParenthesizedExpression.java
module org::sireum::bakar::xml::ParenthesizedExpression
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpressionParenthesizedQ() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExpressionParenthesizedQ(ExpressionClass) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable expressionParenthesizedQ in line 45
   variable sloc in line 43
   variable type in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PartitionElaborationPolicyPragma.java
module org::sireum::bakar::xml::PartitionElaborationPolicyPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PartitionIdAttribute.java
module org::sireum::bakar::xml::PartitionIdAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PathClass.java
module org::sireum::bakar::xml::PathClass
   inherits from org::sireum::bakar::xml::Base
   function getPath() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setPath(Base) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable path in line 120
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PathList.java
module org::sireum::bakar::xml::PathList
   inherits from org::sireum::bakar::xml::Base
   function getPaths() in line 213
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable paths in line 122
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PlusOperator.java
module org::sireum::bakar::xml::PlusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PoolSpecificAccessToVariable.java
module org::sireum::bakar::xml::PoolSpecificAccessToVariable
   inherits from org::sireum::bakar::xml::Base
   function getAccessToObjectDefinitionQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAccessToObjectDefinitionQ(ElementClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(PoolSpecificAccessToVariable.HasNullExclusionQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable accessToObjectDefinitionQ in line 60
   variable checks in line 62
   variable hasNullExclusionQ in line 58
   variable sloc in line 56
module org::sireum::bakar::xml::PoolSpecificAccessToVariable::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PosAttribute.java
module org::sireum::bakar::xml::PosAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PositionalArrayAggregate.java
module org::sireum::bakar::xml::PositionalArrayAggregate
   inherits from org::sireum::bakar::xml::Base
   function getArrayComponentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setArrayComponentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable arrayComponentAssociationsQl in line 45
   variable checks in line 49
   variable sloc in line 43
   variable type in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PositionAttribute.java
module org::sireum::bakar::xml::PositionAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PragmaArgumentAssociation.java
module org::sireum::bakar::xml::PragmaArgumentAssociation
   inherits from org::sireum::bakar::xml::Base
   function getActualParameterQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFormalParameterQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setActualParameterQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormalParameterQ(ElementClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable actualParameterQ in line 48
   variable checks in line 50
   variable formalParameterQ in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PragmaElementClass.java
module org::sireum::bakar::xml::PragmaElementClass
   inherits from org::sireum::bakar::xml::Base
   function getPragmaElement() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setPragmaElement(Base) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable pragmaElement in line 96
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PredAttribute.java
module org::sireum::bakar::xml::PredAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PreelaborableInitializationPragma.java
module org::sireum::bakar::xml::PreelaborableInitializationPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PreelaboratePragma.java
module org::sireum::bakar::xml::PreelaboratePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PriorityAttribute.java
module org::sireum::bakar::xml::PriorityAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PriorityPragma.java
module org::sireum::bakar::xml::PriorityPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PrioritySpecificDispatchingPragma.java
module org::sireum::bakar::xml::PrioritySpecificDispatchingPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Private.java
module org::sireum::bakar::xml::Private
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PrivateExtensionDeclaration.java
module org::sireum::bakar::xml::PrivateExtensionDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeDeclarationViewQ() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTypeDeclarationViewQ(DefinitionClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 58
   variable discriminantPartQ in line 52
   variable namesQl in line 50
   variable sloc in line 48
   variable typeDeclarationViewQ in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PrivateExtensionDefinition.java
module org::sireum::bakar::xml::PrivateExtensionDefinition
   inherits from org::sireum::bakar::xml::Base
   function getAncestorSubtypeIndicationQ() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasSynchronizedQ() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAncestorSubtypeIndicationQ(ElementClass) in line 214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 238
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(PrivateExtensionDefinition.HasAbstractQ) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(PrivateExtensionDefinition.HasLimitedQ) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasSynchronizedQ(PrivateExtensionDefinition.HasSynchronizedQ) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ancestorSubtypeIndicationQ in line 92
   variable checks in line 96
   variable definitionInterfaceListQl in line 94
   variable hasAbstractQ in line 86
   variable hasLimitedQ in line 88
   variable hasSynchronizedQ in line 90
   variable sloc in line 84
module org::sireum::bakar::xml::PrivateExtensionDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 310
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 323
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 299
module org::sireum::bakar::xml::PrivateExtensionDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 373
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 386
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 362
module org::sireum::bakar::xml::PrivateExtensionDefinition::HasSynchronizedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasSynchronized() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasSynchronized(Base) in line 449
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasSynchronized in line 425
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PrivateTypeDeclaration.java
module org::sireum::bakar::xml::PrivateTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeDeclarationViewQ() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTypeDeclarationViewQ(DefinitionClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 58
   variable discriminantPartQ in line 52
   variable namesQl in line 50
   variable sloc in line 48
   variable typeDeclarationViewQ in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PrivateTypeDefinition.java
module org::sireum::bakar::xml::PrivateTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(PrivateTypeDefinition.HasAbstractQ) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(PrivateTypeDefinition.HasLimitedQ) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 73
   variable hasAbstractQ in line 69
   variable hasLimitedQ in line 71
   variable sloc in line 67
module org::sireum::bakar::xml::PrivateTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 204
module org::sireum::bakar::xml::PrivateTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 267
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProcedureBodyDeclaration.java
module org::sireum::bakar::xml::ProcedureBodyDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyDeclarativeItemsQl() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyExceptionHandlersQl() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyStatementsQl() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 323
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyDeclarativeItemsQl(ElementList) in line 263
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyExceptionHandlersQl(ExceptionHandlerList) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyStatementsQl(StatementList) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(ProcedureBodyDeclaration.IsNotOverridingDeclarationQ) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(ProcedureBodyDeclaration.IsOverridingDeclarationQ) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 215
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 89
   variable bodyDeclarativeItemsQl in line 91
   variable bodyExceptionHandlersQl in line 95
   variable bodyStatementsQl in line 93
   variable checks in line 97
   variable isNotOverridingDeclarationQ in line 83
   variable isOverridingDeclarationQ in line 81
   variable namesQl in line 85
   variable parameterProfileQl in line 87
   variable sloc in line 79
module org::sireum::bakar::xml::ProcedureBodyDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 383
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 396
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 372
module org::sireum::bakar::xml::ProcedureBodyDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 446
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 459
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 435
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProcedureBodyStub.java
module org::sireum::bakar::xml::ProcedureBodyStub
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(ProcedureBodyStub.IsNotOverridingDeclarationQ) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(ProcedureBodyStub.IsOverridingDeclarationQ) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 83
   variable checks in line 85
   variable isNotOverridingDeclarationQ in line 77
   variable isOverridingDeclarationQ in line 75
   variable namesQl in line 79
   variable parameterProfileQl in line 81
   variable sloc in line 73
module org::sireum::bakar::xml::ProcedureBodyStub::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 288
module org::sireum::bakar::xml::ProcedureBodyStub::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 351
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProcedureCallStatement.java
module org::sireum::bakar::xml::ProcedureCallStatement
   inherits from org::sireum::bakar::xml::Base
   function getCalledNameQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCallStatementParametersQl() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsPrefixNotationQ() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCalledNameQ(ExpressionClass) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCallStatementParametersQl(AssociationList) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsPrefixNotationQ(ProcedureCallStatement.IsPrefixNotationQ) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable calledNameQ in line 64
   variable callStatementParametersQl in line 66
   variable checks in line 70
   variable isPrefixNotationQ in line 68
   variable labelNamesQl in line 62
   variable sloc in line 60
module org::sireum::bakar::xml::ProcedureCallStatement::IsPrefixNotationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsPrefixNotation() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsPrefixNotation(Base) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isPrefixNotation in line 249
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProcedureDeclaration.java
module org::sireum::bakar::xml::ProcedureDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 290
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(ProcedureDeclaration.HasAbstractQ) in line 242
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(ProcedureDeclaration.IsNotOverridingDeclarationQ) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(ProcedureDeclaration.IsOverridingDeclarationQ) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 194
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 98
   variable checks in line 100
   variable hasAbstractQ in line 96
   variable isNotOverridingDeclarationQ in line 90
   variable isOverridingDeclarationQ in line 88
   variable namesQl in line 92
   variable parameterProfileQl in line 94
   variable sloc in line 86
module org::sireum::bakar::xml::ProcedureDeclaration::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 351
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 327
module org::sireum::bakar::xml::ProcedureDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 401
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 414
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 390
module org::sireum::bakar::xml::ProcedureDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 477
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 453
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProcedureInstantiation.java
module org::sireum::bakar::xml::ProcedureInstantiation
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericActualPartQl() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericUnitNameQ() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 255
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericActualPartQl(AssociationList) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGenericUnitNameQ(ExpressionClass) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(ProcedureInstantiation.IsNotOverridingDeclarationQ) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(ProcedureInstantiation.IsOverridingDeclarationQ) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 87
   variable checks in line 89
   variable genericActualPartQl in line 85
   variable genericUnitNameQ in line 83
   variable isNotOverridingDeclarationQ in line 79
   variable isOverridingDeclarationQ in line 77
   variable namesQl in line 81
   variable sloc in line 75
module org::sireum::bakar::xml::ProcedureInstantiation::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 316
module org::sireum::bakar::xml::ProcedureInstantiation::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 403
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 379
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProcedureRenamingDeclaration.java
module org::sireum::bakar::xml::ProcedureRenamingDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsNotOverridingDeclarationQ() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIsOverridingDeclarationQ() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterProfileQl() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRenamedEntityQ() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 255
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsNotOverridingDeclarationQ(ProcedureRenamingDeclaration.IsNotOverridingDeclarationQ) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsOverridingDeclarationQ(ProcedureRenamingDeclaration.IsOverridingDeclarationQ) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParameterProfileQl(ParameterSpecificationList) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRenamedEntityQ(ExpressionClass) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 87
   variable checks in line 89
   variable isNotOverridingDeclarationQ in line 79
   variable isOverridingDeclarationQ in line 77
   variable namesQl in line 81
   variable parameterProfileQl in line 83
   variable renamedEntityQ in line 85
   variable sloc in line 75
module org::sireum::bakar::xml::ProcedureRenamingDeclaration::IsNotOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsNotOverriding() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsNotOverriding(Base) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isNotOverriding in line 316
module org::sireum::bakar::xml::ProcedureRenamingDeclaration::IsOverridingDeclarationQ
   inherits from org::sireum::bakar::xml::Base
   function getIsOverriding() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsOverriding(Base) in line 403
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable isOverriding in line 379
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProfilePragma.java
module org::sireum::bakar::xml::ProfilePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProtectedBodyDeclaration.java
module org::sireum::bakar::xml::ProtectedBodyDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProtectedOperationItemsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProtectedOperationItemsQl(DeclarationList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 50
   variable checks in line 54
   variable namesQl in line 48
   variable protectedOperationItemsQl in line 52
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProtectedBodyStub.java
module org::sireum::bakar::xml::ProtectedBodyStub
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 48
   variable checks in line 50
   variable namesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProtectedDefinition.java
module org::sireum::bakar::xml::ProtectedDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrivatePartItemsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVisiblePartItemsQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrivatePartItemsQl(DeclarativeItemList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVisiblePartItemsQl(DeclarativeItemList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable privatePartItemsQl in line 48
   variable sloc in line 44
   variable visiblePartItemsQl in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProtectedInterface.java
module org::sireum::bakar::xml::ProtectedInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ProtectedTypeDeclaration.java
module org::sireum::bakar::xml::ProtectedTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeclarationInterfaceListQl() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeDeclarationViewQ() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDeclarationInterfaceListQl(ExpressionList) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTypeDeclarationViewQ(DefinitionClass) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 62
   variable declarationInterfaceListQl in line 58
   variable discriminantPartQ in line 54
   variable namesQl in line 52
   variable sloc in line 50
   variable typeDeclarationViewQ in line 60
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/PurePragma.java
module org::sireum::bakar::xml::PurePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/QualifiedExpression.java
module org::sireum::bakar::xml::QualifiedExpression
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConvertedOrQualifiedExpressionQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConvertedOrQualifiedSubtypeMarkQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConvertedOrQualifiedExpressionQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConvertedOrQualifiedSubtypeMarkQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable convertedOrQualifiedExpressionQ in line 49
   variable convertedOrQualifiedSubtypeMarkQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/QueuingPolicyPragma.java
module org::sireum::bakar::xml::QueuingPolicyPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RaiseExpression.java
module org::sireum::bakar::xml::RaiseExpression
   inherits from org::sireum::bakar::xml::Base
   function getAssociatedMessageQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRaisedExceptionQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAssociatedMessageQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRaisedExceptionQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable associatedMessageQ in line 49
   variable checks in line 53
   variable raisedExceptionQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RaiseStatement.java
module org::sireum::bakar::xml::RaiseStatement
   inherits from org::sireum::bakar::xml::Base
   function getAssociatedMessageQ() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRaisedExceptionQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAssociatedMessageQ(ExpressionClass) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRaisedExceptionQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable associatedMessageQ in line 52
   variable checks in line 54
   variable labelNamesQl in line 48
   variable raisedExceptionQ in line 50
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RangeAttribute.java
module org::sireum::bakar::xml::RangeAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorExpressionsQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAttributeDesignatorIdentifierQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorExpressionsQl(ExpressionList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorExpressionsQl in line 53
   variable attributeDesignatorIdentifierQ in line 51
   variable checks in line 57
   variable prefixQ in line 49
   variable sloc in line 47
   variable type in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RangeAttributeReference.java
module org::sireum::bakar::xml::RangeAttributeReference
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRangeAttributeQ() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRangeAttributeQ(ExpressionClass) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable rangeAttributeQ in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RangeConstraintClass.java
module org::sireum::bakar::xml::RangeConstraintClass
   inherits from org::sireum::bakar::xml::Base
   function getRangeConstraint() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setRangeConstraint(Base) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable rangeConstraint in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ReadAttribute.java
module org::sireum::bakar::xml::ReadAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RealLiteral.java
module org::sireum::bakar::xml::RealLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLitVal() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLitVal(String) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 48
   variable litVal in line 44
   variable sloc in line 42
   variable type in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RealNumberDeclaration.java
module org::sireum::bakar::xml::RealNumberDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable initializationExpressionQ in line 48
   variable namesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RecordAggregate.java
module org::sireum::bakar::xml::RecordAggregate
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordComponentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordComponentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable recordComponentAssociationsQl in line 45
   variable sloc in line 43
   variable type in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RecordComponentAssociation.java
module org::sireum::bakar::xml::RecordComponentAssociation
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordComponentChoicesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setComponentExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordComponentChoicesQl(ExpressionList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable componentExpressionQ in line 48
   variable recordComponentChoicesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RecordComponentClass.java
module org::sireum::bakar::xml::RecordComponentClass
   inherits from org::sireum::bakar::xml::Base
   function getRecordComponent() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setRecordComponent(Base) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable recordComponent in line 106
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RecordComponentList.java
module org::sireum::bakar::xml::RecordComponentList
   inherits from org::sireum::bakar::xml::Base
   function getRecordComponents() in line 192
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable recordComponents in line 108
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RecordDefinition.java
module org::sireum::bakar::xml::RecordDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordComponentsQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(RecordDefinition.HasLimitedQ) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordComponentsQl(RecordComponentList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 62
   variable hasLimitedQ in line 58
   variable recordComponentsQl in line 60
   variable sloc in line 56
module org::sireum::bakar::xml::RecordDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 193
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RecordRepresentationClause.java
module org::sireum::bakar::xml::RecordRepresentationClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentClausesQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getModClauseExpressionQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRepresentationClauseNameQ() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setComponentClausesQl(ComponentClauseList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setModClauseExpressionQ(ExpressionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRepresentationClauseNameQ(NameClass) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 54
   variable componentClausesQl in line 52
   variable modClauseExpressionQ in line 50
   variable representationClauseNameQ in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RecordTypeDefinition.java
module org::sireum::bakar::xml::RecordTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordDefinitionQ() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(RecordTypeDefinition.HasAbstractQ) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(RecordTypeDefinition.HasLimitedQ) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordDefinitionQ(DefinitionClass) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 77
   variable hasAbstractQ in line 71
   variable hasLimitedQ in line 73
   variable recordDefinitionQ in line 75
   variable sloc in line 69
module org::sireum::bakar::xml::RecordTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 232
module org::sireum::bakar::xml::RecordTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 319
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 295
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RelativeDeadlinePragma.java
module org::sireum::bakar::xml::RelativeDeadlinePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RemainderAttribute.java
module org::sireum::bakar::xml::RemainderAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RemOperator.java
module org::sireum::bakar::xml::RemOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RemoteCallInterfacePragma.java
module org::sireum::bakar::xml::RemoteCallInterfacePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RemoteTypesPragma.java
module org::sireum::bakar::xml::RemoteTypesPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RequeueStatement.java
module org::sireum::bakar::xml::RequeueStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRequeueEntryNameQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRequeueEntryNameQ(NameClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable requeueEntryNameQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RequeueStatementWithAbort.java
module org::sireum::bakar::xml::RequeueStatementWithAbort
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRequeueEntryNameQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRequeueEntryNameQ(NameClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable requeueEntryNameQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RestrictionsPragma.java
module org::sireum::bakar::xml::RestrictionsPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ReturnConstantSpecification.java
module org::sireum::bakar::xml::ReturnConstantSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(ReturnConstantSpecification.HasAliasedQ) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 70
   variable hasAliasedQ in line 64
   variable initializationExpressionQ in line 68
   variable namesQl in line 62
   variable objectDeclarationViewQ in line 66
   variable sloc in line 60
module org::sireum::bakar::xml::ReturnConstantSpecification::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 249
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ReturnStatement.java
module org::sireum::bakar::xml::ReturnStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnExpressionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setReturnExpressionQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable returnExpressionQ in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ReturnVariableSpecification.java
module org::sireum::bakar::xml::ReturnVariableSpecification
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(ReturnVariableSpecification.HasAliasedQ) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 70
   variable hasAliasedQ in line 64
   variable initializationExpressionQ in line 68
   variable namesQl in line 62
   variable objectDeclarationViewQ in line 66
   variable sloc in line 60
module org::sireum::bakar::xml::ReturnVariableSpecification::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 249
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Reverse.java
module org::sireum::bakar::xml::Reverse
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ReviewablePragma.java
module org::sireum::bakar::xml::ReviewablePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RootIntegerDefinition.java
module org::sireum::bakar::xml::RootIntegerDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RootRealDefinition.java
module org::sireum::bakar::xml::RootRealDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RoundAttribute.java
module org::sireum::bakar::xml::RoundAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/RoundingAttribute.java
module org::sireum::bakar::xml::RoundingAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SafeFirstAttribute.java
module org::sireum::bakar::xml::SafeFirstAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SafeLastAttribute.java
module org::sireum::bakar::xml::SafeLastAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ScaleAttribute.java
module org::sireum::bakar::xml::ScaleAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ScalingAttribute.java
module org::sireum::bakar::xml::ScalingAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SelectedComponent.java
module org::sireum::bakar::xml::SelectedComponent
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSelectorQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSelectorQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable prefixQ in line 47
   variable selectorQ in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SelectiveAcceptStatement.java
module org::sireum::bakar::xml::SelectiveAcceptStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementPathsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementPathsQl(PathList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable sloc in line 44
   variable statementPathsQl in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SelectPath.java
module org::sireum::bakar::xml::SelectPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGuardQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSequenceOfStatementsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setGuardQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceOfStatementsQl(StatementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable guardQ in line 46
   variable sequenceOfStatementsQl in line 48
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SharedPassivePragma.java
module org::sireum::bakar::xml::SharedPassivePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SignedIntegerTypeDefinition.java
module org::sireum::bakar::xml::SignedIntegerTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIntegerConstraintQ() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIntegerConstraintQ(RangeConstraintClass) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable integerConstraintQ in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SignedZerosAttribute.java
module org::sireum::bakar::xml::SignedZerosAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SimpleExpressionRange.java
module org::sireum::bakar::xml::SimpleExpressionRange
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLowerBoundQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUpperBoundQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLowerBoundQ(ExpressionClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUpperBoundQ(ExpressionClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable lowerBoundQ in line 46
   variable sloc in line 44
   variable upperBoundQ in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SingleProtectedDeclaration.java
module org::sireum::bakar::xml::SingleProtectedDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeclarationInterfaceListQl() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDeclarationInterfaceListQl(ExpressionList) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 58
   variable declarationInterfaceListQl in line 54
   variable namesQl in line 50
   variable objectDeclarationViewQ in line 56
   variable sloc in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SingleTaskDeclaration.java
module org::sireum::bakar::xml::SingleTaskDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeclarationInterfaceListQl() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDeclarationInterfaceListQl(ExpressionList) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 58
   variable declarationInterfaceListQl in line 54
   variable namesQl in line 50
   variable objectDeclarationViewQ in line 56
   variable sloc in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SizeAttribute.java
module org::sireum::bakar::xml::SizeAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Slice.java
module org::sireum::bakar::xml::Slice
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSliceRangeQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSliceRangeQ(DiscreteRangeClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable prefixQ in line 47
   variable sliceRangeQ in line 49
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SmallAttribute.java
module org::sireum::bakar::xml::SmallAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SourceLocation.java
module org::sireum::bakar::xml::SourceLocation
   inherits from org::sireum::bakar::xml::Base
   function getCol() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndcol() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndline() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLine() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCol(int) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEndcol(int) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEndline(int) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLine(int) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable col in line 43
   variable endcol in line 49
   variable endline in line 46
   variable line in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/StatementClass.java
module org::sireum::bakar::xml::StatementClass
   inherits from org::sireum::bakar::xml::Base
   function getTheStatement() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setTheStatement(Base) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable theStatement in line 152
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/StatementList.java
module org::sireum::bakar::xml::StatementList
   inherits from org::sireum::bakar::xml::Base
   function getStatements() in line 261
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable statements in line 154
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/StoragePoolAttribute.java
module org::sireum::bakar::xml::StoragePoolAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/StorageSizeAttribute.java
module org::sireum::bakar::xml::StorageSizeAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/StorageSizePragma.java
module org::sireum::bakar::xml::StorageSizePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/StreamSizeAttribute.java
module org::sireum::bakar::xml::StreamSizeAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/StringLiteral.java
module org::sireum::bakar::xml::StringLiteral
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLitVal() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLitVal(String) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 48
   variable litVal in line 44
   variable sloc in line 42
   variable type in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SubtypeDeclaration.java
module org::sireum::bakar::xml::SubtypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeDeclarationViewQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTypeDeclarationViewQ(DefinitionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable namesQl in line 48
   variable sloc in line 46
   variable typeDeclarationViewQ in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SubtypeIndication.java
module org::sireum::bakar::xml::SubtypeIndication
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasNullExclusionQ() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeConstraintQ() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypeMarkQ() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(SubtypeIndication.HasAliasedQ) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasNullExclusionQ(SubtypeIndication.HasNullExclusionQ) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeConstraintQ(ConstraintClass) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSubtypeMarkQ(ExpressionClass) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 81
   variable hasAliasedQ in line 73
   variable hasNullExclusionQ in line 75
   variable sloc in line 71
   variable subtypeConstraintQ in line 79
   variable subtypeMarkQ in line 77
module org::sireum::bakar::xml::SubtypeIndication::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 260
module org::sireum::bakar::xml::SubtypeIndication::HasNullExclusionQ
   inherits from org::sireum::bakar::xml::Base
   function getHasNullExclusion() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasNullExclusion(Base) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasNullExclusion in line 323
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SuccAttribute.java
module org::sireum::bakar::xml::SuccAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SuppressPragma.java
module org::sireum::bakar::xml::SuppressPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Synchronized.java
module org::sireum::bakar::xml::Synchronized
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/SynchronizedInterface.java
module org::sireum::bakar::xml::SynchronizedInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TagAttribute.java
module org::sireum::bakar::xml::TagAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Tagged.java
module org::sireum::bakar::xml::Tagged
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaggedIncompleteTypeDeclaration.java
module org::sireum::bakar::xml::TaggedIncompleteTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 52
   variable checks in line 54
   variable discriminantPartQ in line 50
   variable namesQl in line 48
   variable sloc in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaggedPrivateTypeDefinition.java
module org::sireum::bakar::xml::TaggedPrivateTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(TaggedPrivateTypeDefinition.HasAbstractQ) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(TaggedPrivateTypeDefinition.HasLimitedQ) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 73
   variable hasAbstractQ in line 69
   variable hasLimitedQ in line 71
   variable sloc in line 67
module org::sireum::bakar::xml::TaggedPrivateTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 204
module org::sireum::bakar::xml::TaggedPrivateTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 267
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaggedRecordTypeDefinition.java
module org::sireum::bakar::xml::TaggedRecordTypeDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAbstractQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordDefinitionQ() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAbstractQ(TaggedRecordTypeDefinition.HasAbstractQ) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(TaggedRecordTypeDefinition.HasLimitedQ) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordDefinitionQ(DefinitionClass) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 77
   variable hasAbstractQ in line 71
   variable hasLimitedQ in line 73
   variable recordDefinitionQ in line 75
   variable sloc in line 69
module org::sireum::bakar::xml::TaggedRecordTypeDefinition::HasAbstractQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAbstract() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAbstract(Base) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAbstract in line 232
module org::sireum::bakar::xml::TaggedRecordTypeDefinition::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 319
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 295
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaskBodyDeclaration.java
module org::sireum::bakar::xml::TaskBodyDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyDeclarativeItemsQl() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyExceptionHandlersQl() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBodyStatementsQl() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyDeclarativeItemsQl(ElementList) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyExceptionHandlersQl(ExceptionHandlerList) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBodyStatementsQl(StatementList) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 54
   variable bodyDeclarativeItemsQl in line 56
   variable bodyExceptionHandlersQl in line 60
   variable bodyStatementsQl in line 58
   variable checks in line 62
   variable namesQl in line 52
   variable sloc in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaskBodyStub.java
module org::sireum::bakar::xml::TaskBodyStub
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 48
   variable checks in line 50
   variable namesQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaskDefinition.java
module org::sireum::bakar::xml::TaskDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrivatePartItemsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVisiblePartItemsQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrivatePartItemsQl(DeclarativeItemList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVisiblePartItemsQl(DeclarativeItemList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable privatePartItemsQl in line 48
   variable sloc in line 44
   variable visiblePartItemsQl in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaskDispatchingPolicyPragma.java
module org::sireum::bakar::xml::TaskDispatchingPolicyPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaskInterface.java
module org::sireum::bakar::xml::TaskInterface
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitionInterfaceListQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDefinitionInterfaceListQl(ExpressionList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable definitionInterfaceListQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TaskTypeDeclaration.java
module org::sireum::bakar::xml::TaskTypeDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDeclarationInterfaceListQl() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantPartQ() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeDeclarationViewQ() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDeclarationInterfaceListQl(ExpressionList) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantPartQ(DefinitionClass) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTypeDeclarationViewQ(DefinitionClass) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 56
   variable checks in line 62
   variable declarationInterfaceListQl in line 58
   variable discriminantPartQ in line 54
   variable namesQl in line 52
   variable sloc in line 50
   variable typeDeclarationViewQ in line 60
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TerminateAlternativeStatement.java
module org::sireum::bakar::xml::TerminateAlternativeStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TerminatedAttribute.java
module org::sireum::bakar::xml::TerminatedAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ThenAbortPath.java
module org::sireum::bakar::xml::ThenAbortPath
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSequenceOfStatementsQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceOfStatementsQl(StatementList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable sequenceOfStatementsQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TimedEntryCallStatement.java
module org::sireum::bakar::xml::TimedEntryCallStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementPathsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementPathsQl(PathList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable labelNamesQl in line 46
   variable sloc in line 44
   variable statementPathsQl in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TruncationAttribute.java
module org::sireum::bakar::xml::TruncationAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/TypeConversion.java
module org::sireum::bakar::xml::TypeConversion
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConvertedOrQualifiedExpressionQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getConvertedOrQualifiedSubtypeMarkQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConvertedOrQualifiedExpressionQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConvertedOrQualifiedSubtypeMarkQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 53
   variable convertedOrQualifiedExpressionQ in line 49
   variable convertedOrQualifiedSubtypeMarkQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnaryMinusOperator.java
module org::sireum::bakar::xml::UnaryMinusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnaryPlusOperator.java
module org::sireum::bakar::xml::UnaryPlusOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnbiasedRoundingAttribute.java
module org::sireum::bakar::xml::UnbiasedRoundingAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UncheckedAccessAttribute.java
module org::sireum::bakar::xml::UncheckedAccessAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UncheckedUnionPragma.java
module org::sireum::bakar::xml::UncheckedUnionPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnconstrainedArrayDefinition.java
module org::sireum::bakar::xml::UnconstrainedArrayDefinition
   inherits from org::sireum::bakar::xml::Base
   function getArrayComponentDefinitionQ() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIndexSubtypeDefinitionsQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setArrayComponentDefinitionQ(ElementClass) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIndexSubtypeDefinitionsQl(ExpressionList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable arrayComponentDefinitionQ in line 48
   variable checks in line 50
   variable indexSubtypeDefinitionsQl in line 46
   variable sloc in line 44
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UniversalFixedDefinition.java
module org::sireum::bakar::xml::UniversalFixedDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UniversalIntegerDefinition.java
module org::sireum::bakar::xml::UniversalIntegerDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UniversalRealDefinition.java
module org::sireum::bakar::xml::UniversalRealDefinition
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnknownAttribute.java
module org::sireum::bakar::xml::UnknownAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorExpressionsQl() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAttributeDesignatorIdentifierQ() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorExpressionsQl(ExpressionList) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorExpressionsQl in line 53
   variable attributeDesignatorIdentifierQ in line 51
   variable checks in line 57
   variable prefixQ in line 49
   variable sloc in line 47
   variable type in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnknownDiscriminantPart.java
module org::sireum::bakar::xml::UnknownDiscriminantPart
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 42
   variable sloc in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnknownPragma.java
module org::sireum::bakar::xml::UnknownPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UnsuppressPragma.java
module org::sireum::bakar::xml::UnsuppressPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UseAllTypeClause.java
module org::sireum::bakar::xml::UseAllTypeClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClauseNamesQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClauseNamesQl(NameList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable clauseNamesQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UsePackageClause.java
module org::sireum::bakar::xml::UsePackageClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClauseNamesQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClauseNamesQl(NameList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable clauseNamesQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/UseTypeClause.java
module org::sireum::bakar::xml::UseTypeClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClauseNamesQl() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClauseNamesQl(NameList) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 46
   variable clauseNamesQl in line 44
   variable sloc in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/util/DateRemover.java
module org::sireum::bakar::xml::util::DateRemover
   function main(final String[]) in line 11
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ValAttribute.java
module org::sireum::bakar::xml::ValAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ValidAttribute.java
module org::sireum::bakar::xml::ValidAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/ValueAttribute.java
module org::sireum::bakar::xml::ValueAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/VariableDeclaration.java
module org::sireum::bakar::xml::VariableDeclaration
   inherits from org::sireum::bakar::xml::Base
   function getAspectSpecificationsQl() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasAliasedQ() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializationExpressionQ() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNamesQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectDeclarationViewQ() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAspectSpecificationsQl(ElementList) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasAliasedQ(VariableDeclaration.HasAliasedQ) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInitializationExpressionQ(ExpressionClass) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNamesQl(DefiningNameList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setObjectDeclarationViewQ(DefinitionClass) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable aspectSpecificationsQl in line 72
   variable checks in line 74
   variable hasAliasedQ in line 66
   variable initializationExpressionQ in line 70
   variable namesQl in line 64
   variable objectDeclarationViewQ in line 68
   variable sloc in line 62
module org::sireum::bakar::xml::VariableDeclaration::HasAliasedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasAliased() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasAliased(Base) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasAliased in line 277
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/Variant.java
module org::sireum::bakar::xml::Variant
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRecordComponentsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVariantChoicesQl() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRecordComponentsQl(RecordComponentList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVariantChoicesQl(ElementList) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable recordComponentsQl in line 48
   variable sloc in line 44
   variable variantChoicesQl in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/VariantList.java
module org::sireum::bakar::xml::VariantList
   inherits from org::sireum::bakar::xml::Base
   function getVariants() in line 183
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable variants in line 102
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/VariantPart.java
module org::sireum::bakar::xml::VariantPart
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiscriminantDirectNameQ() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVariantsQl() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDiscriminantDirectNameQ(NameClass) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVariantsQl(VariantList) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 50
   variable discriminantDirectNameQ in line 46
   variable sloc in line 44
   variable variantsQl in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/VersionAttribute.java
module org::sireum::bakar::xml::VersionAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/VolatileComponentsPragma.java
module org::sireum::bakar::xml::VolatileComponentsPragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/VolatilePragma.java
module org::sireum::bakar::xml::VolatilePragma
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaArgumentAssociationsQl() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPragmaName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaArgumentAssociationsQl(AssociationList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPragmaName(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 49
   variable pragmaArgumentAssociationsQl in line 45
   variable pragmaName in line 47
   variable sloc in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WhileLoopStatement.java
module org::sireum::bakar::xml::WhileLoopStatement
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabelNamesQl() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLoopStatementsQl() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatementIdentifierQ() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWhileConditionQ() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLabelNamesQl(DefiningNameList) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLoopStatementsQl(StatementList) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatementIdentifierQ(DefiningNameClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWhileConditionQ(ExpressionClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 58
   variable labelNamesQl in line 50
   variable loopStatementsQl in line 56
   variable sloc in line 48
   variable statementIdentifierQ in line 52
   variable whileConditionQ in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WideImageAttribute.java
module org::sireum::bakar::xml::WideImageAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WideValueAttribute.java
module org::sireum::bakar::xml::WideValueAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WideWideImageAttribute.java
module org::sireum::bakar::xml::WideWideImageAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WideWideValueAttribute.java
module org::sireum::bakar::xml::WideWideValueAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WideWideWidthAttribute.java
module org::sireum::bakar::xml::WideWideWidthAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WideWidthAttribute.java
module org::sireum::bakar::xml::WideWidthAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WidthAttribute.java
module org::sireum::bakar::xml::WidthAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WithClause.java
module org::sireum::bakar::xml::WithClause
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClauseNamesQl() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasLimitedQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHasPrivateQ() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClauseNamesQl(NameList) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasLimitedQ(WithClause.HasLimitedQ) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasPrivateQ(WithClause.HasPrivateQ) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 77
   variable clauseNamesQl in line 75
   variable hasLimitedQ in line 71
   variable hasPrivateQ in line 73
   variable sloc in line 69
module org::sireum::bakar::xml::WithClause::HasLimitedQ
   inherits from org::sireum::bakar::xml::Base
   function getHasLimited() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasLimited(Base) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasLimited in line 232
module org::sireum::bakar::xml::WithClause::HasPrivateQ
   inherits from org::sireum::bakar::xml::Base
   function getHasPrivate() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHasPrivate(Base) in line 319
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable hasPrivate in line 295
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/WriteAttribute.java
module org::sireum::bakar::xml::WriteAttribute
   inherits from org::sireum::bakar::xml::Base
   function getAttributeDesignatorIdentifierQ() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChecks() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrefixQ() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAttributeDesignatorIdentifierQ(ExpressionClass) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setChecks(String) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrefixQ(ExpressionClass) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable attributeDesignatorIdentifierQ in line 49
   variable checks in line 53
   variable prefixQ in line 47
   variable sloc in line 45
   variable type in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/bakar-ali/bakar-dev-20160415-002013/sireum-bakar-xml/src/main/java/org/sireum/bakar/xml/XorOperator.java
module org::sireum::bakar::xml::XorOperator
   inherits from org::sireum::bakar::xml::Base
   function getChecks() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRef() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRefName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSloc() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setChecks(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRef(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRefName(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSloc(SourceLocation) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checks in line 51
   variable ref in line 47
   variable refName in line 45
   variable sloc in line 43
   variable type in line 49
