@INPROCEEDINGS{5431710,
  author={D. Kroening and N. Sharygina and S. Tonetta and A. Tsitovich and C. M. Wintersteiger},
  booktitle={2009 IEEE/ACM International Conference on Automated Software Engineering},
  title={Loopfrog: A Static Analyzer for ANSI-C Programs},
  year={2009},
  pages={668-670},
  abstract={Practical software verification is dominated by two major classes of techniques. The first is model checking, which provides total precision, but suffers from the state space explosion problem. The second is abstract interpretation, which is usually much less demanding, but often returns a high number of false positives. We present Loopfrog, a static analyzer that combines the best of both worlds: the precision of model checking and the performance of abstract interpretation. In contrast to traditional static analyzers, it also provides `leaping' counterexamples to aid in the diagnosis of errors.},
  keywords={formal verification;program diagnostics;ANSI-C program;Loopfrog;abstract interpretation performance;model checking precision;software verification;state space explosion problem;static analyzer;Approximation algorithms;Art;Explosions;Iterative algorithms;Iterative methods;Laboratories;Performance analysis;Software engineering;State-space methods;Transformers},
  doi={10.1109/ASE.2009.35},
  ISSN={1938-4300},
  month={Nov},
  reference_weight={1},
}
