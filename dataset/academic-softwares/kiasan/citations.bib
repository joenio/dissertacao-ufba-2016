@inproceedings{4221616,
  author = {M. B. Dwyer and J. Hatcliff and R. Robby and C. S. Pasareanu and W. Visser},
  booktitle = {Future of Software Engineering, 2007. FOSE '07},
  title = {Formal Software Analysis Emerging Trends in Software Model Checking},
  year = {2007},
  pages = {120-136},
  keywords = {software engineering;algorithmic formal reasoning;formal software analysis;program behavior;software model checking;Algorithm design and analysis;Computational Intelligence Society;Computer languages;Computer science;Embedded software;Information analysis;NASA;Object oriented modeling;Software algorithms;Software engineering},
  doi = {10.1109/FOSE.2007.6},
  month = {May},
  review = {cita o software como um exemplo de combinação entre técnicas de execução simbólica, checagem de modelos e 'automated deduction to modularly reason about deep semantic properties of open object-oriented systems'},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Denaro:2015:DDF:2818754.2818868,
  author = {Denaro, Giovanni and Margara, Alessandro and Pezz\`{e}, Mauro and Vivanti, Mattia},
  title = {Dynamic Data Flow Testing of Object Oriented Systems},
  booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 1},
  series = {ICSE '15},
  year = {2015},
  isbn = {978-1-4799-1934-5},
  location = {Florence, Italy},
  pages = {947--958},
  numpages = {12},
  url = {http://dl.acm.org/citation.cfm?id=2818754.2818868},
  acmid = {2818868},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{6285773,
  author = {N. Aleb and S. Kechid},
  booktitle = {2012 International Conference on Communications and Information Technology (ICCIT)},
  title = {Path coverage testing in the cloud},
  year = {2012},
  pages = {118-123},
  keywords = {cloud computing;program testing;resource allocation;automated software testing;coordinator;path coverage testing;program modeling;symbolic execution;task allocation;testing scalable parallelization;workers;Cloud computing;Computational modeling;Concrete;Data models;Software testing;Cloud Computing;Software Testing;Symbolic Execution;Testing as a Service},
  doi = {10.1109/ICCITechnol.2012.6285773},
  month = {June},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{6405256,
  author = {C. R. Rupakheti and D. Hou},
  booktitle = {2012 28th IEEE International Conference on Software Maintenance (ICSM)},
  title = {Finding errors from reverse-engineered equality models using a constraint solver},
  year = {2012},
  pages = {77-86},
  keywords = {Java;data structures;formal verification;program debugging;reverse engineering;Alloy Analyzer;EQ checker;Java object;constraint solver;contract conformance;equality contract;equality implementation bug;list data structure;map data structure;reverse-engineered equality model;scalability term;set data structure;usefulness term;Abstracts;Arrays;Detectors;Java;Metals;Standards;Testing;Abstraction Recognition;Alloy;Java;Model Finding;Object Equality;Path-Based Analysis;Soot},
  doi = {10.1109/ICSM.2012.6405256},
  issn = {1063-6773},
  month = {Sept},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{Pasareanu:2008:CUS:1390630.1390635,
  author = {P\v{a}s\v{a}reanu, Corina S. and Mehlitz, Peter C. and Bushnell, David H. and Gundy-Burlet, Karen and Lowry, Michael and Person, Suzette and Pape, Mark},
  title = {Combining Unit-level Symbolic Execution and System-level Concrete Execution for Testing Nasa Software},
  booktitle = {Proceedings of the 2008 International Symposium on Software Testing and Analysis},
  series = {ISSTA '08},
  year = {2008},
  isbn = {978-1-60558-050-0},
  location = {Seattle, WA, USA},
  pages = {15--26},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1390630.1390635},
  doi = {10.1145/1390630.1390635},
  acmid = {1390635},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {software model checking, symbolic execution, system testing, unit testing},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Belt:2009:SLL:1595696.1595762,
  author = {Belt, Jason and Robby and Deng, Xianghua},
  title = {Sireum/Topi LDP: A Lightweight Semi-decision Procedure for Optimizing Symbolic Execution-based Analyses},
  booktitle = {Proceedings of the the 7th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering},
  series = {ESEC/FSE '09},
  year = {2009},
  isbn = {978-1-60558-001-2},
  location = {Amsterdam, The Netherlands},
  pages = {355--364},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1595696.1595762},
  doi = {10.1145/1595696.1595762},
  acmid = {1595762},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {decision procedure, program analysis, symbolic execution},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@article{King:2009:PAC:1859823.1859830,
  author = {King, Andrew and Procter, Sam and Andresen, Dan and Hatcliff, John and Warren, Steve and Spees, William and Jetley, Raoul and Jones, Paul and Weininger, Sandy},
  title = {A Publish-subscribe Architecture and Component-based Programming Model for Medical Device Interoperability},
  journal = {SIGBED Rev.},
  issue_date = {July 2009},
  volume = {6},
  number = {2},
  month = {July},
  year = {2009},
  issn = {1551-3688},
  pages = {7:1--7:10},
  articleno = {7},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1859823.1859830},
  doi = {10.1145/1859823.1859830},
  acmid = {1859830},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {based, component, design, device, interoperability, medical, software, systems},
  review = {cita o software em trabalhos futuros},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@article{Csallner:2008:DHA:1348250.1348254,
  author = {Csallner, Christoph and Smaragdakis, Yannis and Xie, Tao},
  title = {DSD-Crasher: A Hybrid Analysis Tool for Bug Finding},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  issue_date = {April 2008},
  volume = {17},
  number = {2},
  month = {May},
  year = {2008},
  issn = {1049-331X},
  pages = {8:1--8:37},
  articleno = {8},
  numpages = {37},
  url = {http://doi.acm.org/10.1145/1348250.1348254},
  doi = {10.1145/1348250.1348254},
  acmid = {1348254},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Automatic testing, bug finding, dynamic analysis, dynamic invariant detection, extended static checking, false positives, static analysis, test case generation, usability},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Cadar:2011:SES:1985793.1985995,
  author = {Cadar, Cristian and Godefroid, Patrice and Khurshid, Sarfraz and P\u{a}s\u{a}reanu, Corina S. and Sen, Koushik and Tillmann, Nikolai and Visser, Willem},
  title = {Symbolic Execution for Software Testing in Practice: Preliminary Assessment},
  booktitle = {Proceedings of the 33rd International Conference on Software Engineering},
  series = {ICSE '11},
  year = {2011},
  isbn = {978-1-4503-0445-0},
  location = {Waikiki, Honolulu, HI, USA},
  pages = {1066--1071},
  numpages = {6},
  url = {http://doi.acm.org/10.1145/1985793.1985995},
  doi = {10.1145/1985793.1985995},
  acmid = {1985995},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {dynamic test generation, generalized symbolic execution},
  review = {cita o artigo selecionado na revisão estruturada},
  really_refers_to_software = {no},
}

@inproceedings{4019612,
  author = {Robby and M. B. Dwyer and J. Hatcliff},
  booktitle = {21st IEEE/ACM International Conference on Automated Software Engineering (ASE'06)},
  title = {Domain-specific Model Checking Using The Bogor Framework},
  year = {2006},
  pages = {369-370},
  keywords = {object-oriented programming;program debugging;program verification;Bogor infrastructure;domain-specific model checking;object-oriented design;program debugging;program verification;software system requirements;Algorithm design and analysis;Context modeling;Dynamic programming;Engines;Java;Object oriented modeling;Power system modeling;Software algorithms;Software systems;Yarn},
  doi = {10.1109/ASE.2006.34},
  issn = {1938-4300},
  month = {Sept},
  review = {cita o artigo selecionado na revisão estruturada},
  really_refers_to_software = {no},
}

@inproceedings{4019571,
  author = {X. Deng and J. Lee and Robby},
  booktitle = {21st IEEE/ACM International Conference on Automated Software Engineering (ASE'06)},
  title = {Bogor/Kiasan: A k-bounded Symbolic Execution for Checking Strong Heap Properties of Open Systems},
  year = {2006},
  pages = {157-166},
  keywords = {fault diagnosis;formal specification;open systems;program diagnostics;reasoning about programs;Bogor model checking;Kiasan technique;compositional reasoning;error traces;fault evidence;heap property checking;k-bounded symbolic execution;noncompositional reasoning;open systems;specification checking;Computer languages;Contracts;Costs;Java;Open systems;Programming;Software maintenance;Software performance;Software reusability;Software tools},
  doi = {10.1109/ASE.2006.26},
  issn = {1938-4300},
  month = {Sept},
  review = {é o mesmo artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{1691665,
  author = {M. B. Dwyer and J. Hatcliff},
  booktitle = {Testing: Academic Industrial Conference - Practice And Research Techniques (TAIC PART'06)},
  title = {Bogor: A Flexible Framework for Creating Software Model Checkers},
  year = {2006},
  pages = {3-22},
  keywords = {object-oriented programming;program debugging;program testing;program verification;quality assurance;software quality;Bogor software model checking framework;distributed computing;domain-specific model checking engine creation;multicore architecture;object-oriented design modeling support;object-oriented modeling language;software debugging;software inspection;software model checking tool;software quality assurance technique;software system requirements;software testing;software verification;Computer architecture;Context modeling;Distributed computing;Engines;Hardware;Inspection;Object oriented modeling;Software debugging;Software quality;Software testing},
  doi = {10.1109/TAIC-PART.2006.5},
  month = {Aug},
  review = {o software é implementado usando o framework Bogor, o autor não deixa claro onde estão as contribuições ao Bogor, mas no repositório do Bogor existe uma pasta com o nome do software Kiasan, aparentemente são as contribuições feitas ao framework},
  really_refers_to_software = {yes},
  contribution_weight = {0.5},
}

@article{Hillery:2014:TLS:2557833.2560579,
  author = {Hillery, Benjamin and Mercer, Eric and Rungta, Neha and Person, Suzette},
  title = {Towards a Lazier Symbolic Pathfinder},
  journal = {SIGSOFT Softw. Eng. Notes},
  issue_date = {January 2014},
  volume = {39},
  number = {1},
  month = {February},
  year = {2014},
  issn = {0163-5948},
  pages = {1--5},
  numpages = {5},
  url = {http://doi.acm.org/10.1145/2557833.2560579},
  doi = {10.1145/2557833.2560579},
  acmid = {2560579},
  publisher = {ACM},
  address = {New York, NY, USA},
  review = {implementa o algoritmo do software numa outra ferramenta e faz uma comparação entre as duas implementações},
  really_refers_to_software = {yes},
  contribution_weight = {0.5},
}

@inproceedings{Rizzi:2016:TWC:2884781.2884835,
  author = {Rizzi, Eric F. and Elbaum, Sebastian and Dwyer, Matthew B.},
  title = {On the Techniques We Create, the Tools We Build, and Their Misalignments: A Study of KLEE},
  booktitle = {Proceedings of the 38th International Conference on Software Engineering},
  series = {ICSE '16},
  year = {2016},
  isbn = {978-1-4503-3900-1},
  location = {Austin, Texas},
  pages = {132--143},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/2884781.2884835},
  doi = {10.1145/2884781.2884835},
  acmid = {2884835},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {replication, research incentives, research tools and infrastructure},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{6200090,
  author = {M. Kim and Y. Kim and G. Rothermel},
  booktitle = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  title = {A Scalable Distributed Concolic Testing Approach: An Empirical Evaluation},
  year = {2012},
  pages = {340-349},
  keywords = {program testing;software fault tolerance;software quality;automatic test case generation;fault detection;orders-of-magnitude;scalable distributed concolic testing approach;software quality improvement method;software testing methods;Concrete;Java;Partitioning algorithms;Scalability;Servers;Testing;Virtual machining},
  doi = {10.1109/ICST.2012.114},
  issn = {2159-4848},
  month = {April},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{Braione:2016:JSE:2950290.2983940,
  author = {Braione, Pietro and Denaro, Giovanni and Pezz\`{e}, Mauro},
  title = {JBSE: A Symbolic Executor for Java Programs with Complex Heap Inputs},
  booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  series = {FSE 2016},
  year = {2016},
  isbn = {978-1-4503-4218-6},
  location = {Seattle, WA, USA},
  pages = {1018--1022},
  numpages = {5},
  url = {http://doi.acm.org/10.1145/2950290.2983940},
  doi = {10.1145/2950290.2983940},
  acmid = {2983940},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Alloy, Heap Exploration Logic, Heap data structures, Pointer Assertion Logic, RepOk, Symbolic Execution},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{Pasareanu:2010:SPS:1858996.1859035,
  author = {P\u{a}s\u{a}reanu, Corina S. and Rungta, Neha},
  title = {Symbolic PathFinder: Symbolic Execution of Java Bytecode},
  booktitle = {Proceedings of the IEEE/ACM International Conference on Automated Software Engineering},
  series = {ASE '10},
  year = {2010},
  isbn = {978-1-4503-0116-9},
  location = {Antwerp, Belgium},
  pages = {179--180},
  numpages = {2},
  url = {http://doi.acm.org/10.1145/1858996.1859035},
  doi = {10.1145/1858996.1859035},
  acmid = {1859035},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {automated test case generation, program analysis},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Braione:2015:SEP:2786805.2786842,
  author = {Braione, Pietro and Denaro, Giovanni and Pezz\`{e}, Mauro},
  title = {Symbolic Execution of Programs with Heap Inputs},
  booktitle = {Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering},
  series = {ESEC/FSE 2015},
  year = {2015},
  isbn = {978-1-4503-3675-8},
  location = {Bergamo, Italy},
  pages = {602--613},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/2786805.2786842},
  doi = {10.1145/2786805.2786842},
  acmid = {2786842},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Symbolic execution, data structure invariants, lazy initialization},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@article{Tidwell:2008:TVD:1366283.1366287,
  author = {Tidwell, Terry and Gill, Christopher},
  title = {Towards Verifiable Deeply Embedded Systems},
  journal = {SIGBED Rev.},
  issue_date = {January 2008},
  volume = {5},
  number = {1},
  month = {January},
  year = {2008},
  issn = {1551-3688},
  pages = {4:1--4:2},
  articleno = {4},
  numpages = {2},
  url = {http://doi.acm.org/10.1145/1366283.1366287},
  doi = {10.1145/1366283.1366287},
  acmid = {1366287},
  publisher = {ACM},
  address = {New York, NY, USA},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{Robby:2009:PDU:1557898.1557903,
  author = {Robby and Chalin, Patrice},
  title = {Preliminary Design of a Unified JML Representation and Software Infrastructure},
  booktitle = {Proceedings of the 11th International Workshop on Formal Techniques for Java-like Programs},
  series = {FTfJP '09},
  year = {2009},
  isbn = {978-1-60558-540-6},
  location = {Genova, Italy},
  pages = {5:1--5:7},
  articleno = {5},
  numpages = {7},
  url = {http://doi.acm.org/10.1145/1557898.1557903},
  doi = {10.1145/1557898.1557903},
  acmid = {1557903},
  publisher = {ACM},
  address = {New York, NY, USA},
  review = {apresenta o software, integra o software como backend do JML4 (Java Modeling Language), cita nas referências que os programas e dados do experimento estão em http://bogor.projects.cis.ksu.edu/kiasan/kunit/laziersharp/ mas o site redireciona para o manuel do bogor, acessado em Fri Aug 18 22:22:09 UTC 2017},
  really_refers_to_software = {yes},
  contribution_weight = {0.5},
}

@inproceedings{4343944,
  author = {X. Deng and J. H. Robby and J. Hatcliff},
  booktitle = {Fifth IEEE International Conference on Software Engineering and Formal Methods (SEFM 2007)},
  title = {Towards A Case-Optimal Symbolic Execution Algorithm for Analyzing Strong Properties of Object-Oriented Programs},
  year = {2007},
  pages = {273-282},
  keywords = {Java;object-oriented programming;software packages;Java data structure package;case-optimal symbolic execution algorithm;object-oriented programming;Algorithm design and analysis;Context-aware services;Contracts;Data structures;Information analysis;Java;Packaging;Performance analysis;Shape;Software algorithms},
  doi = {10.1109/SEFM.2007.43},
  issn = {1551-0255},
  month = {Sept},
  review = {implementa melhorias no algoritmo de execução simbólica para programas orientado a objetos, mesmos autores},
  really_refers_to_software = {yes},
  contribution_weight = {0.5},
}

@inproceedings{Braione:2017:CSE:3092703.3092715,
  author = {Braione, Pietro and Denaro, Giovanni and Mattavelli, Andrea and Pezz\`{e}, Mauro},
  title = {Combining Symbolic Execution and Search-based Testing for Programs with Complex Heap Inputs},
  booktitle = {Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis},
  series = {ISSTA 2017},
  year = {2017},
  isbn = {978-1-4503-5076-1},
  location = {Santa Barbara, CA, USA},
  pages = {90--101},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/3092703.3092715},
  doi = {10.1145/3092703.3092715},
  acmid = {3092715},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Automatic test case generation, Search-based software engineering, Symbolic execution},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{4685803,
  author = {C. Gladisch},
  booktitle = {2008 Sixth IEEE International Conference on Software Engineering and Formal Methods},
  title = {Verification-Based Test Case Generation for Full Feasible Branch Coverage},
  year = {2008},
  pages = {159-168},
  keywords = {formal specification;program control structures;program verification;exhaustive inspection;full feasible branch coverage;loop invariant;program testing;symbolic program execution;verification-based test case generation;Arithmetic;Calculus;Computer science;Concrete;Inspection;Java;Logic testing;Programming;Software engineering;Software testing;Branch Coverage;Dynamic Logic;Java;Precondition;Specification-based Testing;Verification-based Testing;White-box Testing},
  doi = {10.1109/SEFM.2008.22},
  issn = {1551-0255},
  month = {Nov},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{Anand:2011:HCE:2190078.2190144,
  author = {Anand, Saswat and Harrold, Mary Jean},
  title = {Heap Cloning: Enabling Dynamic Symbolic Execution of Java Programs},
  booktitle = {Proceedings of the 2011 26th IEEE/ACM International Conference on Automated Software Engineering},
  series = {ASE '11},
  year = {2011},
  isbn = {978-1-4577-1638-6},
  pages = {33--42},
  numpages = {10},
  url = {http://dx.doi.org/10.1109/ASE.2011.6100071},
  doi = {10.1109/ASE.2011.6100071},
  acmid = {2190144},
  publisher = {IEEE Computer Society},
  address = {Washington, DC, USA},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{7027430,
  author = {X. Fu and Z. Chen and Y. Zhang and C. Huang and W. Dong and J. Wang},
  booktitle = {2015 IEEE 16th International Symposium on High Assurance Systems Engineering},
  title = {MPISE: Symbolic Execution of MPI Programs},
  year = {2015},
  pages = {181-188},
  keywords = {message passing;parallel programming;program debugging;program diagnostics;scheduling;system recovery;MPI programs;MPISE;automatic deadlock detection;benchmark programs;bug finding;bug understanding;diagnostic information;input coverage;interleaving exploration reduction;message passing interfaces;nondeterminism coverage;on-the-fly schedule algorithm;parallel applications;parallel computing;replay mechanism;runtime bug detection;symbolic execution;Computer bugs;Runtime;Scheduling;Switches;Synchronization;System recovery;Testing;Message Passing Interfaces;deadlock detection;symbolic execution},
  doi = {10.1109/HASE.2015.35},
  issn = {1530-2059},
  month = {Jan},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@article{5487640,
  author = {O. Tkachuk and M. B. Dwyer},
  journal = {IET Software},
  title = {Environment generation for validating event-driven software using model checking},
  year = {2010},
  volume = {4},
  number = {3},
  pages = {194-209},
  keywords = {Internet;graphical user interfaces;program testing;program verification;Web-based applications;Web-based services;bandera environment generator;business logic;distributed programs;environment generation;event-driven software validation;graphical user interfaces;interface software;software model checking techniques;storage tier functionality},
  doi = {10.1049/iet-sen.2009.0017},
  issn = {1751-8806},
  month = {June},
  review = {cita o software como exemplo de framework para geração de casos de teste baseados em execução simbólica},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{4344093,
  author = {X. Deng and Robby and J. Hatcliff},
  booktitle = {Testing: Academic and Industrial Conference Practice and Research Techniques - MUTATION (TAICPART-MUTATION 2007)},
  title = {Kiasan/KUnit: Automatic Test Case Generation and Analysis Feedback for Open Object-oriented Systems},
  year = {2007},
  pages = {3-12},
  keywords = {Java;automatic test pattern generation;object-oriented programming;open systems;program testing;Bogor/Kiasan symbolic execution engine;Kiasan/KUnit automatic test case generation;automatic mock object creation;open object-oriented system;sequential heap-intensive Java programs;static analysis feedback;Application software;Automatic testing;Contracts;Costs;Engines;Feedback;Java;Open systems;Sequential analysis;System testing},
  doi = {10.1109/TAIC.PART.2007.32},
  month = {Sept},
  review = {extende o software com um framework chamado KUnit para geração automáticaa de testes JUnit e visualização de objetos da pilha, são os mesmos autores do software original, apenas um autor diferente},
  really_refers_to_software = {yes},
  contribution_weight = {0.5},
}

@article{Distefano:2008:JTP:1449955.1449782,
  author = {Distefano, Dino and Parkinson J, Matthew J.},
  title = {jStar: Towards Practical Verification for Java},
  journal = {SIGPLAN Not.},
  issue_date = {September 2008},
  volume = {43},
  number = {10},
  month = {October},
  year = {2008},
  issn = {0362-1340},
  pages = {213--226},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/1449955.1449782},
  doi = {10.1145/1449955.1449782},
  acmid = {1449782},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {classes, design patterns, moduarity, separation logic},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Braione:2013:ESE:2491411.2491433,
  author = {Braione, Pietro and Denaro, Giovanni and Pezz\`{e}, Mauro},
  title = {Enhancing Symbolic Execution with Built-in Term Rewriting and Constrained Lazy Initialization},
  booktitle = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
  series = {ESEC/FSE 2013},
  year = {2013},
  isbn = {978-1-4503-2237-9},
  location = {Saint Petersburg, Russia},
  pages = {411--421},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/2491411.2491433},
  doi = {10.1145/2491411.2491433},
  acmid = {2491433},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Software analysis, Symbolic execution},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

@inproceedings{7163725,
  author = {A. Andrianova and V. Itsykson},
  booktitle = {2013 Tools Methods of Program Analysis},
  title = {Generating unit tests using static analysis and contracts},
  year = {2013},
  pages = {83-88},
  keywords = {Java;contracts;program diagnostics;program testing;software quality;source code (software);CoFoJa;JUnit format;Java-based program;automated software testing;automated synthesis;automated unit test creation;black box approach;contracts;information extraction;software engineering;software quality assurance;source code;static analysis;white box approach;Computational modeling;Computers;Generators;SMT-solver;automated software testing;code analysis;contract-based programming;unit test synthesis},
  doi = {10.1109/TMPA.2013.7163725},
  month = {Oct},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@article{Roberson:2010:EMG:1932682.1869461,
  author = {Roberson, Michael and Boyapati, Chandrasekhar},
  title = {Efficient Modular Glass Box Software Model Checking},
  journal = {SIGPLAN Not.},
  issue_date = {October 2010},
  volume = {45},
  number = {10},
  month = {October},
  year = {2010},
  issn = {0362-1340},
  pages = {4--21},
  numpages = {18},
  url = {http://doi.acm.org/10.1145/1932682.1869461},
  doi = {10.1145/1932682.1869461},
  acmid = {1869461},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {pipal, software model checking},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Gligoric:2010:TGT:1806799.1806835,
  author = {Gligoric, Milos and Gvero, Tihomir and Jagannath, Vilas and Khurshid, Sarfraz and Kuncak, Viktor and Marinov, Darko},
  title = {Test Generation Through Programming in UDITA},
  booktitle = {Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering - Volume 1},
  series = {ICSE '10},
  year = {2010},
  isbn = {978-1-60558-719-6},
  location = {Cape Town, South Africa},
  pages = {225--234},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1806799.1806835},
  doi = {10.1145/1806799.1806835},
  acmid = {1806835},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Java PathFinder, Pex, UDITA, automated testing, test filtering, test generation, test predicates, test programs},
  review = {apenas cita o artigo que publicou o software},
  really_refers_to_software = {no},
}

