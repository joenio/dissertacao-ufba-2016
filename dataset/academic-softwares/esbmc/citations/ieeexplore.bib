@INPROCEEDINGS{6032472,
  author={L. Cordeiro and B. Fischer},
  booktitle={2011 33rd International Conference on Software Engineering (ICSE)},
  title={Verifying multi-threaded software using smt-based context-bounded model checking},
  year={2011},
  pages={331-340},
  keywords={computability;formal verification;multi-threading;ANSI-C programs;SMT solver;SMT-based bounded model checker;SMT-based context-bounded model checking;Satisfiability Modulo Theories;counter-example guided abstraction refinement;iterative context-bounding algorithm;multithreaded software;state space;Context;Context modeling;Instruction sets;Reactive power;Schedules;Software algorithms;formal software verification;multi-threaded systems;sat modulo theories;symbolic and explicit model checking},
  doi={10.1145/1985793.1985839},
  ISSN={0270-5257},
  month={May},
  review={em trabalho anterior extendeu o ESBMC, neste artigo continuam e avaliam as abordagens utilizadas para verificação de modelos para softwares ANSI-C multi-thread},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7091165,
  author={I. V. d. Bessa and H. I. Ismail and L. C. Cordeiro and J. E. C. Filho},
  booktitle={2014 Brazilian Symposium on Computing Systems Engineering},
  title={Verification of Delta Form Realization in Fixed-Point Digital Controllers Using Bounded Model Checking},
  year={2014},
  pages={49-54},
  keywords={computability;floating point arithmetic;formal verification;BMC;bounded model checking;delta form realization;finite word-length format;fixed-point digital controllers;novel verification methodology;satisfiability modulo;Control systems;Limit-cycles;Model checking;Numerical stability;Quantization (signal);Stability analysis;Time factors;bounded model checking;delta form;fixed-point digital controllers;formal methods},
  doi={10.1109/SBESC.2014.14},
  ISSN={2324-7886},
  month={Nov},
  review={usa o software como motor de verificação, e cita o seguinte a respeito da escolha, é uma das ferramentas BMC mais eficientes segundo a competição de softwares de verificação em 2013 e 2014},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7483354,
  author={R. Paludo and D. Lettnin},
  booktitle={2016 17th Latin-American Test Symposium (LATS)},
  title={A methodology for early functional verification of embedded software combining virtual platforms and bounded model checking},
  year={2016},
  pages={141-146},
  keywords={digital simulation;embedded systems;program verification;BMC;bounded model checking;electronic system level design;embedded software early functional verification;simulation;system level verification;systems complexity;virtual platforms;Embedded software;Hardware;Model checking;Monitoring;Prototypes;Software algorithms;Bounded-model checking;temporal properties;virtual platforms},
  doi={10.1109/LATW.2016.7483354},
  month={April},
  review={usa o software no estudo como parte de uma metodologia proposta no artigo, e cita que a ferramenta tem pouca adoção na indústria},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{6679412,
  author={B. Wachter and D. Kroening and J. Ouaknine},
  booktitle={2013 Formal Methods in Computer-Aided Design},
  title={Verifying multi-threaded software with impact},
  year={2013},
  pages={210-217},
  keywords={interpolation;multi-threading;multiprocessing programs;program diagnostics;program verification;POSIX threads;benchmark programs;concurrent C program analysis;control-state explosion;dependence analysis;impact algorithm;lazy abstraction;multithreaded software verification;power-efficient multicore architectures;sequential programs;software model-checking technique;static partial-order reduction techniques;thread interleavings;Abstracts;Concurrent computing;Force;Labeling;Software;Software algorithms;Subspace constraints},
  doi={10.1109/FMCAD.2013.6679412},
  month={Oct},
  review={implementa um protótipo IMPARA http://www.cprover.org/concurrent-impact e compara a performance com outras ferramentas, dentre elas o ESBMC},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7423219,
  author={H. Rocha and H. Ismail and L. Cordeiro and R. Barreto},
  booktitle={2015 Brazilian Symposium on Computing Systems Engineering (SBESC)},
  title={Model Checking Embedded C Software Using k-Induction and Invariants},
  year={2015},
  pages={90-95},
  keywords={embedded systems;formal verification;base case;bounded loops;control systems;forward condition;invariants;k-induction algorithm;loop unwindings;medical devices;model checking embedded C software;post-conditions;preconditions;safety property;telecommunications;unbounded loops;Algorithm design and analysis;Computer bugs;Hardware;Model checking;Safety;Software;Software algorithms;C Program;Invariants;Model Checking;k-Induction},
  doi={10.1109/SBESC.2015.24},
  month={Nov},
  review={compara os resultados com outros softwares, faz contribuição ao software, não deixa claro mas aparantemente enviou as modificações ao projeto/repositorio oficial},
  really_refers_to_software={yes},
  contribution_weight={0.5},
}

@INPROCEEDINGS{6693138,
  author={S. Falke and F. Merz and C. Sinz},
  booktitle={2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={The bounded model checker LLBMC},
  year={2013},
  pages={706-709},
  keywords={C++ language;formal verification;program compilers;program debugging;SMT solver;bounded model checker LLBMC;bounded model checking;finding bugs;program compilers;runtime errors;sequential C/C++ programs;source code;Computer bugs;Decoding;Encoding;Model checking;Program processors;Runtime},
  doi={10.1109/ASE.2013.6693138},
  month={Nov},
  review={compara o novo software LLBMC com o ESBMC e outro},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{6601583,
  author={M. Ramalho and M. Freitas and F. Sousa and H. Marques and L. Cordeiro and B. Fischer},
  booktitle={2013 20th IEEE International Conference and Workshops on Engineering of Computer Based Systems (ECBS)},
  title={SMT-Based Bounded Model Checking of C++ Programs},
  year={2013},
  pages={147-156},
  keywords={C++ language;formal verification;software libraries;surface mount technology;C++ programs;ESBMC++;SMT solver;SMT-based bounded model checking;abstract representation;bounded model checker;standard C++ libraries;verification conditions;Arrays;Containers;Libraries;Model checking;Shape;Standards;Syntactics;Software engineering;formal methods;model checking;verification},
  doi={10.1109/ECBS.2013.15},
  month={April},
  review={contribui com o software adicionando um algoritmo de 'operational model' para suporte a C++, chama a cntribuição de ESBMC++, apresenta o software, cita o software nas referencias},
  really_refers_to_software={yes},
  contribution_weight={0.5},
}

@INPROCEEDINGS{7582774,
  author={D. Kroening and D. Poetzl and P. Schrammel and B. Wachter},
  booktitle={2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={Sound static deadlock analysis for C/Pthreads},
  year={2016},
  pages={379-390},
  keywords={C language;Linux;formal specification;program diagnostics;C standard;C/Pthreads;Debian GNU/Linux distribution;Pthreads specification;context-sensitive abstract interpretation framework;deadlock-freedom;lightweight dependency analysis;real-world code analysis;sound static deadlock analysis;thread-sensitive abstract interpretation framework;time 4 hour;Computer bugs;Concurrent computing;Instruction sets;Pipelines;Scalability;Standards;System recovery;abstract interpretation;deadlock analysis;static analysis},
  month={Sept},
  review={cita o software como trabalho relacionado},
  really_refers_to_software={yes},
  contribution_weight={0},
}

@INPROCEEDINGS{6462552,
  author={P. A. Abdulla and M. F. Atig and O. Rezine and J. Stenman},
  booktitle={2012 Formal Methods in Computer-Aided Design (FMCAD)},
  title={Multi-pushdown systems with budgets},
  year={2012},
  pages={24-33},
  keywords={Turing machines;computational complexity;concurrency control;decision theory;program verification;reachability analysis;systems analysis;PSPACE-complete;Turing;bounded-budget MPDS;bounded-budget restriction;code-to-code translation;concurrent program;context switch;decision problem;multipushdown system;prototype tool;reachability problem;sequential analysis tool;sequential program;verification problem;Automata;Context;Design automation;Grammar;Polynomials;Production;Vectors},
  month={Oct},
  review={compara os resultados obtidos com a implementação própria contra o ESBMC e outro},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7398699,
  author={F. R. M. Sousa and L. C. Cordeiro and E. B. de Lima Filho},
  booktitle={2015 IEEE 4th Global Conference on Consumer Electronics (GCCE)},
  title={Bounded model checking of C++ programs based on the Qt framework},
  year={2015},
  pages={179-180},
  keywords={C++ language;consumer electronics;embedded systems;formal verification;software engineering;C++ program;Qt framework;automatic verification process;consumer electronics company;efficient SMT-based bounded model checking;embedded system;software development process;Benchmark testing;Consumer electronics;Java;Libraries;Model checking;Random access memory;Software;Bounded Model Checking;Qt framework},
  doi={10.1109/GCCE.2015.7398699},
  month={Oct},
  review={contribui com o ESBMC++, que por sua vez é baseado no ESBMC e faz parte do mesmo projeto, aparentemente},
  really_refers_to_software={yes},
  contribution_weight={0.5},
}

@ARTICLE{5928354,
  author={L. Cordeiro and B. Fischer and J. Marques-Silva},
  journal={IEEE Transactions on Software Engineering},
  title={SMT-Based Bounded Model Checking for Embedded ANSI-C Software},
  year={2012},
  volume={38},
  number={4},
  pages={957-974},
  keywords={embedded systems;formal verification;SMT based bounded model checking;SMT solvers;embedded ANSI-C software;embedded software verification;model checkers;software model checking benchmarks;Electronic mail;Embedded software;Encoding;Optimization;Safety;Space exploration;Software engineering;formal methods;model checking;verification},
  doi={10.1109/TSE.2011.59},
  ISSN={0098-5589},
  month={July},
  review={é o mesmo artigo que publicou o software},
  really_refers_to_software={no},
}

@ARTICLE{7605519,
  author={X. Zheng and C. Julien and R. Podorozhny and F. Cassez and T. Rakotoarivelo},
  journal={IEEE Systems Journal},
  title={Efficient and Scalable Runtime Monitoring for Cyber--Physical System},
  year={2017},
  volume={PP},
  number={99},
  pages={1-12},
  keywords={Australia;Instruments;Monitoring;Optimization;Real-time systems;Reliability;Runtime;Collaborative work;distributed computing;formal verification;publish-subscribe;real-time systems;runtime},
  doi={10.1109/JSYST.2016.2614599},
  ISSN={1932-8184},
  month={},
  review={cita o software como exemplo de 'model checker'},
  really_refers_to_software={yes},
  contribution_weight={0},
}

@INPROCEEDINGS{7781806,
  author={M. Gao and L. He and R. Majumdar and Z. Wang},
  booktitle={2016 IEEE 16th International Working Conference on Source Code Analysis and Manipulation (SCAM)},
  title={LLSPLAT: Improving Concolic Testing by Bounded Model Checking},
  year={2016},
  pages={127-136},
  keywords={program testing;program verification;BMC;GNU Coreutils benchmark sets;KLEE;LLSPLAT;Windows NT Drivers Simplified;bounded model checking;branch coverage;concolic testing;program paths;program regions identification;software testing;Explosions;History;Instruments;Model checking;Reactive power;Software systems},
  doi={10.1109/SCAM.2016.26},
  month={Oct},
  review={cita o software como trabalho relacionado},
  really_refers_to_software={yes},
  contribution_weight={0},
}

@INPROCEEDINGS{7340488,
  author={M. Chabot and K. Mazet and L. Pierre},
  booktitle={2015 ACM/IEEE International Conference on Formal Methods and Models for Codesign (MEMOCODE)},
  title={Automatic and configurable instrumentation of C programs with temporal assertion checkers},
  year={2015},
  pages={208-217},
  keywords={formal verification;specification languages;C program instrumentation;PSL;property specification language;temporal assertion checkers;temporal property checkers;Context;Cryptography;Hardware;Instruments;Monitoring;Runtime;Software},
  doi={10.1109/MEMCOD.2015.7340488},
  month={Sept},
  review={cita o software como exemplo de 'bounded model checking', cita o artigo onde foi proposto},
  really_refers_to_software={yes},
  contribution_weight={0},
}

@INPROCEEDINGS{7983292,
  author={X. Zhang},
  booktitle={2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title={Debugging Multithreaded Programs Using Symbolic Analysis},
  year={2017},
  pages={557-558},
  keywords={Benchmark testing;Computer bugs;Debugging;Schedules;Software;Tools},
  doi={10.1109/ICST.2017.73},
  month={March},
  review={implementa um protótipo Proactive-Debugger, compara os resultados obtidos pela nova ferramenta e o ESBMC},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{6841906,
  author={J. Behrend and A. Gruenhage and D. Schroeder and D. Lettnin and J. Ruf and T. Kropf and W. Rosenstiel},
  booktitle={2014 15th Latin American Test Workshop - LATW},
  title={Optimized hybrid verification of embedded software},
  year={2014},
  pages={1-6},
  keywords={embedded systems;optimisation;program diagnostics;program verification;source code (software);automated ranking heuristic;dynamic verification approach;embedded software verification;formal verification;hardware dependency;initialization code;mixed bottom-up-top-down algorithm;model building algorithm;optimization algorithm;optimized SPA;optimized scalable hybrid verification approach;simulation-based verification;source code;specific function parameter;state space reduction;static parameter assignment;static verification approach;Benchmark testing;Embedded software;Hardware;Monitoring;Software algorithms;Switches},
  doi={10.1109/LATW.2014.6841906},
  ISSN={2373-0862},
  month={March},
  review={implementa uma nova ferramenta VERIFYR, usa o ESBMC para o experimento juntamente com sua propria implementacao, compara os resultados},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7828278,
  author={R. Araújo and I. Bessa and L. C. Cordeiro and J. E. C. Filho},
  booktitle={2016 VI Brazilian Symposium on Computing Systems Engineering (SBESC)},
  title={SMT-based Verification Applied to Non-convex Optimization Problems},
  year={2016},
  pages={1-8},
  keywords={computability;concave programming;formal verification;SMT-based verification;fixed-point arithmetic;integer problems;model-checking procedure;nonconvex optimization problems;rational linear problems;satisfiability modulo theories;Benchmark testing;Cost function;Embedded systems;Genetic algorithms;Model checking;global minima;model checking;non-convex problems;optimization;satisfiability modulo theory (SMT)},
  doi={10.1109/SBESC.2016.010},
  month={Nov},
  review={os dados e código são disponibilizados em http://esbmc.org/benchmarks, o software é usado no experimento como motor de verificação},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7828280,
  author={L. Bentes and H. Rocha and E. Valentin and R. Barreto},
  booktitle={2016 VI Brazilian Symposium on Computing Systems Engineering (SBESC)},
  title={JFORTES: Java Formal Unit TESt Generation},
  year={2016},
  pages={16-23},
  keywords={Java;program testing;program verification;ESC-Java2 tool;JCute tools;JFORTES;Java formal unit test generation;formal verification techniques;software testing;software verification;Java;Runtime;Safety;Smart phones;Software;Testing;Android;Annotations;Java Programs;Model Checker;Static Analysis;Unit Testing},
  doi={10.1109/SBESC.2016.012},
  month={Nov},
  review={cita como exemplo de software para regras de tradução para programas C},
  really_refers_to_software={yes},
  contribution_weight={0},
}

@INPROCEEDINGS{7423220,
  author={E. H. d. S. Alves and L. C. Cordeiro and E. B. d. L. Filho},
  booktitle={2015 Brazilian Symposium on Computing Systems Engineering (SBESC)},
  title={Fault Localization in Multi-threaded C Programs Using Bounded Model Checking},
  year={2015},
  pages={96-101},
  keywords={C language;multi-threading;parallel algorithms;program debugging;program verification;scheduling;software fault tolerance;bounded model checking;debugging time reduction;fault diagnosis method;multithreaded C programs;nondeterministic behavior;sequential fault localization methods;software debugging;thread-scheduling algorithms;Context modeling;Debugging;Fault diagnosis;Instruction sets;Model checking;Transforms;Bounded Model Checking;Fault Localization;Multi-Threaded Software},
  doi={10.1109/SBESC.2015.25},
  month={Nov},
  review={o software foi utilizado para coleta/análise de dados do estudo},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7780198,
  author={X. Zhang and Z. Yang and Q. Zheng and Y. Hao and P. Liu and L. Yu and M. Fan and T. Liu},
  booktitle={2016 International Conference on Software Analysis, Testing and Evolution (SATE)},
  title={Debugging Multithreaded Programs as if They Were Sequential},
  year={2016},
  pages={78-83},
  keywords={multi-threading;program debugging;software tools;ESBMC;Maple;dynamic analysis;feedback loop;multithreaded program debugging;multithreaded software debugging;proactive debugger;proactive debugging method;program behavior;programmers;sequential software debugging;software tool;symbolic analysis;synergistic integration;thread scheduling;Debugging;Instruction sets;Mathematical model;Performance analysis;Schedules;Semantics;Software debugging;Constraint solving;Debugging;Guided execution;Multithreaded programs;Symbolic analysis;Testing},
  doi={10.1109/SATE.2016.20},
  month={Nov},
  review={implementa um novo software Proactive-Debugger, utiliza o ESBMC no experimento e compara os resultados obtidos},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{6187568,
  author={A. M. Gharehbaghi and M. Fujita},
  booktitle={Thirteenth International Symposium on Quality Electronic Design (ISQED)},
  title={Transaction-based post-silicon debug of many-core System-on-Chips},
  year={2012},
  pages={702-708},
  keywords={computer debugging;finite state machines;formal verification;network-on-chip;FSM;NoC;SoC;abstracted behavior;bounded model checker;communication behavior;core-under-debug;designers assertions;distributed deadlock detection;execution paths;finite state machine;internal variables;many-core system-on-chips;multiple cores;multiple state machines;network-on-chip;resolution algorithm;transaction-based post-silicon debug;Computer bugs;Data mining;Debugging;Hardware;Monitoring;System-on-a-chip;bounded model checking;network-on-chip (NoC);post-silicon debug;system-level design;system-on-chip (SoC)},
  doi={10.1109/ISQED.2012.6187568},
  ISSN={1948-3287},
  month={March},
  review={usa o software para análise de dados},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{6693139,
  author={B. Fischer and O. Inverso and G. Parlato},
  booktitle={2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={CSeq: A concurrency pre-processor for sequential C verification tools},
  year={2013},
  pages={710-713},
  keywords={C language;concurrency control;parallel programming;program interpreters;program verification;C program sequentialization;CBMC;CSeq tool;ESBMC;LLBMC;Lal-Reps sequentialization;automated sequential program verification tools;backend tools;concurrency preprocessing technique;concurrency preprocessor;concurrent program translation;dynamic thread creation;equivalent nondeterministic sequential programs;pthreads;sequential C verification tools;Benchmark testing;Concurrent computing;Context;Instruction sets;Programming},
  doi={10.1109/ASE.2013.6693139},
  month={Nov},
  review={apresenta o software CSeq e cita o software como uma das opções de backend do CSeq},
  really_refers_to_software={yes},
  contribution_weight={0},
}

@INPROCEEDINGS{5457776,
  author={L. Cordeiro and B. Fischer and J. Marques-Silva},
  booktitle={2010 17th IEEE International Conference and Workshops on Engineering of Computer Based Systems},
  title={Continuous Verification of Large Embedded Software Using SMT-Based Bounded Model Checking},
  year={2010},
  pages={160-169},
  keywords={embedded systems;program verification;software management;SMT based bounded model checking;large embedded software;product quality;software complexity;software configuration management system;software verification;Application software;Computer errors;Context modeling;Embedded software;Embedded system;Explosions;Software quality;Software systems;Space exploration;State-space methods;Bounded Model Checking;Embedded Software Verification;Satisfiability Modulo Theories},
  doi={10.1109/ECBS.2010.24},
  month={March},
  review={usa o software para análise de dados, compara os resultados do software com o CBMC},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{6114884,
  author={R. Barreto and L. Cordeiro and B. Fischer},
  booktitle={2011 Brazilian Symposium on Computing System Engineering},
  title={Verifying Embedded C Software with Timing Constraints Using an Untimed Bounded Model Checker},
  year={2011},
  pages={46-52},
  keywords={C language;biomedical equipment;embedded systems;program verification;ESBMC;arterial blood;auxiliary timer variables;code annotations;discrete-time timing constraints;embedded C program verification;embedded C software verification;embedded systems;noninvasive medical device;oxygen saturation;pulse oximeter;untimed bounded model checker;Bridges;Electronic mail;Heart rate;Real time systems;Safety;Software;Timing;Bounded model checker;code verification;timing constraints},
  doi={10.1109/SBESC.2011.19},
  ISSN={2324-7886},
  month={Nov},
  review={usa o software na implementação própria, enviou sugestão de melhorias para o software},
  really_refers_to_software={yes},
  contribution_weight={0.5},
}

@INPROCEEDINGS{7372071,
  author={O. Inverso and T. L. Nguyen and B. Fischer and S. L. Torre and G. Parlato},
  booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={Lazy-CSeq: A Context-Bounded Model Checking Tool for Multi-threaded C-Programs},
  year={2015},
  pages={807-812},
  keywords={C language;application program interfaces;formal verification;multi-threading;Lazy-CSeq;POSIX thread API;SV-COMP verification competitions;assertion checking;bounded nondeterministic sequential C program;bounded reachability;concurrency verification tools;context-bounded model checking tool;context-bounded verification tool;deadlock detection;model checkers;multithreaded C-programs;round-robin schedules;sequential verification backends;Arrays;Concurrent computing;Context;Programming;Schedules;System recovery;C programs;bounded model-checking;concurrency;context-bounded;multi-thread;multi-threaded},
  doi={10.1109/ASE.2015.108},
  month={Nov},
  review={cita o software como opção de parametro para a ferramenta Lazy-CSeq como backend},
  really_refers_to_software={yes},
  contribution_weight={0},
}

@INPROCEEDINGS{7423221,
  author={A. Trindade and H. Ismail and L. Cordeiro},
  booktitle={2015 Brazilian Symposium on Computing Systems Engineering (SBESC)},
  title={Applying Multi-core Model Checking to Hardware-Software Partitioning in Embedded Systems},
  year={2015},
  pages={102-105},
  keywords={computability;embedded systems;formal verification;hardware-software codesign;multiprocessing systems;optimisation;BMC;SMT;bounded model checking;embedded systems;hardware-software co-design;hardware-software partitioning problem;multicore model checking techniques;open multiprocessing;optimization problem;processor cores;satisfiability modulo theories;Benchmark testing;Genetic algorithms;Hardware;Model checking;Multicore processing;Optimization;Software;OpenMP;hardware-software co-design;hardware-software partitioning;model checking;multi-core;optimization},
  doi={10.1109/SBESC.2015.26},
  month={Nov},
  review={implementa um novo software ESBMC-MC, baseado no próprio software, não deixa claro se enviou as contribuições de volta},
  really_refers_to_software={yes},
  contribution_weight={0.5},
}

@INPROCEEDINGS{5431777,
  author={L. Cordeiro and B. Fischer and J. Marques-Silva},
  booktitle={2009 IEEE/ACM International Conference on Automated Software Engineering},
  title={SMT-Based Bounded Model Checking for Embedded ANSI-C Software},
  year={2009},
  pages={137-148},
  keywords={ANSI standards;computability;encoding;formal specification;formal verification;Boolector;CBMC front-end;CVC3;SMT solvers;SMT-based bounded model checking;Z3 solvers;control systems;embedded ANSI-C software;embedded software verification;medical devices;propositional bounded model checking;propositional logic;telecommunications;word-level information encoding;Application software;Control system synthesis;Embedded software;Encoding;Logic;Medical control systems;Software standards;Surface-mount technology;Telecommunication control;Telecommunication standards;Bounded Model Checking;Embedded ANSI-C Software;Satisfiability Modulo Theories},
  doi={10.1109/ASE.2009.63},
  ISSN={1938-4300},
  month={Nov},
  review={é o mesmo artigo que publicou o software},
  really_refers_to_software={no},
}

@INPROCEEDINGS{7927973,
  author={X. Zhang and Z. Yang and Q. Zheng and P. Liu and J. Chang and Y. Hao and T. Liu},
  booktitle={2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  title={Automated Testing of Definition-Use Data Flow for Multithreaded Programs},
  year={2017},
  pages={172-183},
  keywords={computational complexity;data flow analysis;multi-threading;multiprocessing systems;program testing;automated testing;definition-use data flow;interthread interleavings;intrathread paths;magnitude reduction;multicore processors;multithreaded programs;parallel computing resources;program behavior;symbolic execution;testing complexity;Computer bugs;Concrete;Concurrent computing;Instruction sets;Multithreading;Scalability;Testing;Definition-Use;Guided Execution;Multithreaded Program;Symbolic Analysis},
  doi={10.1109/ICST.2017.23},
  month={March},
  review={o estudo é realizado em dados de estudos realizados anteriormente, benchmarks obtidos de aplicações bem conhecidas, ESBMC entre elas},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{5763039,
  author={J. Behrend and D. Lettnin and P. Heckeler and J. Ruf and T. Kropf and W. Rosenstiel},
  booktitle={2011 Design, Automation Test in Europe},
  title={Scalable hybrid verification for embedded software},
  year={2011},
  pages={1-6},
  keywords={embedded systems;formal verification;Motorola Powerstone Benchmark suite;bottom-up-top-down algorithm;counterexample guided simulation;embedded software;formal verification;hybrid verification approach;industrial embedded automotive software;simulation-based verification;software verification;static parameter assignment;Computational modeling;EPROM;Embedded software;Hardware;Input variables;Monitoring},
  doi={10.1109/DATE.2011.5763039},
  ISSN={1530-1591},
  month={March},
  review={usa o software para análise de dados, compara resultados com outros softwares},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}

@INPROCEEDINGS{7031344,
  author={F. A. P. Januario and L. C. Cordeiro and V. F. d. Lucena and E. B. d. Lima Filho},
  booktitle={2014 IEEE 3rd Global Conference on Consumer Electronics (GCCE)},
  title={BMCLua: Verification of Lua programs in digital TV interactive applications},
  year={2014},
  pages={707-708},
  keywords={authoring languages;computability;digital television;program verification;ANSI-C;BMCLua;ESBMC;Lua program verification;SMT-based bounded model checker;array bounds;bounded model checking;digital TV interactive applications;division by zero;safety properties;satisfiability modulo theories;user-specified assertions;Arrays;Benchmark testing;Computer languages;Digital TV;Model checking;Programming;Syntactics;Digital TV;Lua;Model Checking},
  doi={10.1109/GCCE.2014.7031344},
  ISSN={2378-8143},
  month={Oct},
  review={publica um software chamado BMCLua, transforma codigo Lua em C para entao ser  utilizado como entrada para o ESBMC, apresenta o ESBMC},
  really_refers_to_software={yes},
  contribution_weight={0.5},
}
