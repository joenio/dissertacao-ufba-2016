@INPROCEEDINGS{4026861,
  author={A. D. Thurston and J. R. Cordy},
  booktitle={2006 Sixth IEEE International Workshop on Source Code Analysis and Manipulation},
  title={Evolving TXL},
  year={2006},
  pages={117-126},
  abstract={TXL is a functional programming language specifically designed for expressing source transformation tasks. Originally designed for the rapid prototyping of modest syntactic enhancements, in recent years it has been extensively used in large scale source code analysis and reengineering applications that are much more challenging. As a result, many common programming techniques needed in these larger scale applications are difficult or impossible to express in TXL. Examples include multi-way decisions, generic rules and functions, polymorphism and information hiding. In this paper we introduce ETXL, an experimental extension of TXL which includes convenient features designed to address these issues. Designed to be a compatible variant that remains faithful to the original TXL syntax and semantics, ETXL has itself been prototyped as a source transformation to original TXL.},
  keywords={Computer languages;Conferences;Functional programming;Heart;Large-scale systems;Logic programming;Prototypes;Testing;Web page design},
  doi={10.1109/SCAM.2006.14},
  month={Sept},
  review={artigo selecionado na revis√£o estruturada},
  really_refers_to_software={yes},
  contribution_weight={1},
  step={structured-review},
}
