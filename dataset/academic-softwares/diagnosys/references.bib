@INPROCEEDINGS{7816486,
  author={L. Li and T. F. Bissyand√© and Y. L. Traon and J. Klein},
  booktitle={2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  title={Accessing Inaccessible Android APIs: An Empirical Study},
  year={2016},
  pages={411-422},
  abstract={As Android becomes a de-facto choice of development platform for mobile apps, developers extensively leverage its accompanying Software Development Kit to quickly build their apps. This SDK comes with a set of APIs which developers may find limited in comparison to what system apps can do or what framework developers are preparing to harness capabilities of new generation devices. Thus, developers may attempt to explore in advance the normally "inaccessible" APIs for building unique API-based functionality in their app. The Android programming model is unique in its kind. Inaccessible APIs, which however are used by developers, constitute yet another specificity of Android development, and is worth investigating to understand what they are, how they evolve over time, and who uses them. To that end, in this work, we empirically investigate 17 important releases of the Android framework source code base, and we find that inaccessible APIs are commonly implemented in the Android framework, which are further neither forward nor backward compatible. Moreover, a small set of inaccessible APIs can eventually become publicly accessible, while most of them are removed during the evolution, resulting in risks for such apps that have leveraged inaccessible APIs. Finally, we show that inaccessible APIs are indeed accessed by third-party apps, and the official Google Play store has tolerated the proliferation of apps leveraging inaccessible API methods.},
  keywords={Android (operating system);application program interfaces;authorisation;mobile computing;risk management;smart phones;software engineering;source code (software);API-based functionality;Android programming model;SDK;application program interface;inaccessible Android API;mobile app risk;software development kit;source code base;Androids;Ecosystems;Google;Humanoid robots;Libraries;Runtime;Software},
  doi={10.1109/ICSME.2016.35},
  month={Oct},
}

@INPROCEEDINGS{4161574,
  author={R. Pettegrew and J. Easton and P. Struk and E. Anderson},
  booktitle={2007 IEEE Aerospace Conference},
  title={In-Flight Manual Electronics Repair for Deep-Space Missions},
  year={2007},
  pages={1-16},
  abstract={Severe limitations on mass and volume available for spares on long-duration spaceflight missions will require electronics repair to be conducted at the component level, rather than at the sub-assembly level (referred to as Orbital Replacement Unit, or 'ORU'), as is currently the case aboard the International Space Station. Performing reliable component-level repairs in a reduced gravity environment by crew members will require careful planning, and some specialty tools and systems. Additionally, spacecraft systems must be designed to enable such repairs. This paper is an overview of a NASA project which examines all of these aspects of component level electronic repair. Results of case studies that detail how NASA, the U.S. Navy, and a commercial company currently approach electronics repair are presented, along with results of a trade study examining commercial technologies and solutions which may be used in future applications. Initial design recommendations resulting from these studies are also presented.},
  keywords={maintenance engineering;space vehicle electronics;NASA project;commercial solutions;commercial technologies;component-level repairs;deep-space missions;design recommendations;in-flight manual electronics repair;long-duration spaceflight missions;reduced gravity environment;Aerospace electronics;Costs;Hardware;Low earth orbit satellites;NASA;Space missions;Space stations;Space technology;Space vehicles;Vehicle safety},
  doi={10.1109/AERO.2007.352727},
  ISSN={1095-323X},
  month={March},
}

@inproceedings{Choi:2011:RRT:2103380.2103383,
  author = {Choi, Yongsuk and Choi, Jongmoo and Ha, Eunyong},
  title = {RTRP: Right Time Right Place Kernel Analysis Tool},
  booktitle = {Proceedings of the 2011 ACM Symposium on Research in Applied Computation},
  series = {RACS '11},
  year = {2011},
  isbn = {978-1-4503-1087-1},
  location = {Miami, Florida},
  pages = {7--12},
  numpages = {6},
  url = {http://doi.acm.org/10.1145/2103380.2103383},
  doi = {10.1145/2103380.2103383},
  acmid = {2103383},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {analysis tool, embedded Linux, instrumentation},
}

@article{Song:2014:SDR:2714064.2660234,
  author = {Song, Linhai and Lu, Shan},
  title = {Statistical Debugging for Real-world Performance Problems},
  journal = {SIGPLAN Not.},
  issue_date = {October 2014},
  volume = {49},
  number = {10},
  month = {oct},
  year = {2014},
  issn = {0362-1340},
  pages = {561--578},
  numpages = {18},
  url = {http://doi.acm.org/10.1145/2714064.2660234},
  doi = {10.1145/2714064.2660234},
  acmid = {2660234},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {empirical study, performance bugs, performance diagnosis, statistical debugging},
}

@inproceedings{Song:2017:PDI:3097368.3097413,
  author = {Song, Linhai and Lu, Shan},
  title = {Performance Diagnosis for Inefficient Loops},
  booktitle = {Proceedings of the 39th International Conference on Software Engineering},
  series = {ICSE '17},
  year = {2017},
  isbn = {978-1-5386-3868-2},
  location = {Buenos Aires, Argentina},
  pages = {370--380},
  numpages = {11},
  url = {https://doi.org/10.1109/ICSE.2017.41},
  doi = {10.1109/ICSE.2017.41},
  acmid = {3097413},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
  keywords = {debugging, loop inefficiency, performance diagnosis},
}

@inproceedings{Lee:2014:UIP:2632048.2636091,
  author = {Lee, Seokjun and Yoon, Chanmin and Cha, Hojung},
  title = {User Interaction-based Profiling System for Android Application Tuning},
  booktitle = {Proceedings of the 2014 ACM International Joint Conference on Pervasive and Ubiquitous Computing},
  series = {UbiComp '14},
  year = {2014},
  isbn = {978-1-4503-2968-2},
  location = {Seattle, Washington},
  pages = {289--299},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/2632048.2636091},
  doi = {10.1145/2632048.2636091},
  acmid = {2636091},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {debugging, mobile application, profiling, tuning, user interaction, webbased framework},
}

@article{Zhang:2011:CDC:1961296.1950395,
  author = {Zhang, Wei and Lim, Junghee and Olichandran, Ramya and Scherpelz, Joel and Jin, Guoliang and Lu, Shan and Reps, Thomas},
  title = {ConSeq: Detecting Concurrency Bugs Through Sequential Errors},
  journal = {SIGPLAN Not.},
  issue_date = {March 2011},
  volume = {46},
  number = {3},
  month = {mar},
  year = {2011},
  issn = {0362-1340},
  pages = {251--264},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/1961296.1950395},
  doi = {10.1145/1961296.1950395},
  acmid = {1950395},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrency bugs, software testing},
}

@inproceedings{Fonseca:2014:SEK:2685048.2685081,
  author = {Fonseca, Pedro and Rodrigues, Rodrigo and Brandenburg, Bj\"{o}rn B.},
  title = {SKI: Exposing Kernel Concurrency Bugs Through Systematic Schedule Exploration},
  booktitle = {Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation},
  series = {OSDI'14},
  year = {2014},
  isbn = {978-1-931971-16-4},
  location = {Broomfield, CO},
  pages = {415--431},
  numpages = {17},
  url = {http://dl.acm.org/citation.cfm?id=2685048.2685081},
  acmid = {2685081},
  publisher = {USENIX Association},
  address = {Berkeley, CA, USA},
}
