@INPROCEEDINGS{1240300,
  author={O. Tkachuk and M. B. Dwyer and C. S. Pasareanu},
  booktitle={18th IEEE International Conference on Automated Software Engineering, 2003. Proceedings.},
  title={Automated environment generation for software model checking},
  year={2003},
  pages={116-127},
  abstract={A key problem in model checking open systems is environment modeling (i.e., representing the behavior of the execution context of the system under analysis). Software systems are fundamentally open since their behavior is dependent on patterns of invocation of system components and values defined outside the system but referenced within the system. Whether reasoning about the behavior of whole programs or about program components, an abstract model of the environment can be essential in enabling sufficiently precise yet tractable verification. In this paper, we describe an approach to generating environments of Java program fragments. This approach integrated formally specified assumptions about environment behavior with sound abstractions of environment implementations to form a model of the environment. The approach is implemented in the Bandera environment generator (BEG) which we describe along with our experience using BEG to reason about properties of several nontrivial concurrent Java programs.},
  keywords={Java;compiler generators;formal specification;open systems;program verification;software architecture;BEG;Bandera environment generator;Java program fragments;automated environment generation;environment modeling;nontrivial concurrent programs;open systems;software model checking;sound abstractions;tractable verification;Computational Intelligence Society;Context modeling;Costs;Independent component analysis;Java;NASA;Open systems;Software systems;Space technology;Yarn},
  doi={10.1109/ASE.2003.1240300},
  ISSN={1938-4300},
  month={Oct},
  review={artigo selecionado na revis√£o estruturada},
  really_refers_to_software={yes},
  contribution_weight={10},
  step={structured-review},
}
