@inproceedings{Liu:2013:FIC:2491411.2491435,
  author = {Liu, Peng and Dolby, Julian and Zhang, Charles},
  title = {Finding Incorrect Compositions of Atomicity},
  booktitle = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
  series = {ESEC/FSE 2013},
  year = {2013},
  isbn = {978-1-4503-2237-9},
  location = {Saint Petersburg, Russia},
  pages = {158--168},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/2491411.2491435},
  doi = {10.1145/2491411.2491435},
  acmid = {2491435},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Atomic compositions, concurrent programming, predictive analysis, program dependence, static analysis},
  review = {cita o software como exemplo},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Thung:2012:EWD:2351676.2351685,
  author = {Thung, Ferdian and Lucia and Lo, David and Jiang, Lingxiao and Rahman, Foyzur and Devanbu, Premkumar T.},
  title = {To What Extent Could We Detect Field Defects? An Empirical Study of False Negatives in Static Bug Finding Tools},
  booktitle = {Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering},
  series = {ASE 2012},
  year = {2012},
  isbn = {978-1-4503-1204-2},
  location = {Essen, Germany},
  pages = {50--59},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/2351676.2351685},
  doi = {10.1145/2351676.2351685},
  acmid = {2351685},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Static bug-finding tools, false negatives, field defects},
  review = {cita o software nas referencias do trabalho},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Qi:2009:MPE:1639622.1639627,
  author = {Qi, Yao and Das, Raja and Luo, Zhi Da and Trotter, Martin},
  title = {MulticoreSDK: A Practical and Efficient Data Race Detector for Real-world Applications},
  booktitle = {Proceedings of the 7th Workshop on Parallel and Distributed Systems: Testing, Analysis, and Debugging},
  series = {PADTAD '09},
  year = {2009},
  isbn = {978-1-60558-655-7},
  location = {Chicago, Illinois},
  pages = {5:1--5:11},
  articleno = {5},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/1639622.1639627},
  doi = {10.1145/1639622.1639627},
  acmid = {1639627},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrent program analysis, data race detection, multicore platform},
  review = {implementa uma solução em cima do software},
  really_refers_to_software = {yes},
  contribution_weight = {0.25},
}

@inproceedings{Huang:2016:DSD:2950290.2950348,
  author = {Huang, Jianjun and Zhang, Xiangyu and Tan, Lin},
  title = {Detecting Sensitive Data Disclosure via Bi-directional Text Correlation Analysis},
  booktitle = {Proceedings of the 2016 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
  series = {FSE 2016},
  year = {2016},
  isbn = {978-1-4503-4218-6},
  location = {Seattle, WA, USA},
  pages = {169--180},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/2950290.2950348},
  doi = {10.1145/2950290.2950348},
  acmid = {2950348},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Android apps, Bi-directional Text Correlation, Sensitive Data Disclosure},
  review = {implementa uma solução BIDTEXT em cima do software WALA},
  really_refers_to_software = {yes},
  contribution_weight = {0.25},
}

@inproceedings{4814134,
  author = {C. Hammer and J. Dolby and M. Vaziri and F. Tip},
  booktitle = {2008 ACM/IEEE 30th International Conference on Software Engineering},
  title = {Dynamic detection of atomic-set-serializability violations},
  year = {2008},
  pages = {231-240},
  keywords = {concurrency control;object-oriented programming;system monitoring;code fragment;concurrent object-oriented program;consistency property;data access pattern;dynamic analysis;dynamic atomic-set-serializability violation detection;memory location;Algorithm design and analysis;Atomic measurements;Computer bugs;Dynamic programming;Error correction;Logic programming;Logic testing;Object oriented programming;Software engineering;Yarn;atomicity;concurrent object-oriented programming;data races;dynamic analysis;serializability},
  doi = {10.1145/1368088.1368120},
  issn = {0270-5257},
  month = {May},
  review = {usa o software},
  really_refers_to_software = {yes},
  contribution_weight = {0.25},
}

@inproceedings{5601820,
  author = {Z. D. Luo and L. Hillis and R. Das and Y. Qi},
  booktitle = {2010 10th IEEE Working Conference on Source Code Analysis and Manipulation},
  title = {Effective Static Analysis to Find Concurrency Bugs in Java},
  year = {2010},
  pages = {135-144},
  keywords = {Java;concurrency control;data analysis;multi-threading;Eclipse JDT;Java development tool;Java language;WALA toolkit;concurrency bugs;interprocedural data flow analysis;multi-threading;static analysis technique;Computer bugs;Concurrent computing;Detectors;Instruction sets;Java;Monitoring;Synchronization;bug pattern;concurrency;multithread;static analysis},
  doi = {10.1109/SCAM.2010.20},
  month = {Sept},
  review = {mesmo artigo selecionado na revisão estruturada},
  really_refers_to_software = {yes},
  contribution_weight = {1},
  step = {structured-review},
  conference = {SCAM},
}

@inproceedings{Wang:2016:AAR:2931037.2931052,
  author = {Wang, Weihang and Zheng, Yunhui and Liu, Peng and Xu, Lei and Zhang, Xiangyu and Eugster, Patrick},
  title = {ARROW: Automated Repair of Races on Client-side Web Pages},
  booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis},
  series = {ISSTA 2016},
  year = {2016},
  isbn = {978-1-4503-4390-9},
  location = {Saarbr\&\#252;cken, Germany},
  pages = {201--212},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/2931037.2931052},
  doi = {10.1145/2931037.2931052},
  acmid = {2931052},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Automatic repair, constraint solving, race condition},
  review = {cita o software como exemplo de 'def-use analysis'},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@inproceedings{Vakilian:2011:KTD:2048147.2048167,
  author = {Vakilian, Mohsen and Negara, Stas and Tasharofi, Samira and Johnson, Ralph E.},
  title = {Keshmesh: A Tool for Detecting and Fixing Java Concurrency Bug Patterns},
  booktitle = {Proceedings of the ACM International Conference Companion on Object Oriented Programming Systems Languages and Applications Companion},
  series = {OOPSLA '11},
  year = {2011},
  isbn = {978-1-4503-0942-4},
  location = {Portland, Oregon, USA},
  pages = {39--40},
  numpages = {2},
  url = {http://doi.acm.org/10.1145/2048147.2048167},
  doi = {10.1145/2048147.2048167},
  acmid = {2048167},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {bug, concurrency, detector, fixer, parallelism, pattern, program analysis, static analysis},
  review = {publica um novo software que usa o WALA, cita o software nas referencias com site do projeto},
  really_refers_to_software = {yes},
  contribution_weight = {0.25},
}

@inproceedings{Zhang:2012:FEM:2338965.2336782,
  author = {Zhang, Sai and L\"{u}, Hao and Ernst, Michael D.},
  title = {Finding Errors in Multithreaded GUI Applications},
  booktitle = {Proceedings of the 2012 International Symposium on Software Testing and Analysis},
  series = {ISSTA 2012},
  year = {2012},
  isbn = {978-1-4503-1454-1},
  location = {Minneapolis, MN, USA},
  pages = {243--253},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/2338965.2336782},
  doi = {10.1145/2338965.2336782},
  acmid = {2336782},
  publisher = {ACM},
  address = {New York, NY, USA},
  review = {usa o software para implementar uma solução},
  really_refers_to_software = {yes},
  contribution_weight = {0.25},
}

@inproceedings{7781801,
  author = {Q. Stiévenart and M. Vandercammen and W. D. Meuter and C. D. Roover},
  booktitle = {2016 IEEE 16th International Working Conference on Source Code Analysis and Manipulation (SCAM)},
  title = {Scala-AM: A Modular Static Analysis Framework},
  year = {2016},
  pages = {85-90},
  keywords = {program compilers;program diagnostics;programming languages;SCALA-AM;abstract machines;abstract values;language designers;machine abstraction;modular static analysis framework;operational semantics;static analysis;systematic abstraction;Active appearance model;Concrete;Lattices;Machinery;Reactive power;Semantics;Systematics;abstract interpretation;framework;static analysis},
  doi = {10.1109/SCAM.2016.14},
  month = {Oct},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

@article{Jakobs:2017:PPF:3062396.3014427,
  author = {Jakobs, Marie-Christine and Wehrheim, Heike},
  title = {Programs from Proofs: A Framework for the Safe Execution of Untrusted Software},
  journal = {ACM Trans. Program. Lang. Syst.},
  issue_date = {May 2017},
  volume = {39},
  number = {2},
  month = {March},
  year = {2017},
  issn = {0164-0925},
  pages = {7:1--7:56},
  articleno = {7},
  numpages = {56},
  url = {http://doi.acm.org/10.1145/3014427},
  doi = {10.1145/3014427},
  acmid = {3014427},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Abstract interpretation, program certification, program extraction, program transformation, programs from proofs, proof-carrying code},
  review = {cita o software como trabalho relacionado},
  really_refers_to_software = {yes},
  contribution_weight = {0.1},
}

