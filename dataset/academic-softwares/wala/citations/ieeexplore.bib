@INPROCEEDINGS{7781801,
  author={Q. Stiévenart and M. Vandercammen and W. D. Meuter and C. D. Roover},
  booktitle={2016 IEEE 16th International Working Conference on Source Code Analysis and Manipulation (SCAM)},
  title={Scala-AM: A Modular Static Analysis Framework},
  year={2016},
  pages={85-90},
  keywords={program compilers;program diagnostics;programming languages;SCALA-AM;abstract machines;abstract values;language designers;machine abstraction;modular static analysis framework;operational semantics;static analysis;systematic abstraction;Active appearance model;Concrete;Lattices;Machinery;Reactive power;Semantics;Systematics;abstract interpretation;framework;static analysis},
  doi={10.1109/SCAM.2016.14},
  month={Oct},
  review={cita o software como trabalho relacionado},
  really_refers_to_software={yes},
  contribution_weight={0.1},
}

@INPROCEEDINGS{6494905,
  author={F. Thung and Lucia and D. Lo and L. Jiang and F. Rahman and P. T. Devanbu},
  booktitle={2012 Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering},
  title={To what extent could we detect field defects? an empirical study of false negatives in static bug finding tools},
  year={2012},
  pages={50-59},
  keywords={program debugging;public domain software;software reliability;AspectJ program;Lucene program;Rhino program;false negative;field defect detection;open source program;programming error;software defect;static bug finding tool;Static bug-finding tools;false negatives;field defects},
  doi={10.1145/2351676.2351685},
  month={Sept},
  review={cita o software nas referencias do trabalho},
  really_refers_to_software={yes},
  contribution_weight={0.1},
}

@INPROCEEDINGS{5601820,
  author={Z. D. Luo and L. Hillis and R. Das and Y. Qi},
  booktitle={2010 10th IEEE Working Conference on Source Code Analysis and Manipulation},
  title={Effective Static Analysis to Find Concurrency Bugs in Java},
  year={2010},
  pages={135-144},
  keywords={Java;concurrency control;data analysis;multi-threading;Eclipse JDT;Java development tool;Java language;WALA toolkit;concurrency bugs;interprocedural data flow analysis;multi-threading;static analysis technique;Computer bugs;Concurrent computing;Detectors;Instruction sets;Java;Monitoring;Synchronization;bug pattern;concurrency;multithread;static analysis},
  doi={10.1109/SCAM.2010.20},
  month={Sept},
  review={mesmo artigo selecionado na revisão estruturada},
  really_refers_to_software={yes},
  contribution_weight={1},
  step={structured-review},
  conference={SCAM},
}

@INPROCEEDINGS{4814134,
  author={C. Hammer and J. Dolby and M. Vaziri and F. Tip},
  booktitle={2008 ACM/IEEE 30th International Conference on Software Engineering},
  title={Dynamic detection of atomic-set-serializability violations},
  year={2008},
  pages={231-240},
  keywords={concurrency control;object-oriented programming;system monitoring;code fragment;concurrent object-oriented program;consistency property;data access pattern;dynamic analysis;dynamic atomic-set-serializability violation detection;memory location;Algorithm design and analysis;Atomic measurements;Computer bugs;Dynamic programming;Error correction;Logic programming;Logic testing;Object oriented programming;Software engineering;Yarn;atomicity;concurrent object-oriented programming;data races;dynamic analysis;serializability},
  doi={10.1145/1368088.1368120},
  ISSN={0270-5257},
  month={May},
  review={usa o software},
  really_refers_to_software={yes},
  contribution_weight={0.25},
}
