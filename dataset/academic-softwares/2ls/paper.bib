@INPROCEEDINGS{7371995,
  author={H. Y. Chen and C. David and D. Kroening and P. Schrammel and B. Wachter},
  booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={Synthesising Interprocedural Bit-Precise Termination Proofs (T)},
  year={2015},
  pages={53-64},
  abstract={Proving program termination is key to guaranteeing absence of undesirable behaviour, such as hanging programs and even security vulnerabilities such as denial-of-service attacks. To make termination checks scale to large systems, interprocedural termination analysis seems essential, which is a largely unexplored area of research in termination analysis, where most effort has focussed on difficult single-procedure problems. We present a modular termination analysis for C programs using template-based interprocedural summarisation. Our analysis combines a context-sensitive, over-approximating forward analysis with the inference of under-approximating preconditions for termination. Bit-precise termination arguments are synthesised over lexicographic linear ranking function templates. Our experimental results show that our tool 2LS outperforms state-of-the-art alternatives, and demonstrate the clear advantage of interprocedural reasoning over monolithic analysis in terms of efficiency, while retaining comparable precision.},
  keywords={C language;computer network security;inference mechanisms;program diagnostics;theorem proving;C program;bit-precise termination argument;context-sensitive forward analysis;denial-of-service attack;inference;interprocedural reasoning;interprocedural termination analysis;large system;lexicographic linear ranking function template;modular termination analysis;monolithic analysis;over-approximating forward analysis;program termination;security vulnerability;synthesising interprocedural bit-precise termination proof;template-based interprocedural summarisation;Algorithm design and analysis;Computer bugs;Computer crime;Context;Encoding;Semantics;abstract interpretation;interprocedural analysis;program analysis;synthesis;termination analysis},
  doi={10.1109/ASE.2015.10},
  month={Nov},
  review={artigo selecionado na revis√£o estruturada},
  really_refers_to_software={yes},
  contribution_weight={1},
  step={structured-review},
  conference={ASE},
}
