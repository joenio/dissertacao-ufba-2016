@INPROCEEDINGS{7372075,
  author={M. Zheng and M. S. Rogers and Z. Luo and M. B. Dwyer and S. F. Siegel},
  booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={CIVL: Formal Verification of Parallel Programs},
  year={2015},
  pages={830-835},
  abstract={CIVL is a framework for static analysis and verification of concurrent programs. One of the main challenges to practical application of these techniques is the large number of ways to express concurrency: MPI, OpenMP, CUDA, and Pthreads, for example, are just a few of many "concurrency dialects" in wide use today. These dialects are constantly evolving and it is increasingly common to use several of them in a single "hybrid" program. CIVL addresses these problems by providing a concurrency intermediate verification language, CIVL-C, as well as translators that consume C programs using these dialects and produce CIVL-C. Analysis and verification tools which operate on CIVL-C can then be applied easily to a wide variety of concurrent C programs. We demonstrate CIVL's error detection and verification capabilities on (1) an MPI+OpenMP program that estimates π and contains a subtle race condition, and (2) an MPI-based 1d-wave simulator that fails to conform to a simple sequential implementation.},
  keywords={C language;parallel programming;program diagnostics;program verification;C program;CIVL;CUDA;MPI-based 1d-wave simulator;MPI-plus-OpenMP program;Pthread;concurrency intermediate verification language;concurrent program;formal verification;hybrid program;parallel program;static analysis;Concurrent computing;Electronic mail;Government;Graphics processing units;Libraries;Maintenance engineering;Standards;MPI;OpenMP;function equivalence;model checking;parallel programs;software verification;symbolic execution},
  doi={10.1109/ASE.2015.99},
  month={Nov},
  review={artigo selecionado na revisão estruturada},
  really_refers_to_software={yes},
  contribution_weight={1},
  step={structured-review},
  conference={ASE},
}
