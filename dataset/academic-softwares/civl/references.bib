@INPROCEEDINGS{7832835,
  author={S. F. Siegel and M. Zheng and Z. Luo and T. K. Zirkel and A. V. Marianiello and J. G. Edenhofner and M. B. Dwyer and M. S. Rogers},
  booktitle={SC15: International Conference for High Performance Computing, Networking, Storage and Analysis},
  title={CIVL: the concurrency intermediate verification language},
  year={2015},
  pages={1-12},
  abstract={There are many ways to express parallel programs: message-passing libraries (MPI) and multithreading/GPU language extensions such as OpenMP, Pthreads, and CUDA, are but a few. This multitude creates a serious challenge for developers of software verification tools: it takes enormous effort to develop such tools, but each development effort typically targets one small part of the concurrency landscape, with little sharing of techniques and code among efforts. To address this problem, we present CIVL: the Concurrency Intermediate Verification Language. CIVL provides a general concurrency model capable of representing programs in a variety of concurrency dialects, including those listed above. The CIVL framework currently includes front-ends for the four dialects, and a back-end verifier which uses model checking and symbolic execution to check a number of properties, including the absence of deadlocks, race conditions, assertion violations, illegal pointer dereferences and arithmetic, memory leaks, divisions by zero, and out-of-bound array indexing; it can also check that two programs are functionally equivalent.},
  keywords={concurrency (computers);message passing;multi-threading;program verification;CIVL;CUDA;GPU language extensions;MPI;OpenMP;Pthreads;assertion violations;back-end verifier;concurrency intermediate verification language;deadlock absence;divisions by zero;illegal pointer dereferences;memory leaks;message-passing libraries;model checking;multithreading;out-of-bound array indexing;parallel programs;race conditions;software verification tools;symbolic execution;Concurrent computing;Government;Graphics processing units;Libraries;Message systems;Model checking;Standards},
  doi={10.1145/2807591.2807635},
  month={Nov},
}

@article{Siegel:2017:CSV:3090064.3090070,
  author = {Siegel, Stephen F.},
  title = {CIVL Solutions to Verifythis 2016 Challenges},
  journal = {ACM SIGLOG News},
  issue_date = {April 2017},
  volume = {4},
  number = {2},
  month = {may},
  year = {2017},
  issn = {2372-3491},
  pages = {55--75},
  numpages = {21},
  url = {http://doi.acm.org/10.1145/3090064.3090070},
  doi = {10.1145/3090064.3090070},
  acmid = {3090070},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@article{Rungta:2017:VC:3090064.3090069,
  author = {Rungta, Neha},
  title = {Verification Column},
  journal = {ACM SIGLOG News},
  issue_date = {April 2017},
  volume = {4},
  number = {2},
  month = {may},
  year = {2017},
  issn = {2372-3491},
  pages = {54--54},
  numpages = {1},
  url = {http://doi.acm.org/10.1145/3090064.3090069},
  doi = {10.1145/3090064.3090069},
  acmid = {3090069},
  publisher = {ACM},
  address = {New York, NY, USA},
}
