@INPROCEEDINGS{7372054,
  author={P. Barros and R. Just and S. Millstein and P. Vines and W. Dietl and M. dAmorim and M. D. Ernst},
  booktitle={2015 30th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  title={Static Analysis of Implicit Control Flow: Resolving Java Reflection and Android Intents (T)},
  year={2015},
  pages={669-679},
  abstract={Implicit or indirect control flow is a transfer of control between procedures using some mechanism other than an explicit procedure call. Implicit control flow is a staple design pattern that adds flexibility to system design. However, it is challenging for a static analysis to compute or verify properties about a system that uses implicit control flow. This paper presents static analyses for two types of implicit control flow that frequently appear in Android apps: Java reflection and Android intents. Our analyses help to resolve where control flows and what data is passed. This information improves the precision of downstream analyses, which no longer need to make conservative assumptions about implicit control flow. We have implemented our techniques for Java. We enhanced an existing security analysis with a more precise treatment of reflection and intents. In a case study involving ten real-world Android apps that use both intents and reflection, the precision of the security analysis was increased on average by two orders of magnitude. The precision of two other downstream analyses was also improved.},
  keywords={Android (operating system);Java;program diagnostics;security of data;Android intents;Java reflection;implicit control flow;indirect control flow;security analysis;static analysis;Androids;Context;Dictionaries;Humanoid robots;Java;Security;Android;Implicit Control Flow;Static Analysis;Type systems},
  doi={10.1109/ASE.2015.69},
  month={Nov},
}
