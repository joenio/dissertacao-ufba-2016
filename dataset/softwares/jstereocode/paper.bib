@INPROCEEDINGS{6494955,
  author={L. Moreno and A. Marcus},
  booktitle={2012 Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering},
  title={JStereoCode: automatically identifying method and class stereotypes in Java code},
  year={2012},
  pages={358-361},
  abstract={Object-Oriented (OO) code stereotypes are low-level patterns that reveal the design intent of a source code artifact, such as, a method or a class. They are orthogonal to the problem domain of the software and they reflect the role of a method or class from the OO problem solving point of view. However, the research community in automated reverse engineering has focused more on higher-level design information, such as design patterns. Existing work on reverse engineering code stereotypes is scarce and focused on C++ code, while no tools are freely available as of today. We present JStereoCode, a tool that automatically identifies the stereotypes of methods and classes in Java systems. The tool is integrated with Eclipse and for a given Java project will classify each method and class in the system based on their stereotypes. Applications of JStereoCode include: program comprehension, defect prediction, etc.},
  keywords={C++ language;Java;object-oriented programming;reverse engineering;C++ code;Eclipse;JStereoCode;Java project;Java systems;OO code stereotypes;automated reverse engineering;class stereotypes;defect prediction;design patterns;identifying method;low-level patterns;object-oriented code stereotypes;program comprehension;reverse engineering code stereotypes;source code artifact;Code stereotypes;Java;Program comprehension},
  doi={10.1145/2351676.2351747},
  month={Sept},
}
