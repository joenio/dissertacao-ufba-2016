#!/usr/bin/perl
use Modern::Perl '2014';
use File::Basename;
use YAML qw( LoadFile Dump );
use Text::BibTeX;
use List::Util qw( uniq );
use open ':locale';
use utf8;

sub load_bibtex {
  my $filepath = shift;
  my %references = ();
  unless (-z $filepath) {
    if (my $bib = Text::BibTeX::File->new($filepath)) {
      while (my $entry = Text::BibTeX::Entry->new({binmode => 'utf-8'}, $bib)) {
        next unless $entry->parse_ok;
        my $k = $entry->key;
        $references{$k}{filepath} = $filepath;
        $references{$k}{title} = $entry->get('title');
        $references{$k}{review} = $entry->get('review');
        $references{$k}{really_refers_to_software} = $entry->get('really_refers_to_software') // 'undefined';
        $references{$k}{year} = $entry->get('year');
        $references{$k}{contribution_weight} = $entry->get('contribution_weight');
        $references{$k}{step} = $entry->get('step') // 'undefined';
        $references{$k}{conference} = $entry->get('conference') // 'undefined';
      }
      $bib->close;
    }
  }
  return %references;
}

sub count_mentions_by_type {
  my $type = shift;
  my %mentions = @_;
  my $count = 0;
  foreach (keys %mentions) {
    if ($mentions{$_}{contribution_weight} && $mentions{$_}{contribution_weight} == $type) {
      $count++;
    }
  }
  return $count;
}

sub load_collected_data {
  my $dir = shift;

  # read YAML: software.yml
  my %dataset = %{ LoadFile("$dir/software.yml") };
  ($dataset{software}{short_name}) = split ' - ', $dataset{software}{name};

  # read BIBTEX: paper.bib
  my %paper = load_bibtex("$dir/paper.bib");
  $dataset{papers} = \%paper;

  # read BIBTEX: citations.bib
  my %mentions = load_bibtex("$dir/citations.bib");

  # count how many papers mention the software
  my %_mentions = (%mentions, %paper);
  $dataset{screening}{results} = scalar grep { $_mentions{$_}{really_refers_to_software} eq 'yes' } keys %_mentions;

  # count mentions by type
  $dataset{literature_review}{mention_count} = count_mentions_by_type 0.1, %_mentions;
  $dataset{literature_review}{use_count} = count_mentions_by_type 0.25, %_mentions;
  $dataset{literature_review}{contribute_count} = count_mentions_by_type 0.5, %_mentions;
  $dataset{literature_review}{create_count} = count_mentions_by_type 1, %_mentions;

  return %dataset;
}

sub load_projects_dataset {
  my $dir = shift;
  my %dataset = ();
  foreach my $d (grep { -d $_ } glob("$dir/*")) {
    my %data = load_collected_data($d);
    $dataset{basename $d} = \%data;
  }
  return %dataset;
}

if (@ARGV < 1) {
  warn "E: missing options!";
  say "Usage: $0 <dataset-dir>";
  exit 1;
}
our $DATASET_DIR = shift @ARGV;
my %dataset = load_projects_dataset($DATASET_DIR);
print Dump(%dataset);
