% my %softwares = @_;

%% o conteúdo deste arquivo é gerado automaticamente pelo script
%% bin/softwares-summary, favor não editar manualmente

\xchapter{Softwares acadêmicos}{Este capítulo ...}
\label{softwares-summary}

\begin{figure}[h]
  \center
  \includegraphics[scale=0.35]{imagens/software-timeline-wireframe.jpg}
  \caption{Protótipo do gráfico com timeline do software}
\end{figure}

% foreach (sort keys %softwares) {
\section{<%== $softwares{$_}{software}{name} %>}

Autores:
<%== join(' - ', @{ $softwares{$_}{paper}{bibfile}{authors} }) %>.

<%== $softwares{$_}{software}{description} %>
publicado no artigo {\it <%== $softwares{$_}{paper}{bibfile}{title} %>}
por <%== $softwares{$_}{paper}{bibfile}{author} %>
no <%== $softwares{$_}{paper}{conference} %> <%== $softwares{$_}{paper}{year} %>,
disponibilizado em \url{<%== $softwares{$_}{address}{url} %>}
% if ($softwares{$_}{address}{download_available} eq 'yes') {
%   unless ($softwares{$_}{software}{distribution} eq 'undefined') {
<%== $softwares{$_}{software}{distribution} %>
%   }
%   if ($softwares{$_}{software}{license} eq 'undefined') {
sem uma licença definida.
%   }
%   else {
sob uma licença <%== $softwares{$_}{software}{license} %>.
%   }
% }
% else {
%   if ($softwares{$_}{address}{url_available} eq 'yes') {
mas apesar do endereço estar acessível na data 
<%== $softwares{$_}{address}{checked_at} %>
não é possível encontrar download do software no site.
%   }
%   else {
mas inacessível em <%== $softwares{$_}{address}{checked_at} %>.
%   }
% }

% if ($softwares{$_}{features}{releases} eq 'Obsolete') {
Software considerado obsoleto,
% }
% elsif ($softwares{$_}{features}{releases} eq 'undefined') {
Software sem informações sobre lançamentos ou releases,
% }
% else {
Software com lançamentos <%== $softwares{$_}{features}{releases} %>,
% }
% if ($softwares{$_}{releases} && $softwares{$_}{releases}{source} ne 'undefined') {
<%== @{ $softwares{$_}{releases}{dates} } %> versões lançadas
%   if ($softwares{$_}{releases}{first_date} eq $softwares{$_}{releases}{last_date}) {
%     if ($softwares{$_}{releases}{first_date} ne 'undefined') {
em <%== $softwares{$_}{releases}{first_date} %>,
%     }
%     else {
,
%     }
%   }
%   elsif ($softwares{$_}{releases}{first_date} eq 'undefined') {
até <%== $softwares{$_}{releases}{last_date} %>,
%   }
%   else {
entre <%== $softwares{$_}{releases}{first_date} %> e <%== $softwares{$_}{releases}{last_date} %>,
%   }
% }
% unless ($softwares{$_}{features}{source_code} eq 'undefined') {
escrito em <%== $softwares{$_}{features}{source_code} %>,
% }
uma busca por citações no {\bf IEEE Xplore} por
\texttt{<%== $softwares{$_}{citations}{ieeexplore}{search_string} %>}
e no {\bf ACM} com
\texttt{<%== $softwares{$_}{citations}{acm}{search_string} %>}
retornou
% my $results =  $softwares{$_}{citations}{ieeexplore}{results}
%              + $softwares{$_}{citations}{acm}{results};
<%== $results %> resultados,
% my $total = $softwares{$_}{citations}{really_refers_to_software_count};
% if ($total == 0) {
nenhum faz referência ao software.
% }
% elsif ($total == 1) {
apenas um faz referência ao software.
% }
% else {
{\bf <%== $total %>} fazem referência ao software.
% }

% if ($total > 0) {
\begin{itemize}
%   foreach my $entry_key (sort { $softwares{$_}{citations}{bibfile}{$a}{year} cmp $softwares{$_}{citations}{bibfile}{$b}{year} }keys %{ $softwares{$_}{citations}{bibfile} }) {
\item <%== join(' and ', @{ $softwares{$_}{citations}{bibfile}{$entry_key}{authors} }) %>
      <%== $softwares{$_}{citations}{bibfile}{$entry_key}{year} %>.
      {\it <%== $softwares{$_}{citations}{bibfile}{$entry_key}{title} %>}.
      Peso da referência: <%== $softwares{$_}{citations}{bibfile}{$entry_key}{reference_weight} %>
%   }
\end{itemize}

Peso  total das referências por ano:

\begin{itemize}
%   foreach my $year (sort keys %{ $softwares{$_}{citations}{by_year} }) {
\item <%== $year %> = <%== $softwares{$_}{citations}{reference_weight_by_year_sum}{$year} %>
%   }
\end{itemize}

% }

% }

\section{Categorias}

% my %categorias = ();
% my %autores = ();

% foreach (sort keys %softwares) {
%   foreach my $entry_key (keys %{ $softwares{$_}{citations}{bibfile} }) {
%     $categorias{$softwares{$_}{citations}{bibfile}{$entry_key}{review}}++;
%   }
%   foreach my $author (@{ $softwares{$_}{citations}{authors} }) {
%     $autores{$author}++;
%   }
% }

\subsection{Autores}

\begin{itemize}
% foreach (sort keys %autores) {
\item <%== $_ %>: <%== $autores{$_} %>
% }

\subsection{Reviews}

\end{itemize}
\begin{itemize}
% foreach (sort keys %categorias) {
\item <%== $_ %>: <%== $categorias{$_} %>
% }
\end{itemize}

%# vim: filetype=epl
