#!/usr/bin/perl
use Modern::Perl '2014';
use experimental 'signatures';
use File::Basename;
use Devel::CheckBin;

sub run_source_code_metrics_tools($softwares_dir) {
  foreach my $software (grep { -d $_ } glob("$softwares_dir/*")) {
    foreach my $software_release (grep { -d $_ } glob("$software/source-code/*")) {
      if (! -e "$software_release.analizo.metrics" || -z "$software_release.analizo.metrics") {
        say "analizo metrics $software_release > $software_release.analizo.metrics";
        `analizo metrics $software_release > $software_release.analizo.metrics`;
      }
      if (! -e "$software_release.sloccount" || -z "$software_release.sloccount") {
        say "sloccount $software_release > $software_release.sloccount";
        `sloccount $software_release > $software_release.sloccount`;
      }
    }
  }
}

if (can_run('analizo') && can_run('sloccount')) {
  run_source_code_metrics_tools("$ENV{PWD}/dataset/academic-softwares");
}
else {
  die "E: analizo or sloccound not found, please install them!";
}

__END__

use Statistics::Descriptive;
sub metric_values($file, $metric) {
  my @values = ();
  open my $FILE, '<', $file;
  while(my $line = <$FILE>) {
    if ($line =~ m/^(?:$metric): (.+)/) {
      push @values, $1;
    }
  }
  close $FILE;
  return @values;
}


sub metric_value($file, $metric) {
  open my $FILE, '<', $file;
  while(my $line = <$FILE>) {
    if ($line =~ m/^(?:$metric): (.+)/) {
      return $1;
    }
  }
  close $FILE;
  return;
}

if ($#ARGV < 1 || $ARGV[0] ne '-o' || length($ARGV[1]) == 0) {
  warn "E: missing options!";
  print "Usage: $0 -o <output-filename>\n";
  exit 1;
}

our $OUTPUT_FILENAME = $ARGV[1];

 open my $SUMMARY, '>', "$OUTPUT_FILENAME" or die $!;
 print $SUMMARY "tool, release, total_modules, total_eloc, sc_75, sc_90, sc_95, lanza_low, lanza_medium, lanza_high\n";
 foreach my $tool_dir (grep { -d $_ } glob("$DATASET_DIR/academic-softwares/*")) {
   my $tool = basename($tool_dir);
   foreach my $file (glob("$tool_dir/*.metrics")) {
     my $release = basename($file, '.analizo.metrics');
     my $total_modules = metric_value($file, 'total_modules');
     my $total_eloc = metric_value($file, 'total_eloc');
     my $stat = Statistics::Descriptive::Full->new();
     $stat->add_data(metric_values($file, 'sc'));
     my $sc_75 = $stat->percentile(75);
     my $sc_90 = $stat->percentile(90);
     my $sc_95 = $stat->percentile(95);
     my $lanza_low = $stat->mean - $stat->standard_deviation;
     my $lanza_medium = $stat->mean;
     my $lanza_high = $stat->mean + $stat->standard_deviation;
     print $SUMMARY join(', ', $tool, $release, $total_modules, $total_eloc, $sc_75, $sc_90, $sc_95, $lanza_low, $lanza_medium, $lanza_high);
     print $SUMMARY "\n";
   }
 }
 close $SUMMARY;
